code,label,commit_name
"path: ""/home/{{ admin_user }}/.ssh/authorized_keys""",0,rename chuckn246.keys to authorized_keys
name: proxmox_lxc name: lxc name: prereq name: download name: raspberrypi name: k3s/master name: k3s/node name: k3s/post,1,fix playbook
version: 0.2.5,0,Update ansible-debian-ami to fix for IMDsv2
"vpc_id: ""{{vpoout.vpc.id}}""",1,new code is added to playbook13
"sudo: yes deploy_user: ""{{ ansible_ssh_user }}"" site_name: plaque-data storage_password: q0lgzjbrwcgyx",0,Minor fixes
"dest: ""{{ alertmanager_home }}/alertmanager.yml"" owner: ""{{ alertmanager_username }}"" group: ""{{ alertmanager_username }}"" path: ""{{ alertmanager_home }}/alertmanager_templates"" owner: ""{{ alertmanager_username }}"" group: ""{{ alertmanager_username }}"" copy: src: ""templates/alertmanager_templates/{{ item }}"" dest: ""{{ alertmanager_home }}/alertmanager_templates/{{ item }}"" owner: ""{{ alertmanager_username }}"" group: ""{{ alertmanager_username }}"" with_items: ""{{ alertmanager_templates }}""",0,fixes in ansible syntax. using more default values and making environment deployment easier.
"chdir: ""{{ easy_rsa_ca_dir }}"" creates: ""{{ easy_rsa_ca_dir }}/ca.key"" chdir: ""{{ easy_rsa_ca_dir }}"" creates: ""{{ easy_rsa_key_dir }}/{{ openvpn_server }}.key""",1,"fixes, tags added"
- http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.13.6-trusty/linux-headers-3.13.6-031306-generic_3.13.6-031306.201403070154_amd64.deb - http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.13.6-trusty/linux-image-3.13.6-031306-generic_3.13.6-031306.201403070154_amd64.deb - http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.13.6-trusty/linux-headers-3.13.6-031306_3.13.6-031306.201403070154_all.deb,1,Kernel 3.10.7. Some ansible tweaks. [ci skip]
"borg_repo_ssh_priv_key: ""{{ lookup('env', 'borg_repo_ssh_priv_key')}}"" borg_pass: ""{{ lookup('env', 'borg_pass') }}""",0,fix: use environment variables
node_version: 11.9.0 core_version: 3.7.0,1,"fix: bump node, core, and set the network apply setting"
- name: restart php7.2-fpm service: name=php7.2-fpm state=restarted,0,Fix php7 restart handlers
notify: pacemaker disable cinder-api,1,fixes issue for scaleio interface on non-homogenius clusters
scripts/a714-runner --file tests/${srvname}.yml --output-dir log/test_a714_runner --verbosity 1; - scripts/a714-runner --file tests/simple_backup_test.yml --output-dir log/test_backup_system --mode backup --verbosity 1;,0,[IMP] reduce verbosity for tests
# as understood by the `kvm_tool create machine` command (see # https://levigo.de/stash/projects/lc/repos/kvm.kvm_tool).,1,Try to fix link in README
"#allow_failure: false #molecule_test_debian_12: # <<: *molecule_test # variables: # scenario: ""cicd-debian-12"" # rules: # - if: '$ci_commit_message=~/^[^merge]/ && $ci_commit_branch == ""develop""' molecule_test_docker_dind: allow_failure: true #because token removed scenario: ""cicd-docker-dind"" #molecule_test_ubuntu_22: # <<: *molecule_test # variables: # scenario: ""cicd-ubuntu-22"" # allow_failure: true # rules: # - if: '$ci_commit_message=~/^[^merge]/ && $ci_commit_branch == ""develop""' #molecule_test_debian_11: # <<: *molecule_test # variables: # scenario: ""cicd-debian-11"" # allow_failure: true # rules: # - if: '$ci_commit_message=~/^[^merge]/ && $ci_commit_branch == ""develop""' - ""molecule_test_docker_dind""",0,fix CI 2
service: name=nginx state=reload enabled=yes,1,Make common stuff optional; fix nginx reload
"shell: echo 'kubelet_extra_args=""--kube-reserved=cpu=500m,memory=32mi,ephemeral-storage=500mi --system-reserved=cpu=250m,memory=16mi,ephemeral-storage=500mi""' | tee /etc/default/kubelet command: ""{{ hostvars['pikube-master.localdomain']['join_command']['stdout_lines'][0] }}""",0,"Typo in worker kubelet args, install specific version of docker, set daemon params"
"- name: create a monitoring namespace tags: [k8s, k8s-hetzner] tags: [k8s, k8s-hetzner] tags: [k8s, k8s-hetzner] tags: [k8s, k8s-hetzner] tags: [k8s, k8s-hetzner] tags: [k8s, k8s-hetzner] tags: [k8s, k8s-hetzner]",1,fix: kubeadm secret upload name & role tags
- php5-pear,1,Cleanup formatting and fix pear
- http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.13.7-trusty/linux-headers-3.13.7-031307-generic_3.13.7-031307.201403240156_amd64.deb - http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.13.7-trusty/linux-image-3.13.7-031307-generic_3.13.7-031307.201403240156_amd64.deb - http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.13.7-trusty/linux-headers-3.13.7-031307_3.13.7-031307.201403240156_all.deb,0,Kernel 3.10.7. Some ansible tweaks. [ci skip]
- name: reload ufw command: ufw reload,1,"Use handler to reload ufw, and fix staging issuer"
"ansible.builtin.file: ansible.builtin.shell: path: ""{{ lookup('env','home') }}/.profile"" line: ""export qt_qpa_platformtheme=gtk2""",0,Fix task for QT theming
"name: ""{{ item }}"" with_items: ""{{ sshuttle_packages }}""",1,Addressed looping package installation deprecation.
"chdir: ""{{ openvpn_rsa_ca_dir }}"" chdir: ""{{ openvpn_rsa_ca_dir }}"" chdir: ""{{ easy_rsa_ca_dir }}""",1,fixes
"- name: load os-specific vars ansible.builtin.include_vars: ""{{ lookup('first_found', params) }}"" vars: params: files: - '{{ ansible_distribution }}.yml' - '{{ ansible_os_family }}.yml' - main.yml paths: - 'vars' - name: configure the system ansible.builtin.include_tasks: essential.yml - name: update the packages and configure auto-updates (redhat-based) ansible.builtin.include_tasks: setup-redhat.yml when: - ansible_os_family == 'redhat' - name: update the packages and configure auto-updates (debian-based) ansible.builtin.include_tasks: setup-debian.yml when: - ansible_os_family == 'debian' - name: configure firewalld ansible.builtin.include_tasks: firewall-redhat.yml when: - ansible_os_family == 'redhat' and (enable_firewall | default(true)) - name: configure ufw ansible.builtin.include_tasks: firewall-debian.yml when: - ansible_os_family == 'debian' and (enable_firewall | default(true))",1,"Fix the Docker firewall behavior, fix running on non-root systems e.g. AWS EC2, improve testing to include post-reboot states (#205)"
register: firewalld_nrpe_tcp_port_exists when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_nrpe_tcp_port_exists.rc != 0 register: iptables_nrpe_tcp_port_exists failed_when: iptables_nrpe_tcp_port_exists == 127 when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_nrpe_tcp_port_exists.stdout|int == 0,0,Many fixes here:
- name: deploy mariadb and configure the databases,1,fix some ansible-lint errors
when: not tmuxcon.stat.exists,1,tmux: fix typo
"creates: ""/var/lib/ambari-server/resources/mpacks/{{ mpack_filename | regex_replace('.tar.gz$','') }}""",1,Fix for HDP Search mpack installation.
"namespace: ""playbook""",1,fix meta
with_items: privileged_programs.stdout_lines,1,Replaced bare variables with the correct syntax in tasks section 2 and 8. Ran the playbook and verified no deprecation errors.
apt: name={{ java }} state={{java_state}} update_cache=yes,1,Idempotency fix for java
copy: src=/usr/share/easy-rsa/ dest=/etc/openvpn,1,path fix
"--{{ option.key | replace('_', '-') ~ ' ' ~ option.value }} --{{ option.key | replace('_', '-') ~ ' ' ~ option.value }}",1,gitlab-manager: Fix passing options to command
nagios_http_port: 8888 # change this to your email address if you want notifications ### elk options ### # if you use my elk playbook you'll need this for http checks # https://github.com/sadsfae/ansible-elk kibana_user: admin kibana_password: admin,0,Many fixes here:
"failed_when: result.status != 200 retries: 10 delay: 10 url: ""http://localhost:{{ inv_install_nexus_repository__web_port }}/"" method: ""get""",1,fix CI 2
"- name: ""lamp-wordpress"" roles: - wordpress",0,Minor fix
- name: enable selinux policy: targeted state: enforcing,1,add new hardening role and make playbooks intentionally less secure
name: enmanuelmoreira.k3s.proxmox_lxc name: enmanuelmoreira.k3s.lxc name: enmanuelmoreira.k3s.prereq name: enmanuelmoreira.k3s.download name: enmanuelmoreira.k3s.raspberrypi name: enmanuelmoreira.k3s.k3s/master name: enmanuelmoreira.k3s.k3s/node name: enmanuelmoreira.k3s.k3s/post,0,fix playbook
dotfiles_repo: https://github.com/geerlingguy/dotfiles.git,0,Use https dotfiles git repo URL to not require auth.
- aws_access_key_id - aws_secret_access_key - azure_secret - azure_client_id - azure_subscription_id - azure_tenant - controller_host - controller_username - controller_password - controller_verify_ssl - gcp_auth_kind - gcp_project - gcp_service_account_file - k8s_auth_verify_ssl - k8s_auth_host - k8s_auth_api_key - ovirt_hostname - ovirt_username - ovirt_password - vmware_host - vmware_user - vmware_password,1,fix yaml indent
- import_tasks: rehl.yml when: ansible_facts['os_family']|lower == 'debian',1,YAML Linting and RHEL Spelling Error
# roles: # - geerlingguy.nodejs # - name: installing latest nginx # apt: # name: nginx # state: latest # - name: installing latest git # apt: # name: git # state: latest # - name: nginx template # template: # src: templates/default.j2 # dest: /etc/nginx/sites-available/default # - name: starting nginx # service: # name: nginx # enabled: yes # state: restarted # - name: adding production group # group: # name: production # - name: adding git user # user: # name: git # group: production # - name: adding debian user to production group # user: # name: debian # group: production # - name: adding ssh key # authorized_key: # key: ssh-rsa aaaab3nzac1yc2eaaaadaqabaaacaqdy88sex13bmxjp452daylk5kzmch08m23+exoov46+kjnxwugm2kxuesi1te8xbep53p/lbn2rwmzljzpkdlhgb4unxtv0nyxf8hciqj5moxbihglfgojxa8cm1mgyrfyaxfq0ocytsei13if5p3pd0a7etu8mnwlyndpy9etllwygjacgz8xjnqyfhvo7jsy9o8oajjq4yjtkatsu1h0e9ij/v3wtsifwytuw+qkdeeuj+oasrs9v8nd5sjt5oqe3l4fkobumghhwadbehwlqbi/8cpit0q7zskg4yclzblnllf7+vxtzkhybtykhxzqhll6x6vk86ni1eliktmfptpgmtnuhjnd8yadthgmbr8e5hdzb9lul03hwrqzysc54noo21n99gu1hzdpqu4hdbugvjexd6uvwe5p1lfutldzw3/gw/azz+cu8i9wctr2niojmy/33rqv88oq7htcj+v97zpddrmfpijbpe+aamm9lyugt69g9spr5rsmlrgrcvle6jejbpiug3q1bmquxtnmz/rhife7w5a9xjrl3xc/7qbit5+pm0mzmiziqflvjfmhrvi+cky8saehzmxggv5znapiwu6jqntylej332ojtqzwtoktol6vtsegq0yvtoqt88tqwopdugu1a7fdsesutuy4lrcva3unejsppzq== badr.youbi-idrissi@student.ecp.fr # user: git # - name: creating bare repos # command: git init --bare /home/git/eisenhower-backend.git # - command: git init --bare /home/git/eisenhower-client.git # - name: setting permissions # file: # path: /home/git/eisenhower-backend.git # group: production # owner: git # recurse: yes # - file: # path: /home/git/eisenhower-backend.git # group: production # owner: git # recurse: yes # - name: creating folder structure # file: # path: /var/www/html/eisenhower # state: directory # owner: git # group: production # - template: # src: env.j2 # dest: /var/www/html/eisenhower/.env # owner: git # group: production,1,Deploying optimised app directly
- include: perform_aptitude_dist_upgrade.yml when: perform_aptitude_dist_upgrade is defined and perform_aptitude_dist_upgrade - include: force_ssh_authentication.yml when: force_ssh_authentication is defined and force_ssh_authentication - include: create_non_root_sudo_user.yml - include: setup_unattended_upgrades.yml - include: setup_uncomplicated_firewall.yml - include: setup_fail2ban.yml,0,Split security role tasks into separate tasks.
community.general.pacman:,0,Merge branch '13-fix-zshrc' into 'main'
- homebrew/cask,0,Fix homebrew_taps in default config file.
- name: restart nginx,1,* Fixed a bug that caused Nginx to be restarted twice in
# - name: set synapse cache factor # lineinfile: # path: /etc/default/matrix-synapse # regexp: '^synapse_cache_factor=' # line: 'synapse_cache_factor=2.0' # state: present # create: yes # notify: restart synapse,0,"minor fixes, add a redlight install section for rapid testing"
"name: '{{ packages.flatpak.install }}' name: ""{{ packages.flatpak.remove }}""",0,Addressed looping package installation deprecation.
"marathon_playbook_version: ""0.3.3""",0,Merge pull request #23 from ernestas-poskus/fix/os_version_major_parsing
nextcloud: image: nextcloud container_name: nextcloud - 9321:80 - '{{ services_volume_path }}/nextcloud/html:/var/www/html' restart: unless-stopped depends_on: - nextcloud_db links: - nextcloud_db nextcloud_db: image: linuxserver/mariadb container_name: nextcloud_db volumes: - '{{ services_volume_path }}/nextcloud/db:/config' environment: - mysql_root_password=password - mysql_password=password - mysql_database=nextcloud - mysql_user=nextcloud restart: unless-stopped nodered: container_name: nodered build: '{{ services_env_path }}/nodered/.' user: '0' privileged: true env_file: '{{ services_env_path }}/nodered/nodered.env' ports: - 1880:1880 - '{{ services_volume_path }}/nodered/data:/data',0,#5 documentation of the services
- name: copy php fpm configuration copy: src=files/apache_php_fpm/php.ini dest=/etc/php/7.3/fpm/php.ini owner=root group=root mode=0644,1,"Update 20210409 - Apache2+FPM bug, added mod_php configuration."
roles: - name: create clients role: configure-client,0,Change: A few linting errors
count=$(grep targethost2 log/test_a714_runner/simple_svc_recipe2/stdout | grep -c -s -v skipping|| [[ $?==1 ]] ) count=$(grep targethost2 log/test_a714_runner/simple_svc_recipe3/stdout | grep -c -s -v skipping || [[ $?==1 ]] ),0,[FIX] wrong service name and log management
"registry_http_host: ""$docker_registry_http_host"" - ""$docker_registry_htpasswd_path/auth:/auth""",0,feat: Fix broken path for htpasswd and add http host env variable
"serial: 1 - { role: update-kubelet, when: ""groups['all-masters'][0] != inventory_hostname"" }",0,"Added smoke test, firewalld setup, heapster, encrypting secrets at rest"
key_file: /home/dcadm1n/.ssh/deploy_key,1,keyfile name fix
version: 0.8.6,0,Fix for docker login 
"- name: ""molecule-cicd-debian-11-instance-1-deploy-jenkins"" image: ""${nexus_repos_docker_registry}/${docker_image_debian_11_ansible}"" hostname: ""molecule-cicd-debian-11-instance-1-deploy-jenkins"" command: ""/sbin/init"" storage_driver: ""overlay2"" networks: - name: ""molecule-cicd-debian-11-deploy-jenkins"" ansible_force_color: ""true""",0,fix and refacto
include_units: - docker - ssh exclude_units: - vector type: docker,0,various fixes
- name: install gettext dependency,1,Fixed typo
mode: 0644 mode: 0644 dest: /etc/opt/remi/php70/php.ini mode: 0644,0,Fix rights php configurations files
- name: heal apt autoclean: yes,1,fix: deep clean apt
state: directorry,1,Fix typo
- name: shell: - name: change default gateway address in redhat - name: restart networking service - name: check ip configuration - name: shell: - name: change default gateway address debian - name: restart networking service - name: check ip configuration,1,Add install net-tools
# satnogs ansible configuration example,0,Fix references to old project name
- name: deploy mariadb and configure the databases,0,fix some ansible-lint errors
- dns_private_key,1,typo
- role: geerlingguy.homebrew - role: geerlingguy.mas - import_tasks: tasks/dock.yml when: configure_dock tags: ['dock'],1,Fixes #116: Switch from roles and dock tasks to geerlingguy.mac collection.
"yum: pkg: ""{{ item }}"" state: present file: path: /etc/nagios/ansible-managed state: directory copy: src: nagios.cfg dest: /etc/nagios/nagios.cfg copy: src: localhost.cfg dest: /etc/nagios/objects/localhost.cfg copy: src: ansible-managed-services.cfg dest: /etc/nagios/ template: src: ""{{ item + .j2 }}"" dest: ""/etc/nagios/ansible-managed/{{ item }}""",0,Fix ansible-lint reported errors and update syntax.
satnogs_setup_ansible_url_unstable: 'https://gitlab.com/librespacefoundation/satnogs/satnogs-client-ansible.git',1,satnogs-setup: Fix overriding of Ansible URL and branch experimental defaults
"msg: ""hello, {{ greeting | default('ansibl')}}!""",1,Fixed typo
- name: elasticsearch xpack tests,1,Support for plugin diffs + improved testing on minor upgrades + fixes
- name: https://gitlab.com/my0373-ansible/playbooks/ansible-fedora-laptop.git,1,Fixed typo in requirements.yml
state: directory,0,Fix typo
- name: install needed os pkgs become: true community.general.pacman: name: - docker - docker-compose state: present - name: enable docker service become: true ansible.builtin.service: name: docker enabled: true state: started - name: add `{{ ansible_user }}` to docker group become: true ansible.builtin.user: name: '{{ ansible_user }}' groups: docker append: true state: present,0,Merge branch '13-fix-zshrc' into 'main'
"- /opt/server-ansible/registry-images:/data - ""$registry_auth_file/auth"":/auth",0,fix: Fix indention error
- https://raw.github.com/georchestra/georchestra/master/postgresql/060-ogc-server-statistics.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/070-atlas.sql,1,"fix the fix, thx @fvanderbiest (#61)"
inv_install_haproxy_cert_bundles:,1,"refacto, iptables, fixes"
docker_tag: enmanuelmoreira/docker-ansible-alpine:latest,0,Fix image name
"url: ""http://{{ inventory_hostname }}:{{ inv_install_prometheus__port }}"" url: ""http://{{ inventory_hostname }}:{{ inv_install_prometheus__port }}"" url: ""https://{{ inventory_hostname }}:{{ inv_install_prometheus__port }}"" url: ""https://{{ inventory_hostname }}:{{ inv_install_prometheus__port }}"" host: ""127.0.0.1"" host: ""{{ inventory_hostname }}"" host: ""{{ inventory_hostname }}"" host: ""{{ inventory_hostname }}"" url: ""http://{{ inventory_hostname }}:{{ inv_add_apache_confs__http_listen_port }}/"" url: ""https://{{ inventory_hostname }}:{{ inv_add_apache_confs__https_listen_port }}/""",1,fix CI 1
when: dns_result.rc = 0 and nameserver_ipv4 is defined when: dns_configure.rc = 0 when: dns_apply.rc = 0 when: dns_reload.rc = 0 when: dns_restart.rc = 0 when: dns_result.rc = 0,1,Bugfix flags
- name: restart firewalld,0,fix some ansible-lint errors
"traefik.http.services.hello_world.loadbalancer.server.port: ""4040""",1,Fixes Wrong loadbalancer port in `hello_world` example? #671
- caskroom/cask,1,Fix homebrew_taps in default config file.
"#inv_install_mariadb__galera_cluster_seed_host: ""molecule-local-instance-1-deploy-phpmyadmin""",0,fix galera
shell: /usr/bin/zsh,0,fix: move workspace; fix: zsh path; feat: change powerlevel10k config
author: crazyusb description: sysadmin company: yuna,0,Fixed typo
"- ""ansible-playbook --extra-vars '{""configure_sudoers"":""false""}' main.yml | tee -a ${idempotence}""",1,Fix other instance of inline JSON.
"gather_facts: no - role: lxc-preprovision tags: lxc vars: # note: variables do leak between roles, so this is one of the few safe places where we can override what we # need per role without being worried. ansible_host: ""{{ lxd_host }}"" ansible_user: null lxc_default_user: ubuntu provision_ssh_key: ""ssh-ed25519 aaaac3nzac1lzdi1nte5aaaaigex/9uo92cuv0spod/lhwhuij40kxq4by/njqdvvhxb"" - role: base-os tags: base vars: ansible_host: ""{{ inventory_hostname }}"" ansible_password: null ansible_user: ubuntu is_lxc: true",0,"Add full LXC provisioning, add lxd hosts"
"molecule_run_dir: ""{{ lookup('env', 'molecule_ephemeral_directory') }}"" path: ""{{ molecule_run_dir }}/tmp"" - name: create ca key privatekey_path: ""{{ ca_key.filename }}"" graylog_http_publish_uri: ""https://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}/"" - name: set up ldap auth endpoint: ""localhost"" graylog_user: ""admin"" graylog_password: ""yourpassword"" search_pattern: ""(&(objectclass=inetorgperson)(uid={0}))"" tags: [""ldap_config""]",1,fix: fixed issues with yamllint
"curl -k ""https://{{ groups['confluence_backend'][0] }}"" curl -k ""https://{{ groups['jira_backend'][0] }}"" - name: ensure proxy node returns with confluence shell: | curl ""https://confluence.internal.test"" register: proxy_confluence_results - name: ensure proxy node returns with jira shell: | curl ""https://jira.internal.test"" register: proxy_jira_results - name: assert proxy node returns with confluence assert: that: proxy_confluence_results - name: assert proxy node returns with jira assert: that: proxy_jira_results",0,fix: fix stream and testing
- base-os,1,"Add full LXC provisioning, add lxd hosts"
"ansible.builtin.user: ""{{ ansible_user }}""",1,lint fixes
"url: https://deb.nodesource.com/setup_10.x dest: ""/var/lib/jenkins/setup-nodejs"" shell: ""/var/lib/jenkins/setup-nodejs"" name: ['build-essential', 'nodejs']",0,"update ansible syntax, fix issues with ci role"
"action: mysql_user user=root password=$mysql_root_password host=localhost - name: mysql | delete anonymous mysql server user for $server_hostname action: mysql_user user="""" host=""$server_hostname"" state=""absent"" action: mysql_user user=""root"" password=""$mysql_root_password"" host=""::1"" action: mysql_user user=""root"" password=""$mysql_root_password"" host=""127.0.0.1"" action: mysql_user user=""root"" password=""$mysql_root_password"" host=""localhost"" - name: mysql | secure the mysql root user for $server_hostname domain action: mysql_user user=""root"" password=""$mysql_root_password"" host=""$server_hostname"" tags: common",1,Removing legacy variable substitution $var and replacing with {{}} due to deprecation
"hosts: ""cicd-debian-11"" register: instal_java__version_output changed_when: instal_java__version_output.rc != 0 failed_when: ""'build {{ inv_install_java__version }}' not in instal_java__version_output.stderr"" - name: ""verify java -version, with custom binaries for java {{ inv_install_java__version }}"" loop: - ""java-{{ inv_install_java__version }}"" - ""/usr/bin/java-{{ inv_install_java__version }}"" - ""/bin/java-{{ inv_install_java__version }}"" loop_control: loop_var: instal_java__call register: instal_java__version_output changed_when: instal_java__version_output.rc != 0 failed_when: ""'build {{ inv_install_java__version }}' not in instal_java__version_output.stderr"" ansible.builtin.command: ""{{ instal_java__call }} -version"" register: install_apacheds__service_status failed_when: not install_apacheds__service_status.status.activestate == 'active' loop: ""{{ inv_install_apacheds__instances }}"" loop: ""{{ inv_install_apacheds__instances }}"" loop: ""{{ inv_install_apacheds__instances }}"" loop: ""{{ inv_install_apacheds__instances }}""",0,"refacto done, force ci"
- sftp - phpmyadmin,0,Add phpmyadmin; fix handlers
hosts: all tasks: - name: install nfs kernel server become: true apt: state: present name: - nfs-kernel-server,1,refactor: updated the task files to be alligned with standards
# notify: pacemaker disable cinder-api,0,fixes issue for scaleio interface on non-homogenius clusters
dest: /home/jaller94/silvy-matrix/config/matrix.js,1,Fix bruce's config
"- name: ""prepare apache2""",0,fix typo
- name: create member role and associate it with admin user,0,fix indentation of task that broke yaml
- curl -slo https://raw.githubusercontent.com/homebrew/install/master/uninstall.sh - chmod +x ./uninstall.sh - ./uninstall.sh --force,0,Use new homebrew uninstaller - fixes CI failure.
state:directory,1,Fixed bug
until: catalog_source_result.rc == 0,0,fix the wrong file
# https://github.com/ansible-community/molecule-vagrant/blob/main/readme.rst - name: instance # https://www.jeffgeerling.com/blog/2020/getting-colorized-output-molecule-and-ansible-on-github-actions-ci,1,tweaks
remote_src: false,0,Merge branch '13-fix-zshrc' into 'main'
34323733396630666133303466346537323334616461363861623532396634623066313937393330 3230616562343165663564353537376661636436353133620a366164643634323661343135383566 63333439383235306262623865646433343838363035333961343431663264376636333661643165 3430363439303939620a313734353335643461633634653435373637623866623835343439356261 64316434356165303930346365643031383438633039623462366633323065363134313137633039 6663393362333839666439343364373464656232663831386538,1,fix sudoers bug
"#- ""../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int}}.yml"" #- ""../vars/{{ ansible_distribution }}.yml""",1,Update to use official openscap SSGs instead of ubuntu-scap. Fixes #39
notify: restart httpd register: firewalld_tcp80_exists when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_tcp80_exists.rc != 0 register: iptables_tcp80_exists failed_when: iptables_tcp80_exists == 127 when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_tcp80_exists.stdout|int == 0 # firewalld - name: determine if firewalld is in use shell: systemctl is-enabled firewalld.service | egrep -qv 'masked|disabled' ignore_errors: true register: firewalld_in_use no_log: true - name: determine if firewalld is active shell: systemctl is-active firewalld.service | grep -vq inactive ignore_errors: true register: firewalld_is_active no_log: true register: firewalld_tcp8080_exists when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_tcp8080_exists.rc != 0 register: iptables_tcp443_exists failed_when: iptables_tcp443_exists == 127 when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_tcp443_exists.stdout|int == 0,1,Many fixes here:
- name: add ansible-pull test script,1,fixed spelling issue and centos cokpit not starting
"- {role: oracle_jdk, when: jdk_installed is not defined }",1,Tag fixes. [ci skip]
"# ca file copied or downloaded from engine; path is relative to playbook directory. # download url https://<engine>/ovirt-engine/services/pki-resource?resource=ca-certificate&format=x509-pem-ca # if you are running on engine, you could use the below. # engine_cafile: /etc/pki/ovirt-engine/ca.pem #qcow_url: https://cloud.centos.org/centos/7/images/centos-7-x86_64-genericcloud.qcow2c root_ssh_key: ""{{ lookup('file', '~/.ssh/id_rsa.pub') }}""",0,Small fixes for RHV provider:
"# listen for connections. empty for all interfaces, defaults to localhost only smtp_listen_interface: ""127.0.0.1 ; ::1""",1,fix smtp vars
zookeeper_id: 1 zookeeper_id: 2,1,fix
file: state=directory path={{ es_script_dir }} owner={{ es_user }} group={{ es_group }} recurse=yes,0,Support for plugin diffs + improved testing on minor upgrades + fixes
name: postgresql-9.6 name: postgresql-9.6 state: started,1,Fix PostgreSQL Playbook
"shell: aws \ --output json \ ec2 describe-images \ --region ""{{ aws_region }}"" \ --owners 309956199498 | \",0,Fix to force to aws describe-images command to json
- oefenweb.slack # todo possibly replace with flatpak,0,lint fixes
- ansible-playbook playbooks/$playbook -i $inventory -l $hosts -e $extravars -t $tags,1,fix
file: dest=/home/deployer/default state=directory owner=deployer group=www-data mode=2755,1,Fix permissions
"file: shell: path: ""{{ lookup('env','home') }}/.profile"" line: ""export qt_qpa_platformtheme=gtk2""",1,Fix task for QT theming
- name: get registered gitlab runners ansible.builtin.shell: 'gitlab-runner list' # noqa command-instead-of-shell - name: register gitlab runners - name: unregister runners,1,ansible-lint: Fix some errors
"become_user: ""{{ rustdesk_user }}""",0,Become fix
deb: https://github.com/kong/insomnia/releases/download/core%402021.7.2/insomnia.core-2021.7.2.deb,0,refactor: start lint
- name: unmount the root filesystem from the rhel9 image,1,Correct minor typo
"- compton.j2: .config/compton/launch.sh - lock.j2: .config/i3/lock.sh - sound.j2: .config/i3/sound.sh - screens.j2: .config/i3/screens.sh - background.j2: .config/i3/background.sh - rofi.j2: .config/rofi/config - rofi-theme.rasi: .config/rofi/my-theme.rasi - polybar.j2: .config/polybar/config - launch_polybar.j2: .config/polybar/launch.sh - dunstrc.ini.j2: .config/dunst/dunstrc - battery.sh.j2: .config/i3/battery.sh mode: ""755"" src: files.desktop dest: /usr/share/applications/files.desktop mode: ""0644""",0,refactor: start lint
gitlab_runner_baseurl: 'https://packages.gitlab.com/runner/gitlab-runner/el/7/$basearch' - 'https://packages.gitlab.com/runner/gitlab-runner/gpgkey/runner-gitlab-runner-366915f31b487241.pub.gpg',1,"gitlab-runner: Fix repository key, add URL based on release major version"
"name: ""{{ item }}"" with_items: ['apt-transport-https', 'ca-certificates', 'dirmngr', 'gnupg'] name: ""{{ item }}"" with_items: ['nginx', 'libnginx-mod-http-passenger']",1,"update ansible syntax, fix issues with ci role"
"name: [ lynx, weechat, weechat-python, weechat-perl, weechat-lua, weechat-ruby, weechat-spell, mutt, newsboat, fa, lastpass-cli, neoftech, ranger, aspell, aspell-en, imagemagick, parted ]",0,Add a slew of additional packages that were missed after provisioning my l203ma
- name: k8s-bootstrap - k8s/argocd # - k8s/etcd,0,fix: typo
repo: 'ssh://git@git.worobetz.ca:/srv/git/homedir.git',1,Fix merge conflict
- name: install needed os pkgs become: true community.general.pacman: name: - docker - docker-compose state: present - name: enable docker service become: true ansible.builtin.service: name: docker enabled: true state: started - name: add `{{ ansible_user }}` to docker group become: true ansible.builtin.user: name: '{{ ansible_user }}' groups: docker append: true state: present,1,Merge branch '13-fix-zshrc' into 'main'
- name: update keyring community.general.pacman: name: archlinux-keyring state: latest,0,tweaks
"include: ""roles/minemeld/tasks/{{distribution_pre_task}}.yml"" - include: structure.yml - include: prototypes.yml - include: core.yml - include: webui.yml include: ""roles/minemeld/tasks/{{distribution_post_task}}.yml""",1,fixed a typo and updated to remove items deprecated as of ansible 2.4.1.0
"when: ceph_stable_release not in ceph_stable_releases when: ceph_stable_release in ceph_stable_releases mode: 600 cephx and ceph_stable_release not in ceph_stable_releases cephx and ceph_stable_release in ceph_stable_releases ansible_distribution == ""ubuntu"" and ceph_stable_release not in ceph_stable_releases ansible_distribution == ""ubuntu"" and ceph_stable_release not in ceph_stable_releases ansible_distribution != ""ubuntu"" and ceph_stable_release not in ceph_stable_releases ansible_distribution != ""ubuntu"" and ceph_stable_release not in ceph_stable_releases",1,Fix condition logic for infernalis in restapi
dokuwiki_memory: 1g,0,fix linting issue
defaultfstype: ext4 defaultdatapath: /opt/longhorn,0,"Add wireguard, do some cleanups, utilize wireguard for microk8s and fix a glaring omission with longhorn using the /tmp folder - meaning upon host reboot everything was lost"
state: latest,0,restore: fix under indented state
- oefenweb.slack,1,lint fixes
- name: download proton ge build ansible.builtin.get_url: url: '{{ proton_ge_url }}' dest: '{{ download_location }}',1,"mitigate differing kernel versions, proton install, and setting default browser"
"ansible.builtin.apt: ansible.builtin.file: mode: ""0755""",0,refactor: lint
"- hosts: localhost gather_facts: true tasks: - name: disable firewall become: true ufw: state: disabled - name: create tftpd directory for kernel file: path: ""{{ ansible_env.home }}/nos/kernel"" state: directory - name: create nfs mount point for v1 rootfs become: true become_user: ""{{ ansible_env.user }}"" file: path: ""{{ ansible_env.home }}/nos/v1/rootfs"" state: directory - name: create nfs mount point for v2 rootfs file: path: ""{{ ansible_env.home }}/nos/v2/rootfs"" state: directory - name: replace pattern in nfs export file replace: dest: ""{{ playbook_dir }}/templates/uma/nfs_export.j2"" regexp: ""##user##"" replace: ""{{ ansible_env.user }}"" - name: replace pattern in tftp file replace: dest: ""{{ playbook_dir }}/templates/uma/tftpd-hpa.j2"" regexp: ""##user##"" replace: ""{{ ansible_env.user }}"" - name: copy nfs export file for nos become: true become_user: root template: backup: yes src: ""{{ playbook_dir }}/templates/uma/nfs_export.j2"" dest: /etc/exports owner: root group: root mode: 0644 - name: copy tftpd-hpa conf file for nos become: true become_user: root template: backup: yes src: ""{{ playbook_dir }}/templates/uma/tftpd-hpa.j2"" dest: /etc/default/tftpd-hpa owner: root group: root mode: 0644 - name: restart nfs server and tftp server become: yes service: name: ""{{ item }}"" state: restarted with_items: - tftpd-hpa - nfs-kernel-server",1,refactor: updated the task files to be alligned with standards
owner: apache group: apache,0,fix username
roles: - geerlingguy.nodejs - name: installing latest nginx apt: name: nginx state: latest - name: installing latest git apt: name: git state: latest - name: nginx template template: src: templates/default.j2 dest: /etc/nginx/sites-available/default - name: starting nginx service: name: nginx enabled: yes state: restarted - name: adding production group group: name: production - name: adding git user user: name: git group: production - name: adding debian user to production group user: name: debian group: production - name: adding ssh key authorized_key: key: ssh-rsa aaaab3nzac1yc2eaaaadaqabaaacaqdy88sex13bmxjp452daylk5kzmch08m23+exoov46+kjnxwugm2kxuesi1te8xbep53p/lbn2rwmzljzpkdlhgb4unxtv0nyxf8hciqj5moxbihglfgojxa8cm1mgyrfyaxfq0ocytsei13if5p3pd0a7etu8mnwlyndpy9etllwygjacgz8xjnqyfhvo7jsy9o8oajjq4yjtkatsu1h0e9ij/v3wtsifwytuw+qkdeeuj+oasrs9v8nd5sjt5oqe3l4fkobumghhwadbehwlqbi/8cpit0q7zskg4yclzblnllf7+vxtzkhybtykhxzqhll6x6vk86ni1eliktmfptpgmtnuhjnd8yadthgmbr8e5hdzb9lul03hwrqzysc54noo21n99gu1hzdpqu4hdbugvjexd6uvwe5p1lfutldzw3/gw/azz+cu8i9wctr2niojmy/33rqv88oq7htcj+v97zpddrmfpijbpe+aamm9lyugt69g9spr5rsmlrgrcvle6jejbpiug3q1bmquxtnmz/rhife7w5a9xjrl3xc/7qbit5+pm0mzmiziqflvjfmhrvi+cky8saehzmxggv5znapiwu6jqntylej332ojtqzwtoktol6vtsegq0yvtoqt88tqwopdugu1a7fdsesutuy4lrcva3unejsppzq== badr.youbi-idrissi@student.ecp.fr user: git - name: creating bare repos command: git init --bare /home/git/eisenhower-backend.git - command: git init --bare /home/git/eisenhower-client.git - name: setting permissions file: path: /home/git/eisenhower-backend.git group: production owner: git recurse: yes - file: path: /home/git/eisenhower-backend.git group: production owner: git recurse: yes - name: creating folder structure file: path: /var/www/html/eisenhower state: directory owner: git group: production - template: src: env.j2 dest: /var/www/html/eisenhower/.env owner: git group: production - name: creating static directory file: path: /var/www/html/eisenhower/static state:directory owner: git group: production,0,Deploying optimised app directly
"marathon_playbook_version: ""0.3.2""",1,Merge pull request #23 from ernestas-poskus/fix/os_version_major_parsing
"yum: pkg={{ item }} state=present file: path=/etc/nagios/ansible-managed state=directory copy: src=nagios.cfg dest=/etc/nagios/nagios.cfg copy: src=localhost.cfg dest=/etc/nagios/objects/localhost.cfg copy: src=ansible-managed-services.cfg dest=/etc/nagios/ template: src={{ item + "".j2"" }} dest=/etc/nagios/ansible-managed/{{ item }}",1,Fix ansible-lint reported errors and update syntax.
"license: license (gpl-2.0-or-later, mit, etc) min_ansible_version: 2.1",1,Fix licence and add some information in Readme
"- ""ansible-playbook -i tests/inventory tests/playbook.yml --connection=local --sudo""",0,"CentOS/EL 7 support, test validation."
"- name: ""converge"" hosts: ""cicd-debian-11"" tasks: - name: ""include labocbz.prepare_host"" tags: - ""labocbz.prepare_host"" vars: prepare_host__users: ""{{ inv_prepare_host__users }}"" prepare_host__packages_removed: ""{{ inv_prepare_host__packages_removed }}"" prepare_host__packages_installed: ""{{ inv_prepare_host__packages_installed }}"" prepare_host__system_users: ""{{ inv_prepare_host__system_users }}"" ansible.builtin.include_role: name: ""labocbz.prepare_host""",1,fix CI
- name: install napari from conda - name: define miniconda as default python (add command to .bashrc),0,Fix typo in name and README.md
"yum: name: ""{{ item }}"" state: present lineinfile: dest: /etc/sysconfig/iptables create: yes state: present regexp: ""{{ httpd_port }}"" insertafter: ""^:output "" line: ""-a input -p tcp --dport {{ httpd_port }} -j accept"" service: name: httpd state: started enabled: yes seboolean: name: httpd_can_network_connect_db state: true persistent: yes",0,Fix ansible-lint reported errors and update syntax in lamp_simple.
stage: post_build,1,refactor: streamline stages
- ../vars/init.yml url: https://packagecloud.io/install/repositories/coanda/public/script.deb.sh,0,refactor: move playbooks
"name: ""{{ item }}"" with_items: ""{{ glow_python_packages }}""",1,Addressed looping package installation deprecation.
- curl -fssl https://raw.githubusercontent.com/homebrew/install/master/uninstall - chmod +x uninstall - yes '' | ./uninstall - rm -f uninstall,1,Issue #61: Better uninstall steps.
"name: ""{{ item }}"" with_items: ['postgresql', 'postgresql-contrib', 'libpq-dev', 'python3-psycopg2']",1,"update ansible syntax, fix issues with ci role"
"command: ""docker inspect --format='{{'{{'}} .state.status {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"" command: ""docker inspect --format='{{'{{'}} .state.startedat {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"" command: ""docker inspect --format='{{'{{'}} .state.status {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"" command: ""docker inspect --format='{{'{{'}} .state.startedat {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"" command: ""docker inspect --format='{{'{{'}} .state.status {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1""",1,Merge pull request #939 from softasap/regression-test-fixes
"- name: add ssh fingerprints hosts: localhost gather_facts: no tasks: - name: add hosts to /etc/hosts template: src: templates/hosts.j2 dest: /etc/hosts become: yes # убрать замену и сделать дописывание в файл - name: check exist known_hosts stat: path: ""~/.ssh/known_hosts"" register: khfile - name: add first connection shell: ssh vagrant@192.168.33.111 when: not khfile.stat.exists # задачу нужно выполнять в фоне, без выдачи запросов - name: ssh exit shell: exit when: not khfile.stat.exists - name: add ssh fingerprints known_hosts: path: ""~/.ssh/known_hosts"" host: ""{{ item }}"" key: ""{{ lookup('pipe', 'ssh-keyscan -t rsa ' + item) }}"" with_items: ""{{ groups['servers'] }}"" ignore_errors: yes hosts: all - mysql",0,Fix playbook
"- name: create partitions for vdb and vdc device: ""{{ item }}"" loop: - /dev/vdb - /dev/vdc - name: format vdb and vdc dev: ""{{ item }}"" loop: - /dev/vdb - /dev/vdc - name: mount vdb to /data1 and vdc to /data2 src: ""{{ item.dev }}"" path: ""{{ item.path }}"" loop: - { dev: '/dev/vdb', path: '/data1' } - { dev: '/dev/vdc', path: '/data2' } src: /opt/zookeeper-3.4.12 path: ""{{ item }}"" loop: - /data1/zookeeper - /var/log/zookeeper - name: create directories for kafka data with owner as kafka path: ""{{ item }}"" state: directory loop: - /data1/kafka-logs - /data2/kafka-logs",0,updated kafka.yml with loops
register: bastionhost_out - name: insert and update the vpc-output file blockinfile: path: vars/vpc-output.var backup: yes block: | bastionsgid: {{bastionhost_out.group_id}},0,new code is added to playbook13
template: src=opt/easynat/setup_nat_split dest=/opt/easynat/setup_nat mode=755,0,fixes one line in the NAT main.yml
"failed_when: (result.status != 200 and result.status != -1) url: ""http://{{ inventory_hostname }}:{{ inv_install_nexus_repository__web_port }}/"" method: ""get""",0,fix CI 2
group: radicale,0,"roles/radicale: correct permissions for htpasswd file, use public listening address"
key_name: openstack,0,Typo in OpenSSL DH parameter generation. Updated PHP packet selection for webserver paybooks.
src: backgrounds,0,refactor: start lint
"openvpn_rsa_ca_dir: ""/etc/openvpn/easy-rsa/keys""",0,"fixes, tags added"
shell: gpg --list-secret-keys --keyid-format=long quentin@lieumont.fr set_fact: template:,1,refactor: lint
admin_key:,0,Deleted auth for allow create users
"- name: ""block all trafic from other hosts on port maxscale http(s) (disable acces to portainer without apache2)""",1,fix typo
- https://raw.github.com/georchestra/georchestra/master/postgresql/050-ogc-server-statistics.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/060-atlas.sql,0,"fix the fix, thx @fvanderbiest (#61)"
deb: /tmp/gitlab-runner_{{ arch.stdout }}.deb,1,-> Solve issue 💡:
failed_when: gitlab_restart_handler_failed_when | bool,1,update code
"line: 192.168.1.69 hualcoyotl uuid=9836683c36681d8e /media/descargas ntfs defaults 0 0 uuid=""5aa5a70d-92fd-431d-9bef-dd229128ab4c"" /media/backup xfs defaults 0 0 uuid=6cc8a668533cd38b /mnt/bobac_ntfs ntfs noauto 0 0 uuid=4492-e896 /mnt/ventoy exfat defaults,noauto,uid=1000,gid=1000 0 0 hualcoyotl:/ /home/tockar/nfs nfs defaults,timeo=900,retrans=5,_netdev,user 0 0 state: present key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc state: present key: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg - borg - name: unpack borg latest backup cmd:",1,"ADD way to handle borg backup, small fixes"
"shell: ""microk8s add-node | grep -e -m1 'microk8s join {{ microk8s_ip_regex_ha }}'""",1,"Add wireguard, do some cleanups, utilize wireguard for microk8s and fix a glaring omission with longhorn using the /tmp folder - meaning upon host reboot everything was lost"
- repos,1,Fix PostgreSQL Playbook
satnogs_setup_ansible_url_stable: 'https://gitlab.com/librespacefoundation/satnogs/satnogs-client-ansible.git' satnogs_setup_ansible_branch_stable: 'stable' satnogs_setup_ansible_url_unstable: '{{ satnogs_setup_ansible_url_stable }}',0,satnogs-setup: Fix overriding of Ansible URL and branch experimental defaults
"- /opt/server-ansible/registry-images:/data - ""$registry_auth_file/auth"":/auth",1,fix: Fix indention error
hostname: spine02 loopback0: 10.0.4.102 loopback1: 10.0.0.102,1,Error /etc/network does not exist
"root_ca_name: ""{{ input_bootstrap_ssl_files_root_ca.cn | replace(' ', '-') }}"" root_ca_path: ""{{ input_bootstrap_ssl_files_base_path }}/{{ input_bootstrap_ssl_files_root_ca.cn | replace(' ', '-') }}"" loop: ""{{ input_bootstrap_ssl_files_intermediates_ca }}"" loop: ""{{ input_bootstrap_ssl_files_end_certs }}""",1,fix CI
satnogs_network_api_url: 'https://network-dev.satnogs.org/api/',1,Change example API URL to point to production network (fixes #24)
- '{{ owncloud_php5_pool }}' - '{{ owncloud_nginx_server }}' - '{{ owncloud_nginx_upstream_php5 }}',1,Fix role-dependent configuration vars in owncloud playbook
name: setup workstation - ansible-role-vscode - ansible-role-worktools - ansible-role-tailscale,0,Added role and some fix from ansible-lint
"$(rev=$(git rev-parse -q --verify ""$gitlab_ci_sign_off_exclude^{commit}"") && echo ""$rev.."")",0,gitlab-ci: Fix sign-off check on shallow clones
delegate_to: '{{ backup_server_ip }}' delegate_to: '{{ backup_server_ip }}',0,minor error in delegation
until: res.changed is defined and res.changed,0,Fix attribute access error while trying to read task result
repo: https://gitlab.com/deokiatama/dkr-deo-moodle.git key_file: /home/dcadm1n/.ssh/deo-moodle,1,provision for web and db
"- name: remove pkg conflicts for powerline fonts become: true community.general.pacman: name: - powerline-fonts state: absent - default_browser: /usr/bin/librewolf - texlive-most # latex generator dep for vim-latex-live-preview - name: ensure no .zshrc file exists ansible.builtin.file: path: ~/.zshrc state: absent - name: overwrite current shell_rc with skeleton, original version become: true ansible.builtin.copy: backup: true force: true remote_src: true src: '/etc/skel/{{ item }}' dest: '~/{{ item }}' owner: '{{ ansible_user }}' group: '{{ ansible_user }}' mode: '0644' loop: - .bashrc marker: ""# {mark} shell_rc"" block: ""{{ lookup('file', '../files/shell_rc') }}"" - .bashrc - name: copy custom shell_rc to root force: true - .bashrc - name: download/install (neo)vim plugins changed_when: true - name: === .profile block === - name: template ~/.profile path: ~/.profile create: true state: present mode: '0644' export browser={{ default_browser }} block: | [default applications] text/html={{ default_browser }} x-scheme-handler/http={{ default_browser }} x-scheme-handler/https={{ default_browser }} x-scheme-handler/ftp={{ default_browser }} x-scheme-handler/chrome={{ default_browser }} application/x-extension-htm={{ default_browser }} application/x-extension-html={{ default_browser }} application/x-extension-shtml={{ default_browser }} application/xhtml+xml={{ default_browser }} application/x-extension-xhtml={{ default_browser }} application/x-extension-xht={{ default_browser }} image/jpeg={{ default_browser }} image/png={{ default_browser }}",1,Merge branch '13-fix-zshrc' into 'main'
service: name=iptables state=restarted,1,Fix ansible-lint reported errors and update syntax in lamp_simple.
grep -lriz 'pin: release .*={{ dist_upgrade_current_release }}-backports' /etc/apt/preferences.d | xargs -0 rm -f --,0,Merge branch 'ypid-fix-dist-upgrade'
audiobookshelf_container_image: 'advplyr/audiobookshelf:{{ audiobookshelf_container_tag }}',0,Merge branch 'fix-container-roles' into 'develop'
"sudo: yes # are we running on sciencecloud? pre_tasks: - command: echo {{ ansible_ssh_host }} register: host - include_vars: targets/clouds3it.yml when: '""172.23."" in host.stdout' deploy_user: ""{{ ansible_ssh_user }}"" site_name: pelkmanslab # are we running on sciencecloud? pre_tasks: - command: echo {{ ansible_ssh_host }} register: host - include_vars: targets/clouds3it.yml when: '""172.23."" in host.stdout'",1,Minor fixes
"- { role: ""setup"", tags: [""setup""] } - { role: ""nftables"", tags: [""nftables""] } - { role: ""ssh"", tags: [""ssh""] } - { role: ""dokuwiki"", tags: [""dokuwiki""] } - { role: ""apache"", tags: [""apache""] } - { role: ""php"", tags: [""php""] }",1,Fix yamllint errors
"ruby_version: 2.5.0 path: ""{{rbenv_path}}/bin:{{ruby_bin_path}}:{{ansible_env.path}}""",1,"upgrade ro 2.5.1 as is required, and fix some PATH issues for setup-env.sh"
when: inventory_hostname != main_server,1,5046 mds install fixes
# defaults file for training,1,fixes and add demo role
galaxy_info: role_name: nginx author: no fuss computing description: template role to create a docker container with nginx issue_tracker_url: https://gitlab.com/nofusscomputing/infrastructure/ansible-roles license: https://gitlab.com/nofusscomputing/infrastructure/ansible-roles/-/blob/master/license min_ansible_version: 1.2 platforms: - name: debian versions: - 10 galaxy_tags: [ nginx ],1,Merge branch 'fix-more-bugs' into 'development'
"vpc_id: ""{{vpcout.vpc.id}}""",0,new code is added to playbook13
ansible.builtin.include_role:,0,Merge branch 'fix-ansible-lint' into 'main'
"# установка postgresql 9.6 name: https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-6-x86_64/pgdg-centos96-9.6-3.noarch.rpm - pg_set_repos ## существует ли файл настроек - name: check postgresql initialized become: yes stat: path: ""/var/lib/pgsql/9.6/data/postgresql.conf"" register: pginit - pg_init - pg_set_passwords ## если нет файла настроек - block: ## инициализируем postgresql - name: initialize postgresql become: yes command: /usr/pgsql-9.6/bin/postgresql96-setup initdb ## запускаем postgresql и помещаем его в автозагрузку - name: enable & start postgresql become: yes service: name: postgresql-9.6 state: started enabled: yes ## задаем пароль для стандартной роли postgresql - name: set password for ""postgres"" user become: yes become_user: ""{{ postgres.role }}"" command: ""psql -u postgres -d postgres -c \""alter user postgres with password '{{ postgres.password }}'\"""" tags: - pg_set_passwords when: not pginit.stat.exists - pg_init src: postgresql.conf.j2 src: pg_hba.conf.j2",0,Fix PostgreSQL Playbook
"name: ""{{ item }}"" with_items: ""{{ homeassistant_packages }}""",1,Addressed looping package installation deprecation.
"dest: ""{{alertmanager_home}}/alertmanager.yml"" owner: ""{{alertmanager_username}}"" group: ""{{alertmanager_username}}"" path: ""{{alertmanager_home}}/alertmanager_templates"" owner: ""{{alertmanager_username}}"" group: ""{{alertmanager_username}}"" template: src: ""templates/alertmanager_templates/{{item}}.yml"" dest: ""{{alertmanager_home}}/alertmanager_templates/{{item}}"" owner: ""{{alertmanager_username}}"" group: ""{{alertmanager_username}}"" with_items: ""{{alertmanager_templates}}""",1,fixes in ansible syntax. using more default values and making environment deployment easier.
become: true,1,Updated to create root path and fix ansible-lint errors (untested)
"ap-southeast-2: ""ami-2ab95148""",0,udpated ap-southeast-2 to amzn-ami-2017.09.b-amazon-ecs-optimized
stage: test,0,refactor: streamline stages
"become_method: sudo # webui_repo: ""https://github/jtschichold/minemeld-webui.git""",1,fixed a typo and updated to remove items deprecated as of ansible 2.4.1.0
pb_version: 0.6 - pan-os-python when: (sw_version == desired_version) and (force_update_content != 'yes') - name: perform final commit include_tasks: tasks/perform_commit.yml,0,fixes for #1 and #3
"name: ""{{ item.name | default(item) }}"" url: ""{{ item.url | default(omit) }}""",0,Use default filter to remove task duplication
- name: fail on change,1,fix some ansible-lint errors
become: yes become: yes become: yes become: yes become: yes become: yes register: user_task # - user: name={{ansible_user}} groups=input # become: yes # - name: reset ssh connection to allow user changes to affect current login user - bugged in 2.4.2 # meta: reset_connection,0,Bug in Ansible 2.4.2 that doesn't allow resetting of SSH connection.
become: true - tomcat-base,0,Merge branch '13-broken-playbook-to-copy-and-paste-error' into 'main'
ansible.builtin.reboot: ansible.builtin.set_fact: ansible.builtin.wait_for:,0,Refactor: Modules and linting suggestions
mode: 0755 command: /usr/bin/code --install-extension rust-lang.rust-analyzer,1,refactor: lint
"msg: ""hello, {{ greeting | default('ansible')}}!""",0,Fixed typo
"lineinfile: regexp=""requiretty"" dest=/etc/sudoers state=absent lineinfile: regexp=""requiretty"" dest=/etc/sudoers/os_defaults state=absent",1,fixing tty typo
"extra-vars: ""@./../../tests/tower/tower.yml""",1,fix all local molecule
"# you can limit this deployment blueprint to environments that match this type, e.g.:",1,update documentation
# https://github.com/sadsfae/ansible-nagios copy: src=idrac_2.2rc4 dest=/usr/lib64/nagios/plugins/idrac_2.2rc4 copy: src=idrac-smiv2.mib dest={{snmp_mib_path}}/,1,Fix perms on iDRAC check + Dell MiB.
# it is unused by default but see ensemble-template.yaml for usage.,1,update documentation
become: yes - tomcat-base,1,Merge branch '13-broken-playbook-to-copy-and-paste-error' into 'main'
"name: ['unzip', 'tar', 'wget']",1,Fix bugs
"- pubrt_out.route_table.id - prirt_out.route_table.id pubrtid: ""{{pubrt_out.route_table.id}}"" prirtid: ""{{prirt_out.route_table.id}}"" content: ""vpcoutid: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3did: {{pubsub3_out.subnet.id}}\nprisub1id: {{prisub1_out.subnet.id}}\nprisub2id: {{prisub2_out.subnet.id}}\nprisub3id: {{prisub3_out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\npubrtid: {{pubrt_out.route_table.id}}\nnatgwid: {{natgw_out.nat_gateway_id}}\nprirtid: {{prirt_out.route_table.id}}""",0,new code is added to playbook13
"# - role: website # container_name: ""{{ pawc_container_name }}"" # ssh_port: ""{{ pawc_ssh_port }}"" # url: ""{{ pawc_url }}"" # proxy_config: ""{{ role_path }}/../../files/ams1.paddatrapper.com/pawc-proxy.conf.j2"" # additional_ports: # - { protocol: tcp, port: 8000, description: pawc django }",0,disable pawc.pl until rate limit expires
file: src=/home/{{user_name}}/.ssh/id_rsa.pub dest=/home/{{user_name}}/.ssh/authorized_key state=link,1,Fxing ssh key and authorized_keys
"package bookworm: stage: package needs: [""release bookworm amd64"", ""release bookworm arm64""] variables: ci_manifest_file: manifest.yml extends: .kaniko_package",0,Fix ci order
dependencies: - role: monitoring-tools - role: firewall,1,Remove role's dependencies to avoid reexecuting these roles all the time
- name: reset owner of ssh config - name: reset owner of ssh config - name: reset owner of ssh config,1,Naming fix
connection: local gather_subset: - env hosts: localhost,0,"Updated to remove bloat in vars.yml, and hanlde loops better"
"dotfiles_castle: ""{{ repo_url | urlsplit('path') | basename | splitext | first }}""",1,Fix bug: repo_url variable is visible across tasks
"name: ""{{ common_apt_packages }}"" name: ""{{ packages.apt.install }}"" name: ""{{ packages.apt.remove }}""",0,Addressed looping package installation deprecation.
- name: copy config file to home/.kube dir - mkdir -p ~{{ansible_remote_user }}/.kube - cp /etc/kubernetes/admin.conf ~{{ansible_remote_user }}/.kube/config - chown -r {{ ansible_remote_user }}:{{ ansible_remote_user }} ~{{ansible_remote_user }}/.kube - chmod 0400 ~{{ansible_remote_user }}/.kube/config,0,Updated destination file based on kubeadm documentation. No longer need line in bashrc
"- name: ""prepare docker""",1,fix typo
- include: play_install_ansible.yml - include: play_install_java.yml,1,Updated local.yml to install software and modifying permissions of private file
- name: debug apt update debug: var=debug.stdout_lines debug: var=debug2.stdout_lines,1,fix modules
file: dest=/home/deployer/default state=directory owner=deployer group=www-data mode=2775,0,Fix permissions
"- name: install apt-utils name: ""apt-utils""",1,Fix bootstrap dependencies to work with ubuntu 18.04
"register: result with_items: ""{{ grep_result.stdout_lines }}"" when: ansible_os_family == ""redhat"" and ansible_distribution_major_version == ""6""",1,Fix for a deprecation warning.
mysql_root_password: test mysql_root_user: root password: test1 #need to store in vault password: test3 #need to store in vault pass: verystrong,1,"add integration with hcl vault, move passwords to vault, remove unnecessary dirs, fix some style typos"
"when: not stat_cert_pub.stat.exists when: not stat_cert_priv.stat.exists when: ""'mailserver' in group_names""",1,postfix: check if a real SSL key is available (and use it if so) even for non-mailservers
"sonarr_api_key: '{{ lookup(""ansible.builtin.password"", ""/tmp/passwordfile chars=hexdigits length=32 seed=ansible_hostname"") }}'",1,fix: change path parameter for password generation
"molecule_test_debian_12: scenario: ""cicd-debian-12"" molecule_test_ubuntu_22: <<: *molecule_test variables: scenario: ""cicd-ubuntu-22"" allow_failure: true rules: - if: '$ci_commit_message=~/^[^merge]/ && $ci_commit_branch == ""develop""' molecule_test_debian_11: <<: *molecule_test variables: scenario: ""cicd-debian-11"" allow_failure: true rules: - if: '$ci_commit_message=~/^[^merge]/ && $ci_commit_branch == ""develop""' - ""molecule_test_debian_12""",0,force CI
- name: install postgresql module dependency on rhel,0,postgresql: Fix name of RHEL-only task
"password: '!' key: ""{{ ansible_pub_key }}""",0,Fixed some errors
"logwatch_configuration_cache_path: ""/var/cache/logwatch"" - { key: ""output ="", value: ""mail"" } - { key: ""mailto ="", value: ""monitoring@sublimigeek.fr"" } - { key: ""mailfrom ="", value: ""logwatch@sublimigeek.fr"" } - { key: ""detail ="", value: ""high"" } - { key: ""range ="", value: ""yesterday"" } - { key: ""tmpdir ="", value: ""{{ logwatch_configuration_cache_path }}"" } compose_version: ""1.25.5""",0,Merge branch 'fix/logrotate-deployment-and-minor-improvements' into 'master'
"- name: ""verify"" - name: ""get haproxy service current state"" register: haproxy_service_status failed_when: not haproxy_service_status.status.activestate == 'active' ansible.builtin.systemd: name: ""haproxy"" - name: ""check haproxy folders and conf"" block: - name: ""check haproxy folders"" loop: - ""{{ inv_install_haproxy_path }}"" - ""{{ inv_install_haproxy_confs_path }}"" - ""{{ inv_install_haproxy_error_path }}"" - ""{{ inv_install_haproxy_ssl_path }}"" loop_control: loop_var: folder_path register: folder_check failed_when: not folder_check.stat.exists ansible.builtin.stat: path: ""{{ folder_path }}"" - name: ""check haproxy errors files http"" loop: ""{{ inv_install_haproxy_error_files }}"" loop_control: loop_var: file_path register: file_check failed_when: not file_check.stat.exists ansible.builtin.stat: path: ""{{ inv_install_haproxy_error_path }}/{{ file_path }}.http"" - name: ""check stats url protection"" when: inv_install_haproxy_listen_stats - name: ""check haproxy connectivity"" ansible.builtin.wait_for: host: ""{{ inventory_hostname }}"" port: ""{{ inv_install_haproxy_listen_stats_port }}"" timeout: 120 - name: ""check an unprotected stats http url"" when: not (inv_install_haproxy_stats_login is defined and inv_install_haproxy_stats_password is defined) and not inv_install_haproxy_listen_stats_https register: result failed_when: result.status != 200 ansible.builtin.uri: url: ""http://{{ inventory_hostname }}:{{ inv_install_haproxy_listen_stats_port }}/{{ inv_install_haproxy_listen_stats_uri }}"" method: ""get"" - name: ""check an unprotected stats https url"" when: not (inv_install_haproxy_stats_login is defined and inv_install_haproxy_stats_password is defined) and not inv_install_haproxy_listen_stats_https register: result failed_when: result.status != 200 ansible.builtin.uri: url: ""https://{{ inventory_hostname }}:{{ inv_install_haproxy_listen_stats_port }}/{{ inv_install_haproxy_listen_stats_uri }}"" method: ""get"" - name: ""check a protected stats http url"" when: inv_install_haproxy_stats_login is defined and inv_install_haproxy_stats_password is defined and not inv_install_haproxy_listen_stats_https - name: ""check http basic auth-protected url availability"" register: result failed_when: result.status != 401 ansible.builtin.uri: url: ""http://{{ inventory_hostname }}:{{ inv_install_haproxy_listen_stats_port }}/{{ inv_install_haproxy_listen_stats_uri }}"" method: ""get"" force_basic_auth: true user: ""notmyuser"" password: ""notmypassword"" - name: ""check http basic auth-protected url"" url: ""http://{{ inventory_hostname }}:{{ inv_install_haproxy_listen_stats_port }}/{{ inv_install_haproxy_listen_stats_uri }}"" method: ""get"" force_basic_auth: true user: ""{{ inv_install_haproxy_stats_login }}"" password: ""{{ inv_install_haproxy_stats_password }}"" - name: ""check a protected stats https url"" when: inv_install_haproxy_stats_login is defined and inv_install_haproxy_stats_password is defined and inv_install_haproxy_listen_stats_https block: - name: ""check http basic auth-protected url availability"" register: result failed_when: result.status != 401 ansible.builtin.uri: url: ""https://{{ inventory_hostname }}:{{ inv_install_haproxy_listen_stats_port }}/{{ inv_install_haproxy_listen_stats_uri }}"" force_basic_auth: true user: ""notmyuser"" password: ""notmypassword"" - name: ""check http basic auth-protected url"" url: ""https://{{ inventory_hostname }}:{{ inv_install_haproxy_listen_stats_port }}/{{ inv_install_haproxy_listen_stats_uri }}"" force_basic_auth: true user: ""{{ inv_install_haproxy_stats_login }}"" password: ""{{ inv_install_haproxy_stats_password }}"" # don't forget to keep this file updated # molecule/<scenario>/verify.yml - name: ""verify"" hosts: ""all:&haproxy"" gather_facts: false tasks: - name: ""get haproxy service current state"" register: haproxy_service_status failed_when: not haproxy_service_status.status.activestate == 'active' ansible.builtin.systemd: name: ""haproxy"" - name: ""check haproxy confs files"" loop: ""{{ inv_install_haproxy_http_configurations }}"" loop_control: loop_var: configuration register: file_check failed_when: not file_check.stat.exists ansible.builtin.stat: path: ""{{ inv_install_haproxy_confs_path }}/{{ configuration.name }}.cfg"" # don't forget to keep this file updated # molecule/<scenario>/verify.yml - name: ""verify"" hosts: ""all:&haproxy"" gather_facts: false tasks: - name: ""get haproxy service current state"" register: haproxy_service_status failed_when: not haproxy_service_status.status.activestate == 'active' ansible.builtin.systemd: name: ""haproxy"" - name: ""check haproxy confs files"" loop: ""{{ inv_install_haproxy_bdd_configurations }}"" loop_control: loop_var: configuration register: file_check failed_when: not file_check.stat.exists ansible.builtin.stat: path: ""{{ inv_install_haproxy_confs_path }}/{{ configuration.name }}.cfg"" - name: ""verify"" - name: ""get apache2 service current state"" register: install_apache_service_status failed_when: not install_apache_service_status.status.activestate == 'active' ansible.builtin.systemd: name: ""apache2"" - name: ""check apache2 folders and conf"" loop: - ""/etc/apache2/apache2.conf"" - ""/etc/apache2/ports.conf"" loop_control: loop_var: folder_path register: folder_check failed_when: not folder_check.stat.exists ansible.builtin.stat: path: ""{{ folder_path }}"" - name: ""check apache2 http connectivity"" ansible.builtin.wait_for: host: ""{{ inventory_hostname }}"" port: ""{{ inv_install_apache_http_listen_port }}"" timeout: 120 - name: ""check apache2 https connectivity"" ansible.builtin.wait_for: host: ""{{ inventory_hostname }}"" port: ""{{ inv_install_apache_https_listen_port }}"" timeout: 120 - name: ""get apache2 service current state"" register: apache_service_status failed_when: not apache_service_status.status.activestate == 'active' ansible.builtin.systemd: name: ""apache2"" - name: ""check apache2 default configuration"" - name: ""check apache2 http and conf"" loop: ""{{ inv_add_apache_confs_configurations }}"" loop_control: loop_var: vhost register: folder_check failed_when: not folder_check.stat.exists ansible.builtin.stat: path: ""{{ inv_add_apache_confs_confs_path }}/{{ vhost.server.name }}-http.conf"" - name: ""check apache2 https and conf"" loop: ""{{ inv_add_apache_confs_configurations }}"" loop_control: loop_var: vhost register: folder_check when: vhost.ssl failed_when: not folder_check.stat.exists ansible.builtin.stat: path: ""{{ inv_add_apache_confs_confs_path }}/{{ vhost.server.name }}-https.conf"" - name: ""check https conf: certs"" loop: ""{{ inv_add_apache_confs_configurations }}"" loop_control: loop_var: vhost register: folder_check when: vhost.ssl.enabled | default(false) failed_when: not folder_check.stat.exists ansible.builtin.stat: path: ""{{ vhost.ssl.crt }}"" - name: ""check https conf: keys"" loop: ""{{ inv_add_apache_confs_configurations }}"" loop_control: loop_var: vhost register: folder_check when: vhost.ssl.enabled | default(false) failed_when: not folder_check.stat.exists ansible.builtin.stat: path: ""{{ vhost.ssl.key }}"" - name: ""check apache2 webserver"" block: - name: ""check apache2 connectivity"" port: ""{{ inv_add_apache_confs_http_listen_port }}"" - name: ""check default vhost on http"" register: result failed_when: not (result.status != 200 or result.status == -1) ansible.builtin.uri: url: ""http://{{ inventory_hostname }}:{{ inv_add_apache_confs_http_listen_port }}/"" method: ""get"" - name: ""check default vhost on https"" register: result failed_when: not (result.status != 200 or result.status == -1) ansible.builtin.uri: url: ""https://{{ inventory_hostname }}:{{ inv_add_apache_confs_https_listen_port }}/"" method: ""get""",1,"refacto, iptables, fixes"
- ansible - zsh - apt-transport-https - zsh-syntax-highlighting - bat - bat - sudo - sudo - tar - zsh - btop - neovim - ansible-core - ansible-collection-community-general - ncdu - lsof,1,fixed mc db error and added support for lxc
satnogs_network_api_url: 'https://network.satnogs.org/api/',0,Change example API URL to point to production network (fixes #24)
# this is main tasks file for common role,0,Fix wrong comment main.yml
service: name=mysqld state=restarted service: name=iptables state=restarted,1,Fix ansible-lint reported errors and update syntax in lamp_simple.
- name: init metastore schema - name: add mysql user 'hiveuser',1,Fix PostgreSQL install. [ci skip]
when: not datadog_skip_install and datadog_apply_windows_614_fix when: not datadog_skip_install and datadog_apply_windows_614_fix,0,Enable turning off the Agent 6.14 fix for Windows (#399)
- name: homebrew/cask - name: koekeishiya/formulae - name: thoughtbot/formulae,1,Use default filter to remove task duplication
yum: name=haproxy state=present template: src=haproxy.cfg.j2 dest=/etc/haproxy/haproxy.cfg service: name=haproxy state=started enabled=yes,1,Fix ansible-lint reported errors and update syntax.
"- name: set selinux in permissive mode until issues are resolved ansible.posix.selinux: state: permissive policy: targeted - name: set mysql root password mysql_user: name: root password: ""{{ mariadb_root_password }}"" state: present login_unix_socket: ""{{ mariadb_unix_socket }}"" when: bootstrap_mariadb_primary | default(false) | bool",0,"forgot to set root password on new primary node. selinux is not working, no time to fix it now."
"- name: common - set hostname hosts: ""{{ create_vm__hosts | default([]) }}"" gather_facts: false tags: - skip_ansible_lint - always - setup tasks: - name: common - set inventory hostname as host variable ansible.builtin.add_host: name: hostname_holder vm_name: ""{{ inventory_hostname }}"" vm_ip_address: ""{{ vm_ip_address }}"" changed_when: false - name: common - print host variables ansible.builtin.debug: msg: ""{{ item.name }}: {{ item.value }}"" loop: - name: hostname value: ""{{ hostvars['hostname_holder'].vm_name }}"" - name: ip value: ""{{ hostvars['hostname_holder'].vm_ip_address }}"" # ----------------------------------------------------------------------------- zvm__name: ""{{ hostvars['hostname_holder'].vm_name }}"" zvm__ssh_host: ""{{ hostvars['hostname_holder'].vm_name }}"" vm_ip_address: ""{{ hostvars['hostname_holder'].vm_ip_address }}""",1,fix: remove hostname_holder
apt: file: copy:,1,refactor: lint
apt: pkg=nginx state=latest update_cache=false,1,Fix apt module package installation
port: 24800,0,fixed typo
- name: 'puppet run' hosts: puppet - name: 'run puppet on target boxes' community.general.puppet:,0,fix: Ansible playbook run
register: firewalld_tcp80_exists when: firewalld_in_use.rc == 0 and firewalld_is_active.rc == 0 and firewalld_tcp80_exists.rc != 0 register: iptables_tcp5666_exists failed_when: iptables_tcp5666_exists == 127 when: firewalld_in_use.rc != 0 and firewalld_is_active.rc != 0 and iptables_tcp5666_exists.stdout|int == 0,1,Many fixes here:
- name: install dash to dock gnome extension,0,Fixed typo
docker_tag: enmanuelmoreira/docker-ansible-almalinux8:latest,1,Fix image name
--- - import_playbook: elasticsearch.yml - import_playbook: graylog.yml,0,Refactor playbooks
file: path=/srv/wordpress/ owner=wordpress group=wordpress state=directory recurse=yess setype=httpd_sys_content_t,1,Fixed typo.
"hosts: ""all"" loop: ""{{ groups['all'] }}"" loop: ""{{ groups['all'] }}"" # if you have any prepararion task - name: ""prepare apacheds"" hosts: ""all:&apacheds"" gather_facts: true tasks: - name: ""include labocbz.prepare_host"" tags: - ""labocbz.prepare_host"" vars: prepare_host_system_users: ""{{ inv_prepare_host_apacheds_system_users }}"" ansible.builtin.include_role: name: ""labocbz.prepare_host""",1,"refacto done, force ci"
- name: open up ports in ufw - name: configure users - name: configure microk8s - name: setup kubeconfig,1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
version: 0.6.0 version: 2.0.2,1,Update ansible-docker-matrix to fix (finally) the tmpfs formatting bug
mode=600,1,fix ansible lint ANSIBLE0009
- name: create instance of lab - name: create instance of devtest lab policy - name: create instance of devtest lab schedule - name: create instance of devtest labs virtual network description: my devtest lab - name: create instance of devtest labs artifacts source - name: create instance of dtl virtual machine - name: list all artifact sources - name: list arm template facts - name: get arm template facts - name: create instance of devtest lab environment - name: create instance of devtest lab image - name: delete instance of lab,1,dlt playbook fixes (#71)
# handlers file for training,1,fixes and add demo role
"name: ""{{ item }}"" loop: - dev - guest shell: /usr/bin/openssl rand -base64 32 | passwd --stdin ""{{ item }}"" loop: - dev - guest",0,fix local user playbook loop
"- import_tasks: tasks/bootstrap/default/pgbouncer_write_pgpass.yml pgbouncer['admin_users'] = %w(pgbouncer gitlab-consul) 'gitlab-consul': { password: '{{ gitlab_consul_user_password }}' }, - name: configure primary consul roles ['consul_role'] # after bootstrapping change roles line above to: # roles ['consul_role', 'patroni_role'] gitlab_rails['auto_migrate'] = false - name: configure primary gitlab instance - import_tasks: tasks/bootstrap/default/fast_ssh_lookups.yml patroni['enable'] = true gitlab_rails['db_password'] = '{{ sql_user_password_plain }}' #gitlab_rails['db_host'] = '{{ groups.primary_pgbouncer_internal[0] }}' #gitlab_rails['db_port'] = 6432 - name: configure application settings command: | gitlab-rails runner 'applicationsetting.last.update(authorized_keys_enabled: false, signup_enabled: false)' - name: configure primary patroni hosts: primary_patronis become: yes become_method: sudo gather_facts: false vars_files: - vars/settings.yml tasks: - lineinfile: path: /etc/gitlab/gitlab.rb line: ""roles ['consul_role']"" state: absent - lineinfile: path: /etc/gitlab/gitlab.rb line: ""roles ['consul_role', 'patroni_role']"" state: present - import_tasks: tasks/bootstrap/default/reconfigure.yml",0,Fixes to bootstrap patroni correctly on the primary and secondary
"command: ""sudo scripts/gate-check-commit.sh {{ scenario }} {{ action }}"" environment: '{{ zuul | zuul_legacy_vars }}'",1,"Merge ""Update aio job to use become and fix environment"""
"install_nexus_repository_container_name: ""{{ inv_install_nexus_repository_container_name }}"" install_nexus_repository_data_path: ""{{ inv_install_nexus_repository_data_path }}"" install_nexus_repository_heap: ""{{ inv_install_nexus_repository_heap }}"" install_nexus_repository_web_address: ""{{ inv_install_nexus_repository_web_address }}"" install_nexus_repository_web_port: ""{{ inv_install_nexus_repository_web_port }}"" install_nexus_repository_web_port_min: ""{{ inv_install_nexus_repository_web_port_min }}"" install_nexus_repository_web_port_max: ""{{ inv_install_nexus_repository_web_port_max }}""",0,fix playbooks
- name: copy frr daemons file connection: local become: true copy: src: daemons dest: /etc/frr/daemons backup: yes force: yes notify: restart frr - name: l4 hash policy sysctl: name: net.ipv4.fib_multipath_hash_policy value: 1 state: present,1,Error /etc/network does not exist
- wget - keepassxc,0,Fix playbooks for kubuntu focal with new additions
dotfiles_repo: git@github.com:geerlingguy/dotfiles.git,1,Use https dotfiles git repo URL to not require auth.
"- ""cp ./molecule/$scenario/templates/* ./molecule/$scenario/roles/labocbz.add_apache_confs/templates/"" - ""cp ./molecule/$scenario/templates/* ./roles/labocbz.add_apache_confs/templates/""",0,fix j2 3
- name: set up apache virtualhost,0,Fixed typo
- php-gmp shell: openssl dhparam -rand /dev/urandom -out /etc/nginx/dhparams.pem 4096 > /dev/null,0,Typo in OpenSSL DH parameter generation. Updated PHP packet selection for webserver paybooks.
- name: create docker ipvlan voip network,1,5046 mds install fixes
"{% if(k8s_containerd_variant | lower == ""github"") %} runc download url {{ k8s_runc_download_url }}",1,fix: typo
# - locale-config # - backgrounds # - basic # - python3 # - terminator # - xorg # - i3 # - screen # - firefox # - wireguard # - yaprompt # - unlock # - network # - code # - vim # - volta # - rust # - docker # - zsh # - ssh # - signal # - terraform # - terragrunt # - kube # - helm # - vault # - tor # - libreoffice # - discord # - syncthings # - verracrypt # - mumble # - yubico,1,fix: add all roles
# update the hosts file witha final entry that will override the entry for the current host with 127.0.0.1,0,Addressed looping package installation deprecation.
65616666393764653535653239323064333834656532343834303265346332353864343638616130 3731383639336162666565613164646566643535396130350a663830336435663365623064313434 37356665303031343731373562326234636630313831623864326538646337333737353162636439 3862316633383839610a353431666566653430626465333431313362613536636235653034353566 64666463626564623436326662343366393936623537303333613061663439353133653464316334 34303438636230636339336337623131346261656231326438653666346433343036333235356562 63373663363162363732643262643032323731613738623733383363626535623332323862386431 38613763376335353662616237643534383039303363396662333031346331373235623863376330 61323062393732373161303663383338353630303066363132376262633033616639363037636635 63303263383963346234303230313832333030393335636430643535346564356666363834343566 30346335326537356534356465613630373535343436626438323035656366343765333661353039 61376531643166373361383261653330613734366431363635303439306262616434613239366163 35366635353265393733313235636138656134653561346635356439396235353237643038363234 65396463613463333866326462383438373332666465646561613464613562353537303264303965 35633336396635323665343033376539333430346166303438666431373430646262353766343466 63316238373436626635646337316237393666333666303639383338316166356231313266623865 31323531623263376439366432393735343364313939323435656432316163393334383861623462 6336343239346464653836336265373839393934633438323931,0,Make it open source-able
ansible-galaxy install -r requirements.yml,0,Fix CI for new collections-based world.
- zsh-completions # zsh completions - grml-zsh-config # zsh config used in archiso,1,fix errors; finish zsh customization
ansible_user: cumulus ansible_pass: cumuluslinux! ansible_become_pass: cumuluslinux! hostname: spine01 management_ip: ip: 10.0.4.102 mask: 255.255.255.0 cidr: /24 loopback1: ip: 10.0.0.102 mask: 255.255.255.255 cidr: /32 ports: swp1: {} swp2: {} swp3: {} swp4: {} swp5: {} swp6: {} routing: bgp: underlay: asn: 65100 peers: - peerlink.4094 - swp1 - swp2 - swp49 - swp50,0,Error /etc/network does not exist
"when: ""ocp_ver != 3.11"" when: ""ocp_ver != 3.11"" when: ""ocp_ver == 3.11""",1,Fixing ocp_ver variable validation
"rpmfusion_distribution_major_version: ""{{ _rpmfusion_distribution_major_version[ansible_distribution_major_version] | default(ansible_distribution_major_version) }}"" rpmfusion_free_repository: ""https://download1.rpmfusion.org/free/{{ rpmfusion_distribution }}/rpmfusion-free-release-{{ rpmfusion_distribution_major_version }}.noarch.rpm"" rpmfusion_nonfree_repository: ""https://download1.rpmfusion.org/nonfree/{{ rpmfusion_distribution }}/rpmfusion-nonfree-release-{{ rpmfusion_distribution_major_version }}.noarch.rpm"" rpmfusion_free_gpgp_key: ""https://rpmfusion.org/keys?action=attachfile&do=get&target=rpm-gpg-key-rpmfusion-free-{{ rpmfusion_distribution }}-{{ rpmfusion_gpgkey }}"" rpmfusion_nonfree_gpgp_key: ""https://rpmfusion.org/keys?action=attachfile&do=get&target=rpm-gpg-key-rpmfusion-nonfree-{{ rpmfusion_distribution }}-{{ rpmfusion_gpgkey }}""",0,Update to fix everything with ansible-lint
- hosts: all - web - web - web,1,"Add README, update test setup and fix the Apache handlers (for realsies)."
"name: ""{{item.security_group_name}}"" - name: ""{{item.rule_name}}"" protocol: ""{{item.protocol}}"" source_address_prefix: ""{{item.source_address_prefix}}"" description: ""{{item.description}}"" priority: ""{{item.priority}}"" source_port_range: ""{{item.source_port}}"" destination_port_range: ""{{item.destination_port}}"" access: allow with_items: - { ""security_group_name"" : ""{{pl_security_group_name}}"", ""description"" : ""inbound ssh access"", ""rule_name"" : ""allow_ssh"", ""source_address_prefix"" : ""0.0.0.0/0"", ""protocol"" : ""tcp"", ""source_port"" : ""0-65535"", ""destination_port"" : ""22"", ""priority"" : ""100"" }",0,Updating security groups
name: docker image: archlinux pre_build_image: false dockerfile: archlinux.dockerfile,1,fix molecule to work with Vagrant instead of Docker
"name: ""{{ sshuttle_packages }}""",0,Addressed looping package installation deprecation.
- restart mariadb - restart firewalld,1,fix some ansible-lint errors
"sonarr_api_key: '{{ lookup(""ansible.builtin.password"", ""/dev/null chars=hexdigits length=32 seed=ansible_hostname"") }}'",0,fix: change path parameter for password generation
community.aws.ec2_instance_info:,1,fix password module
# generated by https://gitlab.com/eyeo/devops/ansible-playbooks/provision-icinga-servers.yml,0,Get rid of obsolete variable icinga_server_name & Fix typo
- training,1,fixes and add demo role
- name: openvpn client - installing package easy-rsa when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false when: rc_ovpnc_client_conf.stat.exists == false,1,Final source re-arrangements before second code review
sudo: yes,1,Fixing permissions errors with Dashboard & Website..
- name: make sure snapd is installed using apt - name: install microk8s using snap - name: wait for microk8s to be ready - name: create kubectl alias - name: create helm3 alias - name: install helm diff plugin if not already installed - name: update the helm plugins,1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
php_opcache_revalidate_freq: 2 # 30 en prod,0,Role php-fpm: fix linting errors
"shell: ""ps -few | grep server:app | awk '{print $2}'""",0,Fix processing killing
"--- - name: create local games directory ansible.builtin.file: path: ""{{ folder_path }}"" state: directory mode: 0755 mode: 0770 mode: 0644 become: true",0,Updated to create root path and fix ansible-lint errors (untested)
dest: ~/.env,1,fix: path
"- name: ""converge"" hosts: ""cicd-ubuntu-22"" tasks: - name: ""include labocbz.prepare_host"" tags: - ""labocbz.prepare_host"" vars: prepare_host__users: ""{{ inv_prepare_host__users }}"" prepare_host__packages_removed: ""{{ inv_prepare_host__packages_removed }}"" prepare_host__packages_installed: ""{{ inv_prepare_host__packages_installed }}"" prepare_host__system_users: ""{{ inv_prepare_host__system_users }}"" ansible.builtin.include_role: name: ""labocbz.prepare_host""",1,fix CI
- name: restart nginx with updated vhost configuration,0,* Fixed a bug that caused Nginx to be restarted twice in
"debug: msg=""successful license operation often results in an exception. this is expected behavior.""",0,typo fix
rule: reject rule: allow - name: whitelist ansible port ufw: rule: limit log: yes direction: in proto: tcp port: '{{ ansible_port }}' policy: deny,0,roles/ufw: fix-ups
- restart networkd - restart resolved,0,fix: do not run netplan if using only systemd
"tags: tags: tags: tags: tags: tags: tags: tags: tags: tags: tags: owner: ""{{ user.name }}"" group: ""{{ user.group }}"" tags: src: ""{{ ssh.user_key }}"" owner: ""{{ user.name }}"" group: ""{{ user.group }}"" tags: tags:",0,mothball attacks
"#- ""jinja_lint"" #jinja_lint: # stage: lint # image: $nexus_repos_docker_registry/$docker_image_jinja_lint # before_script: # # fix weird ansible bug: https://github.com/trailofbits/algo/issues/1637 # # this probably happens due to gitlab-runner mounting the git repo into the container # - ""chmod o-w ."" # script: # - ""[ -n \""$(find ./templates -name '*.j2')\"" ] && j2lint ./templates/*.j2 --ignore s3 s7"" # allow_failure: false # rules: # - if: '$ci_commit_message=~/^[^merge]/ && $ci_commit_branch == ""develop""'",0,fix CI 1
- name: openvpn client - installing packages {{ovpnc_inst_packages}} when: ovpnc_conf_gen == true and rc_ovpnc_client_conf.stat.exists == false #- debug: msg='{{rc_date.stdout_lines}}',1,Final source re-arrangements before second code review
"name: ""{{ item }}"" with_items: ['cifs-utils', 'samba']",1,"update ansible syntax, fix issues with ci role"
grep -le '\[global\]|fsid' /etc/ceph/*.conf,1,Merge pull request #1330 from ceph/fix-cluster-name-take-over
"remote_user: ""{{ server_user_name }}""",0,Added security role and configuration
"hostname: ""{{ item.natip }}"" - ""{{ gce_pgbouncer_primary.networkinterfaces[0].accessconfigs[0] }}"" hostname: ""{{ item.networkip }}"" - ""{{ gce_pgbouncer_primary.networkinterfaces[0] }}"" - ""{{ gce_pgbouncer_primary }}""",1,Refactor items and groups usage to condensate them into fewer lines
become: true,1,fix: fix permission-related issues with some roles
tags: - kaniko - kaniko tags: - kaniko - kaniko tags: - kaniko tags: - kaniko,0,fix: tagging runner
key_file: /home/dcadm1n/.ssh/deo-moodle,0,keyfile name fix
$ansible_vault;1.1;aes256 36306366333231323564333365613532353630653434343566636365386631666163313032353031 3732613339653661373731376633383130353134613334310a343661663830366638653666393537 39343530323066613933303930386539363162356664303863313034643462343333636130323763 3562326330386139320a393939323465643238316532343634623563636366343039666234356663 61363164383763333964326237336531346332353435396162393537323735313434323063643361 36623731373065313031316632346630316562396333646563323561663934363435326236646439 31346236323735643132333037663036663430626461376630303833393031616437373034616136 33326565626331343261383036653736646362653362623235383830613037623536303639353039 30636236623432613135356361353033383234636537323437333436663634393731316531653730 35656338303266393862633337356338353134343765366361396463653830323638396437386431 32333733303138373662383434656132333738643964623139353535613461616263626336376264 37626433323835636665333266633034633430393836373364363562666232363865663039343163 37396638653132356466346639353435653731316566613965653633386561353361353235346163 31393464636232636366336262303833356234666261366536653932383430636331343834386631 35363632356130623738303937613062313334303439336365663439373731373035356335346333 64643266366362386433303034656533343037313565376630656334643934313837313961316230 37373632366266383563646233393336383631303039356465616337656330353033316634623335 31356234316666356334373461613235323935326266333465633834316437636236643865323832 34373863396465353133306539303835653630646137393339343732386239316633363935616233 38333066616463393735,0,Also use an encrypted playbook now
when: ocserv_cert_auto when: not ocserv_cert_auto,1,lets encrypt with ocserv
"- name: ceate second virtual network resource_group: ""{{ resource_group }}"" virtual_network: ""{{ vnet_name1 }}""",1,fix typo in vnet_peering doc (#66)
"- name: restart knot resolver name: ""kresd@{{ '%d' | format(item) }}.service"" loop: ""{{ range(1, 1 + knot_instances | default(1)) | list }}""",0,fix: latest Raspbian and Ansible support
"url: ""https://download.docker.com/linux/ubuntu/gpg"" src: ""docker.list"" dest: ""/etc/apt/sources.list.d/docker.list"" url: ""https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64""",1,refactor: start lint
- role: prepare-system action: 05-reboot-machines,0,Change: A few linting errors
hosts: all tasks: - name: install tree become: true apt: state: present name: - tree,1,refactor: updated the task files to be alligned with standards
codex_container_image: 'ajslater/codex:{{ codex_container_tag }}',0,Merge branch 'fix-container-roles' into 'develop'
"user: centos hosts: meta-type_zabbix user: centos become: true - name: check borg_pass set_fact: borg_user_pass: ""{{ lookup('env', 'borg_pass')}}"" - assert: that: - borg_user_pass is defined and (borg_user_pass | length > 5) - backup_location_path is defined and (backup_location_path | length > 0) - name: create dir for ssh_keys file: state: dir mode: 700 path: ""~/ansible-playbooks-data/borg/ssh_keys"" register: ssh_keys_dir delegate_to: localhost - name: generate keypair community.crypto.openssh_keypair: path: ""{{ ssh_keys_dir.path }}/{{ ansible_hostname }}_deploy_key"" register: ssh_key_pair delegate_to: localhost - name: register private key contents set_fact: ssh_private_key: ""{{ lookup('file', ssh_key_pair.filename) }}""",1,Merge branch 'fixes' into 'master'
"args: creates: /var/www/nextcloud/config/config.php register: installer_ran - name: configure nextcloud block: - name: set trusted domain command: > php ""{{ occ_command }}"" config:system:set trusted_domains 1 --value={{ ansible_fqdn }} - name: configure pretty urls command: > php ""{{ occ_command }}"" config:system:set overwrite.cli.url --value=https://{{ ansible_fqdn }} - name: update htaccess for pretty urls command: > php ""{{ occ_command }}"" maintenance:update:htaccess - name: configure cache command: > php ""{{ occ_command }}"" config:system:set memcache.local --value=""\oc\memcache\apcu"" when: installer_ran is succeeded",0,Fix ansible-lint E301 errors
--- - name: copy application war file to host copy: src=jboss-helloworld.war dest=/tmp - name: deploy helloworld to jboss jboss: deploy_path=/usr/share/jboss-as/standalone/deployments/ src=/tmp/jboss-helloworld.war deployment=helloworld.war state=present - name: copy application war file to host copy: src=ticket-monster.war dest=/tmp - name: deploy ticket monster to jboss jboss: deploy_path=/usr/share/jboss-as/standalone/deployments/ src=/tmp/ticket-monster.war deployment=ticket-monster.war state=present,0,Fix ansible-lint reported issues in:
- rm -rf /usr/local/homebrew - rm -rf /usr/local/caskroom - rm -rf /usr/local/bin/brew,1,Issue #61: Use sudo when removing brew stuff.
kibana_full_version: 4.1.1,0,refactor: updating readme and default file
- locale_config,0,refactor: lint
"login_password: ""{{mysql_root_password}}"" login_user: ""{{mysql_root_user}}"" # no_log: true",1,"add integration with hcl vault, move passwords to vault, remove unnecessary dirs, fix some style typos"
"traefik.http.services.grafana.loadbalancer.server.port: ""3000""",0,"Grafana was not linked in traefik anymore, this fixes https://github.com/davestephens/ansible-nas/issues/437"
repo: 'deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} main',1,Trying fixing repository issue
admin_key: b884c3934a224a78489941f705c8793e,1,Deleted auth for allow create users
"- name: add cert-manager namespace - name: download the clusterissuer yml - name: install cert-manager - name: install the clusterissuer for production - name: install the clusterissuer for staging - name: install the cert-manager secret kubernetes.core.k8s: state: present template: cert-manager-cloudflare-secret.yml.j2 vars: apitoken: ""{{ lookup('env', 'cert_manager_api_token') }}"" when: inventory_hostname == master_node",1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
template: template:,1,Refactor: Modules and linting suggestions
"tags: # skip ansible0012 commands should not change things if nothing needs doing # need to understand if an entry exists - skip_ansible_lint uri: url: http://localhost:9200/_template/filebeat?pretty method: post body: ""{{ lookup('file', 'filebeat-index-template.json') }}"" body_format: json tags: # skip ansible0012 commands should not change things if nothing needs doing # check if firewall is enabled - skip_ansible_lint tags: # skip ansible0012 commands should not change things if nothing needs doing # check if firewall is active - skip_ansible_lint tags: # skip ansible0012 commands should not change things if nothing needs doing # need to validate if port already configured - skip_ansible_lint tags: # skip ansible0012 commands should not change things if nothing needs doing # need to validate if port already configured - skip_ansible_lint tags: # skip ansible0013 use shell only when shell functionality is required # no systemctl module available in current stable release (ansible 2.1) - skip_ansible_lint",0,"Multiple fixes, cleanup, ES listen port options"
"- set_fact: use_system_d={{(ansible_distribution == 'debian' and ansible_distribution_version | version_compare('8', '>=')) or (ansible_distribution == 'centos' and ansible_distribution_version | version_compare('7', '>=')) or (ansible_distribution == 'ubuntu' and ansible_distribution_version | version_compare('15', '>=')) }}",1,Merge pull request #250 from geoplex/fix-systemd-restart-rhel
- https://raw.github.com/georchestra/georchestra/master/postgresql/02-mapfishapp.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/04-console.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/06-ogc-server-statistics.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/07-atlas.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/08-geofence.sql - https://raw.github.com/georchestra/georchestra/master/postgresql/09-extractor-app.sql,1,update sql scripts urls after georchestra/georchestra@4af06f6b5b (fixes #61)
- multi-arch - multi-arch,1,fix: tagging kaniko runner
# gitlab_rails['db_host'] = '{{ groups.secondary_pgbouncer_internal[0] }}' - import_tasks: tasks/bootstrap/default/reconfigure.yml,0,Merge branch 'da-fix-pg-bouncer-host-secondary-node' into 'master'
community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw: community.general.system.ufw:,1,Merge branch '116-deprecation-warning-wrong-use-of-internal-ref-for-ufw-module' into 'master'
- name: install python3-pip name: python3-pip,0,Merge pull request #46 from C-J1/fix-issue-45
- name: mds specicic actions,1,"fix ingress variant of VoIP deployment, add doc for MDS installation"
"# todo: end task: disable - name: enable passwordless sudo for ""{{ username }}"" lineinfile: dest: /etc/sudoers regexp: ""^%wheel"" line: ""{{ username }} all=(all) nopasswd: all"" validate: ""/usr/sbin/visudo -cf %s"" user: severi path: ""{{ lookup('env', 'home') + '/.ssh/authorized_keys' }}""",1,fix sudoers bug
- name: install pip name: python-pip,1,Merge pull request #46 from C-J1/fix-issue-45
- name: check if gitlab-runner is installed command: gitlab-runner -v register: gitlab_runner ignore_errors: true - debug: var=gitlab_runner when: gitlab_runner.failed | bool deb: /tmp/gitlab-runner_{{ arch.stdout }}.deb when: gitlab_runner.failed | bool,0,-> Solve issue 💡:
"#- name: ""download windows 10 from microsoft"" # get_url: # url: ""{{ windows_10_iso }}"" # dest: /usr/share/virtualbox",0,Uncomment code from ansible roles
smtp_smarthost: 'localhost:25' smtp_from: {{alertmanager_smtp_from}} receiver: 'team-sydit-pushover' repeat_interval: 3h severity: 'critical' severity: 'warning' - name: 'team-sydit-mail' - to: {{alertmanager_receiver_email}} - name: team-sydit-pushover - user_key: {{pushover_userkey}} token: {{pushover_token}} - {{template}},1,fixes in ansible syntax. using more default values and making environment deployment easier.
"- ""{{ work_dir }}/config:/config""",0,Fix ansible syntax
"- ""{{pubsub2_out.subnet.id}}""",1,new code is added to playbook13
"curl -h ""host: gitlab.90cos.cdl.af.mil"" ""{{ groups['gitlab_backend'][0] }}""",1,fix: fix stream and testing
"- { regexp: '^#avoid_daily_autocommits=1', line: 'avoid_daily_autocommits=1' }",1,Minor bugfixes. Actually nothing important.
"enable_host_only_vpn: false # if true only allows inter vpn communication, no outside traffic allow_client_to_client: true # set to false to disallow clients communicating on the server",1,Fix: tunneling not working correct
"name: ""{{ glow_python_packages }}""",0,Addressed looping package installation deprecation.
"- docker buildx build --build-arg version=${version} --platform ${platform} --tag alpine-ansible --cache-to type=local,dest=.cache/${platform} --load . --cache-from type=local,src=.cache/linux/amd64 \ --cache-from type=local,src=.cache/linux/arm64 \ --cache-from type=local,src=.cache/linux/arm/v7 \ --cache-from type=local,src=.cache/linux/arm/v6 \",1,Fix cache path
"get_url: ( packages | rejectattr('state', 'defined') ) | ternary( [res_download_dir.path, item.deb | basename] | path_join, item.deb ) | default(omit)",1,ansible-lint: Fix some errors
"- name: install monsterui yum: name: monster-ui* state: latest - name: install ssl certificate copy: content: ""{{ ssl_certificate }}"" dest: /etc/pki/tls/certs/kazoo.crt owner: root group: root mode: 0644 - name: install ssl private key copy: content: ""{{ ssl_private_key }}"" dest: /etc/pki/tls/private/kazoo.pem owner: root group: root mode: 0600",1,More detailed error logging
tasks: - name: add docker.io repository apt: name=docker.io state=present - name: fix docker path raw: ln -sf /usr/bin/docker.io /usr/local/bin/docker raw: sed -i '$acomplete -f _docker docker' /etc/bash_completion.d/docker.io - name: run docker on boot raw: update-rc.d docker.io defaults,1,fix docker role
database:,1,fixed mc db error and added support for lxc
# note: cabextract requires elevation # note: cabextract requires elevation,0,linting fixes
# - name: configure smartmontools,1,"Add LazyDocker, fixes #122"
"pre_tasks: - name: create dir for ssh_keys file: state: dir mode: 700 path: ""~/ansible_borg/ssh_keys"" delegate_to: localhost - name: generate keypair community.crypto.openssh_keypair: path: ""~/ansible_borg/ssh_keys/{{ ansible_hostname }}_deploy_key"" register: ssh_key_pair delegate_to: localhost - name: register private key contents set_fact: ssh_private_key: ""{{ lookup('file', ssh_key_pair.filename) }}"" delegate_to: localhost borg_repo_ssh_priv_key: ""{{ ssh_private_key }}"" borg_repo_ssh_pub_key: ""{{ ssh_key_pair.public_key }}""",0,Merge branch 'borg-security-fixes' into 'master'
"- name: include snmp-targets include_vars: file: vars/snmp-targets.yml when: include_snmp_targets dest: ""{{snmp_exporter_home}}/snmp.yml"" owner: ""{{snmp_exporter_username}}"" group: ""{{snmp_exporter_username}}""",1,fixes in ansible syntax. using more default values and making environment deployment easier.
"name: ""~{{service}}/{{item}}"" owner: ""{{service}}"" group: ""{{service}}""",0,Fix creation of directories for datesfaciles when directories exist
name: {{ user.name }},1,mothball attacks
"bazarr_container_image: '{{ bazarr_container_repo }}{{ "":"" + bazarr_container_tag }}'",1,Merge branch 'fix-container-roles' into 'develop'
become: true apt: state: present name: - vim,0,refactor: updated the task files to be alligned with standards
roles: - src: https://gitlab.com/stemid-ansible/roles/rpmfusion_repo.git scm: git name: rpmfusion_repo - src: https://github.com/stemid/ansible-systemd-timers.git scm: git version: feature-user-timers collections: - community.general,0,refactor
- default_browser_name: librewolf - default_browser_fullpath: /usr/bin/{{ default_browser_name }} - name: === /etc/environment block === - name: template /etc/environment become: true path: /etc/environment marker: '# {mark} environment_config' export browser={{ default_browser_fullpath }} owner: root group: root text/html={{ default_browser_fullpath }} x-scheme-handler/http={{ default_browser_fullpath }} x-scheme-handler/https={{ default_browser_fullpath }} x-scheme-handler/ftp={{ default_browser_fullpath }} x-scheme-handler/chrome={{ default_browser_fullpath }} application/x-extension-htm={{ default_browser_fullpath }} application/x-extension-html={{ default_browser_fullpath }} application/x-extension-shtml={{ default_browser_fullpath }} application/xhtml+xml={{ default_browser_fullpath }} application/x-extension-xhtml={{ default_browser_fullpath }} application/x-extension-xht={{ default_browser_fullpath }} image/jpeg={{ default_browser_fullpath }} image/png={{ default_browser_fullpath }} - name: set default browser via xdg-settings ansible.builtin.command: cmd: xdg-settings set default-web-browser {{ default_browser_name }}.desktop,0,fix default browser
cmd: conda create -n napari-env -y python=3.7 chdir: ~/miniconda3/bin,0,Correct bug in create napari environment task
"- name: update package caches changed_when: false become: true ansible.builtin.shell: cmd: ""pacman -f --refresh --refresh"" changed_when: false # - name: upgrade system # become: true # community.general.pacman: # update_cache: true",0,fix Molecule bugs
image: dliappis/ubuntu-devopsci:14.04 image: dliappis/debian-devopsci:7 image: dliappis/debian-devopsci:8 image: dliappis/centos-devopsci:6 image: dliappis/centos-devopsci:7,0,Optimised testing images
"vm_inventory_hostname: ""{{ groups[create_vm__hosts] | first }}"" zvm__name: ""{{ vm_inventory_hostname }}"" zvm__ssh_host: ""{{ hostvars[vm_inventory_hostname].zvm__ssh_host }}"" vm_ip_address: ""{{ hostvars[vm_inventory_hostname].vm_ip_address }}""",0,fix: remove hostname_holder
ansible_host: 145.136.x.x #ommit for aws/openstack deployments,1,Fix yaml lintting
"yum: name: ""{{ item }}"" state: present tags: - utils",0,Fix PostgreSQL Playbook
"shell: ""ps -few | grep gunicorn | awk '{print $2}'""",1,Fix processing killing
"get_url: file: path: ""{{ ansible_env.home }}/{{item}}""",1,refactor: lint
"name: src: files/terminal.desktop dest: /usr/share/applications/terminal.desktop owner: root group: root mode: ""0644"" src: files/tilix.dconf dest: /tmp/tilix.dconf owner: root group: root mode: ""0644"" ansible.builtin.fail: msg: ""invalid dconf key format: {{ item.key }}. keys must begin with a slash (/)"" ## - name: set dconf keys with community.general.dconf",0,Update to fix everything with ansible-lint
"command: ""{{ ruby_bin_root }}/gem install --no-document {{ item }}"" - passenger become: yes command: ""{{ ruby_bin_root }}/passenger-install-nginx-module --auto"" become: yes become: yes become: yes",0,fix paths for rbenv
"line: export ps1=""\$ps1_ext\n\[\033[38;5;4m\][\t]\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]\[\033[38;5;2m\]\u\[$(tput sgr0)\]\[\033[38;5;1m\]@\h\[$(tput sgr0)\]\[\033[38;5;15m\]\[$(tput sgr0)\]\[\033[38;5;5m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\]\n\[$(tput sgr0)\]\[\033[38;5;4m\]>\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]""",1,fix: fix permission-related issues with some roles
tags: tags: tags: tags:,0,mothball attacks
"folder_path: ""{{ ansible_env.home }}/games"" steam_dir: ""{{ ansible_env.home }}/.local/share/steam/steamapps/common"" - bgee - bg2ee - iwdee games_paths: bgee: ""{{ steam_dir }}/baldur's gate enhanced edition"" bg2ee: ""{{ steam_dir }}/baldur's gate ii enhanced edition"" iwdee: ""{{ steam_dir }}/icewind dale enhanced edition""",1,"Updated to remove bloat in vars.yml, and hanlde loops better"
ansible.builtin.import_tasks: factory-env.yml mds_name: mds_server.name,1,5046 fix problem with passing mds_name variable
"name: {{ item }} loop: ""{{ local-users }}"" shell: /usr/bin/openssl rand -base64 32 | passwd --stdin {{ item }} loop: ""{{ local-users }}""",1,fix local user playbook loop
include_tasks: tasks/tasks2.yml,0,fix: Do not add the skipped tags to the graph
author: crazyusb,0,Fixed typo
- name: download proton ge build ansible.builtin.get_url: url: '{{ proton_ge_url }}' dest: '{{ download_location }}',0,"mitigate differing kernel versions, proton install, and setting default browser"
"become_user: ""{{ gocd_user }}"" become: yes",1,Merge pull request #31 from boukeversteegh/bugfix/ansible-1-8-compatibility
"path: ""{{ flink_install_dir }}/flink-{{ flink_version }}""",0,flink: fix role
- name: create zfs snapshot of the above file system,0,minor typo correction in zfs.yml
win-ping:,1,fix:  win_ping is not win-ping
entry: ansible-lint . --force-color -v -p,1,"Fix the Docker firewall behavior, fix running on non-root systems e.g. AWS EC2, improve testing to include post-reboot states (#205)"
- name: freeipa.ansible_freeipa version: 0.1.11,1,problem was not fixed by using older versions
- name: restart firewalld,1,fix some ansible-lint errors
"key: ""{{ hostvars['main_backup_node']['nodes_public_keys']['public_key'] }}""",1,[FIX] main backup node is not correct in preparation playbook
that: student_name != {{ item }} - admin - learnfest - root,1,Merge branch 'fix-create-user-checks' into 'main'
"#- name: generate locale # locale_gen: name=""en_us.utf-8"" state=present #- name: update locale # command: /usr/sbin/update-locale lang=en_us.utf-8 lc_all=en_us.utf-8 # notify: reconfigure dpkg",1,Fix 2 to pull request
"- name: ""check soanrqube http url"" register: result failed_when: result.status != 200 ansible.builtin.uri: url: ""http://{{ inventory_hostname }}:{{ inv_install_sonarqube__web_port }}/"" method: ""get""",1,fix CI tests
"debug: msg=""successful license operation often results in an exception. this is expected behaviour.""",1,typo fix
"name: 'python{{ (ansible_distribution_major_version > ""7"") | ternary(""3"", """") }}-psycopg2'",0,postgresql: Fix installation of 'psycopg2' on RHEL based distros > 7
"# 3.12 tag amd64:3.12: version: ""3.12"" arm64:3.12: version: ""3.12"" arm/v7:3.12: version: ""3.12"" arm/v6:3.12: version: ""3.12"" # 3.11 tag amd64:3.11: version: ""3.11"" arm64:3.11: version: ""3.11"" arm/v7:3.11: version: ""3.11"" arm/v6:3.11: version: ""3.11"" # 3.10 tag amd64:3.10: <<: *container-build variables: platform: linux/amd64 version: ""3.10"" arm64:3.10: <<: *container-build variables: platform: linux/arm64 version: ""3.10"" arm/v7:3.10: <<: *container-build variables: platform: linux/arm/v7 version: ""3.10"" arm/v6:3.10: <<: *container-build variables: platform: linux/arm/v6 version: ""3.10"" # 3.9 tag amd64:3.9: <<: *container-build variables: platform: linux/amd64 version: ""3.9"" arm64:3.9: <<: *container-build variables: platform: linux/arm64 version: ""3.9"" arm/v7:3.9: <<: *container-build variables: platform: linux/arm/v7 version: ""3.9"" arm/v6:3.9: <<: *container-build variables: platform: linux/arm/v6 version: ""3.9"" deploy:3.12: <<: *deploy variables: version: ""3.12"" deploy:3.11: <<: *deploy variables: version: ""3.11"" deploy:3.10: version: ""3.10"" deploy:3.9: version: ""3.9""",0,Fix tag versions (#2)
"# 15.2 tag amd64:15.2: version: ""15.2"" arm64:15.2: version: ""15.2"" arm/v7:15.2: version: ""15.2"" arm/v6:15.2: version: ""15.2"" # 15.1 tag amd64:15.1: version: ""15.1"" arm64:15.1: version: ""15.1"" arm/v7:15.1: version: ""15.1"" arm/v6:15.1: version: ""15.1"" deploy:15.2: version: ""15.2"" deploy:15.1: version: ""15.1""",1,Fix tag versions (#2)
to_ip: '{{ radicale_addr }}',1,"roles/radicale: correct permissions for htpasswd file, use public listening address"
"name: ""{{ sudo_group }}"" regexp: ""^%{{ sudo_group }}"" line: ""%{{ sudo_group }} all=(all) nopasswd: all"" - ""{{ sudo_group }}"" register: playbook_copied when: not playbook_copied.stat.exists",1,"Fix the Docker firewall behavior, fix running on non-root systems e.g. AWS EC2, improve testing to include post-reboot states (#205)"
- name: restart postgresql become: yes service: name: postgresql-9.6 state: restarted,1,Fix PostgreSQL Playbook
"mode: '0750' url: ""https://packages.microsoft.com/keys/microsoft.asc"" src: ""vscode.list"" dest: ""/etc/apt/sources.list.d/vscode.list"" mode: '0644' command: ""fc-cache -f"" command: ""/usr/bin/code --install-extension {{ vscode_extensions | join(' --install-extension ') }}"" file: template: mode: '0644'",1,refactor: start lint
# pre_tasks: # - name: update dnf cache # dnf: # update_cache: yes # - apache # - php,1,Fixed the MySQL Auth problem
command: chdir=/srv/ /bin/tar xvf wordpress-{{ wp_version }}.tar.gz creates=/srv/wordpress local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/,1,Merge pull request #278 from ScottBrenner/fix-ansible-lint-errors
"ansible.builtin.apt: ansible.builtin.file: mode: ""0700"" ansible.builtin.copy:",0,refactor: lint
"dest: ""~{{ ansible_ssh_user }}/nginx.yml"" owner: ""{{ ansible_ssh_user }}"" shell: kubectl apply -f nginx.yml become_user: ""{{ ansible_ssh_user }}""",1,"Added smoke test, firewalld setup, heapster, encrypting secrets at rest"
"- name: ""include labocbz.deploy_redis playbook"" - ""labocbz.deploy_redis""",0,fix tags
"inv_install_nexus_repository__container_name: ""{{ inv_install_nexus_repository__container_name }}"" inv_install_nexus_repository__data_path: ""{{ inv_install_nexus_repository__data_path }}"" inv_install_nexus_repository__heap: ""{{ inv_install_nexus_repository__heap }}"" inv_install_nexus_repository__web_address: ""{{ inv_install_nexus_repository__web_address }}"" inv_install_nexus_repository__web_port: ""{{ inv_install_nexus_repository__web_port }}"" inv_install_nexus_repository__web_port_min: ""{{ inv_install_nexus_repository__web_port_min }}"" inv_install_nexus_repository__web_port_max: ""{{ inv_install_nexus_repository__web_port_max }}""",1,fix CI
state: latest,1,restore: fix under indented state
- name: get system python 3 version # noqa risky-shell-pipe - name: get virtualenv python version # noqa risky-shell-pipe,0,ansible-lint: Fix and ignore some errors
tags: - users,1,"forgot to set root password on new primary node. selinux is not working, no time to fix it now."
- include: apache2.yml - include: php5.yml,0,Minor bugfixes. Actually nothing important.
"urbanslug_home_dir: ""/home/urbanslug"" dotfiles_dir: ""{{ urbanslug_home_dir }}/src/generic/dotfiles"" generic_src_dir: ""{{ urbanslug_home_dir }}/src/generic"" zsh_dir: ""{{ dotfiles_dir }}/.zsh"" dirs: - ""{{ urbanslug_home_dir }}/.config"" packages: - znc - python-virtualenvwrapper symlinks: ""{{ dotfiles_dir }}/.zsh"": ""{{ urbanslug_home_dir }}/.zsh"" ""{{ dotfiles_dir }}/.zshrc"": ""{{ urbanslug_home_dir }}/.zshrc"" ""{{ dotfiles_dir }}/.tmux.conf"": ""{{ urbanslug_home_dir }}/.tmux.conf"" ""{{ dotfiles_dir }}/.config/git"": ""{{ urbanslug_home_dir }}/.config/git""",0,Make it open source-able
key: '{{ item }}' with_file: - authorized_keys,1,Fix merge conflict
"- name: drain node shell: kubectl drain {{inventory_hostname}} --ignore-daemonsets delegate_to: ""{{ groups['all-masters'][0] }}"" enabled: yes - name: bring the host back online shell: kubectl uncordon {{inventory_hostname}} delegate_to: ""{{ groups['all-masters'][0] }}""",0,"Added smoke test, firewalld setup, heapster, encrypting secrets at rest"
become: yes become_user: dcadm1n become: yes become_user: dcadm1n,0,tabbing fix
state: present,1,fix mount command to actually mount filesystem
"- ""{{ deluge_download_directory }}:/downloads:rw""",0,Merge pull request #682 from leonhartyao/fix-deluge-download-issue
"# installation of the fail2ban package # add on remote system useful filters for fail2ban # generation of the new fail2ban configuration # no restart because fail2ban service can't handle it correctly ! - check fail2ban status # todo - remove ""check fail2ban status"" handler # exit with error if fail2ban isn't correctly started # it's possible to check if a string is in status returned by systemd module # register: fail2ban_return # failed_when: ""'exited' in fail2ban_return.status.substate"" # but i don't understand why, it seems that the status variable isn't ""uptodate"" after notify and # handler execution for restart or stop/start so the conditional check failed # todo # be able to print message to user when fail2ban does not start correctly # msg: ""**** fail2ban tries to load jail without service to analyse ! check logs with : systemctl status fail2ban.service ****"" # maybe the solution can be to use playbook_blocks : # (http://docs.ansible.com/ansible/playbooks_blocks.html)",0,comments translation and check Fail2Ban service after service restart (to avoid errors if logs do not exist)
remote_src: false,1,Merge branch '13-fix-zshrc' into 'main'
- lvm_volumes is defined - devices is defined,1,lvm: fix condition when selecting which scenario to run
- printer-manager,1,typo
"- hosts: master[0] remote_user: root vars: ansible_python_interpreter: /usr/bin/python3 roles: - { role: k3s/deploy, apps: [ 'metrics-server.yml' ], tags: [ 'metrics' ] } - { role: k3s/deploy, apps: [ 'loki.yml' ], tags: [ 'loki', 'logs' ] } post_tasks: - name: wait a while for loki to be installed tags: [ 'pause' ] pause: seconds: 90 - { role: k3s/deploy, apps: [ 'promtail.yml' ], tags: [ 'logs', 'promtail' ] } - { role: k3s/deploy, apps: [ 'prometheus-operator.yml' ], tags: [ 'prometheus' ] } - { role: k3s/deploy, apps: [ 'service-monitor.yml' ], tags: [ 'prometheus' ] }",0,Upgrade k3s to version 0.6.1; Refactor roles & plays
"become: yes become_user: gitlab-runner cmd: 'gitlab-runner --executor docker --docker-image ""{docker_image}"" --name ""{runner_name}"" --url ""{gitlab_url}"" --registration-token ""{registration_token}""' creates: /var/lib/gitlab-runner/.gitlab-runner/config.toml",1,fixes found due to end to end testing
"line: 192.168.1.69 hualcoyotl uuid=9836683c36681d8e /media/descargas ntfs defaults 0 0 uuid=""5aa5a70d-92fd-431d-9bef-dd229128ab4c"" /media/backup xfs defaults 0 0 uuid=6cc8a668533cd38b /mnt/bobac_ntfs ntfs noauto 0 0 uuid=4492-e896 /mnt/ventoy exfat defaults,noauto,uid=1000,gid=1000 0 0 hualcoyotl:/ /home/rtokarski/nfs nfs defaults,timeo=900,retrans=5,_netdev,user 0 0 rpm_key: state: present key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc rpm_key: state: present key: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/-/raw/master/pub.gpg mode: 0644 - borgbackup - name: determine if extracting a local borg backup is necessary command: ls /home/rtokarski register: ls changed_when: '"".borgexcuses"" not in ls.stdout' notify: borg-extract handlers: - name: borg-extract shell: cmd: > borg extract /media/backup/borg/castleyankee::$(borg list /media/backup/borg/castleyankee --format '{archive}{nl} | head -n1') chdir: /home/rtokarski when: ls.changed ...",0,"ADD way to handle borg backup, small fixes"
password: ! key: {{ ansible_pub_key }},1,Fixed some errors
"- name: fix for flatpak dbus error ansible.builtin.dnf: name: dbus-x11 - name: install gnome-extension-app ansible.builtin.shell: > dbus-launch --exit-with-session flatpak install --system --noninteractive fedora org.gnome.extensions become: true #- name: install gnome-extension-app # community.general.flatpak: # name: org.gnome.extensions # state: present # remote: fedora # become: true value: ""'appmenu:minimize,maximize,close'""",0,Fix error for the terminal and flatpak error
# ansible_connection: local master_user: wi11i4m,0,-> Solve issue 💡:
become: yes name: postgresql-9.6 become: yes name: postgresql-9.6 state: started,0,Fix PostgreSQL Playbook
all: children: web_srv: hosts: nginx1: ansible_host: 35.242.217.177 nginx2: ansible_host: 35.242.243.0 vars: ansible_user: suslov,0,hosts file modification + README
"name: ""{{pl_security_group_name}}"" - name: allow_ssh protocol: tcp destination_port_range: 22 access: allow priority: 100",1,Updating security groups
fetch: src=/tmp/raspbian-ua-netinst/raspbian-ua-netinst.zip dest=/tmp/raspbian-ua-netinst.zip command: /usr/bin/rm -rf /tmp/raspbian-ua-netinst,1,build: fix and make it work
"mode: ""0644"" - name: change user's shell to zsh ansible.builtin.user:",0,Update to fix everything with ansible-lint
- name: installing packages {{ovpnc_inst_packages}} when: ovpnc_conf_gen == true,0,Final source re-arrangements before second code review
- name: run puppet-agent cmd: puppet agent --test,1,"Add full LXC provisioning, add lxd hosts"
"- ""travis_wait 30 ansible-playbook --extra-vars '{\""configure_sudoers\"":\""false\""}' main.yml""",0,Fixes #24: Add travis_wait to fix builds that take longer than 10 minutes.
- name: setup idm server,0,fix type in the name
- name: update the packages and configure auto-updates ansible.builtin.include_tasks: setup.yml - name: configure the firewall ansible.builtin.include_tasks: firewall.yml,0,"Fix the Docker firewall behavior, fix running on non-root systems e.g. AWS EC2, improve testing to include post-reboot states (#205)"
- name: install pipx import_playbook: ./pipx.yml - name: install pyenv import_playbook: ./pyenv.yml - name: install poetry import_playbook: ./poetry.yml,0,🚨 fixes some lint errors
"- name: copy in deploy key copy: src: id_ed25519.git dest: ""~/.ssh/id_ed25519.git"" mode: 0700 owner: sysadmin group: sysadmin repo: 'ssh://git@gitlab.com/cworobetz/home.git' key_file: '~/.ssh/id_ed25519.git'",0,Fix merge conflict
"- name: create postgresql db 'metastore' - name: init hive metastore schema shell: psql --dbname=metastore --file=/usr/lib/hive/scripts/metastore/upgrade/postgres/hive-schema-0.10.0.postgres.sql - name: grant postgresql user 'hiveuser' shell: psql --dbname=metastore --command=""grant all on all tables in schema public to hiveuser;""",0,Fix PostgreSQL install. [ci skip]
# commented since we don't have any baseline iptables configuration yet.,1,Some iptables bugs were fixed
"- es_enable_xpack and '""security"" in es_xpack_features' - (es_enable_xpack and '""security"" in es_xpack_features') and (es_version | version_compare('6.0.0', '>')) - (es_enable_xpack and '""security"" in es_xpack_features') and (es_version | version_compare('6.0.0', '>')) and es_api_basic_auth_username is defined and list_keystore is defined and es_api_basic_auth_username == 'elastic' and 'bootstrap.password' not in list_keystore.stdout_lines when: (es_enable_xpack and '""security"" in es_xpack_features') and ((es_users is defined and es_users.file is defined) or (es_roles is defined and es_roles.file is defined)) when: es_enable_xpack and '""security"" in es_xpack_features'",1,Fix conditionals introduced in #408
- hosts: localhost roles: - role: common tags: - common - role: satnogs tags: - satnogs,1,Fix playbook used by 'ansible-pull'
author: @crazyusb,1,Fixed typo
"with_items: ""{{users_to_remove}}"" when: manage_native_users and es_users.native.keys() > 0 with_dict: ""{{es_users.native}}"" with_items: ""{{roles_to_remove}}"" when: manage_native_roles and es_roles.native.keys() > 0 with_dict: ""{{es_roles.native}}""",1,Fixes for conditional execution as a task
- name: upstart environment variables,0,Fix typo in task name
"docker_nginx_config_root: ""{{ docker_nginx_config_root }}"" docker_nginx_confd: ""{{ docker_nginx_confd }}"" docker_nginx_http: ""{{ docker_nginx_http }}"" docker_nginx_ssl: ""{{ docker_nginx_ssl }}"" docker_nginx_logs: ""{{ docker_nginx_logs }}"" - ""{{ docker_nginx_config_root }}"" - ""{{ docker_nginx_confd }}"" - ""{{ docker_nginx_http }}"" - ""{{ docker_nginx_ssl }}"" - ""{{ docker_nginx_logs }}"" image: ""{{ docker_image_nginx }}:{{ docker_image_nginx_tag }}"" - ""{{ docker_nginx_confd }}:/etc/nginx/conf.d:ro"" - ""{{ docker_nginx_http }}:/http:ro"" - ""{{ docker_nginx_ssl }}:/ssl-certs:ro"" - ""{{ docker_nginx_logs }}:/var/log/nginx:rw"" image: ""{{ docker_image_nginx }}:{{ docker_image_nginx_tag }}"" - ""{{ docker_nginx_confd }}:/etc/nginx/conf.d:ro"" - ""{{ docker_nginx_http }}:/http:ro"" - ""{{ docker_nginx_ssl }}:/ssl-certs:ro"" - ""{{ docker_nginx_logs }}:/var/log/nginx:rw"" dest: ""{{ docker_nginx_confd }}/default.conf"" - ""{{ docker_nginx_config_root }}"" - ""{{ docker_nginx_confd }}"" - ""{{ docker_nginx_http }}"" - ""{{ docker_nginx_ssl }}"" - ""{{ docker_nginx_logs }}""",1,Merge branch 'fix-bugs' into 'development'
ansible_user: cumulus ansible_pass: cumuluslinux! ansible_become_pass: cumuluslinux!,0,Error /etc/network does not exist
idempotency_test: true extra_vars: es_plugins: - plugin: ingest-geoip playbook: test/integration/xpack.yml,1,Support for plugin diffs + improved testing on minor upgrades + fixes
- hosts: managed - python,0,Refine inventory and variable override per host.
"path: ""{{ arch_dir }}/{{ enemon_db_name }}.bz2""",1,Merge branch 'fix-arch-del' into 'master'
- sequel-ace,0,Fixes #127: Replace Sequel Pro with Sequel Ace.
tags: - skip_ansible_lint,1,Fix linting issue for universe repo add
"- set_fact: list_command=""list"" #list currently installed plugins - ignore xpack if > v 2.0 shell: ""{{es_home}}/bin/elasticsearch-plugin list | grep -ve 'x-pack'"" failed_when: ""'error' in installed_plugins.stdout"" with_items: ""{{ installed_plugins.stdout_lines | default([]) }}"" when: es_plugins_reinstall and installed_plugins.stdout_lines | length > 0 and not 'no plugin detected' in installed_plugins.stdout_lines[0]",1,Support for plugin diffs + improved testing on minor upgrades + fixes
"- name: wrapper playbook for kitchen testing ""elasticsearch"" es_heap_size: ""1g""",1,Support for plugin diffs + improved testing on minor upgrades + fixes
"- name: ""longhorn: install dependencies"" - name: ""longhorn: install"" - name: ""longhorn: add backblaze b2 secret for backups"" kubernetes.core.k8s: state: present template: backblaze-b2-secret.yml.j2 wait: true vars: accesskey: ""{{ lookup('env', 'longhorn_backblaze_access_key') }}"" secretkey: ""{{ lookup('env', 'longhorn_backblaze_secret_key') }}"" serviceendpoint: ""{{ lookup('env', 'longhorn_service_endpoint') }}"" changed_when: false when: inventory_hostname == master_node",0,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
- pleroma-backend - pleroma-be,1,refactor: changed pleroma-backend to pleroma-main
"calibre_container_image: '{{ calibre_container_repo }}{{ "":"" + calibre_container_tag }}'",1,Merge branch 'fix-container-roles' into 'develop'
- name: do a reboot. local_action: wait_for port=22,1,Minor bugfixes. Actually nothing important.
with_dict: sysctl_config with_dict: sysctl_rhel_config,1,fix bare variables usage for loops
"stream: backends: jira: server_name: jira.internal.test upstream_host: ""{{ groups['jira_backend'][0] }}:443"" confluence: server_name: confluence.internal.test upstream_host: ""{{ groups['confluence_backend'][0] }}:443"" public_ports: - 443 - 9001",0,fix: fix stream and testing
"- name: install needed os pkgs become: true community.general.pacman: name: - vagrant - libvirt - qemu - virt-manager - nfs-utils - dnsmasq - dmidecode state: present - name: install needed pip3 pkgs ansible.builtin.pip: name: - paramiko # ssh-like library used for dynamic inventory - name: enable libvirtd service become: true ansible.builtin.service: name: libvirtd enabled: true state: started - name: '`nfs.conf` enable vers3' become: true ansible.builtin.lineinfile: path: /etc/nfs.conf regexp: '^#\s*vers3.*$' line: vers3=y state: present - name: '`nfs.conf` enable udp' become: true ansible.builtin.lineinfile: path: /etc/nfs.conf regexp: '^#\s*udp=.*$' line: udp=y state: present - name: enable nfs-server service become: true ansible.builtin.service: name: nfs-server enabled: true state: restarted - name: check if libvirt plugin is installed ansible.builtin.command: cmd: vagrant plugin list register: output_vagrant_plugin_list changed_when: output_vagrant_plugin_list.rc != 0 - name: show vagrant plugin list ansible.builtin.debug: msg: - ""=== start :: vagrant plugin list output ==="" - ""{{ output_vagrant_plugin_list.stdout }}"" - ""=== end :: vagrant plugin list output ==="" - name: install libvirt plugin for vagrant, if absent ansible.builtin.command: cmd: vagrant plugin install vagrant-libvirt when: output_vagrant_plugin_list.stdout is not regex("".*vagrant-libvirt.*"") - name: add '{{ ansible_user }}' to libvirt group become: true ansible.builtin.user: name: '{{ ansible_user }}' groups: libvirt append: true state: present",0,Merge branch '13-fix-zshrc' into 'main'
"img: '{{default .i .img}}' d_img: '{{default .default_tag .img}}' - docker run -t --rm {{.d_img}} /bin/sh -c ""ansible --version"" - docker run -t --rm {{.d_img}} /bin/sh -c ""ansible-lint --version"" - docker run -t --rm -v $(pwd)/tests:/ansible {{.d_img}} /bin/sh -c ""ansible-galaxy install -r requirements.yml && ansible-lint --offline --project-dir . --exclude .cache playbook.yml"" - docker run -t --rm -v $(pwd)/tests:/ansible {{.d_img}} /bin/sh -c ""ansible-galaxy install -r requirements.yml && ansible-playbook --limit local --vault-password-file vault-password-file.dist -i inventory playbook.yml"" img: '{{default .i .img}}' d_img: '{{default .default_tag .img}}' - docker run -t --rm -v $(pwd)/tests:/ansible {{.d_img}} ansible-vault decrypt --vault-password-file vault-password-file.dist keys/key-test.pem - docker run -t --rm --network {{.ansible_network}} -v $(pwd)/tests:/ansible {{.d_img}} /bin/sh -c ""ansible-galaxy install -r requirements.yml && ansible-playbook --limit remote --vault-password-file vault-password-file.dist -i inventory playbook.yml""",0,Fix IMG variable in sanity tests tasks
"opts: rw,size=110m,uid=knot-resolver,gid=knot-resolver,nosuid,nodev,noexec,mode=0700",0,fix: constant size to avoid creating giant cache in limited space
"append: yes become: yes mode: '0755' become: yes become: yes - { name: 'bash', repo: 'https://gitlab.com/dotfiles1/dotfiles-bash.git' } - { name: 'screen', repo: 'https://gitlab.com/dotfiles1/dotfiles-screen.git' } - { name: 'vim', repo: 'https://gitlab.com/dotfiles1/dotfiles-vim.git' } - { name: 'git', repo: 'https://gitlab.com/dotfiles1/dotfiles-git.git' } - { name: 'motd', repo: 'https://gitlab.com/dotfiles1/dotfiles-motd.git' } become: yes loop: become: yes remote_src: yes become: yes backup: yes become: yes become: yes become: yes become: yes",1,Fix yamllint and ansible-lint errors
- include: redhat.yml,0,Fix the way the Redhat installation is included
inv_logrotate_apache_configurations:,0,fix logs
- homebrew/cask - koekeishiya/formulae - thoughtbot/formulae,0,Use default filter to remove task duplication
import_tasks: tasks.yml,1,fix: Do not add the skipped tags to the graph
"command: ""{{ openshift.common.client_binary }} new-project validate"" shell: ""{{ openshift.common.client_binary }} new-app https://github.com/openshift/cakephp-ex.git"" shell: ""{{ openshift.common.client_binary }} get pod | grep -v deploy | awk '/cakephp-ex-1-build/{ print $3 }'"" shell: ""{{ openshift.common.client_binary }} get pod | grep -v deploy | grep -v build | awk '/cakephp-ex-1-*/{print $3}'"" - name: expose the svc shell: ""{{ openshift.common.client_binary }} expose svc cakephp-ex"" url: ""http://cakephp-ex-validate.{{ hostvars['localhost']['wildcard_zone'] }}"" command: ""{{ openshift.common.client_binary }} delete project validate""",1,gitless validation testing - safer for atomic (#403)
- pip install ansible-lint shellcheck ruamel.yaml,1,fix pipeline
port 24800:24800,1,fixed typo
"- set_fact: list_command="""" #if we are reinstalling all plugins, e.g. to a version change, we need to remove all plugins (inc. x-pack) to install any plugins. otherwise we don't consider x-pack so the role stays idempotent. - set_fact: list_command=""| grep -ve 'x-pack'"" when: not es_plugins_reinstall #list currently installed plugins. we have to list the directories as the list commmand fails if the es version is different than the plugin version. shell: ""ls {{es_home}}/plugins {{list_command}}"" #if es_plugins_reinstall is set to true we remove all plugins - set_fact: plugins_to_remove=""{{ installed_plugins.stdout_lines | default([]) }}"" when: es_plugins_reinstall #if the plugins listed are different than those requested, we remove those installed but not listed in the config - set_fact: plugins_to_remove=""{{ installed_plugins.stdout_lines | difference(es_plugins | json_query('es_plugins[*].plugin')) | default([]) }}"" when: not es_plugins_reinstall with_items: ""{{ plugins_to_remove | default([]) }}"" when: es_plugins_reinstall and plugins_to_remove | length > 0",0,Support for plugin diffs + improved testing on minor upgrades + fixes
tags: tags: tags: tags: tags: tags:,1,mothball attacks
- name: verify and add the new runners,1,-> Solve issue 💡:
src: templates/nfs/fstab,1,Fix some typos
- name: test connection to webapp,1,fix some ansible-lint errors
"- redhat.rhel_idm.ipaserver: ipaadmin_password: ""%testpassword%"" name: idm.idhaoui.ansible-labs.de",1,fix indentation
"- openvpn=2.3.10-1ubuntu2.2 # fixing version '=ver' for package, remove it if any can be used ovpnc_os_dist_ver: 16",0,Final source re-arrangements before second code review
"- name: create the lab - name: set the lab policies - name: set the lab schedule - name: create the lab virtual network description: my lab virtual network - name: define the lab artifacts source - name: create a vm within the lab - name: list the artifact sources - name: list the artifact facts azure_rm_devtestlabartifact_facts: resource_group: ""{{ resource_group }}"" lab_name: ""{{ lab_name }}"" artifact_source_name: public repo register: output - debug: var: output - name: list the azure resource manager template facts - name: get azure resource manager template facts - name: create the lab environment - name: create the lab image - name: delete the lab",0,dlt playbook fixes (#71)
with_items: groups.monitoring with_items: groups.lbservers with_items: groups.lbservers with_items: groups.monitoring,1,Fix ansible-lint reported errors and update syntax.
amd64:3.12: amd64:3.12:,1,Fix build step for Alpine 3.13 and 3.14
#atlassian_extras_old: atlassian-extras-2.2.2.jar #atlassian_universal_plugin_manager_plugin_old: atlassian-universal-plugin-manager-plugin-2.17.13.jar atlassian_universal_plugin_manager_plugin_jar: atlassian-universal-plugin-manager-plugin-2.17.13.jar atlassian_universal_plugin_manager_plugin_from: https://www.dropbox.com/s/k5msfay3sudeedv/atlassian-universal-plugin-manager-plugin-2.17.13.jar?dl=0 #atlassian_universal_plugin_manager_plugin_jar: atlassian-universal-plugin-manager-plugin-2.18.2.jar #atlassian_universal_plugin_manager_plugin_from: https://www.dropbox.com/s/5xiaib5qeyxearv/atlassian-universal-plugin-manager-plugin-2.18.2.jar?dl=0,1,jira install error fixed
"hostname: name=""{{ server_hostname }}"" dest=/etc/hosts with_items: groups['linode'] copy: src=files/ssh/sshd_config dest=/etc/ssh/sshd_config notify: restart ssh service: name=ssh state=restarted",1,fix up hosts file
"{% for port in nginx_stream_configs.stream.public_ports %} security: security_ports: ""{{ security_ports | from_yaml }}"" nginx_extra_root_params: - load_module '/usr/lib64/nginx/modules/ngx_stream_module.so'",0,fix: fix stream and testing
"{ script: prop_dnatpr, path: commun/tables }, { script: prop_type_filiation, path: commun/tables }, { script: prop_ccocac, path: commun/tables },",0,"Fix ansible dict, broken in 1a50c468"
- name: install stow hosts: all tasks: - name: install gnu stow become: true apt: state: present name: - stow,1,refactor: updated the task files to be alligned with standards
backup_node: targethost,0,[FIX] main backup node is not correct
when: ansible_facts.distribution == 'ubuntu',1,"fix: check the capability, not the platform"
"# webui_repo: ""https://github.com/jtschichold/minemeld-webui.git""",0,fixed a typo and updated to remove items deprecated as of ansible 2.4.1.0
"when: item.name is match(""weidu-linux"") path: ""{{ lookup('env', 'home') }}/.{{ lookup('env', 'shell') | regex_replace('^/bin/', '') }}rc""",0,"Updated to remove bloat in vars.yml, and hanlde loops better"
"when: ansible_facts.system is defined and ansible_facts.system == ""linux"" when: ansible_facts.system is defined and ansible_facts.system == ""linux""",0,Fix error: dict object has no attribute 'system' (#409)
- name: ensure gunicorn is installed,1,"Updated README, change start supervisor to restart supervisor as supervisor throws an error if it's already started."
"# listen for connections. empty for all interfaces, defaults to localhost ipv4 only smtp_listen_interface: ""127.0.0.1"" # default is to have one config file # this is a string not a bool smtp_use_split_config: ""false"" - {name: ntp, proto: tcp, port: 123, comment: ""outgoing ntp using tcp""}",0,fix smtp vars
- debug: var: mds_server - debug: var: inventory_hostname - name: add mds to the mds_list in factory.env - name: check if mds_list containd mds name - name: add mds to the mds_list in factory.env,0,5046 fix problem with passing mds_name variable
"- name: update package caches changed_when: false ansible.builtin.shell: cmd: ""pacman -f --refresh --refresh"" - name: check if kernel needs update changed_when: false ansible.builtin.shell: # when the local kernel version does not match the remote version, # the kernel will need to be updated and a reboot will be required cmd: ""[[ $(pacman -q linux | awk '{print $2}') != $(pacman -s --info linux | grep -e '[0-9].arch' | awk '{print $3}') ]]"" register: kernel_needs_update - ansible.builtin.fail: msg: - ""kernel versions are mismatched (local version vs. remote version)"" - ""to mitigate strange errors with package or module versions..."" - ""update keyring, system, and reboot:"" - ""sudo bash -c 'pacman -sy --noconfirm archlinux-keyring && pacman -syyu --noconfirm && reboot'"" when: kernel_needs_update.rc != 0 # - name: update keyring # become: true # community.general.pacman: # name: archlinux-keyring # state: latest # - name: upgrade system # become: true # community.general.pacman: # update_cache: true # upgrade: true",1,tweaks
- xenial,1,Fix playbooks for kubuntu focal with new additions
"- name: ""slowsaz"" tasks: - name: ""include role"" include_role: name: wordpress",1,Minor fix
dokuwiki_memory: 1g,1,fix linting issue
"inv_install_mariadb__galera_cluster_seed_host: ""molecule-local-instance-1-deploy-phpmyadmin""",1,fix galera
"gather_facts: true - {role: ansible-docker-host, tags: [baseline, docker]} - {role: ansible-vector, tags: [baseline, vector]} - debug: var: matrix_sygnal_enabled region: ""{{ aws_region }}"" - name: download aws certificates get_url: url: https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem dest: /usr/local/share/ca-certificates/aws-global-bundle.crt mode: 0644 register: aws_certs - name: download aws rds certificates get_url: url: https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem dest: /usr/local/share/ca-certificates/rds-combined-ca-bundle.crt mode: 0644 register: aws_certs2 - name: update ca certs command: /usr/sbin/update-ca-certificates when: aws_certs.changed or aws_certs2.changed - name: ensure pg python module is installed apt: state: present ssl_mode: verify-full ca_cert: /etc/ssl/certs/ca-certificates.crt register: pg_ping - name: assert database available ansible.builtin.assert: that: - pg_ping.is_available fail_msg: synapse database is not configured or is available success_msg: succesfully connected to the synapse database - {role: ansible-docker-matrix}",0,various fixes
- postfix - mailutils,1,Cleanup formatting and fix pear
- name: link .tmux.conf,1,tmux: fix typo in ansible
changed_when: true - name: get gitlab project configuration # noqa jinja[spacing] changed_when: true changed_when: true changed_when: true - name: get gitlab project labels # noqa jinja[spacing] changed_when: true changed_when: true changed_when: true - name: get gitlab group labels # noqa jinja[spacing] changed_when: true changed_when: true changed_when: true,0,ansible-lint: Fix some errors
path: /etc/radicale,0,path fix
# update the hosts file witha final entry that will ovverride the entry for the current host with 127.0.0.1,1,Addressed looping package installation deprecation.
service: name=php5-fpm state=restarted,1,Postfix; fix php fpm restart
- name: get gitlab project configuration - name: get gitlab project labels - name: get gitlab group labels,1,ansible-lint: Fix some errors
action: apt pkg=$item state=installed action: apt pkg=$item state=installed,1,Removing legacy variable substitution $var and replacing with {{}} due to deprecation
- pip install --upgrade pip - pip install --upgrade ansible,0,.travis.yml: Fix typo in `pip' command option
"- name: disable firewall become: true ufw: state: disabled - name: create tftpd directory for kernel file: path: ""{{ ansible_env.home }}/nos/kernel"" state: directory - name: create nfs mount point for v1 rootfs become: true become_user: ""{{ ansible_env.user }}"" file: path: ""{{ ansible_env.home }}/nos/v1/rootfs"" state: directory - name: create nfs mount point for v2 rootfs file: path: ""{{ ansible_env.home }}/nos/v2/rootfs"" state: directory - name: replace pattern in nfs export file replace: dest: ""{{ playbook_dir }}/templates/uma/nfs_export.j2"" regexp: ""##user##"" replace: ""{{ ansible_env.user }}"" - name: replace pattern in tftp file replace: dest: ""{{ playbook_dir }}/templates/uma/tftpd-hpa.j2"" regexp: ""##user##"" replace: ""{{ ansible_env.user }}"" - name: copy nfs export file for nos become: true become_user: root template: backup: yes src: ""{{ playbook_dir }}/templates/uma/nfs_export.j2"" dest: /etc/exports owner: root group: root mode: 0644 - name: copy tftpd-hpa conf file for nos become: true become_user: root template: backup: yes src: ""{{ playbook_dir }}/templates/uma/tftpd-hpa.j2"" dest: /etc/default/tftpd-hpa owner: root group: root mode: 0644 - name: restart nfs server and tftp server become: yes service: name: ""{{ item }}"" state: restarted with_items: - tftpd-hpa - nfs-kernel-server",0,refactor: updated the task files to be alligned with standards
"vpc_id: ""{{vpcout.vpc.id}}""",0,new code is added to playbook13
command: chdir={{ __tmp_dir }}/cnx,1,Fix bugs
"- name: update apt packages cache apt: update_cache={{ update_apt_cache }} cache_valid_time=86400 - name: perform aptitude safe-upgrade apt: upgrade=yes when: run_aptitude_safe_upgrade is defined and run_aptitude_safe_upgrade - name: add user user: name=""{{ server_user }}"" shell=""{{ shell }}"" password=""{{ server_user_password }}"" when: server_user != ""root"" - name: add authorized_keys for the user authorized_key: user={{ server_user }} key=""{{ lookup('file', item) }}"" with_items: - ""{{ user_public_keys }}"" - name: install sudo apt: name=sudo update_cache={{ update_apt_cache }} state=present cache_valid_time=86400 - name: add user to sudoers lineinfile: dest=/etc/sudoers regexp=""{{ server_user }} all"" line=""{{ server_user }} all=(all) all"" state=present # unattended upgrades settings - name: install unattended upgrades apt: update_cache={{ update_apt_cache }} state=installed pkg=unattended-upgrades when: enable_unattended_upgrades is defined and enable_unattended_upgrades - name: set up unattended upgrades copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic - name: automatically remove unused dependencies when: enable_unattended_upgrades is defined and enable_unattended_upgrades lineinfile: dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp=""unattended-upgrade::remove-unused-dependencies"" line=""unattended-upgrade::remove-unused-dependencies \""true\"";"" state=present create=yes # uncomplicated firewall settings - name: install uncomplicated firewall apt: update_cache={{ update_apt_cache }} state=installed pkg=ufw when: enable_ufw is defined and enable_ufw # allow only ssh and http(s) ports - name: allow ssh and http(s) connections ufw: rule=allow port={{ item }} with_items: - ""{{ ufw_allowed_ports }}"" when: enable_ufw is defined and enable_ufw - name: enable ufw/firewall ufw: state=enabled policy=deny # fail2ban settings - name: install fail2ban apt: update_cache={{ update_apt_cache }} state=installed pkg=fail2ban when: enable_fail2ban is defined and enable_fail2ban - name: set up fail2ban command: cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local creates=/etc/fail2ban/jail.local notify: restart fail2ban - name: limit su access to sudo group command: dpkg-statoverride --update --add root sudo 4750 /bin/su register: limit_su_res failed_when: limit_su_res.rc != 0 and (""already exists"" not in limit_su_res.stderr) changed_when: limit_su_res.rc == 0 - name: disallow password authentication lineinfile: dest=/etc/ssh/sshd_config regexp=""^passwordauthentication"" line=""passwordauthentication no"" state=present notify: restart ssh - name: allow ssh only for primary user lineinfile: dest=/etc/ssh/sshd_config regexp=""^allowusers"" line=""allowusers {{ server_user }}"" state=present notify: restart ssh - name: disallow root ssh access lineinfile: dest=/etc/ssh/sshd_config regexp=""^permitrootlogin"" line=""permitrootlogin no"" state=present notify: restart ssh when: server_user != ""root"" - name: delete root password action: shell passwd -d root notify: restart ssh when: server_user != ""root""",1,Split security role tasks into separate tasks.
- libapache2-mod-defensible - libapache2-mod-fcgid shell: sudo openssl dhparam -rand /dev/urandom -out /etc/nginx/dhparams.pem > /dev/null,1,Typo in OpenSSL DH parameter generation. Updated PHP packet selection for webserver paybooks.
"- name: install and configure python tools (pyenv, pipx, poetry…) hosts: all - import_playbook: ./pipx.yml - import_playbook: ./pyenv.yml - import_playbook: ./poetry.yml",1,🚨 fixes some lint errors
"package bookworm: stage: package needs: [""release bookworm amd64"", ""release bookworm arm64""] variables: ci_manifest_file: manifest.yml extends: .kaniko_package",1,Fix ci order
sudo: yes,1,Fixing permissions errors with Dashboard & Website..
"__this_version: ""{{ cnx_version | default('6.0.0.0_20180927_0113') }}"" __version_check: ""installed com.ibm.connections.6.0.0.0_20180927_0113"" - { app: 'forums', name: ""{{ forums_db.name | default('forums') }}"", server: '{{ forums_db.server | default( __db_hostname ) }}', port: '{{ forums_db.port | default( __db_port ) }}', jdbc_file: '{{ forums_db.jdbc_file | default( __db_jdbc_file ) }}', type: '{{ forums_db.type | default( __db_type ) }}', user: '{{ forums_db.user | default( __db_username ) }}', pw: '{{ forums_db.pw | default( __db_password ) }}' }",1,Fix bugs
tags: tags: tags: tags: tags: tags:,0,mothball attacks
win_ping:,0,fix:  win_ping is not win-ping
"command: 'ln -sf /usr/share/zoneinfo/""{{ ntptimezone }}"" /etc/localtime'",1,Minor bugfixes. Actually nothing important.
quiet: yes quiet: yes,1,Update to fix everything with ansible-lint
service: name: mysqld state: restarted service: name: iptables state: restarted,0,Fix ansible-lint reported errors and update syntax in lamp_simple.
"name: ""{{ secondary_instance }}-pgbouncer-trackingdb"" device_name: ""disk-instance-secondary-pgbouncer-trackingdb-{{ prefix_name }}"" disk_name: ""disk-instance-secondary-pgbouncer-trackingdb-{{ prefix_name }}""",1,Fix bootstrapping
"- name: update, upgrade and install common packages using apt - name: install pip3 modules kubernetes, ansible and jsonpatch",1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
"state: ""{{ 'present' if terraform.eks.cluster.create == 'true' else 'absent' }}"" # variables: # cluster_name: ""{{ terraform.eks.cluster_name }}"" # cluster_version: ""{{ terraform.eks.cluster_version}}"" # cluster_vpc_id: ""{{ terraform.eks.cluster_vpc_id }}"" # cluster_subnet_ids: ""{{ terraform.eks.cluster_subnet_ids | to_json }}""",1,refactor
"tags: postgres - name: create postgresql db 'metastore' sudo: true sudo_user: postgres postgresql_db: name=metastore tags: - postgres - hive - name: add postgresql user 'hiveuser' sudo: true sudo_user: postgres postgresql_user: db=metastore name=hiveuser password=hive_{{ site_name }} priv=connect tags: - postgres - hive - name: init hive metastore schema sudo: true sudo_user: postgres shell: psql --dbname=metastore --file=/usr/lib/hive/scripts/metastore/upgrade/postgres/hive-schema-0.10.0.postgres.sql tags: - postgres - hive - name: grant postgresql user 'hiveuser' sudo: true sudo_user: postgres shell: psql --dbname=metastore --command=""grant all on all tables in schema public to hiveuser;"" tags: - postgres - hive",1,Fix postgres script. [ci skip]
- name: install longhorn dependencies,1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
"shell: ""{{ item }}"" with_items: - cd ~/desktop - curl -l https://get.oh-my.fish > install - fish install --path=~/.local/share/omf --config=~/.config/omf # always_run: yes check_mode: no # always_run: yes check_mode: no",0,attempting some fixes
node_version: 11.13.0 core_version: 3.7.1 pop_network_apply: true,0,"fix: bump node, core, and set the network apply setting"
"- ""../vars/{{ ansible_distribution }}-{{ ansible_distribution_version}}.yml"" - ""../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"" #for now skip debian since it's version of oscap is so old it won't support new definitions. revisit for debian 9 when: ansible_distribution not in ['debian']",0,Update to use official openscap SSGs instead of ubuntu-scap. Fixes #39
- name: install dependencies - name: install longhorn,1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
type: unfurl.nodes.httpsproxycontainercomputehost type: unfurl.nodes.containercomputehost primarydeploymentblueprint: gcp node: the_app outputs: # nb: the app's url attribute will not be computed unless this is declared url: value: eval: ::the_app::url node_templates: the_app: type: unfurl.nodes.webapp,0,freshen with latest unfurl-types and some ci tweaks
user: cumulus pwd: cumuluslinux! transport: ssh,1,Error /etc/network does not exist
hosts: servers,1,Fix playbook
- 70 - 80 - 443 - 22 logging: off,1,fix: latest Raspbian and Ansible support
name: 'python-psycopg2',1,postgresql: Fix installation of 'psycopg2' on RHEL based distros > 7
inv_logrotate_configurations_apache:,1,fix logs
- kubelet=1.23.6-00 - kubeadm=1.23.6-00 - kubectl=1.23.6-00 force: yes # # solve issue with kubernetes=v1.24 # - name: delete /etc/containerd/config.toml # file: # path: /etc/containerd/config.toml # state: absent # notify: # - restart service containerd # # solve issue with kubernetes=v1.24 # - name: restart service containerd # ansible.builtin.systemd: # state: restarted # name: containerd,0,-> fix the version of kubernetes=1.23.6-00✅
connect_timeout: 20 sleep: 5 delay: 5 timeout: 300,0,Syntax bug
"- hosts: all tasks: - name: setup idm server redhat.rhel_idm.ipaserver: ipaadmin_password: ""%testpassword%"" name: idm.idhaoui.ansible-labs.de",1,fix calling the role
connection: local gather_facts: no post_tasks: # # 2 minutes pause introduced to let the azure instance to finish its setup after deployment. # this is due to some dns resolution issues noticed when idm installation is kicked right after instance is deployed # this will impact other providers deployment until removed or migrated to azure specific automation - name: wait for 2 minutes until instance is ready pause: minutes: 2,0,Merge branch 'Fix-azure-issue-by-waiting-for-host' into 'master'
remote_user: adrl # deploy_user: adrl # deploy_group: adrl - role: solr become: yes - role: spotlight become: yes,0,fix ssh user/group
"- restart firewalld mode: ""0666""",0,fix some ansible-lint errors
"# installation du paquet fail2ban # copie des filtres utiles non présents dans fail2ban par défaut # génération de la configuration de fail2ban # pas de restart car fail2ban est chatouilleux à ce sujet :) # todo - afficher un message à l'utilisateur si fail2ban ne démarre pas # affichage d'un message d'erreur à l'utilisateur # msg: ""fail2ban tries to load jail without service to analyse !\n check logs with : systemctl status fail2ban.service""",1,comments translation and check Fail2Ban service after service restart (to avoid errors if logs do not exist)
"become: yes become_user: root command: ""scripts/gate-check-commit.sh {{ scenario }} {{ action }}"" environment: # zuul_project is used by tests/get-ansible-role-requirements to # determine when ci provided repos should be used. zuul_project: ""{{ zuul.project.short_name }}""",0,"Merge ""Update aio job to use become and fix environment"""
- subversion - unzip,0,Add phpmyadmin; fix handlers
"hosts: ""cicd-debian-11"" #- name: ""include cryptographic content var file"" # ansible.builtin.include_vars: ""../../tests/certs/main.yml"" loop: ""{{ groups['cicd-debian-11'] }}"" loop: ""{{ groups['cicd-debian-11'] }}"" prepare_host__apache_system_users: ""{{ inv_prepare_host__apache_system_users }}"" loop: ""{{ inv_add_apache_confs__configurations_cert_bundles }}"" when: inv_add_apache_confs__configurations_cert_bundles is defined and bundle.type == ""cert"" loop: ""{{ inv_add_apache_confs__configurations_cert_bundles }}"" when: inv_add_apache_confs__configurations_cert_bundles is defined and bundle.type == ""ca""",0,fix and refacto
url: https://download.docker.com/linux/ubuntu/gpg src: docker.list dest: /etc/apt/sources.list.d/docker.list url: https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64,0,refactor: start lint
"failed_when: ( ec2ami.stdout == """" ) or ( ""'ami-' not in ec2ami.stdout"" )",0,Fix to ami fail task condition
docker push $dockerhub_username/$ci_project_name:$ci_commit_short_sha,0,fix typo
pre_tasks: - name: update dnf cache dnf: update_cache: yes - apache - php,0,Fixed the MySQL Auth problem
"ansible.builtin.apt: ansible.builtin.file: mode: ""0755"" ansible.builtin.copy:",0,refactor: lint
file: src=/home/{{user_name}}/.ssh/id_rsa.pub dest=/home/{{user_name}}/.ssh/authorized_keys state=link,0,Fxing ssh key and authorized_keys
docker_tag: enmanuelmoreira/docker-ansible-archlinux:latest,0,Fix image name
"command: ""/sbin/init"" extra-vars: ""@./tests/tower/tower.yml"" - ""dependency""",0,fix all local molecule
tasks:,0,fix inventory and skeleton playbook
- name: install keycloak,1,"Fix a bunch of names so it's easier to track what is happening when ansible runs, including some fixes to nextcloud and addition of b2 secret for longhorn for backup purposes"
shell: echo 1 > /proc/sys/net/ipv4/ip_forward systemd: enabled: yes daemon_reload: yes systemd: enabled: yes daemon_reload: yes,1,Refactor: Modules and linting suggestions
"- yes '' | 'ruby -e ""$(curl -fssl https://raw.githubusercontent.com/homebrew/install/master/uninstall)""'",0,Issue #61: Answer yes to uninstall confirmation.
"hostname: ""{{ item.networkinterfaces[0].accessconfigs[0].natip }}"" groups: - secondary_nodes - secondary_host - ""{{ gce_secondary }}"" host: ""{{ item.networkinterfaces[0].accessconfigs[0].natip }}"" - ""{{ gce_secondary }}""",0,Refactor items and groups usage to condensate them into fewer lines
version: v2.1.10,0,requirements.yml: Fix tag version for go role
"#- name: install qutebrowser spell packages # become: yes # become_user: user # ansible.builtin.raw: which qutebrowser # loop: # - en-us # - pt-br # when: # ansible_facts['distribution'] == ""nixos""",1,fix: qutebrowser dicts
"shell: echo ""{{rake_result.stdout_lines[3] | regex_replace('^.*\""password:\s*(.*)\"".*$','\1')}}"" register: admin_password content=""{{ admin_password.stdout }}\n"" when: admin_password.changed",1,fix ansible lint ANSIBLE0013: remove shell usage
"network_interface_name: """" # you may define a network interface here, if none is defined the script tries to automatically detect one",0,Fix: Indentation
when: not enable_host_only_vpn,1,Fix: tunneling not working correct
"name: ""{{ item }}"" with_items: ""{{ packages.pip.install }}"" name: ""{{ item }}"" with_items: ""{{ packages.pip.remove }}""",1,Addressed looping package installation deprecation.
"- ""ansible-playbook --extra-vars '{\""configure_sudoers\"":\""false\""}' main.yml""",1,Fixes #24: Add travis_wait to fix builds that take longer than 10 minutes.
"src: ""backgrounds""",1,refactor: start lint
shell: /bin/zsh,1,fix: move workspace; fix: zsh path; feat: change powerlevel10k config
backup: yes backup: yes - dnf update cache,1,Update to fix everything with ansible-lint
"beets_container_image: '{{ beets_container_repo }}{{ "":"" + beets_container_tag }}'",1,Merge branch 'fix-container-roles' into 'develop'
"- docker buildx build --build-arg version=${version} --platform ${platform} --tag alpine-ansible --cache-to type=local,dest=.cache/${platform}/${version} --load . --cache-from type=local,src=.cache/linux/amd64/${version} \ --cache-from type=local,src=.cache/linux/arm64/${version} \ --cache-from type=local,src=.cache/linux/arm/v7/${version} \ --cache-from type=local,src=.cache/linux/arm/v6/${version} \",0,Fix cache path
- name: get registered gitlab runners # noqa command-instead-of-shell ansible.builtin.shell: 'gitlab-runner list' - name: register gitlab runners # noqa jinja[spacing] changed_when: true - name: unregister runners # noqa jinja[spacing] changed_when: true,0,ansible-lint: Fix some errors
"vpc_id: ""{{vpcoutid}}""",0,new code is added to playbook13
"- name: create second virtual network resource_group: ""{{ resource_group_secondary }}"" virtual_network: ""{{ vnet_name1 }}"" state: absent",0,fix typo in vnet_peering doc (#66)
ansible.builtin.template: ansible.builtin.template:,0,Refactor: Modules and linting suggestions
"""task failed for testing""",1,Fix wrong parameter for fail module
"- name: create & set chown user:user to /etc/nginx/conf.d - name: create & set chown user:user to /var/www file: state: directory path: /var/www owner: ""{{ ansible_user }}"" group: ""{{ ansible_user }}"" mode: 0700",0,Fix chown (0700) for /var/www
"- --pod-network-cidr=192.168.2.0/24 command: ""{{ item }}"" with_items: - mkdir -p /home/pi/.kube - cp -i /etc/kubernetes/admin.conf /home/pi/.kube/config - chown -r pi:pi /home/pi/.kube shell: kubectl apply -f ""https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')""",1,"Typo in worker kubelet args, install specific version of docker, set daemon params"
"- name: create trackingdb-1 on secondary cluster name: ""{{ secondary_instance }}-trackingdb-1"" device_name: ""disk-instance-secondary-trackingdb-1-{{ prefix_name }}"" disk_name: ""disk-instance-secondary-trackingdb-1-{{ prefix_name }}"" register: gce_trackingdb1_secondary - name: create trackingdb-2 on secondary cluster gcp_compute_instance: name: ""{{ secondary_instance }}-trackingdb-2"" machine_type: ""{{ machine_type }}"" disks: - auto_delete: true boot: true device_name: ""disk-instance-secondary-trackingdb-2-{{ prefix_name }}"" initialize_params: disk_name: ""disk-instance-secondary-trackingdb-2-{{ prefix_name }}"" disk_size_gb: 30 disk_type: pd-ssd source_image: ""{{ image }}"" network_interfaces: - access_configs: - name: external nat type: one_to_one_nat zone: ""{{ zone }}"" project: ""{{ project_id }}"" auth_kind: serviceaccount service_account_file: ""{{ credentials_file }}"" state: present tags: items: - geo-ansible register: gce_trackingdb2_secondary - name: create trackingdb-3 on secondary cluster gcp_compute_instance: name: ""{{ secondary_instance }}-trackingdb-3"" machine_type: ""{{ machine_type }}"" disks: - auto_delete: true boot: true device_name: ""disk-instance-secondary-trackingdb-3-{{ prefix_name }}"" initialize_params: disk_name: ""disk-instance-secondary-trackingdb-3-{{ prefix_name }}"" disk_size_gb: 30 disk_type: pd-ssd source_image: ""{{ image }}"" network_interfaces: - access_configs: - name: external nat type: one_to_one_nat zone: ""{{ zone }}"" project: ""{{ project_id }}"" auth_kind: serviceaccount service_account_file: ""{{ credentials_file }}"" state: present tags: items: - geo-ansible register: gce_trackingdb3_secondary",1,Refactor items and groups usage to condensate them into fewer lines
"- lint and validate stage: lint and validate else echo ""no vulnerabilities detected!"" stage: lint and validate",0,Echo if no vulnerabilities were found
when: not tmuxconf.stat.exists,0,tmux: fix typo
"- name: get pip installer get_url: url: https://bootstrap.pypa.io/pip/2.7/get-pip.py dest: /tmp/get-pip.py - name: install pip ansible.builtin.command: cmd: python /tmp/get-pip.py - name: remove trash ansible.builtin.file: path: /tmp/get-pip.py state: absent - name: install python libs ansible.builtin.pip: name: pymysql login_password: ""{{ mysql_root_password }}"" login_user: ""{{ mysql_root_user }}"" no_log: true",0,"add integration with hcl vault, move passwords to vault, remove unnecessary dirs, fix some style typos"
"name: ""{{ motion_packages }}""",0,Addressed looping package installation deprecation.
- apply netplan,1,fix: do not run netplan if using only systemd
- openstack.cloud,1,fix: updated dep URIs
yum: enablerepo: https://brave-browser-rpm-release.s3.brave.com/x86_64/ - name: add rpm fusion free and non-free repos - bash_completion - vscodium - aria2c - speedtest - vim - yubikey-personatization-gui,1,Small fixes
"register: vproelb-sg group_id: ""{{vproelb-sg.group_id}}""",1,new code is added to playbook13
become: yes,1,Bug in Ansible 2.4.2 that doesn't allow resetting of SSH connection.
"name: ['cifs-utils', 'samba']",0,"update ansible syntax, fix issues with ci role"
"when: wait_service_staus is undefined and wait_service_tasks.tasks | count == 0 when: wait_service_tasks.tasks | count > 0 wait_service_time: ""{{ wait_service_status is in terminate_states | ternary(0, 3) }}""",1,5046 fixes in mds wait service role
repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} main state: present,0,Trying fixing repository issue
"tower_env: ""local""",1,fix tower env
"src: ""{{ item + '.j2' }}""",0,Fix missing single quotes/syntax error.
# @tag: configuration # description of configurationç # @action: install # install all the needed appsç # ñçç,0,minor fixes
- php-pear,0,Cleanup formatting and fix pear
"name: ""{{ nautilus_packages }}""",0,Addressed looping package installation deprecation.
# as understood by the `kvm_tool create machine` command (see the # [_kvm.kvm_tool_ git # repository](https://levigo.de/stash/projects/lc/repos/kvm.kvm_tool/)).,0,Try to fix link in README
- shell: ' sudo apt-get install apache2-utils ',1,Add treafik2.2 bugs fixes 2
