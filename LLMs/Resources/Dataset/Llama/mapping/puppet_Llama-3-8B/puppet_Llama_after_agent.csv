Row_Number,Script,Original_Defect_Label,Misconfiguration_Label_llm,MisconfigurationFound,RelatedCWE,Reason
1,"class cluster::haproxy::rsyslog ( $log_file = '/var/log/haproxy.log', ) { include ::rsyslog::params file { '/etc/rsyslog.d/haproxy.conf': ensure => present, content => template(""${module_name}/haproxy.conf.erb""), notify => service[$::rsyslog::params::service_name], } if !defined(service[$::rsyslog::params::service_name]) { service { $::rsyslog::params::service_name: ensure => 'running', enable => true, } } }",1,1,"content => template(${module_name}/haproxy.conf.erb), file { '/etc/rsyslog.d/haproxy.conf':, if!defined(service[$::rsyslog::params::service_name]) {, include ::rsyslog::params, notify => service[$::rsyslog::params::service_name], service { $::rsyslog::params::service_name:","CWE-20: Improper Input Validation, CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","{'reason': ""Not related to the CWE. The problem is not in the misconfiguration but in the content of the file that's being created. Although not directly, it's indirectly related to CWE-20."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
2,"class ssh::config { include users::root include ssh::settings include ssh::service case $::operatingsystem { centos: { $sftp_line = ""subsystem sftp /usr/libexec/openssh/sftp-server"" } } case $::operatingsystem { windows: { include packages::kts $publickey_logon_ini = ""c:/program files/kts/publickey_logon.ini"" $rsakey_ky = ""c:/program files/kts/rsakey.ky"" $kts_ini = ""c:/program files/kts/kts.ini"" file { $ssh::settings::genkey_dir: ensure => directory; } file { ""c:/program files/kts/kts.ini"": content => template(""${module_name}/kts.ini.erb""), show_diff => false, notify => service['kts'], } exec { ""rsakey"": command => '""c:\program files\kts\daemon.exe"" -rsakey', require => class[""packages::kts""], notify => service['kts'], creates => $rsakey_ky; } file { ""c:/program files/kts/scripts/allusers.bat"": source => ""puppet:///modules/ssh/allusers.bat"", replace => true, require => class[""packages::kts""]; } file { ""${::ssh::settings::genkey_dir}/genkeys.rb"": source => ""puppet:///modules/ssh/genkeys.rb"", require => class['packages::kts']; } exec { 'generate-kts-publickey-logon-ini': command => ""\""${::ruby_interpreter}\"" genkeys.rb -o ../publickey_logon.ini"", cwd => $ssh::settings::genkey_dir, require => file[""${::ssh::settings::genkey_dir}/genkeys.rb""], refreshonly => true, logoutput => true; } acl { [$publickey_logon_ini, $ssh::settings::genkey_dir, $rsakey_ky, $kts_ini]: purge => true, inherit_parent_permissions => false, require =>[exec['generate-kts-publickey-logon-ini'], file[$ssh::settings::genkey_dir], exec[ ""rsakey""], file[$kts_ini], ], permissions => [ { identity => 'root', rights => ['full'] }, { identity => 'system', rights => ['full'] }, ]; } } default: { file { $ssh::settings::ssh_config: owner => $users::root::username, group => $users::root::group, mode => 0644, content => template(""${module_name}/ssh_config.erb""); $ssh::settings::sshd_config: owner => $::users::root::username, group => $::users::root::group, mode => 0644, notify => class['ssh::service'], content => template(""${module_name}/sshd_config.erb""); $ssh::settings::known_hosts: owner => $::users::root::username, group => $::users::root::group, mode => 0644, content => template(""${module_name}/known_hosts.erb""); } } } }",1,1,"case $::operatingsystem { default: { file { \$ssh::settings::ssh_config:, case $::operatingsystem { windows: { include packages::kts $publickey_logon_ini =, class['ssh::service'], content => template('${module_name}/known_hosts.erb'), content => template('${module_name}/ssh_config.erb'), exec { 'generate-kts-publickey-logon-ini': command => \, file { \, template('${module_name}/sshd_config.erb')","CWE-522, CWE-532","{'reason': 'The misconfiguration is related to the CWE due to the misconfiguration being a file permission misconfiguration. This is a known CWE which deals with unintended file access.', 'related_cwe': 'CWE-522, CWE-532', 'is_misconfiguration_related': 'Yes'}"
3,"define midonet::resources::network_creation( $api_endpoint = 'http://127.0.0.1:8181/midonet-api', $keystone_username = 'midogod', $keystone_password = 'testmido', $tenant_name = 'admin', $controller_ip = '127.0.0.1', $controller_neutron_port = '9696', $network_external = 'ext-net', $allocation_pools = ['start=172.17.0.100,end=172.17.0.200'], $gateway_ip = '172.17.0.1', $subnet_cidr = '172.17.0.0/24', $subnet_name = 'ext-subnet', $edge_router_name = 'edge-router', $edge_network_name = 'net-edge1-gw1', $edge_subnet_name = 'subnet-edge1-gw1', $edge_cidr = '172.17.0.0/24', $port_name = 'testport', $port_fixed_ip = '172.17.0.102', $port_interface_name = 'eth1', $binding_host_id = undef ) { include stdlib if($::osfamily == 'debian' and $::operatingsystemmajrelease == '16.04') { package {'biosdevname': ensure => 'latest', before => neutron_router[$edge_router_name] } } if($::osfamily == 'redhat') { package {'biosdevname': ensure => 'latest', before => neutron_router[$edge_router_name] } } neutron_network { $network_external: ensure => present, router_external => true, shared => false, } -> neutron_subnet { $subnet_name: ensure => present, allocation_pools => $allocation_pools, enable_dhcp => false, gateway_ip => $gateway_ip, cidr => $subnet_cidr, network_name => $network_external, } -> neutron_router { $edge_router_name: ensure => present, } -> neutron_router_interface { ""${edge_router_name}:${subnet_name}"": ensure => present, } -> neutron_network { $edge_network_name: ensure => present, tenant_id => $tenant_name, provider_network_type => 'uplink', } -> neutron_subnet { $edge_subnet_name: ensure => present, enable_dhcp => false, cidr => $edge_cidr, tenant_id => $tenant_name, network_name => $edge_network_name, } -> neutron_port { $port_name: ensure => present, network_name => $edge_network_name, binding_host_id => pick($binding_host_id,$::hostname), binding_profile => { 'interface_name' => c7_int_name($port_interface_name) }, ip_address => [[$port_fixed_ip]], } -> neutron_router_interface { ""${edge_router_name}:null"": ensure => present, port => $port_name, } }",1,1,"neutron_port, neutron_router, neutron_router_interface, neutron_subnet, package","CWE-20, CWE-25","{'reason': 'The package biosdevname is necessary to be installed to configure the neutron router interfaces. In this case, a neutron router is configured and two interfaces are added. The first interface connects to a DHCP network, while the second interface connects to a provider network. Both interfaces are created dynamically using the biosdevname package, which needs to be installed. Therefore, this misconfiguration is related to the CWE-25 vulnerability.', 'related_cwe': 'CWE-25', 'is_misconfiguration_related': 'Yes'}"
4,"class timezone { include users::root case $::operatingsystem { centos: { include packages::tzdata file { ""/etc/localtime"": mode => 644, owner => root, group => $users::root::group, content => file(""/usr/share/zoneinfo/us/pacific""), force => true, require => class['packages::tzdata'], notify => exec['/usr/sbin/tzdata-update']; ""/etc/sysconfig/clock"": mode => 644, owner => root, group => $users::root::group, content => 'zone=""us/pacific""', force => true, require => class['packages::tzdata'], notify => exec['/usr/sbin/tzdata-update']; } exec { ""/usr/sbin/tzdata-update"": refreshonly => true; } } ubuntu: { include packages::tzdata file { ""/etc/timezone"": mode => 644, owner => root, group => $users::root::group, content => ""america/los_angeles\n"", force => true, require => class['packages::tzdata']; } exec { ""dpkg-reconfigure-tzdata"": command => ""/usr/sbin/dpkg-reconfigure -f noninteractive tzdata"", subscribe => file[""/etc/timezone""], refreshonly => true; } } darwin: { osxutils::systemsetup { timezone: setting => ""america/los_angeles""; } } windows: { } } }",1,1,"notify => exec[\\\\n\\\\n/usr/sbin/tzdata-\\n\\\\nupdate\\\\n\\\\n];, refreshonly => true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, refreshonly => true;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n, refreshonly => true;\\\\n\\\\n, require => class[\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npackages::tzdata\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, require => class[\\\\n\\\\\\\\npackages::tzdata\\\\\\\\n\\\\n],\\\\\\\\n, require => class[\\\\n\\\\npackages::tzdata\\\\n\\\\n],\\\\n, require => class[\\n\\npackages::tzdata\\n\\n],\\n, subscribe => file[\\\\\\\\n\\\\\\\\\\\\\\\\\\\\n/etc/timezone\\\\\\\\\\\\\\\\\\\\n\\\\\\\\n],\\\\\\\\n, timezone { include packages::tzdata\n\n",CWE-22,"{'reason': '1)', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
5,"class murano::cfapi( $tenant, $manage_service = true, $enabled = true, $package_ensure = 'present', $bind_host = $::os_service_default, $bind_port = $::os_service_default, $auth_url = 'http://127.0.0.1:5000', ) { include ::murano::params include ::murano::policy murano_cfapi_config<||> ~> service['murano-cfapi'] class['murano::policy'] -> service['murano-cfapi'] if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } murano_cfapi_config { 'cfapi/tenant': value => $tenant; 'cfapi/bind_host': value => $bind_host; 'cfapi/bind_port': value => $bind_port; 'cfapi/auth_url': value => $auth_url; } package { 'murano-cfapi': ensure => $package_ensure, name => $::murano::params::cfapi_package_name, tag => ['openstack', 'murano-package'], } service { 'murano-cfapi': ensure => $service_ensure, name => $::murano::params::cfapi_service_name, enable => $enabled, require => package['murano-cfapi'], tag => 'murano-service', } package['murano-cfapi'] ~> service['murano-cfapi'] murano_cfapi_paste_ini_config<||> ~> service['murano-cfapi'] }",1,1,"class murano::cfapi( $tenant, $manage_service = true, $enabled = true, $package_ensure = 'present', $bind_host = $::os_service_default, $bind_port = $::os_service_default, $auth_url = 'http://127.0.0.1:5000', ), if $enabled {, if $manage_service {, murano_cfapi_config { 'cfapi/tenant': value => $tenant;, murano_cfapi_config<||> ~> service['murano-cfapi'], murano_cfapi_paste_ini_config { 'cfapi/config_file': value => '/etc/murano/murano-cfapi.conf;',, murano_cfapi_paste_ini_config { 'cfapi/pipeline': value => 'paste_deploy:config_file = murano-cfapi.conf;',, murano_cfapi_paste_ini_config<||> ~> service['murano-cfapi']","CWE-16, CWE-22, CWE-732","{'reason': 'The vulnerable script is related to CWE-16, CWE-22, CWE-732.', 'related_cwe': 'CWE-16, CWE-22, CWE-732', 'is_misconfiguration_related': 'Yes'}"
6,"node /b-2008-\w+-\d+.winbuild.releng.scl3.mozilla.com/ { $slave_trustlevel = 'try' include toplevel::slave::releng } node ""relabs-puppet2.relabs.releng.scl3.mozilla.com"" { $node_security_level = 'high' include toplevel::server::puppetmaster } node ""hp1.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""hp2.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""hp3.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""hp4.relabs.releng.scl3.mozilla.com"" { include toplevel::server } node ""hp5.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""hp6.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""hp7.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix-mn-1.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix-mn-2.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix-mn-3.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix-mn-4.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix-mn-5.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix-mn-6.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-1.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-2.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-3.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-4.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-5.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-6.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-7.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-8.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""ix1204-9.relabs.releng.scl3.mozilla.com"" { include toplevel::base } node ""dividehex-test.relabs.releng.scl3.mozilla.com"" { include toplevel::server }",0,1,"include toplevel::base, include toplevel::server, include toplevel::server::puppetmaster, include toplevel::slave::releng",CWE-937,"{'reason': ""Toplevel::Server and Toplevel::Base are part of the same module, but they shouldn't have been included into the same node stanza. It is a misconfiguration because it violates the Puppet language specification for proper module layout. Including them in the same node stanza results in the module's content being applied multiple times."", 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
7,"class selfserve_agent::install { include ::config include dirs::builds include users::builder include packages::mozilla::python27 include packages::gcc include packages::make include packages::mysql_devel include selfserve_agent::settings python::virtualenv { ""${selfserve_agent::settings::root}"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""anyjson==0.3.3"", ""beaker==1.5.4"", ""formencode==1.2.4"", ""mako==0.4.1"", ""markupsafe==0.12"", ""mysql-python==1.2.3"", ""paste==1.7.5.1"", ""pastedeploy==1.5.0"", ""pastescript==1.7.3"", ""pygments==1.4"", ""pylons==1.0"", ""amqp==1.4.3"", ""buildapi==0.3.17"", ""buildbot==0.8.4-pre-moz1"", ""decorator==3.3.1"", ""distribute==0.6.14"", ""kombu==3.0.12"", ""routes==1.12.3"", ""sqlalchemy==0.6.8"", ""tempita==0.5.1"", ""twisted==10.1.0"", ""weberror==0.10.3"", ""webhelpers==1.3"", ""webob==1.0.8"", ""webtest==1.2.3"", ""meld3==0.6.5"", ""nose==1.0.0"", ""pytz==2011d"", ""redis==2.4.10"", ""simplejson==2.1.6"", ""wsgiref==0.1.2"", ""zope.interface==3.6.1"", ]; } }",0,1,"group => \\, include dirs::builds \\\\, include packages::gcc \\\\\\\\, include packages::make \\\\\\\\\, include packages::mozilla::python27 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, include packages::mysql_devel \\\\\\\\\\\\\\\\\, include selfserve_agent::settings \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, python => \\\\, python::virtualenv { \, user => \\",CWE-732,"{'reason': 'The provided misconfiguration is not a vulnerability in itself, but the lack of user and group separation could have allowed the user to modify important system configuration files', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
8,"class cinder::volume::netapp ( $netapp_login, $netapp_password, $netapp_server_hostname, $netapp_server_port = '80', $netapp_size_multiplier = '1.2', $netapp_storage_family = 'ontap_cluster', $netapp_storage_protocol = 'nfs', $netapp_transport_type = 'http', $netapp_vfiler = undef, $netapp_volume_list = undef, $netapp_vserver = undef, $netapp_partner_backend_name = undef, $expiry_thres_minutes = '720', $thres_avl_size_perc_start = '20', $thres_avl_size_perc_stop = '60', $nfs_shares = undef, $nfs_shares_config = '/etc/cinder/shares.conf', $netapp_copyoffload_tool_path = undef, $netapp_controller_ips = undef, $netapp_sa_password = undef, $netapp_storage_pools = undef, $netapp_host_type = $::os_service_default, $netapp_webservice_path = '/devmgr/v2', $nfs_mount_options = undef, $extra_options = {}, $netapp_eseries_host_type = undef, ) { if $netapp_eseries_host_type { warning('the ""netapp_eseries_host_type"" parameter is deprecated. use ""netapp_host_type"" instead.') $netapp_host_type_real = $netapp_eseries_host_type } else { $netapp_host_type_real = $netapp_host_type } warning('usage of cinder::volume::netapp is deprecated, please use cinder::backend::netapp instead.') cinder::backend::netapp { 'default': netapp_login => $netapp_login, netapp_password => $netapp_password, netapp_server_hostname => $netapp_server_hostname, netapp_server_port => $netapp_server_port, netapp_size_multiplier => $netapp_size_multiplier, netapp_storage_family => $netapp_storage_family, netapp_storage_protocol => $netapp_storage_protocol, netapp_transport_type => $netapp_transport_type, netapp_vfiler => $netapp_vfiler, netapp_volume_list => $netapp_volume_list, netapp_vserver => $netapp_vserver, netapp_partner_backend_name => $netapp_partner_backend_name, expiry_thres_minutes => $expiry_thres_minutes, thres_avl_size_perc_start => $thres_avl_size_perc_start, thres_avl_size_perc_stop => $thres_avl_size_perc_stop, nfs_shares => $nfs_shares, nfs_shares_config => $nfs_shares_config, netapp_copyoffload_tool_path => $netapp_copyoffload_tool_path, netapp_controller_ips => $netapp_controller_ips, netapp_sa_password => $netapp_sa_password, netapp_storage_pools => $netapp_storage_pools, netapp_host_type => $netapp_host_type_real, netapp_webservice_path => $netapp_webservice_path, nfs_mount_options => $nfs_mount_options, extra_options => $extra_options, } }",1,1,"cinder::backend::netapp { 'default': netapp_login => $netapp_login, netapp_password => $netapp_password, netapp_server_hostname => $netapp_server_hostname, netapp_server_port => $netapp_server_port, netapp_size_multiplier => $netapp_size_multiplier, netapp_storage_family => $netapp_storage_family, netapp_storage_protocol => $netapp_storage_protocol, netapp_transport_type => $netapp_transport_type, netapp_vfiler => $netapp_vfiler, netapp_volume_list => $netapp_volume_list, netapp_vserver => $netapp_vserver, netapp_partner_backend_name => $netapp_partner_backend_name, expiry_thres_minutes => $expiry_thres_minutes, thres_avl_size_perc_start => $thres_avl_size_perc_start, thres_avl_size_perc_stop => $thres_avl_size_perc_stop, nfs_shares => $nfs_shares, nfs_shares_config, expiry_thres_minutes => $expiry_thres_minutes, netapp_controller_ips => $netapp_controller_ips, netapp_copyoffload_tool_path => $netapp_copyoffload_tool_path, netapp_eseries_host_type => $netapp_eseries_host_type, netapp_host_type_real => $netapp_host_type_real, netapp_sa_password => $netapp_sa_password, netapp_storage_pools => $netapp_storage_pools, thres_avl_size_perc_start => $thres_avl_size_perc_start, thres_avl_size_perc_stop => $thres_avl_size_perc_stop","CWE-306, CWE-732","{'reason': 'The issue of netapp_sa_password and netapp_sa_password not being encrypted is a related misconfiguration to CWE-732. The misconfiguration exists in the file cinder.shares.conf that can be utilized in any environment. It is an important issue that must be remediated. The cinder backend is responsible for creating all the cinder instances, and if these instances are configured incorrectly, it may result in a denial-of-service condition or may be used to execute an attack on a different server. In a more general sense, the misconfiguration can also result in a breach or a loss of confidentiality. Thus, it is important to fix this misconfiguration.', 'related_cwe': 'CWE-732, CWE-306', 'is_misconfiguration_related': 'Yes'}"
9,class { '::osnailyfacter::virtual_ips::virtual_ips' :},1,1,class { '::osnailyfacter::virtual_ips::virtual_ips':},CWE-937,"{'reason': ""The misconfiguration is related to the provided CWE because the class name in the Puppet code indicates that virtual IPs are being added. However, a potential vulnerability arises when using the 'virtual_ip' module, as the 'address' parameter should be validated to ensure that it is unique. Without proper validation, a potential for conflict could exist. Additionally, the 'cidr' parameter should also be validated to ensure that the IP range specified falls within the defined subnet. This would ensure that no IP address is assigned outside of the subnet, preventing potential network attacks or misuse. Furthermore, the 'interface' parameter should be validated to ensure that the interface exists on the system. Without proper validation, a potential for misconfiguration could exist if the interface does not exist"", 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
10,"class ceilometer::config ( $ceilometer_config = {}, $ceilometer_api_paste_ini = {}, ) { validate_hash($ceilometer_config) validate_hash($ceilometer_api_paste_ini) create_resources('ceilometer_config', $ceilometer_config) create_resources('ceilometer_api_paste_ini', $ceilometer_api_paste_ini) }",0,1,"class ceilometer::config ( $ceilometer_config = {}, $ceilometer_api_paste_ini = {}, ) {, create_resources('ceilometer_api_paste_ini', $ceilometer_api_paste_ini), create_resources('ceilometer_config', $ceilometer_config), validate_hash($ceilometer_api_paste_ini), validate_hash($ceilometer_config), }",CWE-345,"{'reason': 'Puppet uses the \\n\\n\\ncreate_resources function, which returns a hash of name-value pairs that map \\n\\n\\nthe name of a resource to the values that were defined for that resource.\\n\\n\\nIn this instance, the \\n\\n\\nvalidate_hash function is used to ensure that the provided hash contains the correct \\n\\n\\nexpected keys. However, because this function accepts an argument for the hash, \\n\\n\\nthe actual hash value is not checked for its contents.\\n\\n\\nWhile this function can ensure that a given hash contains the correct keys, it does \\n\\n\\nnot validate that each value in the hash is of the correct type. This means that \\n\\n\\nit is possible for a', 'related_cwe': 'CWE-345', 'is_misconfiguration_related': 'Yes'}"
11,"define npm::global { require ::npm exec { ""npm_global_${title}"": command => ""/usr/bin/npm install -g ${title}"", user => 'root', group => 'root', creates => ""/usr/lib/node_modules/${title}"", environment => [ ""npm_config_cache=${::npm::cache_dir}"", 'npm_config_global=false', 'link=g++', ], } }",1,1,"command =>, creates =>, define npm::global, environment =>, group =>, user =>","CWE-20: Improper Input Validation, CWE-502: Deserialization of Untrusted Data","{'reason': ""CWE-20: Improper Input Validation: If the input title is not a valid module, then it could be possible to install a module that isn't meant to be installed globally. CWE-502: Deserialization of Untrusted Data: If a malicious party can control the input title in this module, then they could be able to write a module that would be malicious if installed globally."", 'related_cwe': 'CWE-502, CWE-20', 'is_misconfiguration_related': 'Yes'}"
12,"define l23network::l3::route ( $destination, $gateway, $metric = undef, $vendor_specific = undef, $by_network_scheme = false, $provider = undef, $ensure = 'present', ) { include ::l23network::params $r_name = get_route_resource_name($destination, $metric) if ! defined (l3_route[$r_name]) { if $provider { $config_provider = ""${provider}_${::l23_os}"" } else { $config_provider = undef } l3_route { $r_name : ensure => $ensure, destination => $destination, gateway => $gateway, metric => $metric, vendor_specific => $vendor_specific, provider => $provider } if ! $by_network_scheme { l3_ifconfig<||> -> l3_route<||> } } anchor['l23network::init'] -> l3_route<||> }",1,1,"anchor['l23network::init'] -> l3_route<||>, if! defined (l3_route[$r_name]) {, l3_ifconfig<||> -> l3_route<||> }, l3_route { $r_name : ensure => $ensure, destination => $destination, gateway => $gateway, metric => $metric, vendor_specific => $vendor_specific, provider => $provider }",CWE-20,"{'reason': 'This misconfiguration has a similar relationship to CWE-20. The misconfiguration is related to the potential usage of the defined l23network::l3::route() function being used outside of its intended scope. While it is not guaranteed to occur, it is still possible for other functions within the Puppet code to make use of the l23network::l3::route() function, including potentially setting values for $destination, $gateway, $metric, $vendor_specific, and $provider without authorization or consent. This potential misconfiguration could lead to unintended consequences within the Puppet code, such as unintended changes being made to the configuration settings or unintended routes being established within the network.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
13,"define nova::manage::floating ( $network ) { include ::nova::deps nova_floating { $name: ensure => present, network => $network, provider => 'nova_manage', } }",0,1,"nova::deps, nova::manage::floating ( $network ) { include ::nova::deps, nova_floating { $name: ensure => present, network => $network, provider => 'nova_manage', }",CWE-352,"{'reason': ""It appears that the `nova::manage::floating` resource, whose parameters were specified in this row, allows a user to specify the network value without sanitizing it, which can lead to the injection of malicious code into the `nova` module. This issue is a violation of the `CWE-352 - Cross-Site Request Forgery` category, which outlines the dangers of allowing unvalidated user input to control a program's execution flow."", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
14,"class runner::tasks::restart_services($runlevel=99) { include runner $service_names = """" file { ""/opt/runner/tasks.d/2-restart_services"": ensure => absent, } file { ""/opt/runner/tasks.d/100-restart_services"": ensure => absent, } runner::task { ""${runlevel}-restart_services"": content => template(""${module_name}/tasks/restart_services.erb""); } }",1,1,"file { \\, file { \\\\, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file {include runner, runner::task { \",CWE-416,"{'reason': 'There is a potential security issue here.', 'related_cwe': 'CWE-416', 'is_misconfiguration_related': 'Yes'}"
15,"class ceilometer::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/ceilometer', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { $use_syslog_real = pick($::ceilometer::use_syslog,$use_syslog) $use_stderr_real = pick($::ceilometer::use_stderr,$use_stderr) $log_facility_real = pick($::ceilometer::log_facility,$log_facility) $log_dir_real = pick($::ceilometer::log_dir,$log_dir) $debug_real = pick($::ceilometer::debug,$debug) if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } oslo::log { 'ceilometer_config': debug => $debug_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real, log_dir => $log_dir_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, } }",1,1,"debug => $debug_real, if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') }, log_dir => $log_dir_real, logging_context_format_string => $logging_context_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_default_format_string => $logging_default_format_string, oslo::log { 'ceilometer_config': debug => $debug_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real, log_dir => $log_dir_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, }},, syslog_log_facility => $log_facility_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real","CWE-295, CWE-384, CWE-732","{'reason': 'This misconfiguration is related to CWE-384 (Failure to sanitize input) because it is susceptible to CWE-295 (Use of Client-Side Injection Techniques in a Web Browser), which describes using client-side code (like JavaScript) to inject malicious code into a web application. The use of client-side code in a web browser can result in data leakage or unauthorized access. CWE-732 (Using One-Way Cryptography to Protect Secrets) describes the use of one-way cryptography to protect secrets. It may be used to store sensitive information, such as passwords, without having to send that data over a network or store it in a database.', 'related_cwe': 'CWE-384', 'is_misconfiguration_related': 'Yes'}"
16,"define cinder::type_set ( $type, $key, $value = $name, $os_password = undef, $os_tenant_name = undef, $os_username = undef, $os_auth_url = undef, $os_region_name = undef, ) { if $os_password or $os_region_name or $os_tenant_name or $os_username or $os_auth_url { warning('parameters $os_password/$os_region_name/$os_tenant_name/$os_username/$os_auth_url are not longer required.') warning('auth creds will be used from env or /root/openrc file or cinder.conf') } cinder_type { $type: ensure => present, properties => [""${key}=${value}""], } }",0,1,"cinder_type { $type: ensure => present, properties => [, ensure => present, properties => [, properties => [",CWE-306,"{'reason': 'There are various ways the script can be exploited to add arbitrary keys and values to the cinder_type, which can be leveraged to perform malicious operations. It is possible for an attacker to add an extra key value pair that will cause a crash in the Puppet server or that can overwrite an existing key value pair and cause a DoS or other issue. It is important to note that the script lacks input validation to determine whether a key value pair added is valid or not, which makes this a significant security concern.', 'related_cwe': '306', 'is_misconfiguration_related': 'Yes'}"
17,"class ceph::mds ( $mds_activate = true, $mds_data = '/var/lib/ceph/mds/$cluster-$id', $keyring = '/var/lib/ceph/mds/$cluster-$id/keyring', ) { if $mds_activate { ceph_config { 'mds/mds_data': value => $mds_data; 'mds/keyring': value => $keyring; } } else { ceph_config { 'mds/mds_data': ensure => absent; 'mds/keyring': ensure => absent; } } }",0,1,"ceph::mds ( $mds_data = '/var/lib/ceph/mds/$cluster-$id', $keyring = '/var/lib/ceph/mds/$cluster-$id/keyring', ) {, ceph_config {'mds/keyring': ensure => absent; }, ceph_config {'mds/keyring': value => $keyring; }, ceph_config {'mds/mds_data': ensure => absent; }, ceph_config {'mds/mds_data': value => $mds_data; }, class ceph::mds ( $mds_activate = true, $mds_data = '/var/lib/ceph/mds/$cluster-$id', $keyring = '/var/lib/ceph/mds/$cluster-$id/keyring', ) {","CWE-24, CWE-25","{'reason': ""CWE-24: Input Injection - The path $cluster-$id in the value of'mds/mds_data' may potentially result in input injection vulnerabilities due to the user-defined value of '$cluster-$id'. Furthermore, the path '/var/lib/ceph/mds/$cluster-$id/keyring' in the value of'mds/keyring' may also lead to input injection issues if '$cluster-$id' is user-defined. Additionally, CWE-25: Unrestricted Upload of File Type - By creating a custom value of '$cluster-$id', the user may be able to perform arbitrary file uploads to an unauthenticated user. This may lead to privilege escalation."", 'related_cwe': 'CWE-24, CWE-25', 'is_misconfiguration_related': 'Yes'}"
18,"define pacemaker::resource::ip( $ensure = 'present', $ip_address = undef, $cidr_netmask = '32', $nic = '', $group_params = '', $post_success_sleep = 0, $tries = 1, $try_sleep = 0, $verify_on_create = false, ) { $cidr_option = $cidr_netmask ? { '' => '', default => "" cidr_netmask=${cidr_netmask}"" } $nic_option = $nic ? { '' => '', default => "" nic=${nic}"" } $resource_name = regsubst($ip_address, '(:)', '.', 'g') pcmk_resource { ""ip-${resource_name}"": ensure => $ensure, resource_type => 'ipaddr2', resource_params => ""ip=${ip_address}${cidr_option}${nic_option}"", group_params => $group_params, post_success_sleep => $post_success_sleep, tries => $tries, try_sleep => $try_sleep, verify_on_create => $verify_on_create, require => exec['wait-for-settle'], } }",1,1,"group_params: admin, ipaddress: 1.2.3.4, post_success_sleep: 0, verify_on_create: true","CWE-259: Other Option Management, CWE-305: Authentication Bypass by Secondary Issue, CWE-306: Missing Authentication for Critical Function, CWE-359: Improper Cadence of Events, CWE-364: Incorrect Privilege Assignment, CWE-522: Insufficiently Protected Credentials","{'reason': 'Describe here why the misconfiguration is related to the provided CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
19,notice('modular: odl-service.pp') class { 'opendaylight::service':},1,1,class { 'opendaylight::service':},CWE-250,"{'reason': 'The provided issue is related to the specified CWE, since it is a specific instance of CWE-250, \\', 'related_cwe': 'CWE-250, CWE-284, CWE-285, CWE-287, CWE-288, CWE-289', 'is_misconfiguration_related': 'Yes'}"
20,"class packages::mod_passenger { case $::operatingsystem { centos: { package { ""mod_passenger"": ensure => ""3.0.12-1.el6""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"3.0.12-1.el6, default: {, ensure =>, ensure => \\, mod_passenger, package {, package { \, }; \\, }; \\\\","CWE-19, CWE-20","{'reason': ""The'mod_passenger' package was set incorrectly. The package needs to be set correctly to ensure that the application's service runs correctly."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
21,"class heat::engine ( $auth_encryption_key, $package_ensure = 'present', $manage_service = true, $enabled = true, $heat_stack_user_role = $::os_service_default, $heat_metadata_server_url = 'http://127.0.0.1:8000', $heat_waitcondition_server_url = 'http://127.0.0.1:8000/v1/waitcondition', $heat_watch_server_url = 'http://127.0.0.1:8003', $engine_life_check_timeout = $::os_service_default, $deferred_auth_method = $::os_service_default, $default_software_config_transport = $::os_service_default, $default_deployment_signal_transport = $::os_service_default, $trusts_delegated_roles = ['heat_stack_owner'], $instance_connection_is_secure = $::os_service_default, $instance_connection_https_validate_certificates = $::os_service_default, $max_resources_per_stack = $::os_service_default, $num_engine_workers = $::os_service_default, $convergence_engine = $::os_service_default, $environment_dir = $::os_service_default, $template_dir = $::os_service_default, ) { include ::heat::deps $allowed_sizes = ['16','24','32'] $param_size = size($auth_encryption_key) if ! (member($allowed_sizes, ""${param_size}"")) { fail(""${param_size} is not a correct size for auth_encryption_key parameter, it must be either 16, 24, 32 bytes long."") } include ::heat include ::heat::params package { 'heat-engine': ensure => $package_ensure, name => $::heat::params::engine_package_name, tag => ['openstack', 'heat-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'heat-engine': ensure => $service_ensure, name => $::heat::params::engine_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => 'heat-service', } heat_config { 'default/auth_encryption_key': value => $auth_encryption_key; 'default/heat_stack_user_role': value => $heat_stack_user_role; 'default/heat_metadata_server_url': value => $heat_metadata_server_url; 'default/heat_waitcondition_server_url': value => $heat_waitcondition_server_url; 'default/heat_watch_server_url': value => $heat_watch_server_url; 'default/engine_life_check_timeout': value => $engine_life_check_timeout; 'default/default_software_config_transport': value => $default_software_config_transport; 'default/default_deployment_signal_transport': value => $default_deployment_signal_transport; 'default/trusts_delegated_roles': value => $trusts_delegated_roles; 'default/deferred_auth_method': value => $deferred_auth_method; 'default/max_resources_per_stack': value => $max_resources_per_stack; 'default/instance_connection_https_validate_certificates': value => $instance_connection_https_validate_certificates; 'default/instance_connection_is_secure': value => $instance_connection_is_secure; 'default/num_engine_workers': value => $num_engine_workers; 'default/convergence_engine': value => $convergence_engine; 'default/environment_dir': value => $environment_dir; 'default/template_dir': value => $template_dir; } }",1,value,value,value,"{'reason': '1', 'related_cwe': '1', 'is_misconfiguration_related': 'Yes'}"
22,"class role::newsletter { mediawiki::extension { 'newsletter': needs_update => true, } }",0,1,"mediawiki::extension { 'newsletter': needs_update => true, }","CWE-119, CWE-1191, CWE-416, CWE-732, CWE-835","{'reason': 'CWE-119 can lead to privilege escalation in the context of this script, because this script enables a specific extension within MediaWiki. This could allow a user to access more information or perform actions that they would not normally be able to without the extension being enabled.\\n\\n\\n\\nCWE-732 relates to information leakage, which can occur in cases where an extension can be enabled, leading to potentially sensitive data being accessed by unauthenticated users.\\n\\n\\n\\nCWE-1191 relates to information leakage, which can occur in cases where an extension can be enabled, leading to potentially sensitive data being accessed by unauthenticated users.\\n\\n\\n\\nCWE-416 relates to information leakage, which can occur in cases where an extension can', 'related_cwe': 'CWE-119, CWE-1191, CWE-416, CWE-732, CWE-835', 'is_misconfiguration_related': 'Yes'}"
23,"keystone_tenant { 'admin': ensure => present, } neutron_network { 'public': ensure => present, router_external => 'true', tenant_name => 'admin', } neutron_subnet { 'public_subnet': ensure => 'present', cidr => '172.24.4.224/28', network_name => 'public', tenant_name => 'admin', } keystone_tenant { 'demo': ensure => present, } neutron_network { 'private': ensure => present, tenant_name => 'demo', } neutron_subnet { 'private_subnet': ensure => present, cidr => '10.0.0.0/24', network_name => 'private', tenant_name => 'demo', } neutron_router { 'demo_router': ensure => present, tenant_name => 'demo', gateway_network_name => 'public', require => neutron_subnet['public_subnet'], } neutron_router_interface { 'demo_router:private_subnet': ensure => present, }",0,1,"keystone_tenant { 'admin':\\\\n ensure => present, }\\\\n, keystone_tenant { 'demo':\\\\n ensure => present,\\\\n }\\\\n, neutron_network { 'private':\\\\n ensure => present,\\\\n tenant_name => 'demo',\\\\n }\\\\n, neutron_network { 'public':\\\\\\\\n ensure => present,\\\\\\\\n router_external => 'true',\\\\\\\\n tenant_name => 'admin',\\\\\\\\n }\\\\\\\\n, neutron_router { 'demo_router':\\n ensure => present,\\n tenant_name => 'demo',\\n gateway_network_name => 'public',\\n require => neutron_subnet['public_subnet'],\\n }\\n, neutron_router_interface { 'demo_router:private_subnet':\\\\n ensure => present,\\\\n network_id => 'public',\\\\n tenant_name => 'admin',\\\\n }\\\\n, neutron_router_interface { 'demo_router:private_subnet':\n ensure => present,\n network_id => 'public',\n tenant_name => 'admin',\n }\n, neutron_subnet { 'private_subnet':\\\\n ensure => present,\\\\n cidr => '10.0.0.0/24',\\\\n network_name => 'private',\\\\n tenant_name => 'demo',\\\\n }\\\\n, neutron_subnet { 'public_subnet':\\\\\\\\\\\\\\\\n ensure => 'present',\\\\\\\\\\\\\\\\n cidr => '172.24.4.224/28',\\\\\\\\\\\\\\\\n network_name => 'public',\\\\\\\\\\\\\\\\n tenant_name => 'admin',\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\n",CWE-384,"{'reason': 'CWE-384 is related to the misconfiguration, because the admin tenant is permitted to create a router. This router will have an interface on the public network, which is only accessible to the admin tenant. Any user of the demo tenant is able to create a router with an interface on the public network. This would allow a user of the demo tenant to access the external network through the public network, which is only accessible to the admin tenant.', 'related_cwe': 'CWE-384', 'is_misconfiguration_related': 'Yes'}"
24,"class jsduck { package { 'jsduck': ensure => '5.3.4', provider => 'gem', } }",1,1,"package { 'jsduck': ensure => '5.3.4', provider => 'gem', }",CWE-119,"{'reason': '1. The misconfiguration allows the installation of an older, less secure version of a package.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
25,"class octavia::db::sync( $extra_params = undef, ) { exec { 'octavia-db-sync': command => ""octavia-db-manage upgrade head ${extra_params}"", path => '/usr/bin', user => 'octavia', refreshonly => true, subscribe => [package['octavia'], octavia_config['database/connection']], } exec['octavia-db-sync'] ~> service<| tag == 'octavia-db-sync-service' |> }",0,1,"class octavia::db::sync( $extra_params = undef, ) {, exec { 'octavia-db-sync': command => \, exec { 'octavia-db-sync': command => \\, exec {'octavia-db-sync': command => \, path => '/usr/bin', user => 'octavia', refreshonly => true, subscribe => [package['octavia'], octavia_config['database/connection']], }, service<| tag == 'octavia-db-sync-service' |>}, user => 'octavia', refreshonly => true, subscribe => [package['octavia'], octavia_config['database/connection']], }","CWE-1032, CWE-1033, CWE-1034","{'reason': ""The user octavia and octavia-db-sync are two different things. The user is for a system user, and octavia-db-sync is the command which will run a DB upgrade. It is not the same thing. It could be improved to be something like this: exec { 'octavia-db-sync': command => \\"", 'related_cwe': 'CWE-1032, CWE-1033, CWE-1034', 'is_misconfiguration_related': 'Yes'}"
26,"define vmware::compute_vmware( $availability_zone_name, $vc_cluster, $vc_host, $vc_user, $vc_password, $service_name, $current_node, $target_node, $vlan_interface, $vc_insecure = true, $vc_ca_file = undef, $datastore_regex = undef, $api_retry_count = '5', $maximum_objects = '100', $nova_compute_conf = '/etc/nova/nova-compute.conf', $task_poll_interval = '5.0', $use_linked_clone = true, $wsdl_location = undef, $service_enabled = false, ) { include ::nova::params $vcenter_ca_file = pick($vc_ca_file, {}) $vcenter_ca_content = pick($vcenter_ca_file['content'], {}) $vcenter_ca_filepath = '/etc/nova/vmware-ca.pem' if $service_enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } if ($target_node == $current_node) { if ! empty($vcenter_ca_content) and ! $vc_insecure { $compute_vcenter_ca_filepath = $vcenter_ca_filepath $compute_vcenter_insecure_real = false file { $vcenter_ca_filepath: ensure => file, content => $vcenter_ca_content, mode => '0644', owner => 'root', group => 'root', } } else { $compute_vcenter_ca_filepath = $::os_service_default $compute_vcenter_insecure_real = $vc_insecure } file { $nova_compute_conf: ensure => present, content => template('vmware/nova-compute.conf.erb'), mode => '0600', owner => 'nova', group => 'nova', } package { 'nova-compute': ensure => installed, name => $::nova::params::compute_package_name, } package { 'python-oslo.vmware': ensure => installed, } service { 'nova-compute': ensure => $service_ensure, name => $::nova::params::compute_service_name, enable => $service_enabled, } package['python-oslo.vmware']-> package['nova-compute']-> file[$nova_compute_conf]-> service['nova-compute'] } }",1,1,"file { $nova_compute_conf: ensure => present, content => template('vmware/nova-compute.conf.erb'), mode => '0600', owner => 'nova', group => 'nova', }, package { 'nova-compute': ensure => installed, name => $::nova::params::compute_package_name, }, package { 'python-oslo.vmware': ensure => installed, }, package['python-oslo.vmware']-> package['nova-compute']-> file[$nova_compute_conf]-> service['nova-compute'] } }, service { 'nova-compute': ensure => $service_ensure, name => $::nova::params::compute_service_name, enable => $service_enabled, }, service['nova-compute'] } }","CWE-20, CWE-22","{'reason': ""Misconfigurations related to the specified CWE include incorrect parameters, missing parameters, incorrect parameter values, missing parameter values, or any other issues that lead to the misconfiguration being treated as a security vulnerability.\\n\\nIn this case, the file resource and service resource should not be declared together. This will cause an issue with the correct operation of the service resource.\\n\\nThe reason is that the service resource depends on the package['python-oslo.vmware']-> package['nova-compute']-> file[$nova_compute_conf] \\n\\nThe file resource cannot be declared inside the service resource. It should be declared outside of the service resource, similar to how the package resource is declared.\\n\\n\\n\\nRelated CWE:\\n\\nCWE-20"", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
27,"class cdh::oozie::server( $database = $cdh::oozie::defaults::database, $jdbc_database = $cdh::oozie::defaults::jdbc_database, $jdbc_username = $cdh::oozie::defaults::jdbc_username, $jdbc_password = $cdh::oozie::defaults::jdbc_password, $jdbc_host = $cdh::oozie::defaults::jdbc_host, $jdbc_port = $cdh::oozie::defaults::jdbc_port, $jdbc_driver = $cdh::oozie::defaults::jdbc_driver, $jdbc_protocol = $cdh::oozie::defaults::jdbc_protocol, $db_root_username = $cdh::oozie::defaults::db_root_username, $db_root_password = $cdh::oozie::defaults::db_root_password, $smtp_host = $cdh::oozie::defaults::smtp_host, $smtp_port = $cdh::oozie::defaults::smtp_port, $smtp_from_email = $cdh::oozie::defaults::smtp_from_email, $smtp_username = $cdh::oozie::defaults::smtp_username, $smtp_password = $cdh::oozie::defaults::smtp_password, $authorization_service_authorization_enabled = $cdh::oozie::defaults::authorization_service_authorization_enabled, $admin_users = $cdh::oozie::defaults::admin_users, $heapsize = $cdh::oozie::defaults::heapsize, $oozie_site_template = $cdh::oozie::defaults::oozie_site_template, $oozie_env_template = $cdh::oozie::defaults::oozie_env_template, $oozie_log4j_template = $cdh::oozie::defaults::oozie_log4j_template ) inherits cdh::oozie::defaults { class['cdh::hadoop'] -> class['cdh::oozie::server'] class['cdh::oozie'] -> class['cdh::oozie::server'] package { 'oozie': ensure => 'installed', } $config_directory = ""/etc/oozie/conf.${cdh::hadoop::cluster_name}"" file { $config_directory: ensure => 'directory', require => package['oozie'], } cdh::alternative { 'oozie-conf': link => '/etc/oozie/conf', path => $config_directory, } cdh::hadoop::directory { '/user/oozie': owner => 'oozie', group => 'hadoop', mode => '0755', require => package['oozie'], } $oozie_sharelib_archive = '/usr/lib/oozie/oozie-sharelib-yarn.tar.gz' $hdfs_uri = ""hdfs://${cdh::hadoop::namenode_hosts[0]}"" exec { 'oozie_sharelib_install': command => ""/usr/bin/oozie-setup sharelib create -fs ${hdfs_uri} -locallib ${oozie_sharelib_archive}"", unless => '/usr/bin/hdfs dfs -ls /user/oozie | grep -q /user/oozie/share', user => 'root', require => cdh::hadoop::directory['/user/oozie'], } file { ""${config_directory}/oozie-site.xml"": content => template($oozie_site_template), mode => '0440', owner => 'root', group => 'oozie', } file { ""${config_directory}/oozie-env.sh"": content => template($oozie_env_template), mode => '0444', owner => 'root', group => 'oozie', } file { ""${config_directory}/oozie-log4j.properties"": content => template($oozie_log4j_template), mode => '0444', owner => 'root', group => 'oozie', } file { ""${config_directory}/adminusers.txt"": content => inline_template("" mode => '0440', owner => 'root', group => 'oozie', } file { ""${config_directory}/action-conf"": ensure => 'directory', } if ($database) { $database_class = ""cdh::oozie::database::${database}"" class { $database_class: } class[$database_class] -> service['oozie'] } service { 'oozie': ensure => 'running', hasrestart => true, hasstatus => true, subscribe => [ file[""${config_directory}/oozie-site.xml""], file[""${config_directory}/oozie-env.sh""] ], } }",1,1,"admin_users = [\, hdfs://, oozie-env.sh, oozie-site.xml, user = 'root'; group = 'oozie';",CWE-937,"{'reason': '1. The file attribute mode (0400) for adminusers.txt file can be misused to read its contents by unauthorized users, as this file contains credentials which may allow unauthorized users to escalate their privileges to admin level.', 'related_cwe': 'CWE-937, CWE-319', 'is_misconfiguration_related': 'Yes'}"
28,"class crm::drush( $root ) { include ::crm require_package('drush') $wrapper = '/usr/local/bin/drush' file { $wrapper: ensure => present, mode => '0755', content => template('crm/drush-wrapper.sh.erb'), } }",0,1,"class crm::drush( $root ) { include ::crm require_package('drush'), file { $wrapper: ensure => present, mode => '0755', content => template('crm/drush-wrapper.sh.erb'), }, include ::crm require_package('drush') $wrapper = '/usr/local/bin/drush' file { $wrapper: ensure => present, mode => '0755', content => template('crm/drush-wrapper.sh.erb'), }, require_package('drush') $wrapper = '/usr/local/bin/drush' file { $wrapper: ensure => present, mode => '0755', content => template('crm/drush-wrapper.sh.erb'), }","CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-502: Deserialization of Untrusted Data","{'reason': ""The misconfiguration is related to CWE-502, Deserialization of Untrusted Data, which represents the improper deserialization of untrusted data. The issue is introduced through the crm::drush class. In the crm::drush class, the drush package is required. The code snippet `file { $wrapper: ensure => present, mode => '0755', content => template('crm/drush-wrapper.sh.erb'), }` creates a file using a template from the crm/drush-wrapper.sh.erb file, which is a drush wrapper script. The crm/drush-wrapper.sh.erb file is used to generate the drush script. The template is used to insert the $wrapper path into the drush script, which is"", 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
29,"class qdr::install inherits qdr { $ensure_package = $::qdr::ensure_package $service_package_name = $::qdr::params::service_package_name $package_provider = $::qdr::params::package_provider $sasl_package_list = $::qdr::params::sasl_package_list $tools_package_list = $::qdr::params::tools_package_list if $::osfamily == 'debian' { include apt class['apt::update'] -> package<| provider == 'apt' |> apt::ppa { 'ppa:qpid/testing' : } } package { $sasl_package_list : ensure => $ensure_package, provider => $package_provider, } package { $service_package_name : ensure => $ensure_package, provider => $package_provider, notify => class['qdr::service'], require => package[$sasl_package_list], } package { $tools_package_list : ensure => $ensure_package, provider => $package_provider, require => package[$service_package_name], } }",1,1,"apt::ppa { 'ppa:qpid/testing' : }, class apt::update {}, class qdr::install inherits qdr {, include apt, package { $sasl_package_list : ensure => $ensure_package, provider => $package_provider, }, package { $service_package_name : ensure => $ensure_package, provider => $package_provider, notify => class['qdr::service'], require => package[$sasl_package_list], }, package { $tools_package_list : ensure => $ensure_package, provider => $package_provider, require => package[$service_package_name], }","CWE-200, CWE-327, CWE-329, CWE-347, CWE-794, CWE-798, CWE-799","{'reason': 'If a module has dependencies that are not necessary to function properly, then Puppet may not be able to reliably evaluate all required conditions in its order of evaluation.', 'related_cwe': 'CWE-200, CWE-327, CWE-329, CWE-347, CWE-794, CWE-798, CWE-799', 'is_misconfiguration_related': 'No'}"
30,"class opendaylight::install ( $rest_port = $opendaylight::rest_api_port, $bind_address = undef, ) inherits opendaylight { $management_vip = hiera('management_vip') $conf_dir = '/opt/opendaylight/etc' $jetty_port = $opendaylight::jetty_port $odl_package = odl_package_name($opendaylight::odl_settings) $manage_l3_traffic = $opendaylight::odl_settings['enable_l3_odl'] ? { true => 'yes', default => 'no', } package { $odl_package: ensure => installed, } class { 'opendaylight::quagga': before => service['opendaylight'] } firewall {'215 odl': port => [ $opendaylight::rest_api_port, 6633, 6640, 6653, $jetty_port, 8101], proto => 'tcp', action => 'accept', } service { 'opendaylight' : ensure => running, enable => true, } debug(""set odl rest api port to ${rest_port}"") file { ""${conf_dir}/jetty.xml"": ensure => file, owner => 'odl', content => template('opendaylight/jetty.xml.erb') } $karaf_custom_properties_file = { 'path' => ""${conf_dir}/custom.properties"", 'ensure' => 'present', 'key_val_separator' => '=', } $karaf_custom_properties = { '' => { 'of.address' => $bind_address, 'of.listenport' => '6653', 'ovsdb.of.version' => '1.3', 'ovsdb.l3.fwd.enabled' => $manage_l3_traffic, } } create_ini_settings($karaf_custom_properties, $karaf_custom_properties_file) $enabled_features = odl_karaf_features($opendaylight::odl_settings) ini_setting {'karaf_features': ensure => present, section => '', key_val_separator => '=', path => ""${conf_dir}/org.apache.karaf.features.cfg"", setting => 'featuresboot', value => $enabled_features, } package[$odl_package] -> ini_setting <||> -> firewall <||> -> file <||> -> service['opendaylight'] }",0,1,"file { \\\\\\\\\\\n\\, file { \\\\n\\, file { \\n\, package { \\n $odl_package: \\\\n ensure => installed, \\\\n }\\\\n, package { \n $odl_package: \n ensure => installed,\n }\n, package[$odl_package] -> ini_setting <||> -> firewall <||> -> file <||> -> service['opendaylight']\\\\\\\\\\\\\\\n, package[$odl_package] -> ini_setting <||> -> firewall <||> -> file <||> -> service['opendaylight']\\\\n, package[$odl_package] -> ini_setting <||> -> firewall <||> -> file <||> -> service['opendaylight']\\n, service { 'opendaylight' :\\\\\n ensure => running,\\\\\n enable => true,\\\\\n }\\\\\\\\n, service { 'opendaylight' :\\n ensure => running,\\n enable => true,\\n }\\n","CWE-125, CWE-126, CWE-128","{'reason': 'No change has been made to the ODL configuration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
31,"class nova::vncproxy::common ( $vncproxy_host = undef, $vncproxy_protocol = undef, $vncproxy_port = undef, $vncproxy_path = undef, ) { include ::nova::deps $vncproxy_host_real = normalize_ip_for_uri(pick( $vncproxy_host, $::nova::compute::vncproxy_host, $::nova::vncproxy::host, false)) $vncproxy_protocol_real = pick( $vncproxy_protocol, $::nova::compute::vncproxy_protocol, $::nova::vncproxy::vncproxy_protocol, 'http') $vncproxy_port_real = pick( $vncproxy_port, $::nova::compute::vncproxy_port, $::nova::vncproxy::port, 6080) $vncproxy_path_real = pick( $vncproxy_path, $::nova::compute::vncproxy_path, $::nova::vncproxy::vncproxy_path, '/vnc_auto.html') if ($vncproxy_host_real) { $vncproxy_base_url = ""${vncproxy_protocol_real}://${vncproxy_host_real}:${vncproxy_port_real}${vncproxy_path_real}"" nova_config { 'vnc/novncproxy_base_url': value => $vncproxy_base_url; } } }",1,1,nova_config { 'vnc/novncproxy_base_url': value => $vncproxy_base_url; },CWE-522,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
32,"notice('modular: contrail/compute-hiera.pp') file { '/etc/hiera/plugins/contrail.yaml': ensure => file, content => 'use_ovs: false', } if roles_include('dpdk') { file_line {'contrail-vrouter-override_ns': path => '/etc/hiera.yaml', line => ' - plugins/contrail-vrouter-override_ns', after => ' !ruby/sym hierarchy:', } }",0,1,"file { '/etc/hiera/plugins/contrail.yaml': ensure => file, content => 'use_ovs: false', } if roles_include('dpdk') { file_line {'contrail-vrouter-override_ns': path => '/etc/hiera.yaml', line => '- plugins/contrail-vrouter-override_ns', after => '!ruby/sym hierarchy:', }}, file { '/etc/hiera/plugins/contrail.yaml': ensure => file, content => 'use_ovs: false', } if roles_include('dpdk') { file_line {'contrail-vrouter-override_ns': path => '/etc/hiera.yaml', line =>'- plugins/contrail-vrouter-override_ns', after => '!ruby/sym hierarchy:', }}",CWE-94,"{'reason': 'The module uses the file_line resource type which allows users to define custom content for a file based on a given path. If this file is publicly accessible, it could be abused to run arbitrary Puppet code, allowing users to gain arbitrary shell access to the machine.', 'related_cwe': 'CWE-94', 'is_misconfiguration_related': 'Yes'}"
33,"class role::disableaccount { mediawiki::extension { 'disableaccount': settings => [ ""\$wggrouppermissions['sysop']['disableaccount'] = true;"", ], } }",0,1,"class role::disableaccount { mediawiki::extension { 'disableaccount': settings => [, mediawiki::extension { 'disableaccount': settings => [ \\\\\\$\\wggrouppermissions['sysop']['disableaccount'] = true;, mediawiki::extension { 'disableaccount': settings => [ \\\\\\\\\\\\$wggrouppermissions['sysop']['disableaccount'] = true;, mediawiki::extension { 'disableaccount': settings => [ \\\\\\\\\\\\\\\\\\\\\\\\$wggrouppermissions['sysop']['disableaccount'] = true;, mediawiki::extension { 'disableaccount': settings => [ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$wggrouppermissions['sysop']['disableaccount'] = true;, mediawiki::extension { 'disableaccount': settings => [ \\\\\\\\\\\\\\\\\\\\wggrouppermissions['sysop']['disableaccount'] = true;, mediawiki::extension { 'disableaccount': settings => [ \\\\\\\\wggrouppermissions['sysop']['disableaccount'] = true;, mediawiki::extension {\n  'disableaccount': {\n    settings => [ \\\$\wggrouppermissions['sysop']['disableaccount'] = true;, ]\n  }\n}\n","CWE-256, CWE-257","{'reason': 'It seems the issue is related to CWE-256 and CWE-257. However, more information is required to evaluate the true relationship between the misconfiguration and the provided CWE.', 'related_cwe': 'CWE-256, CWE-257', 'is_misconfiguration_related': 'Yes'}"
34,"class motd { file { '/etc/update-motd.d': ensure => directory, recurse => true, ignore => '9*', purge => true, notify => exec['update_motd'], } exec { 'update_motd': command => '/bin/run-parts --lsbsysinit /etc/update-motd.d > /run/motd', refreshonly => true, } }",0,1,"class motd { file { '/etc/update-motd.d': ensure => directory, recurse => true, ignore => '9*', purge => true, notify => exec['update_motd'], } exec { 'update_motd': command => '/bin/run-parts --lsbsysinit /etc/update-motd.d > /run/motd', refreshonly => true, } }",CWE-22,"{'reason': 'CWE-22', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
35,"class neutron::plugins::nuage ( $nuage_net_partition_name, $nuage_vsd_ip, $nuage_vsd_username, $nuage_vsd_password, $nuage_vsd_organization, $nuage_base_uri_version, $nuage_cms_id, $nuage_auth_resource = '/me', $nuage_server_ssl = true, $purge_config = false, ) { include ::neutron::deps include ::neutron::params file { '/etc/neutron/plugins/nuage': ensure => directory, tag => 'neutron-config-file', } if $::osfamily == 'debian' { file_line { '/etc/default/neutron-server:neutron_plugin_config': path => '/etc/default/neutron-server', match => '^neutron_plugin_config=(.*)$', line => ""neutron_plugin_config=${::neutron::params::nuage_config_file}"", tag => 'neutron-file-line', } } if $::osfamily == 'redhat' { file { '/etc/neutron/plugin.ini': ensure => link, require => file['/etc/neutron/plugins/nuage/plugin.ini'], target => $::neutron::params::nuage_config_file, tag => 'neutron-config-file', } } file { '/etc/neutron/plugins/nuage/plugin.ini': ensure => file, owner => 'root', group => 'neutron', require => file['/etc/neutron/plugins/nuage'], mode => '0640', tag => 'neutron-config-file', } resources { 'neutron_plugin_nuage': purge => $purge_config, } $nuage_base_uri_base = '/nuage/api' neutron_plugin_nuage { 'restproxy/default_net_partition_name': value => $nuage_net_partition_name; 'restproxy/server': value => $nuage_vsd_ip; 'restproxy/serverauth': value => ""${nuage_vsd_username}:${nuage_vsd_password}""; 'restproxy/organization': value => $nuage_vsd_organization; 'restproxy/auth_resource': value => $nuage_auth_resource; 'restproxy/serverssl': value => $nuage_server_ssl; 'restproxy/base_uri': value => ""${nuage_base_uri_base}/${nuage_base_uri_version}""; 'restproxy/cms_id': value => $nuage_cms_id; } if ($::neutron::core_plugin != 'neutron.plugins.nuage.plugin.nuageplugin') and ($::neutron::core_plugin != 'nuage') { fail('nuage plugin should be the core_plugin in neutron.conf') } }",1,1,"restproxy/auth_resource, restproxy/base_uri, restproxy/cms_id, restproxy/nuage_net_partition_name, restproxy/organization, restproxy/server, restproxy/serverauth, restproxy/serverssl","CWE-287, CWE-319","{'reason': 'The misconfiguration CWE-319 [Insufficient encryption] as the auth_resource of nuage plugin is hardcoded', 'related_cwe': 'CWE-319', 'is_misconfiguration_related': 'Yes'}"
36,"define swift::storage::server( $type, $storage_local_net_ip, $devices = '/srv/node', $owner = 'swift', $group = 'swift', $incoming_chmod = 'du=rwx,g=rx,o=rx,fu=rw,g=r,o=r', $outgoing_chmod = 'du=rwx,g=rx,o=rx,fu=rw,g=r,o=r', $max_connections = 25, $pipeline = [""${type}-server""], $mount_check = true, $user = 'swift', $workers = '1', $allow_versions = false, $replicator_concurrency = $::processorcount, $updater_concurrency = $::processorcount, $reaper_concurrency = $::processorcount, $log_facility = 'log_local2', $log_level = 'info', $log_address = '/dev/log', $log_name = ""${type}-server"", $log_udp_host = undef, $log_udp_port = undef, $log_requests = true, $config_file_path = ""${type}-server.conf"", $statsd_enabled = false, $log_statsd_host = 'localhost', $log_statsd_port = 8125, $log_statsd_default_sample_rate = '1.0', $log_statsd_sample_rate_factor = '1.0', $log_statsd_metric_prefix = '', ) { include ::swift::deps if ($incoming_chmod == '0644') { warning('the default incoming_chmod set to 0644 may yield in error prone directories and will be changed in a later release.') } if ($outgoing_chmod == '0644') { warning('the default outgoing_chmod set to 0644 may yield in error prone directories and will be changed in a later release.') } if is_array($pipeline) { if !member($pipeline, ""${type}-server"") { warning(""swift storage server ${type} must specify ${type}-server"") } } elsif $pipeline != ""${type}-server"" { warning(""swift storage server ${type} must specify ${type}-server"") } if ($log_udp_port and !$log_udp_host) { fail ('log_udp_port requires log_udp_host to be set') } include ""::swift::storage::${type}"" validate_re($name, '^\d+$') validate_re($type, '^object|container|account$') validate_array($pipeline) validate_bool($allow_versions) $bind_port = $name rsync::server::module { $type: path => $devices, lock_file => ""/var/lock/${type}.lock"", uid => $owner, gid => $group, incoming_chmod => $incoming_chmod, outgoing_chmod => $outgoing_chmod, max_connections => $max_connections, read_only => false, } concat { ""/etc/swift/${config_file_path}"": owner => $owner, group => $group, notify => service[""swift-${type}-server"", ""swift-${type}-replicator"", ""swift-${type}-auditor""], require => package['swift'], } $required_middlewares = split( inline_template( ""<%= (@pipeline - ['${type}-server']).collect do |x| 'swift::storage::filter::' + x.capitalize + '[${type}]' end.join(',') %>""), ',') concat::fragment { ""swift-${type}-${name}"": target => ""/etc/swift/${config_file_path}"", content => template(""swift/${type}-server.conf.erb""), order => '00', before => $required_middlewares, require => package['swift'], } case $type { 'object': { concat[""/etc/swift/${config_file_path}""] -> swift_object_config <||> } 'container': { concat[""/etc/swift/${config_file_path}""] -> swift_container_config <||> } 'account': { concat[""/etc/swift/${config_file_path}""] -> swift_account_config <||> } default : { warning(""swift storage server ${type} must specify ${type}-server"") } } }",1,1,"account, container, device, devices, object, server, storage, swift",CWE-295,"{'reason': 'swift::storage::server, swift::storage::account, swift::storage::account, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server, swift::storage::server,', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
37,"class gnocchi::storage( $package_ensure = 'present', $coordination_url = $::os_service_default, ) inherits gnocchi::params { package { 'gnocchi-carbonara': ensure => $package_ensure, name => $::gnocchi::params::carbonara_package_name, tag => ['openstack', 'gnocchi-package'], } gnocchi_config { 'storage/coordination_url' : value => $coordination_url; } }",0,1,"gnocchi_config { \, gnocchi_config { \\, gnocchi_config { \\\\, gnocchi_config { \\\\\\\\, gnocchi_config { \\\\\\\\\\\\\\\\, gnocchi_config { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, gnocchi_config {{'reason': ""When misconfiguring the configuration files, the user can configure gnocchi to collect metric information. If gnocchi-carbonara's package is not installed, the gnocchi will not be able to write the data to the database. If the gnocchi is not configured correctly, the data collected by gnocchi can be written to a different database or stored in a wrong location."", 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
38,"class openstack::repo::yum ( $repo_name, $location = absent, $key_source, $failovermethod = absent, $include_src = false, $priority = 1, $gpgcheck = 1, $mirrorlist = absent, $rhel_location = undef, $descr = undef ) { if ! $descr { $description = $repo_name } else { $description = $descr } yumrepo {$repo_name: baseurl => $location, mirrorlist => $mirrorlist, failovermethod => $failovermethod, gpgcheck => $gpgcheck, gpgkey => $key_source, priority => $priority, enabled => 1, descr => $description, } if ($rhel_location) { yumrepo {'rhel-local': baseurl => $rhel_location, gpgcheck => 0, enabled => 1, } } }",1,1,puppet:///modules/openstack/rhel.repo,"CWE-248, CWE-494, CWE-798","{'reason': 'puppet:///modules/openstack/rhel.repo is being used by the module as the value of the gpgkey argument in the yumrepo function. The puppet:///modules/openstack/rhel.repo resource is used in the class openstack::repo::yum by the module openstack. This value should be changed to a proper GPG key file path. This is vulnerable to a man-in-the-middle attack.', 'related_cwe': 'CWE-248, CWE-494, CWE-798', 'is_misconfiguration_related': 'Yes'}"
39,"class { 'one': } assert { 'this should succeed': condition => true } -> class { 'two': } assert { 'this should fail': condition => $::non_existant_fact } -> class { 'three': } assert { 'this should be skipped due to ensure => absent': ensure => absent, condition => $::non_existant_fact } -> class { 'four': } class one { notify { 'this is a test': } } class two { notify { 'this is from the second class': } } class three { notify { 'this is from the third class': } } class four { notify { 'this is from the fourth class': } }",0,1,"assert { 'this should fail': condition => $::non_existant_fact }, class four { notify { 'this is from the fourth class': } }, class three { notify { 'this is from the third class': } }, class { 'four': }, class { 'one': } assert { 'this should succeed': condition => true } -> class { 'two': } assert { 'this should fail': condition => $::non_existant_fact } -> class { 'three': } assert { 'this should be skipped due to ensure => absent': ensure => absent, condition => $::non_existant_fact } -> class { 'four': }, class { 'three': } assert { 'this should be skipped due to ensure => absent': ensure => absent, condition => $::non_existant_fact } -> class { 'four': }, class { 'two': } assert { 'this should fail': condition => $::non_existant_fact } -> class { 'three': } assert { 'this should be skipped due to ensure => absent': ensure => absent, condition => $::non_existant_fact } -> class { 'four': }","CWE-119, CWE-352","{'reason': ""Misconfiguration is not related to the provided CWE. `assert { 'this should fail': condition => $::non_existant_fact }` will not throw an error because `$::non_existant_fact` can not be resolved without any variable being assigned."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
40,class { '::osnailyfacter::ceph::ceph_compute' :} class { '::osnailyfacter::upgrade::ceph_service' :},1,1,class { '::osnailyfacter::ceph::ceph_compute' :} class { '::osnailyfacter::upgrade::ceph_service' :},CWE-1194,"{'reason': 'A module class is called from a file class in puppet language, this is an invalid usage. When calling from the file class we need to use the resource command. The module call is not related to any CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
41,class toplevel::server::buildmaster::mozilla inherits toplevel::server::buildmaster { include buildmaster::base include buildmaster::release_runner_access include buildmaster::queue include buildmaster::settings include packages::procmail },0,1,"include buildmaster::queue, include buildmaster::release_runner_access, include packages::procmail",CWE-20,"{'reason': 'A common cause of misconfiguration within Puppet is when Puppet manifests were incorrectly written to create unintended results or to do things they shouldn’t be able to do.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
42,"class sahara::db::sync( $extra_params = '--config-file /etc/sahara/sahara.conf', ) { include ::sahara::params package <| tag == 'sahara-package' |> ~> exec['sahara-dbmanage'] exec['sahara-dbmanage'] ~> service <| tag == 'sahara-service' |> sahara_config <||> -> exec['sahara-dbmanage'] sahara_config <| title == 'database/connection' |> ~> exec['sahara-dbmanage'] exec { 'sahara-dbmanage': command => ""sahara-db-manage ${extra_params} upgrade head"", path => '/usr/bin', user => 'sahara', refreshonly => true, logoutput => on_failure, tag => 'openstack-db', } }",0,1,"exec {'sahara-dbmanage': command =>, include ::sahara::params package <| tag =='sahara-package' |> ~> exec['sahara-dbmanage'] exec['sahara-dbmanage'] ~> service <| tag =='sahara-service' |> sahara_config <||> -> exec['sahara-dbmanage'] sahara_config <| title == 'database/connection' |> ~> exec['sahara-dbmanage'] exec {'sahara-dbmanage': command =>, sahara_config <| title == 'database/connection' |> ~> exec['sahara-dbmanage'] exec {'sahara-dbmanage': command =>, sahara_config <||> -> exec['sahara-dbmanage'] sahara_config <| title == 'database/connection' |> ~> exec['sahara-dbmanage'] exec {'sahara-dbmanage': command =>, service <| tag =='sahara-service' |> sahara_config <||> -> exec['sahara-dbmanage'] sahara_config <| title == 'database/connection' |> ~> exec['sahara-dbmanage'] exec {'sahara-dbmanage': command =>",CWE-345,"{'reason': 'This misconfiguration could lead to an attacker injecting database queries (e.g. by setting malicious configuration values).', 'related_cwe': 'CWE-345', 'is_misconfiguration_related': 'Yes'}"
43,"class virtual_accelerator::neutron_conf inherits virtual_accelerator { $advanced_params = $virtual_accelerator::advanced_params $disable_ipset = $virtual_accelerator::disable_ipset $va_version = $virtual_accelerator::va_version if $disable_ipset == true or $va_version == '1.3' { $ovs_conf_file = ""/etc/neutron/plugins/ml2/ml2_conf.ini"" package { 'crudini': ensure => 'latest', } -> exec { 'disable_ipset': command => ""crudini --set ${ovs_conf_file} securitygroup enable_ipset false"", notify => service['openvswitch-switch'], } service { 'openvswitch-switch': ensure => 'running', notify => service['neutron-openvswitch-agent'], } service { 'neutron-openvswitch-agent': ensure => 'running', } } }",1,1,"exec { 'disable_ipset': command => \, notify => service['openvswitch-switch'], }, package { 'crudini': ensure => 'latest', } -> exec { 'disable_ipset': command => \\, package {'crudini': ensure => 'latest',}, service { 'neutron-openvswitch-agent': ensure => 'running', }, service { 'openvswitch-switch': ensure => 'running', notify => service['neutron-openvswitch-agent'], }",CWE-20,"{'reason': ""Since the package 'crudini' is declared, it is possible to invoke the command 'crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_ipset false'."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
44,"class murano::engine( $manage_service = true, $enabled = true, $package_ensure = 'present', $workers = $::os_service_default, ) { include ::murano::params include ::murano::policy murano_config<||> ~> service['murano-engine'] class['murano::policy'] -> service['murano-engine'] if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } murano_config { 'engine/workers': value => $workers; } package { 'murano-engine': ensure => $package_ensure, name => $::murano::params::engine_package_name, tag => ['openstack', 'murano-package'], } service { 'murano-engine': ensure => $service_ensure, name => $::murano::params::engine_service_name, enable => $enabled, require => package['murano-engine'], tag => 'murano-service', } package['murano-engine'] ~> service['murano-engine'] }",0,1,"class ['murano::policy'] -> service['murano-engine'], class['murano::policy'] ~> service['murano-engine'], package['murano-engine'] ~> service['murano-engine'], service['murano-engine'] -> package['murano-engine'], service['murano-engine'] ~> package['murano-engine']",CWE-352,"{'reason': ""The'murano::policy' class includes the'murano::params' class, which is a dependency for both the'murano::engine' class and the'murano-config' resource. By including the'murano::params' class in the'murano::policy' class, we have established a circular dependency, which can lead to issues such as unexpected resource behaviors, changes not being applied, and potential resource creation errors. Circular dependencies can be a sign of poor code structure and should be avoided when possible.\\n\\nIn this case, the circular dependency is established through the'require' relationship between the'murano::engine' class and the'murano-config' resource. By requiring the'murano::engine"", 'related_cwe': 'CWE-352 (Path Manipulation)', 'is_misconfiguration_related': 'Yes'}"
45,"define pacemaker::constraint::colocation ( $source, $target, $score, $master_slave = false, $ensure = present, ) { pcmk_constraint {""colo-${source}-${target}"": ensure => $ensure, constraint_type => colocation, resource => $source, location => $target, score => $score, master_slave => $master_slave, require => exec['wait-for-settle'], } }",0,1,"constraint_type => colocation, ensure => $ensure, location => $target, master_slave => $master_slave, require => exec['wait-for-settle'], resource => $source, score => $score",CWE-264,"{'reason': 'The provided misconfiguration is related to the vulnerability described by the CWE. Since the puppet script contains a `wait_for_settle` exec dependency that is not guaranteed to succeed in all cases, the `require` declaration in the colocation definition could be misused to force a node failure when a dependency fails. When an exec fails, the colocation constraint will fail with a corresponding failure, leaving the node in an undesired state.', 'related_cwe': 'CWE-264', 'is_misconfiguration_related': 'Yes'}"
46,class role::wikimediamaintenance { mediawiki::extension { 'wikimediamaintenance': } },1,1,mediawiki::extension,"CWE-120, CWE-121, CWE-125, CWE-126, CWE-129, CWE-19, CWE-20, CWE-200, CWE-22, CWE-24","{'reason': 'A misconfiguration of a configuration option to enable an extension.', 'related_cwe': 'CWE-19, CWE-20, CWE-125, CWE-129, CWE-126, CWE-120, CWE-22, CWE-200, CWE-121', 'is_misconfiguration_related': 'Yes'}"
47,"class toplevel::slave::releng::test inherits toplevel::slave::releng { include talos include vnc include users::builder::autologin include ntp::atboot include packages::fonts include packages::unzip include tweaks::fonts include runner::tasks::cleanup include dirs::builds::hg_shared include dirs::builds::git_shared include dirs::builds::tooltool_cache case $::operatingsystem { ""ubuntu"": { include runner::tasks::update_shared_repos include runner::tasks::checkout_tools include runner::tasks::restart_services include runner::tasks::check_ami class { 'runner::tasks::purge_builds': required_space => 4; } } ""darwin"": { include runner::tasks::update_shared_repos include runner::tasks::checkout_tools class { 'runner::tasks::purge_builds': required_space => 4; } } } include runner::tasks::config_hgrc class { 'slave_secrets': slave_type => 'test'; } }",1,1,"case $::operatingsystem {, class { 'runner::tasks::purge_builds': required_space => 4; }, class {'slave_secrets': slave_type => 'test'; }, include runner::tasks::config_hgrc, include runner::tasks::purge_builds",CWE-259,"{'reason': 'This misconfiguration is related to the CWE because it sets the required_space argument of the runner::tasks::purge_builds class to a value of 4, even though the documentation recommends setting it to an unlimited value. Additionally, the misconfiguration includes an unnecessary config_hgrc class which is not used in the rest of the script. The config_hgrc class is used to set certain options within a HGRC file that is specific to a particular machine and user account. By including this class, the misconfiguration makes it more difficult for administrators to manage HGRC files across multiple machines. In this way, the misconfiguration introduces unnecessary complexity into the script and could potentially lead to security vulnerabilities if HGRC files are not properly', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
48,"case $::osfamily { 'debian': { $ipv6 = false $zaqar_enabled = false $barbican_enabled = false } 'redhat': { $ipv6 = true $zaqar_enabled = true $barbican_enabled = true } default: { fail(""unsupported osfamily (${::osfamily})"") } } if ($::operatingsystem == 'ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) { $ssl_enabled = false } else { $ssl_enabled = true } include ::openstack_integration class { '::openstack_integration::config': ssl => $ssl_enabled, ipv6 => $ipv6, } include ::openstack_integration::cacert include ::openstack_integration::memcached include ::openstack_integration::rabbitmq include ::openstack_integration::mysql include ::openstack_integration::keystone class { '::openstack_integration::glance': backend => 'swift', } include ::openstack_integration::neutron include ::openstack_integration::swift include ::openstack_integration::ironic include ::openstack_integration::zaqar include ::openstack_integration::mongodb include ::openstack_integration::provision class { '::openstack_integration::nova': volume_encryption => $barbican_enabled, } class { '::openstack_integration::cinder': volume_encryption => $barbican_enabled, } if $barbican_enabled { include ::openstack_integration::barbican } class { '::openstack_integration::tempest': cinder => true, swift => true, ironic => true, zaqar => $zaqar_enabled, attach_encrypted_volume => $barbican_enabled, }",1,1,"class {'::openstack_integration::cinder': volume_encryption =>'barbican_enabled',}, class {'::openstack_integration::nova': volume_encryption =>'barbican_enabled',}, if $barbican_enabled { include ::openstack_integration::barbican }, if ($::operatingsystem == 'ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) { $ssl_enabled = false } else { $ssl_enabled = true }, include ::openstack_integration::glance: backend =>'swift',, include ::openstack_integration::tempest: cinder =>'true',, include ::openstack_integration::tempest: ironic =>'true',, include ::openstack_integration::tempest: swift =>'true',, include ::openstack_integration::zaqar, include ::openstack_integration::zaqar include ::openstack_integration::zaqar include ::openstack_integration::zaqar include ::openstack_integration::zaqar include ::openstack_integration::zaqar include ::openstack_integration::zaqar include ::openstack_integration::zaqar","CWE-287, CWE-312","{'reason': ""This misconfiguration is related to CWE-287 and CWE-312 because the if statements in the script may cause it to be executed in an unexpected state. If the barbican_enabled variable is false, the class { '::openstack_integration::cinder': volume_encryption =>'barbican_enabled',} may execute in a dangerous state."", 'related_cwe': 'CWE-287,CWE-312', 'is_misconfiguration_related': 'Yes'}"
49,"class zaqar::management::mongodb( $uri, $ssl_keyfile = $::os_service_default, $ssl_certfile = $::os_service_default, $ssl_cert_reqs = $::os_service_default, $ssl_ca_certs = $::os_service_default, $database = $::os_service_default, $max_attempts = $::os_service_default, $max_retry_sleep = $::os_service_default, $max_retry_jitter = $::os_service_default, $max_reconnect_attempts = $::os_service_default, $reconnect_sleep = $::os_service_default, ) { zaqar_config { 'drivers/management_store': value => 'mongodb'; 'drivers:management_store:mongodb/uri': value => $uri, secret => true; 'drivers:management_store:mongodb/ssl_keyfile': value => $ssl_keyfile; 'drivers:management_store:mongodb/ssl_certfile': value => $ssl_certfile; 'drivers:management_store:mongodb/ssl_cert_reqs': value => $ssl_cert_reqs; 'drivers:management_store:mongodb/ssl_ca_certs': value => $ssl_ca_certs; 'drivers:management_store:mongodb/database': value => $database; 'drivers:management_store:mongodb/max_attempts': value => $max_attempts; 'drivers:management_store:mongodb/max_retry_sleep': value => $max_retry_sleep; 'drivers:management_store:mongodb/max_retry_jitter': value => $max_retry_jitter; 'drivers:management_store:mongodb/max_reconnect_attempts': value => $max_reconnect_attempts; 'drivers:management_store:mongodb/reconnect_sleep': value => $reconnect_sleep; } }",0,1,"drivers:management_store:mongodb/database, drivers:management_store:mongodb/max_attempts, drivers:management_store:mongodb/max_reconnect_attempts, drivers:management_store:mongodb/max_retry_jitter, drivers:management_store:mongodb/max_retry_sleep, drivers:management_store:mongodb/reconnect_sleep, drivers:management_store:mongodb/ssl_ca_certs, drivers:management_store:mongodb/ssl_cert_reqs, drivers:management_store:mongodb/ssl_certfile, drivers:management_store:mongodb/ssl_keyfile","CWE-190, CWE-191","{'reason': 'CWE-190 - Improper Handling of Exceptional Conditions - The script utilizes various parameters that could cause unexpected errors and potential exceptions.', 'related_cwe': 'CWE-190', 'is_misconfiguration_related': 'Yes'}"
50,"class osnailyfacter::apache ( $purge_configs = false, $listen_ports = '80', $logrotate_rotate = '52', $log_formats = {}, ) { $log_format_forwarded = { 'forwarded' => '%{x-forwarded-for}i %l %u %t \""%r\"" %s %b \""%{referer}i\"" \""%{user-agent}i\""' } $log_formats_mixed = merge($log_format_forwarded, $log_formats) class { '::apache': mpm_module => false, default_vhost => false, purge_configs => $purge_configs, servername => $::hostname, server_tokens => 'prod', server_signature => 'off', trace_enable => 'off', log_formats => $log_formats_mixed, } apache::listen { $listen_ports: } anchor { 'osnailyfacter::apache start' :} -> apache::listen[$listen_ports] -> class['::apache'] -> anchor { 'osnailyfacter::apache end' :} file { '/etc/logrotate.d/apache2': ensure => 'file', owner => 'root', group => 'root', mode => '0644', content => template('osnailyfacter/apache2.logrotate.erb'), require => package['httpd'] } $delay = fqdn_rotate([0,1,2,3,4,5], 'fuel-seed') $apache2_logrotate_delay = $delay[0] * 60 file { '/etc/logrotate.d/httpd-prerotate': ensure => 'directory', owner => 'root', group => 'root', mode => '0755', } file { '/etc/logrotate.d/httpd-prerotate/apache2': ensure => 'file', owner => 'root', group => 'root', mode => '0755', content => template('osnailyfacter/apache2.prerotate.erb'), } }",1,1,"delay 100, file '/etc/logrotate.d/httpd-prerotate/apache2': ensure 'file', file '/etc/logrotate.d/httpd-prerotate/apache2': group 'root', file '/etc/logrotate.d/httpd-prerotate/apache2': mode '0755', file '/etc/logrotate.d/httpd-prerotate/apache2': owner 'root', listen 1.2.3.4, logrotate rotate 52, server_signature off, server_tokens Prod, server_tokens prod","CWE-200, CWE-918","{'reason': 'This misconfiguration is related to CWE-200 because a delay in rotation of Apache logs can cause data loss, because the logrotate tool will not be able to rotate logs before the delay expires.', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
51,"class zaqar::transport::websocket( $bind = $::os_service_default, $port = $::os_service_default, $external_port = $::os_service_default, ) { zaqar_config { 'drivers:transport:websocket/bind': value => $bind; 'drivers:transport:websocket/port': value => $port; 'drivers:transport:websocket/external-port': value => $external_port; } }",0,1,"class zaqar::transport::websocket( $bind = $::os_service_default, $port = $::os_service_default, $external_port = $::os_service_default, ) { zaqar_config { 'drivers:transport:websocket/bind': value => $bind; 'drivers:transport:websocket/port': value => $port; 'drivers:transport:websocket/external-port': value => $external_port; } }",CWE-22,"{'reason': 'The bind and port options configure the listen address and port for a WebSocket transport listener. Without proper configuration, an attacker could manipulate these options and initiate arbitrary connections to the listener on the host', 'related_cwe': 'CWE-22: Insecure Web Configuration, CWE-284: Accidental Leakage of Sensitive Information, CWE-522: Insufficiently Protected Credentials', 'is_misconfiguration_related': 'Yes'}"
52,"class neutron::plugins::ovn( $ovsdb_connection, $ovsdb_connection_timeout = $::os_service_default, $neutron_sync_mode = $::os_service_default, $ovn_l3_mode = $::os_service_default, $vif_type = $::os_service_default, ) { warning('neutron::plugins::ovn is deprecated in favor of neutron::plugins::ml2::ovn') class { '::neutron::plugins::ml2::ovn': ovn_nb_connection => $ovsdb_connection, ovsdb_connection_timeout => $ovsdb_connection_timeout, neutron_sync_mode => $neutron_sync_mode, ovn_l3_mode => $ovn_l3_mode, vif_type => $vif_type } }",1,1,"class { '::neutron::plugins::ml2::ovn':\n\t\tovn_nb_connection => $ovsdb_connection, \n\t\tovsdb_connection_timeout => $ovsdb_connection_timeout,\n\t\tneutron_sync_mode => $neutron_sync_mode, \n\t\tovn_l3_mode => $ovn_l3_mode, \n\t\tvif_type => $vif_type, warning('neutron::plugins::ovn is deprecated in favor of neutron::plugins::ml2::ovn')",CWE-502:Deserialization of Untrusted Data,"{'reason': 'neutron::plugins::ovn is deprecated in favor of neutron::plugins::ml2::ovn\\n', 'related_cwe': 'CWE-502:Deserialization of Untrusted Data', 'is_misconfiguration_related': 'Yes'}"
53,"class swift::proxy::s3token( $auth_host = '127.0.0.1', $auth_port = '35357', $auth_protocol = 'http' ) { include ::swift::deps concat::fragment { 'swift_s3token': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/s3token.conf.erb'), order => '80', } }",1,1,"class swift::proxy::s3token( $auth_host = '127.0.0.1', $auth_port = '35357', $auth_protocol = 'http' ) {, concat::fragment {'swift_s3token': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/s3token.conf.erb'), order => '80', }, include ::swift::deps","CWE-347, CWE-351, CWE-352","{'reason': 'The misconfiguration is a potential issue where the wrong protocol was selected in this case. http could also be insecure in some scenarios where SSL is used instead. This is not an issue with authentication itself, which is handled by keystone.', 'related_cwe': 'CWE-347, CWE-351, CWE-352', 'is_misconfiguration_related': 'Yes'}"
54,"include ::openstack_integration include ::openstack_integration::rabbitmq include ::openstack_integration::mysql include ::openstack_integration::keystone include ::openstack_integration::glance include ::openstack_integration::neutron include ::openstack_integration::nova include ::openstack_integration::cinder include ::openstack_integration::horizon include ::openstack_integration::provision class { '::openstack_integration::tempest': horizon => true, cinder => true, }",1,1,"class { '::openstack_integration::cinder': glance => true, horizon => true, neutron => true, nova..., class { '::openstack_integration::glance': glance => true, horizon => true, neutron => true, nova..., class { '::openstack_integration::keystone': glance => true, horizon => true, ne..., class { '::openstack_integration::provision': glance => true, horizon => true, neutron => true, nova..., class { '::openstack_integration::tempest': horizon => true, cinder => true, \\n}, include ::openstack_integration::keystone\\ninclude ::openstack_integration::glance\\ninclude ::openstack_integration::neutron\\ninclude ::openstack_integration::nova\\ninclude ::openstack_integration::cinder\\ninclude ::openstack_integration::horizon\\ninclude ::openstack_integration::provision\\ninclude ::openstack_integration::tempest\\n, include ::openstack_integration::rabbitmq\\ninclude ::openstack_integration::mysql\\ninclude ::openstack_integration::keystone\\ninclude ::openstack_integration::glance\\ninclude ::openstack_integration::neutron\\ninclude ::openstack_integration::nova\\ninclude ::openstack_integration::cinder\\ninclude ::openstack_integration::horizon\\ninclude ::openstack_integration::provision\\ninclude ::openstack_integration::tempest\\n, include ::openstack_integration\\ninclude ::openstack_integration::rabbitmq\\ninclude ::openstack_integration::mysql\\ninclude ::openstack_integration::keystone\\ninclude ::openstack_integration::glance\\ninclude ::openstack_integration::neutron\\ninclude ::openstack_integration::nova\\ninclude ::openstack_integration::cinder\\ninclude ::openstack_integration::horizon\\ninclude ::openstack_integration::provision\\ninclude ::openstack_integration::tempest\\nclass { '::openstack_integration::tempest': horizon => true, cinder => true, }\\n, include ::openstack_integration\ninclude ::openstack_integration::rabbitmq\ninclude ::openstack_integration::mysql\n...",CWE-319,"{'reason': ""The `CWE-319` describes the vulnerability when a service does not handle errors properly, and instead propagates the errors, which may eventually cause a service interruption. In this case, the `nova` service has been misconfigured to propagate errors without properly handling them, which can cause the service to break down or become vulnerable to a DOS attack.\\n\\nIn the `nova` service, it's necessary to properly handle errors before propagating them. Otherwise, the service may not function properly and could potentially become vulnerable to DOS attacks. This is a violation of the `CWE-319` vulnerability."", 'related_cwe': 'CWE-319', 'is_misconfiguration_related': 'Yes'}"
55,"class tftpd { include packages::xinetd include packages::tftp_server case $::operatingsystem { centos: { service { ""xinetd"": require => class[""packages::xinetd""], ensure => running, enable => true; } file { ""/etc/xinetd.d/tftp"": ensure => file, source => ""puppet:///modules/tftpd/tftp"", notify => service[""xinetd""]; ""/var/lib/tftpboot"": ensure => directory; ""/tftpboot"": ensure => link, target => ""/var/lib/tftpboot""; } } default: { fail(""can't set up tftpd on this platform"") } } }",1,1,", case $::operatingsystem {, class tftpd { include packages::xinetd, default: {, file { \, file { \\, include packages::tftp_server","CWE-248, CWE-532","{'reason': 'CWE-248 can be related to this issue because Puppet is being used to modify file permissions that should be applied by the OS or a separate process. This can result in the file permissions not being set properly or not being set at all, which may allow unprivileged users to access the files. Additionally, this issue may indicate a failure to properly implement least privilege principles, as the service account may be given more permissions than necessary to function correctly.', 'related_cwe': 'CWE-248, CWE-532', 'is_misconfiguration_related': 'Yes'}"
56,"notice('modular: sriov_iommu_check.pp') $script = '/etc/puppet/modules/osnailyfacter/modular/netconfig/sriov_iommu_check.rb' exec {""sriov_iommu_check"": command => ""ruby $script"", path => ['/usr/bin', '/usr/sbin', '/sbin', '/bin'] }",1,1,"command, path, ruby, sriov_iommu_check","CWE-295, CWE-793, CWE-798","{'reason': 'This issue is related to improper access control.', 'related_cwe': 'CWE-295, CWE-793, CWE-798', 'is_misconfiguration_related': 'Yes'}"
57,class role::openbadges { mediawiki::extension { 'openbadges': needs_update => true } },0,1,class role::openbadges { mediawiki::extension { 'openbadges': needs_update => true } },CWE-601,"{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
58,"class heat::cron::purge_deleted ( $ensure = present, $minute = 1, $hour = 0, $monthday = '*', $month = '*', $weekday = '*', $maxdelay = 0, $user = 'heat', $age = 1, $age_type = 'days', $destination = '/var/log/heat/heat-purge_deleted.log' ) { if ! member(['days', 'hours', 'minutes', 'seconds'], $age_type) { fail('age_type possible values are only days, hours, minutes, or seconds.') } if $maxdelay == 0 { $sleep = '' } else { $sleep = ""sleep `expr \${random} \\% ${maxdelay}`; "" } cron { 'heat-manage purge_deleted': ensure => $ensure, command => ""${sleep}heat-manage purge_deleted -g ${age_type} ${age} >>${destination} 2>&1"", environment => 'path=/bin:/usr/bin:/usr/sbin shell=/bin/sh', user => $user, minute => $minute, hour => $hour, monthday => $monthday, month => $month, weekday => $weekday } package['heat-common'] -> cron['heat-manage purge_deleted'] }",0,1,"command => \, command => \\, cron { 'heat-manage purge_deleted':, cron { 'heat-manage purge_deleted': ensure => $ensure,, if $maxdelay == 0 { $sleep = '' } else { $sleep = \, package['heat-common'] -> cron['heat-manage purge_deleted'], user => $user,","CWE-295, CWE-352, CWE-399","{'reason': 'CWE-295 - Unexpected Reward is one of the issues of the class heat::cron::purge_deleted, in the puppet script.', 'related_cwe': 'CWE-295, CWE-352, CWE-399', 'is_misconfiguration_related': 'Yes'}"
59,"class neutron::plugins::plumgrid ( $director_server = '127.0.0.1', $director_server_port = '443', $username = $::os_service_default, $password = $::os_service_default, $servertimeout = '99', $connection = 'http://127.0.0.1:35357/v2.0', $admin_password = $::os_service_default, $controller_priv_host = '127.0.0.1', $auth_protocol = 'http', $identity_version = 'v3', $user_domain_name = 'default', $nova_metadata_ip = '127.0.0.1', $nova_metadata_port = '8775', $nova_metadata_subnet = '127.0.0.1/24', $metadata_proxy_shared_secret = $::os_service_default, $connector_type = 'distributed', $l2gateway_vendor = $::os_service_default, $l2gateway_sw_username = $::os_service_default, $l2gateway_sw_password = $::os_service_default, $plumlib_package_ensure = 'present', $package_ensure = 'present', $purge_config = false, ) { include ::neutron::deps include ::neutron::params ensure_resource('file', '/etc/neutron/plugins/plumgrid', { ensure => directory, owner => 'root', group => 'neutron', mode => '0640'} ) package { 'neutron-plugin-plumgrid': ensure => $package_ensure, name => $::neutron::params::plumgrid_plugin_package } package { 'neutron-plumlib-plumgrid': ensure => $plumlib_package_ensure, name => $::neutron::params::plumgrid_pythonlib_package } if $::osfamily == 'debian' { file_line { '/etc/default/neutron-server:neutron_plugin_config': path => '/etc/default/neutron-server', match => '^neutron_plugin_config=(.*)$', line => ""neutron_plugin_config=${::neutron::params::plumgrid_config_file}"", tag => 'neutron-file-line', } } if $::osfamily == 'redhat' { file { '/etc/neutron/plugin.ini': ensure => link, target => $::neutron::params::plumgrid_config_file, tag => 'neutron-config-file', } } resources { 'neutron_plugin_plumgrid': purge => $purge_config, } resources { 'neutron_plumlib_plumgrid': purge => $purge_config, } neutron_plugin_plumgrid { 'plumgriddirector/director_server': value => $director_server; 'plumgriddirector/director_server_port': value => $director_server_port; 'plumgriddirector/username': value => $username; 'plumgriddirector/password': value => $password, secret =>true; 'plumgriddirector/servertimeout': value => $servertimeout; 'database/connection': value => $connection; 'l2gateway/vendor': value => $l2gateway_vendor; 'l2gateway/sw_username': value => $l2gateway_sw_username; 'l2gateway/sw_password': value => $l2gateway_sw_password; } neutron_plumlib_plumgrid { 'keystone_authtoken/admin_user' : value => 'admin'; 'keystone_authtoken/admin_password': value => $admin_password, secret =>true; 'keystone_authtoken/auth_uri': value => ""${auth_protocol}://${controller_priv_host}:35357/${identity_version}""; 'keystone_authtoken/admin_tenant_name': value => 'admin'; 'keystone_authtoken/identity_version': value => $identity_version; 'keystone_authtoken/user_domain_name': value => $user_domain_name; 'plumgridmetadata/enable_pg_metadata' : value => 'true'; 'plumgridmetadata/metadata_mode': value => 'local'; 'plumgridmetadata/nova_metadata_ip': value => $nova_metadata_ip; 'plumgridmetadata/nova_metadata_port': value => $nova_metadata_port; 'plumgridmetadata/nova_metadata_subnet': value => $nova_metadata_subnet; 'plumgridmetadata/metadata_proxy_shared_secret': value => $metadata_proxy_shared_secret; 'connectortype/connector_type': value => $connector_type; } }",1,1,"keystone_authtoken/admin_tenant_name, keystone_authtoken/auth_uri, metadata_proxy_shared_secret, nova_metadata_ip, nova_metadata_subnet",CWE-20,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
60,"notice('modular: plumgrid/disable_ovs.pp') file { '/etc/hiera/plugins/plumgrid.yaml': ensure => file, content => 'use_ovs: false', } file_line { 'replace provider ovs with lnx': path => '/etc/astute.yaml', line => ' provider: lnx', match => ' provider: ovs', multiple => true, }",0,1,"file { '/etc/hiera/plugins/plumgrid.yaml': ensure => file, content => 'use_ovs: false', }, file_line {'replace provider ovs with lnx': path => '/etc/astute.yaml', line =>'provider: lnx', match =>'provider: ovs', multiple => true, }",CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': 'The path traversal vulnerability in Puppet can occur when puppet modules read user-provided file paths, and the user can provide paths outside of the filesystem tree allowed by the module. Here, the Puppet module astute.yaml reads /etc/astute.yaml, and allows user to specify the value of a variable provider, which is used to set the value of the variable provider in /etc/astute.yaml. The user can potentially specify a path outside of the filesystem tree, such as /etc/astute.yaml/. Thus, when the module reads the user-specified value, the path traversal vulnerability allows a user to set the value of provider in /etc/astute.yaml to a malicious value that the module can execute, without any authentication or authorization', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
61,"class ceilometer::agent::auth ( $auth_password, $auth_url = 'http://localhost:5000', $auth_region = $::os_service_default, $auth_user = 'ceilometer', $auth_tenant_name = 'services', $auth_tenant_id = undef, $auth_cacert = undef, $auth_endpoint_type = undef, $auth_user_domain_name = 'default', $auth_project_domain_name = 'default', $auth_type = 'password', ) { if ! $auth_cacert { ceilometer_config { 'service_credentials/ca_file': ensure => absent } } else { ceilometer_config { 'service_credentials/ca_file': value => $auth_cacert } } ceilometer_config { 'service_credentials/auth_url' : value => $auth_url; 'service_credentials/region_name' : value => $auth_region; 'service_credentials/username' : value => $auth_user; 'service_credentials/password' : value => $auth_password, secret => true; 'service_credentials/project_name' : value => $auth_tenant_name; 'service_credentials/user_domain_name' : value => $auth_user_domain_name; 'service_credentials/project_domain_name': value => $auth_project_domain_name; 'service_credentials/auth_type' : value => $auth_type; } if $auth_tenant_id { ceilometer_config { 'service_credentials/project_id' : value => $auth_tenant_id; } } if $auth_endpoint_type { ceilometer_config { 'service_credentials/interface' : value => $auth_endpoint_type; } } }",1,1,"ceilometer_config {\\n'service_credentials/ca_file': value => $auth_cacert}\\\\n, ceilometer_config {\\n'service_credentials/project_domain_name': value => $auth_project_domain_name;\\n, ceilometer_config {\n'service_credentials/project_name' : value => $auth_tenant_name;\n, if $auth_endpoint_type {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n ceilometer_config {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n'service_credentials/interface' : value => $auth_endpoint_type;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, if $auth_endpoint_type {\\\\\\\\\\\\\\\\n ceilometer_config {\\\\\\\\n'service_credentials/interface' : value => $auth_endpoint_type;\\\\\\\\\\\\\\\\n}, if $auth_endpoint_type {\\\\\\\\n ceilometer_config {\\\\n'service_credentials/interface' : value => $auth_endpoint_type;\\\\\\\\n}, if $auth_tenant_id {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n ceilometer_config {\\\\\\\\\\\\\\\\\\\\n'service_credentials/project_id' : value => $auth_tenant_id;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, if $auth_tenant_id {\\\\\\\\n ceilometer_config {\\\\n'service_credentials/project_id' : value => $auth_tenant_id;\\\\\\\\n}, if $auth_tenant_id {\\\\n ceilometer_config {\\n'service_credentials/project_id' : value => $auth_tenant_id;\\\\n}, if! $auth_cacert {\\\\n ceilometer_config {\\\\n'service_credentials/ca_file': ensure => absent }\\\\n}",CWE-257,"{'reason': ""This misconfiguration represents a CWE-257 issue where sensitive data may be inadvertently exposed. A password secret variable, $auth_password, was not declared within the scope of the ceilometer_config resource definition, allowing that variable to be treated as a public parameter by default. The ceilometer_config resource has a'secret' parameter, which defines whether to mark a parameter value as secret in the service catalog, i.e., encrypt it with base64. By not explicitly specifying a secret parameter, Puppet defaults to making the parameter value publicly accessible. If sensitive data such as passwords are not marked as secrets, they are more easily exposed, creating a security vulnerability. The misconfiguration could lead to unintended access to sensitive data, such as passwords, which could result in"", 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
62,"class smashpig( $vhost_name, $dir, ) { include ::php include ::apache include ::git git::clone { 'wikimedia/fundraising/smashpig': directory => $dir, } service::gitupdate { 'smashpig': dir => $dir, type => 'php', update => true, } file { '/etc/fundraising/smashpig.yaml': content => template('smashpig/smashpig.yaml.erb'), require => [ git::clone['wikimedia/fundraising/smashpig'], ], } file { ""${dir}/publichttp/.htaccess"": source => ""${dir}/publichttp/.htaccess.sample"", require => git::clone['wikimedia/fundraising/smashpig'], } php::composer::install { $dir: prefer => 'source', require => git::clone['wikimedia/fundraising/smashpig'], } apache::site { 'payments-listener': ensure => present, content => template('smashpig/apache-site.erb'), require => [ file['/etc/fundraising/smashpig.yaml'], file[""${dir}/publichttp/.htaccess""], class['::apache::mod::rewrite'], ], } mysql::db { 'smashpig': } exec { 'smashpig_schema': command => ""/usr/bin/mysql -uroot -p${mysql::root_password} smashpig -qfsa < ${dir}/schema/001_creatependingtable.sql"", unless => ""/usr/bin/mysql -uroot -p${mysql::root_password} smashpig -qfsane \""select 1 from smashpig.pending\"" | /usr/bin/tail -1 | /bin/grep -q 1"", require => [ git::clone['wikimedia/fundraising/smashpig'], mysql::db['smashpig'], ], } }",0,1,"apache::site { 'payments-listener':\\\\\\\\n ensure => present,\\\\\\\\n content => template('smashpig/apache-site.erb'),\\\\\\\\n require => [ file['/etc/fundraising/smashpig.yaml'], file[, class smashpig(\n $vhost_name,\n $dir,\n), exec {'smashpig_schema':\\\\\\\\\\\\n command => \, file {\\\\\\\\n'${dir}/publichttp/.htaccess':\\\\\\\\n source => \\\\\\\, file {\\\\n '/etc/fundraising/smashpig.yaml':\\\\n content => template('smashpig/smashpig.yaml.erb'),\\\\n require => [ git::clone['wikimedia/fundraising/smashpig'], ],\\\\n}, mysql::db {'smashpig':\\\\\\\\n}, mysql::db {'smashpig':\\\\n}, php::composer::install {\\\\n $dir:\\\\n prefer =>'source',\\\\n require => git::clone['wikimedia/fundraising/smashpig'],\\\\n}, php::composer::install {\\n $dir:, service::gitupdate {'smashpig':\\n\\tdir => $dir,\\n\\ttype => 'php',\\n\\tupdate => true,\\n}","CWE-601, CWE-603","{'reason': ""SmashPig relies heavily on Apache HTTPD server for serving its pages, as well as MySQL to store its transaction data. Since the SmashPig source code is kept in a Git repository, it is important to ensure that the source code is updated regularly and reliably. By allowing the source code to be updated manually or by other means, the SmashPig may experience inconsistencies in the stored transaction data and possibly even security issues. Thus, the SmashPig is vulnerable to attacks on its data and potentially, its overall system performance. To mitigate this risk, SmashPig's developers can create a set of regular automated tests to monitor and ensure the integrity of its source code. These tests should be run at regular intervals and the results should be"", 'related_cwe': 'CWE-601, CWE-603', 'is_misconfiguration_related': 'Yes'}"
63,class role::liquidthreads { include ::role::echo include ::role::wikieditor mediawiki::extension { 'liquidthreads': settings => { wglqttalkpages => false } } },0,1,"class role::liquidthreads, include ::role::echo, include ::role::wikieditor, mediawiki::extension { 'liquidthreads': settings => { wglqttalkpages => false } }, settings => { wglqttalkpages => false }",CWE-664,"{'reason': 'The misconfiguration is not related to CWE-664 because the issue exists in the Puppet code but does not exist in the software that is being configured. CWE-664 is a vulnerability that is present in the software that is being configured.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
64,"class packstack::nova::compute::libvirt () { firewall <| |> -> class['::nova::compute::libvirt'] $libvirt_vnc_bind_host = hiera('config_ip_version') ? { 'ipv6' => '::0', default => '0.0.0.0', } $libvirt_virt_type = hiera('config_nova_libvirt_virt_type') if $libvirt_virt_type == 'kvm' { file { '/dev/kvm': owner => 'root', group => 'kvm', mode => '666', } package <| title == 'libvirt' |> -> file['/dev/kvm'] -> service <| title == 'libvirt' |> } class { '::nova::compute::libvirt': libvirt_virt_type => $libvirt_virt_type, vncserver_listen => $libvirt_vnc_bind_host, migration_support => true, libvirt_inject_partition => '-1', } file_line { 'libvirt-guests': path => '/etc/sysconfig/libvirt-guests', line => 'on_boot=ignore', match => '^[\s require => class['::nova::compute::libvirt'], } exec {'virsh-net-destroy-default': onlyif => '/usr/bin/virsh net-list | grep default', command => '/usr/bin/virsh net-destroy default', require => service['libvirt'], } exec {'virsh-net-undefine-default': onlyif => '/usr/bin/virsh net-list --inactive | grep default', command => '/usr/bin/virsh net-undefine default', require => exec['virsh-net-destroy-default'], } $libvirt_debug = hiera('config_debug_mode') if $libvirt_debug { file_line { '/etc/libvirt/libvirt.conf log_filters': path => '/etc/libvirt/libvirtd.conf', line => 'log_filters = ""1:libvirt 1:qemu 1:conf 1:security 3:event 3:json 3:file 1:util""', match => 'log_filters =', notify => service['libvirt'], } file_line { '/etc/libvirt/libvirt.conf log_outputs': path => '/etc/libvirt/libvirtd.conf', line => 'log_outputs = ""1:file:/var/log/libvirt/libvirtd.log""', match => 'log_outputs =', notify => service['libvirt'], } } }",1,1,"file_line { '/etc/libvirt/libvirt.conf log_filters': path => '/etc/libvirt/libvirtd.conf', line => 'log_filters =, libvirt_debug = hiera('config_debug_mode'), log_filters =, log_outputs =, on_boot=ignore, onlyif => '/usr/bin/virsh net-list | grep default', package <| title == 'libvirt' |> -> file['/dev/kvm'] -> service <| title == 'libvirt' |>, path => '/etc/sysconfig/libvirt-guests',","CWE-264, CWE-732","{'reason': 'This misconfiguration is related to CWE-732 because the file_line resource with log_filters=, and log_outputs= could have been configured to prevent a security issue with libvirt. Furthermore, the file_line resource for on_boot=ignore could have been configured to prevent a security issue with libvirt.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
65,"class hardware::highperformance { shared::execonce { ""highperformance"": command => '""c:\windows\system32\powercfg.exe"" -setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c', } }",0,1,"8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c', } }},, c:\\\\\\\\windows\\\\\\\\system32\\\\\\\\powercfg.exe \\\\, c:\\\\windows\\\\system32\\\\powercfg.exe \\\\, command => \\, command => \\\\\\\\, shared::execonce { \, shared::execonce { \\, shared::execonce { \\\\","CWE-200, CWE-732, CWE-77, CWE-79","{'reason': 'Shared::Execonce has been declared for highperformance class.  When a shared::Execonce is defined it will run on all nodes.  It also requires a command to execute.  In this case, that command is running the powercfg.exe program to enable an energy scheme for HighPerformance.  When a script runs on the wrong node, it could cause a Denial of Service if the script uses more resources than available.  In the case of running a malicious script, it could cause unauthorized changes to be applied to a system or compromise its security.', 'related_cwe': 'CWE-200, CWE-732, CWE-77, CWE-79', 'is_misconfiguration_related': 'Yes'}"
66,"$server = '10.0.0.100' $domain_name = 'mirantis.com' $name_server = '10.0.0.100' $next_server = '10.0.0.100' $dhcp_start_address = '10.0.0.201' $dhcp_end_address = '10.0.0.254' $dhcp_netmask = '255.255.255.0' $dhcp_gateway = '10.0.0.100' $cobbler_user = 'cobbler' $cobbler_password = 'cobbler' $pxetimeout = '0' $dhcp_interface = 'eth0' stage {'openstack-custom-repo': before => stage['main']} case $::osfamily { 'debian': { class { '::apt': stage => 'openstack-ci-repo' }-> class { '::openstack::repo::apt': key => '420851bc', location => 'http://172.18.66.213/deb', key_source => 'http://172.18.66.213/gpg.pub', origin => '172.18.66.213', stage => 'openstack-ci-repo' } } 'redhat': { class { '::openstack::repo::yum': repo_name => 'openstack-epel-fuel', location => 'http://download.mirantis.com/epel-fuel', key_source => 'https://fedoraproject.org/static/0608b895.txt', stage => 'openstack-custom-repo', } } default: { fail(""unsupported osfamily: ${osfamily} for os ${operatingsystem}"") } } node fuel-cobbler { class { '::cobbler::server': server => $server, domain_name => $domain_name, name_server => $name_server, next_server => $next_server, dhcp_start_address => $dhcp_start_address, dhcp_end_address => $dhcp_end_address, dhcp_netmask => $dhcp_netmask, dhcp_gateway => $dhcp_gateway, dhcp_interface => $dhcp_interface, cobbler_user => $cobbler_user, cobbler_password => $cobbler_password, pxetimeout => $pxetimeout, } class[cobbler::server] -> class[cobbler::distro::centos63_x86_64] class { '::cobbler::distro::centos63_x86_64': http_iso => 'http://172.18.67.168/centos-6.3-x86_64-minimal.iso', ks_url => 'cobbler', } class[cobbler::distro::centos63_x86_64] -> class[cobbler::profile::centos63_x86_64] class { '::cobbler::profile::centos63_x86_64': } package {'python-argparse': } }",1,1,"cobbler::distro::centos63_x86_64 { http_iso = http://172.18.67.168/centos-6.3-x86_64-minimal.iso, ks_url = cobbler, }, http_iso = http://172.18.67.168/centos-6.3-x86_64-minimal.iso, ks_url = cobbler, pxetimeout = 0, python-argparse, server = 10.0.0.100","CWE-20, CWE-310","{'reason': 'The misconfiguration is related to the CWE. This case is specific to the open source community, where a lot of users are not aware of the security risk introduced by the misconfiguration. The open source software developers of the cobbler server did not realize that the source code could potentially be exploited.', 'related_cwe': 'CWE-20, CWE-310', 'is_misconfiguration_related': 'Yes'}"
67,"class openstack::ha::nova ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = undef, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, } openstack::ha::haproxy_service { 'nova-api': order => '040', listen_port => 8774, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'nova-api', haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose', 'http-buffer-request'], 'timeout' => ['server 600s', 'http-request 10s'], 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3 fall 3', } openstack::ha::haproxy_service { 'nova-metadata-api': order => '050', listen_port => 8775, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'nova-api', haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose', 'http-buffer-request'], 'timeout' => 'http-request 10s', }, balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3 fall 3', } openstack::ha::haproxy_service { 'nova-novncproxy': order => '170', listen_port => 6080, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal => false, require_service => 'nova-vncproxy', haproxy_config_options => { 'option' => 'http-buffer-request', 'timeout' => 'http-request 10s', 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, } }",1,1,"balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3 fall 3', haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose', 'http-buffer-request'], public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'nova-api', haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose', 'http-buffer-request']","CWE-119, CWE-200, CWE-264","{'reason': ""the check, inter, fastinter, downinter, rise, and fall keywords have no effect on this statement. They only take effect when the backend is of type HTTP or HTTPS. This statement is related to http and https, however it is not related to a TCP backend. As such, these keywords have no impact on the statement as a whole. However, the inter, downinter, rise, and fall keywords take effect on each check made against a backend. The check keyword is used to determine the backend as 'up' or 'down'. The inter keyword determines the time period between two checks. The fastinter keyword determines the time period between two subsequent checks if a backend's status has changed. The downinter keyword determines the time period"", 'related_cwe': 'CWE-119,CWE-200,CWE-264', 'is_misconfiguration_related': 'Yes'}"
68,"class openstack_integration::horizon { include ::openstack_integration::config include ::openstack_integration::params if $::openstack_integration::config::ssl { file { '/etc/openstack-dashboard/ssl': ensure => directory, owner => 'root', mode => '0755', selinux_ignore_defaults => true, require => package['horizon'], } file { '/etc/openstack-dashboard/ssl/private': ensure => directory, owner => 'root', mode => '0755', selinux_ignore_defaults => true, require => file['/etc/openstack-dashboard/ssl'], before => file[""/etc/openstack-dashboard/ssl/private/${::fqdn}.pem""], } openstack_integration::ssl_key { 'horizon': key_path => ""/etc/openstack-dashboard/ssl/private/${::fqdn}.pem"", key_owner => 'root', require => file['/etc/openstack-dashboard/ssl/private'], notify => service['httpd'], } exec['update-ca-certificates'] ~> service['httpd'] } class { '::horizon': secret_key => 'big_secret', allowed_hosts => $::openstack_integration::config::ip_for_url, listen_ssl => $::openstack_integration::config::ssl, ssl_redirect => $::openstack_integration::config::ssl, horizon_cert => $::openstack_integration::params::cert_path, horizon_key => ""/etc/openstack-dashboard/ssl/private/${::fqdn}.pem"", horizon_ca => $::openstack_integration::params::ca_bundle_cert_path, keystone_url => $::openstack_integration::config::keystone_auth_uri, compress_offline => false, } }",0,1,"compress_offline => false,\\\\\\\\\\\\n  notify => Service[openstack_integration::keystone]\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n, compress_offline => false,\\\\n  notify => Service[openstack_integration::keystone]\\\\n}\\\\n, horizon_ca => $::openstack_integration::params::ca_bundle_cert_path,\\n  keystone_url => $::openstack_integration::config::keystone_auth_uri,\\n  compress_offline => false,\\\\n  notify => Service[openstack_integration::keystone]\\\\n}\\n, horizon_key => \, horizon_key => \\, keystone_url => $::openstack_integration::config::keystone_auth_uri,\\\\n  compress_offline => false,\\\\\\\\n  notify => Service[openstack_integration::keystone]\\\\\\\\n}\\\\n, notify => Service[openstack_integration::keystone]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, openstack_integration::keystone { 'integration':\\n  auth_url => $::openstack_integration::config::keystone_auth_uri,\\n  key => $::openstack_integration::config::keystone_secret,\\n  region_name => $::openstack_integration::config::keystone_region_name,\\n  tenant_name => $::openstack_integration::config::keystone_admin_tenant,\\n  token_url => $::openstack_integration::config::keystone_token_auth_uri,\\n  version => $::openstack_integration::config::keystone_version,\\n  keystone_cert => $::openstack_integration::params::cert_path,\\n  keystone_key => \\\\, openstack_integration::ssl_key { 'horizon':\n  key_path => \, ssl_redirect => $::openstack_integration::config::ssl,\\n  horizon_cert => $::openstack_integration::params::cert_path,\\n  horizon_key => \\","CWE-310, CWE-311","{'reason': 'Not an issue', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
69,"class cluster::mysql ( $mysql_user, $mysql_password, $mysql_config = '/etc/mysql/my.cnf', $mysql_socket = '/var/run/mysqld/mysqld.sock', ) { $service_name = 'mysqld' $primitive_class = 'ocf' $primitive_provider = 'fuel' $primitive_type = 'mysql-wss' $complex_type = 'clone' $user_conf = '/etc/mysql/user.cnf' file { $user_conf: owner => 'root', mode => '0600', content => template('cluster/mysql_user.cnf.erb') } -> exec <||> $parameters = { 'config' => $mysql_config, 'test_conf' => $user_conf, 'socket' => $mysql_socket, } $operations = { 'monitor' => { 'interval' => '60', 'timeout' => '55' }, 'start' => { 'interval' => '0', 'timeout' => '330' }, 'stop' => { 'interval' => '0', 'timeout' => '120' }, } $metadata = { 'migration-threshold' => '10', 'failure-timeout' => '30s', 'resource-stickiness' => '100', } $complex_metadata = { 'requires' => 'nothing', } pacemaker::service { $service_name: primitive_class => $primitive_class, primitive_provider => $primitive_provider, primitive_type => $primitive_type, complex_type => $complex_type, complex_metadata => $complex_metadata, metadata => $metadata, parameters => $parameters, operations => $operations, prefix => true, } $init_file_contents = join([ ""set wsrep_on='off';"", ""delete from mysql.user where user='';"", ""grant usage on *.* to '${mysql_user}'@'%' identified by '${mysql_password}';"", ""grant usage on *.* to '${mysql_user}'@'localhost' identified by '${mysql_password}';"", ""flush privileges;"", ], ""\n"") $user_password_string = ""--defaults-extra-file=${user_conf}"" exec { 'create-init-file': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => ""echo \""${init_file_contents}\"" > /tmp/wsrep-init-file"", unless => ""mysql ${user_password_string} -nbe \""select 'ok';\"" | grep -q ok"", require => package['mysql-server'], } ~> exec { 'wait-for-sync': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => ""mysql ${user_password_string} -nbe \""show status like 'wsrep_local_state_comment'\"" | grep -q -e synced && sleep 10"", try_sleep => 10, tries => 60, refreshonly => true, } exec { 'rm-init-file': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => 'rm /tmp/wsrep-init-file', onlyif => 'test -f /tmp/wsrep-init-file', } file { 'fix-log-dir': ensure => directory, path => '/var/log/mysql', mode => '0770', require => package['mysql-server'], } exec['create-init-file'] -> file['fix-log-dir'] -> service<| title == $service_name |> ~> exec['wait-for-sync'] -> exec['rm-init-file'] }",1,1,"exec { 'create-init-file': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => \, exec { 'create-init-file': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => \\, exec['create-init-file'] -> file['fix-log-dir'] -> service<| title == $service_name |> ~> exec['wait-for-sync'], file { $user_conf: owner => 'root', mode => '0600', content => template('cluster/mysql_user.cnf.erb')}, file { 'fix-log-dir': ensure => directory, path => '/var/log/mysql', mode => '0770',",CWE-20,"{'reason': 'Mysql init file is being created and then immediately deleted.', 'related_cwe': 'CWE-20: Improper Input Validation', 'is_misconfiguration_related': 'No'}"
70,"class sudoers { include sudoers::settings if $::operatingsystem != 'windows' { include packages::sudo concat { ""/etc/sudoers"" : require => class['packages::sudo'], mode => ""$sudoers::settings::mode"", owner => ""$sudoers::settings::owner"", group => ""$sudoers::settings::group"", } concat::fragment { '00-base': target => ""/etc/sudoers"", content => template(""${module_name}/sudoers-base.erb""); } file { ""/etc/sudoers.d"" : force => true, ensure => absent ; } } }",0,1,"00-base': target => \, content => template(\$module_name/\, ensure => absent ;, file { \\, group => \\\\$sudoers::settings::group\\\\, group => \\\\\\\\\\\\},, include packages::sudo concat {, owner => \\$sudoers::settings::owner\\, owner => \\\\\, sudoers::settings::mode","CWE-252, CWE-265, CWE-269, CWE-295","{'reason': ""The user that is granted sudo privileges through Puppet's sudoers module in the `class sudoers` can execute commands as root on all systems managed by Puppet. The misconfiguration relates to CWE-252 - `Unprotected API` and CWE-295 - `Use of Externally-Provided Input by Out-of-Bounds Write to Buffer`."", 'related_cwe': 'CWE-252, CWE-295', 'is_misconfiguration_related': 'Yes'}"
71,"define php::composer::install( $directory = $title, $vendor_dir = undef, $prefer = 'dist', ) { require ::php::composer if ! ($prefer in ['dist', 'source']) { fail('prefer parameter must be dist or source') } $safe_dir = regsubst($directory, '\w', '-', 'g') $creates = $vendor_dir ? { undef => ""${directory}/vendor"", default => $vendor_dir, } exec { ""composer-install-${safe_dir}"": command => ""/usr/local/bin/composer install --optimize-autoloader --prefer-${prefer}"", cwd => $directory, environment => [ ""composer_home=${::php::composer::home}"", ""composer_cache_dir=${::php::composer::cache_dir}"", 'composer_no_interaction=1', ], user => 'vagrant', onlyif => ""/usr/bin/test -f ${directory}/composer.json"", creates => $creates, require => class['::php::composer'], } }",0,1,"creates => $creates,\\\\n  require => class['::php::composer'],\\\\n }\\\\n\\\\n, creates => $creates,\\n  require => class['::php::composer'],\\n }\\n\\n, environment => [\\n    \\\, onlyif => \, require ::php::composer\n  if! ($prefer in ['dist','source']) {\n    fail('prefer parameter must be dist or source')\n  }\n  $safe_dir = regsubst($directory, '\w', '-', 'g')\n  $creates = $vendor_dir? { undef => \, require => class['::php::composer'],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, require => class['::php::composer'],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, require => class['::php::composer'],\\\\\\\\\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\n, require => class['::php::composer'],\\\\\\\\\\\\n }\\\\\\\\\\\\n\\\\\\\\\\\\n, user => 'vagrant'",CWE-248,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
72,"class foopy { include users::builder include dirs::builds include packages::net_snmp_utils include packages::nslookup include packages::rsync include packages::unzip include packages::alsa include packages::pango include packages::patch include packages::procmail include packages::gtk2 include packages::telnet include packages::x_libs include packages::ia32libs include packages::mozilla::python26 include packages::mozilla::python27 include packages::mozilla::py27_mercurial include buildslave::install include disableservices::iptables include foopy::repos include tweaks::dev_ptmx include config file { [""/builds/watcher.log""]: owner => $users::builder::username, group => $users::builder::group, ensure => file, mode => 0644; ""/builds/watch_devices.sh"": owner => $users::builder::username, group => $users::builder::group, ensure => link, target => ""/builds/tools/buildfarm/mobile/watch_devices.sh""; ""/builds/minidump_stackwalk"": owner => $users::builder::username, group => $users::builder::group, ensure => link, target => ""/builds/tools/breakpad/linux64/minidump_stackwalk""; ""/etc/cron.d/foopy"": owner => root, group => root, ensure => file, content => template(""foopy/foopy.crontab.erb""), require => [ class[""foopy::repos""], file[""/builds/watch_devices.sh""], ]; ""/builds/watcher_rolled_logs"": ensure => directory, owner => $users::builder::username, group => $users::builder::group, mode => 775; ""/etc/logrotate.d/watch_devices"": owner => root, group => root, ensure => file, content => template(""foopy/foopy.logrotate.erb""); ""/builds/logrotate.config"": owner => $users::builder::username, group => $users::builder::group, ensure => link, target => ""/etc/logrotate.d/watch_devices"", require => file['/etc/logrotate.d/watch_devices']; } file { [""/builds/start_cp.sh"", ""/builds/stop_cp.sh"", ""/builds/check.sh"", ""/builds/tegra_status.txt"", ""/builds/check.log"", ""/builds/check2.log"", ""/builds/tegra_stats.log""]: ensure => absent; } }",1,1,"ensure => absent;, ensure => file,, ensure => link,, file \, group => $users::builder::group,, include foopy::repos, mode => 775, owner => $users::builder::username,, target => \","CWE-1000, CWE-922","{'reason': ""the log files that are being created by the script contain sensitive data. This includes passwords that are used to log into systems on the network. These are generated with a weak hashing algorithm (SHA1), making the passwords easy to crack. A better option would be to use bcrypt or another more secure algorithm for hashing the passwords, which would make them more difficult to crack. Additionally, the log files should be rotated periodically, so that old logs are removed. This can be done using the 'logrotate' utility, which can be configured to rotate the logs regularly. Finally, the log files should be encrypted before they are written to disk, to prevent them from being accessed by unauthorized users."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
73,class { '::openstack_tasks::ceilometer::controller' :} warning('osnailyfacter/modular/./ceilometer/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/controller.pp'),1,1,"class { '::openstack_tasks::ceilometer::controller' :}, class { '::openstack_tasks::ceilometer::controller' :} warning('osnailyfacter/modular/./ceilometer/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/controller.pp'), class { '::openstack_tasks::ceilometer::controller' :}\\n warning('osnailyfacter/modular/./ceilometer/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/controller.pp'), class { '::openstack_tasks::ceilometer::controller' :}\n warning('osnailyfacter/modular/./ceilometer/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/controller.pp'), warning('osnailyfacter/modular/./ceilometer/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/controller.pp')",CWE-1200,"{'reason': 'The original defect label is', 'related_cwe': 'CWE-1200', 'is_misconfiguration_related': 'No'}"
74,class role::payments { require ::role::mediawiki require ::role::memcached include ::payments },0,1,class role::payments { require ::role::mediawiki require ::role::memcached include ::payments },"CWE-120, CWE-126","{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
75,"class role::wikigrok { include ::role::wikidata include ::role::mobilefrontend mediawiki::extension { 'wikigrok': settings => [ '$wgwikigrokrepomode = $wmgusewikibaserepo;', ], } }",1,1,"class role::wikigrok { include ::role::wikidata include ::role::mobilefrontend mediawiki::extension { 'wikigrok': settings => [ '$wgwikigrokrepomode = $wmgusewikibaserepo;', ], } }, mediawiki::extension { 'wikigrok': settings => [ '$wgwikigrokrepomode = $wmgusewikibaserepo;', ], }","CWE-120, CWE-125, CWE-284, CWE-306, CWE-327, CWE-522, CWE-732","{'reason': '1', 'related_cwe': 'CWE-120, CWE-125, CWE-284, CWE-306, CWE-327, CWE-522, CWE-732', 'is_misconfiguration_related': 'Yes'}"
76,"class tweaks::swap_on_instance_storage { case $::operatingsystem { centos: { file { ""/etc/init.d/add_swap"": source => ""puppet:///modules/tweaks/add_swap"", mode => 0755; } service { ""add_swap"": enable => true, ensure => running, require => file['/etc/init.d/add_swap']; } } } }",1,1,"file { /etc/init.d/add_swap: \\\\, file { /etc/init.d/add_swap: \\\\\\\\\\\\\\\\\\\\\\\\, file { /etc/init.d/add_swapfile { \\\\\\, file { \\\\\\\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, service {\\\\n \\\\\, service {\\n \\, service {\n \",CWE-306,"{'reason': 'The misconfiguration is related to the issue described by CWE-306 because [your reasoning here]', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
77,"class php { include ::apache include ::apache::mod::php5 include ::php::remote_debug include ::php::composer include ::php::xhprof package { [ 'php-auth-sasl', 'php-mail', 'php-mail-mime', 'php-net-smtp', 'php5', 'php5-apcu', 'php5-cli', 'php5-curl', 'php5-dev', 'php5-gd', 'php5-intl', 'php5-json', 'php5-mcrypt', 'php5-mysql', 'php5-readline', 'php5-sqlite', ]: ensure => present, require => class['::apache::mod::php5'], } file { '/etc/php5/mods-available': ensure => directory, owner => 'root', group => 'root', mode => '0755', recurse => true, purge => true, ignore => '[^_]*', notify => exec['prune_php_ini_files'], require => package['php5'], } exec { 'prune_php_ini_files': command => '/bin/true', unless => template('php/prune_php_ini_files.bash.erb'), } php::ini { 'debug_output': settings => { display_errors => true, display_startup_errors => true, error_reporting => -1, } } php::ini { 'date_timezone': settings => { 'date.timezone' => 'utc' }, } php::ini { 'session_defaults': settings => { 'session.save_path' => '/tmp' }, } php::ini { 'opcache_validate_timestamps': settings => { 'opcache.validate_timestamps' => 'on', }, require => package['php5-apcu'] } php::ini { 'opcache_revalidate_freq': settings => { 'opcache.revalidate_freq' => 0, }, require => package['php5-apcu'], } class { '::php::sessionclean': require => package['php5'], } }",1,1,"class { '::php::sessionclean': require => package['php5'], }, exec { 'prune_php_ini_files': command => '/bin/true', unless => template('php/prune_php_ini_files.bash.erb'), }, file { '/etc/php5/mods-available': ensure => directory, owner => 'root', group => 'root', mode => '0755', recurse => true, purge => true, ignore => '[^_]*', notify => exec['prune_php_ini_files'], require => package['php5'], }, include ::php::composer, include ::php::remote_debug, include ::php::xhprof, package { [ 'php5', 'php5-apcu', 'php5-cli', 'php5-curl', 'php5-dev', 'php5-gd', 'php5-intl', 'php5-json', 'php5-mcrypt', 'php5-mysql', 'php5-readline', 'php5-sqlite', ]: ensure => present, require => class['::apache::mod::php5'], }, php::ini { 'opcache_revalidate_freq': settings => {'opcache.revalidate_freq' => 0, }, require => package['php5-apcu'], }, php::ini { 'opcache_validate_timestamps': settings => {'opcache.validate_timestamps' => 'on', }, require => package['php5-apcu'] }, php::ini {'session_defaults': settings => {'session.save_path' => '/tmp' }, }","CWE-20, CWE-248, CWE-251, CWE-254, CWE-258, CWE-264","{'reason': 'CWE-258\\n[CWE-20\\nCWE-248\\nCWE-251\\nCWE-254\\nCWE-264]\\n', 'related_cwe': 'CWE-258', 'is_misconfiguration_related': 'Yes'}"
78,"define cluster::neutron::l3 ( $plugin_config = '/etc/neutron/l3_agent.ini', $primary = false, $ha_agents = ['ovs', 'metadata', 'dhcp', 'l3'], ) { require cluster::neutron $csr_metadata = undef $csr_complex_type = 'clone' $csr_ms_metadata = { 'interleave' => 'true' } $l3_agent_package = $::neutron::params::l3_agent_package ? { false => $::neutron::params::package_name, default => $::neutron::params::l3_agent_package, } cluster::corosync::cs_service {'l3': ocf_script => 'neutron-l3-agent', csr_parameters => { 'plugin_config' => $plugin_config, 'remove_artifacts_on_stop_start' => true, }, csr_metadata => $csr_metadata, csr_complex_type => $csr_complex_type, csr_ms_metadata => $csr_ms_metadata, csr_mon_intr => '20', csr_mon_timeout => '30', csr_timeout => '60', service_name => $::neutron::params::l3_agent_service, package_name => $l3_agent_package, service_title => 'neutron-l3', primary => $primary, hasrestart => false, } }",1,1,"csr_metadata => $csr_metadata,, csr_ms_metadata => $csr_ms_metadata,, csr_timeout => '60',, hasrestart => false,, l3_agent_package = $::neutron::params::l3_agent_package? { false => $::neutron::params::package_name,, package_name => $l3_agent_package,, primary => $primary,, require cluster::neutron, service_title => 'neutron-l3',, }","CWE-20, CWE-532","{'reason': 'The use of misconfigurations to set metadata properties in the l3 agent is not a common practice, and is rarely needed in the real world. This is because the l3 agent is typically responsible for configuring its own services.', 'related_cwe': 'CWE-20, CWE-532', 'is_misconfiguration_related': 'No'}"
79,"class packstack::ceilometer () { create_resources(packstack::firewall, hiera('firewall_ceilometer_rules', {})) $config_mongodb_host = hiera('config_mongodb_host_url') $config_ceilometer_coordination_backend = hiera('config_ceilometer_coordination_backend') $config_ceilometer_metering_backend = hiera('config_ceilometer_metering_backend') $config_gnocchi_host = hiera('config_keystone_host_url') if $config_ceilometer_coordination_backend == 'redis' { $redis_host = hiera('config_redis_host_url') $redis_port = hiera('config_redis_port') $coordination_url = ""redis://${redis_host}:${redis_port}"" ensure_packages(['python-redis'], {'ensure' => 'present'}) } else { $coordination_url = '' } if hiera('config_ceilometer_service_name') == 'ceilometer' { $ceilometer_service_name = 'openstack-ceilometer-api' } else { $ceilometer_service_name = 'httpd' } class { '::ceilometer::db': database_connection => ""mongodb://${config_mongodb_host}:27017/ceilometer"", } class { '::ceilometer::collector': meter_dispatcher => $config_ceilometer_metering_backend, } if $config_ceilometer_metering_backend == 'gnocchi' { include ::gnocchi::client class { '::ceilometer::dispatcher::gnocchi': filter_service_activity => false, url => ""http://${config_gnocchi_host}:8041"", archive_policy => 'high', resources_definition_file => 'gnocchi_resources.yaml', } } class { '::ceilometer::agent::notification': } class { '::ceilometer::agent::auth': auth_url => hiera('config_keystone_public_url_versionless'), auth_password => hiera('config_ceilometer_ks_pw'), auth_region => hiera('config_keystone_region'), } class { '::ceilometer::agent::central': coordination_url => $coordination_url, } $bind_host = hiera('config_ip_version') ? { 'ipv6' => '::0', default => '0.0.0.0', } class { '::ceilometer::keystone::authtoken': auth_uri => hiera('config_keystone_public_url'), auth_url => hiera('config_keystone_admin_url'), password => hiera('config_ceilometer_ks_pw'), } -> class { '::ceilometer::api': host => $bind_host, api_workers => hiera('config_service_workers'), service_name => $ceilometer_service_name, } if $ceilometer_service_name == 'httpd' { class { '::ceilometer::wsgi::apache': ssl => false, } } }",1,1,"class { '::ceilometer::db': database_connection => \, class { '::ceilometer::dispatcher::gnocchi': filter_service_activity => false, url => \\, class { '::ceilometer::keystone::authtoken': auth_uri => hiera('config_keystone_public_url'),\\nauth_url => hiera('config_keystone_admin_url'),\\npassword => hiera('config_ceilometer_ks_pw'),, class { '::ceilometer::wsgi::apache': ssl => false, }, ensure_packages(['python-redis'], {'ensure' => 'present'}), if $ceilometer_service_name == 'ceilometer' { $ceilometer_service_name = 'openstack-ceilometer-api' } else { $ceilometer_service_name = 'httpd' }, if $config_ceilometer_coordination_backend =='redis' { $redis_host = hiera('config_redis_host_url')\\\\n$redis_port = hiera('config_redis_port')\\\\ncoordination_url = \, if $config_ceilometer_metering_backend == 'gnocchi' { include ::gnocchi::client, if $config_ceilometer_metering_backend == 'gnocchi' {\n\tinclude ::gnocchi::client, if hiera('config_ip_version')? { 'ipv6' => '::0', default => '0.0.0.0', }","CWE-264, CWE-320, CWE-326, CWE-352, CWE-532","{'reason': ""The configuration of the services and credentials in the script are used by the puppet code to configure the services, including OpenStack's Ceilometer project. This includes the configuration of the MongoDB backend used to store data collected by the OpenStack Ceilometer service, and the configuration of a Redis server which is used to store notification data. The script also configures the credentials used by the Ceilometer service to communicate with Keystone. Because of this, the misconfiguration is related to the provided CWE"", 'related_cwe': 'CWE-264, CWE-320, CWE-326, CWE-352, CWE-532', 'is_misconfiguration_related': 'Yes'}"
80,"class ceph::profile::osd { require ::ceph::profile::client class { '::ceph::osds': args => $ceph::profile::params::osds, } }",0,1,"class ceph::profile::osd { require ::ceph::profile::client class { '::ceph::osds': args => $ceph::profile::params::osds, } }",CWE-772,"{'reason': ""CWE-772 is related to the misconfiguration. CWE-772 is a weakness that is categorized as a 'Type Confusion' based vulnerability. The misconfiguration is caused by a user misinterpreting the type of an object or value. The'require' keyword is used to ensure that the '::ceph::osds' class is executed after the '::ceph::profile::client' class has been executed. This can lead to unintended behavior in the script, as the '::ceph::osds' class may be executed before the '::ceph::profile::client' class has been executed. This can cause issues with data validation and type confusion in the script."", 'related_cwe': 'CWE-772', 'is_misconfiguration_related': 'Yes'}"
81,"class tripleo::profile::pacemaker::keystone ( $bootstrap_node = hiera('bootstrap_nodeid'), $enable_load_balancer = hiera('enable_load_balancer', true), $step = hiera('step'), ) { service <| tag == 'keystone-service' |> { hasrestart => true, restart => '/bin/true', start => '/bin/true', stop => '/bin/true', } if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } include ::tripleo::profile::base::keystone include ::tripleo::profile::pacemaker::apache if $step >= 5 and $pacemaker_master and $enable_load_balancer { pacemaker::constraint::base { 'haproxy-then-keystone-constraint': constraint_type => 'order', first_resource => 'haproxy-clone', second_resource => 'openstack-core-clone', first_action => 'start', second_action => 'start', before => pacemaker::resource::service[$::apache::params::service_name], require => [pacemaker::resource::service['haproxy'], pacemaker::resource::ocf['openstack-core']], } } if $step >= 5 and $pacemaker_master { pacemaker::constraint::base { 'rabbitmq-then-keystone-constraint': constraint_type => 'order', first_resource => 'rabbitmq-clone', second_resource => 'openstack-core-clone', first_action => 'start', second_action => 'start', before => pacemaker::resource::service[$::apache::params::service_name], require => [pacemaker::resource::ocf['rabbitmq'], pacemaker::resource::ocf['openstack-core']], } } }",1,1,"class tripleo::profile::pacemaker::keystone, constraint_type => 'order', first_resource => 'haproxy-clone', if $step >= 5 and $pacemaker_master, if $step >= 5 and $pacemaker_master and $enable_load_balancer, include ::tripleo::profile::base::keystone, include ::tripleo::profile::pacemaker::apache, pacemaker::constraint::base { 'haproxy-then-keystone-constraint', second_resource => 'openstack-core-clone'",CWE-1031,"{'reason': ""The misconfiguration is related to CWE-1031 because it is the same as the constraint type used in the Pacemaker profile to determine the order in which resources should be started. The 'order' constraint type specifies the order in which resources should be started. If resource 'A' must be started before resource 'B', then resource 'A' should be listed first in the constraint expression. The Pacemaker profile ensures that resources are started in the correct order by specifying the 'order' constraint type and the appropriate ordering of resources. This is related to CWE-1031 because the Pacemaker profile uses the 'order' constraint type to ensure that resources are started in the correct order. This is important because the Pacemaker profile ensures that resources are"", 'related_cwe': 'CWE-1031', 'is_misconfiguration_related': 'Yes'}"
82,class neutron {} class { 'neutron' :} class { '::openstack_tasks::openstack_network::agents::metadata' :} warning('osnailyfacter/modular/./openstack-network/agents/metadata.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/agents/metadata.pp'),1,1,"class neutron {} class { 'neutron' :} class { '::openstack_tasks::openstack_network::agents::metadata' :}, class { '::openstack_tasks::openstack_network::agents::metadata' :}, class { 'neutron' :}, warning('osnailyfacter/modular/./openstack-network/agents/metadata.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/agents/metadata.pp')",CWE-209,"{'reason': 'The misconfiguration is related to CWE-209 because of the incorrect configuration parameter. As per the script, the user has misconfigured the misconfiguration in the wrong place. Additionally, there is no additional information available to provide additional details or context. This can be easily fixed by changing the configuration. The misconfiguration is related to CWE-209 because of the incorrect configuration parameter. As per the script, the user has misconfigured the misconfiguration in the wrong place. Additionally, there is no additional information available to provide additional details or context. This can be easily fixed by changing the configuration.', 'related_cwe': 'CWE-209', 'is_misconfiguration_related': 'Yes'}"
83,"notify {'modular: fuel-plugin-manila/install': } package {'python-pip': ensure => 'installed' } package {'python-pymysql': ensure => 'installed' } package {'python-dev': ensure => 'installed' } package {'pycrypto': ensure => 'installed', provider => 'pip', } package {'python-manila': ensure => 'installed' } package {'python-manilaclient': ensure => 'installed' } package {'python-manila-ui': ensure => 'installed' } class {'::manila_auxiliary::fs': } package['python-pip']-> package['python-dev']-> package['python-pymysql']-> package['pycrypto']-> package['python-manila']-> package['python-manilaclient']-> package['python-manila-ui']",0,1,"package ['python-dev'] -> package ['pycrypto'], package ['python-dev'] -> package ['python-manila'], package ['python-dev'] -> package ['python-manilaclient'], package ['python-dev'] -> package ['python-pymysql'], package ['python-pip'] -> package ['pycrypto'], package ['python-pip'] -> package ['python-dev'], package ['python-pip'] -> package ['python-manila'], package ['python-pip'] -> package ['python-manila-ui'], package ['python-pip'] -> package ['python-manilaclient'], package ['python-pip'] -> package ['python-pymysql']",CWE-770,"{'reason': 'No', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
84,"class statsd ( $port, ) { require ::service require ::npm $dir = ""${::service::root_dir}/statsd"" $logdir = $::service::log_dir git::clone { 'statsd': directory => $dir, remote => 'https://github.com/etsy/statsd.git', } npm::install { $dir: directory => $dir, require => git::clone['statsd'], } file { ""${dir}/config.js"": ensure => present, content => template('statsd/config.js.erb'), mode => '0644', require => git::clone['statsd'], } file { '/etc/init/statsd.conf': content => template('statsd/upstart.conf.erb'), owner => 'root', group => 'root', mode => '0444', notify => service['statsd'], } file { '/etc/logrotate.d/statsd': content => template('statsd/logrotate.erb'), owner => 'root', group => 'root', mode => '0444', } file { ""${dir}/backends/statsd-json-backend.js"": source => 'puppet:///modules/statsd/statsd-json-backend.js', require => git::clone['statsd'], } service { 'statsd': ensure => running, enable => true, provider => 'upstart', require => [ git::clone['statsd'], npm::install[$dir], file[""${dir}/config.js""], ], } }",1,1,"class statsd ( $port, ):, class statsd ($port,), file { ${dir}/backends/statsd-json-backend.js:, file { '/etc/logrotate.d/statsd': content => template('statsd/logrotate.erb'), owner => 'root', group => 'root', mode => '0444', }, file { /etc/init/statsd.conf:, file { /etc/logrotate.d/statsd:, file {'${dir}/backends/statsd-json-backend.js': source => 'puppet:///modules/statsd/statsd-json-backend.js', require => git::clone['statsd'], }, file {'/etc/init/statsd.conf': content => template('statsd/upstart.conf.erb'), owner => 'root', group => 'root', mode => '0444', notify => service['statsd'], }, service {'statsd': ensure => running, enable => true, provider => 'upstart', require => [ git::clone['statsd'], npm::install[$dir], file[, service {'statsd': ensure => running, enable => true, provider => 'upstart', require => [ git::clone['statsd'], npm::install[$dir], file[${dir}/config.js] ], }",CWE-19,"{'reason': 'The file ${dir}/backends/statsd-json-backend.js: must be changed to ensure => file[${dir}/backends/statsd-json-backend.js]', 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
85,"class ironic::drivers::deploy ( $http_url = undef, $http_root = undef, ) { if $http_url { warning('http_url is deprecated and will be removed after newton cycle.') } if $http_root { warning('http_root is deprecated and will be removed after newton cycle.') } }",0,1,"class ironic::drivers::deploy ( $http_url = undef, $http_root = undef, ) {, class ironic::drivers::deploy ($http_url = undef, $http_root = undef, ), if $http_root, if $http_root { warning('http_root is deprecated and will be removed after newton cycle.') }, if $http_url, if $http_url { warning('http_url is deprecated and will be removed after newton cycle.') }, warning('http_root is deprecated and will be removed after newton cycle.'), warning('http_url is deprecated and will be removed after newton cycle.')","CWE-502, CWE-754, CWE-758","{'reason': 'The misconfiguration does not cause a vulnerability, the deprecated parameters do not directly cause any issues in the Puppet code.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
86,"class tripleo::profile::base::ceph::mon ( $ceph_pools = {}, $step = hiera('step'), ) { include ::tripleo::profile::base::ceph if $step >= 2 { include ::ceph::profile::mon } if $step >= 4 { create_resources('ceph::pool', $ceph_pools) } }",1,1,"class tripleo::profile::base::ceph::mon ( $ceph_pools = {}, $step = hiera('step'), ) { include ::tripleo::profile::base::ceph if $step >= 2 { include ::ceph::profile::mon } if $step >= 4 { create_resources('ceph::pool', $ceph_pools) } }",CWE-22,"{'reason': ""The misconfiguration is related to CWE-22, which is an Information Leakage vulnerability. This misconfiguration exposes an internal variable, 'ceph_pools', which is used in the hiera configuration. By exposing this variable, the misconfiguration creates an unnecessary risk of leaking sensitive information to an attacker who might have access to the hiera database. This may lead to an attacker obtaining valuable information, such as passwords, access tokens, and other sensitive data, which could be used to gain unauthorized access to the Puppet server and its resources. It is important to note that any vulnerability in the hiera configuration may have a serious impact on the security of the Puppet server and its resources, as it is one of the most common entry points for attackers."", 'related_cwe': 'CWE-22, CWE-266, CWE-527, CWE-528, CWE-529, CWE-530, CWE-531', 'is_misconfiguration_related': 'Yes'}"
87,notice('modular: contrail/upgrade-contrail-analytics.pp') include contrail package <||> { ensure => latest } class { 'contrail::analytics': },0,1,"class { 'contrail::analytics': }, include contrail, notice('modular: contrail/upgrade-contrail-analytics.pp'), package <||> { ensure => latest }","CWE-16, CWE-20","{'reason': 'The script is not related to any of the CWEs. This is not an issue.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
88,"define packages::pkgexe($package=$title, $exe, $private=false, $install_options=[]) { include dirs::installersource::puppetagain_pub_build_mozilla_org::exes $installersource_posix = 'c:/installersource/puppetagain.pub.build.mozilla.org' $installersource_win = 'c:\installersource\puppetagain.pub.build.mozilla.org' $p = $private ? { true => ""/private"", false => """" } file { ""$installersource_posix/exes/$exe"": source => ""puppet:///repos$p/exes/$exe"", require => class[""dirs::installersource::puppetagain_pub_build_mozilla_org::exes""]; } package { $package: ensure => installed, provider => windows, source => ""$installersource_win\\exes\\$exe"", require => file[""$installersource_posix/exes/$exe""]; } }",0,1,"class[\, class[\\, file {, include dirs::installersource::puppetagain_pub_build_mozilla_org::exes, include dirs::installersource::puppetagain_pub_build_mozilla_org::exes $installersource_posix = 'c:/installersource/puppetagain.pub.build.mozilla.org', include dirs::installersource::puppetagain_pub_build_mozilla_org::exes $installersource_win = 'c:\\installersource\\puppetagain.pub.build.mozilla.org', package {",CWE-117,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
89,class { '::openstack_tasks::aodh::aodh' :} warning('osnailyfacter/modular/./aodh/aodh.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./aodh/aodh.pp'),1,1,"class { '::openstack_tasks::aodh::aodh' :, warning('osnailyfacter/modular/./aodh/aodh.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./aodh/aodh.pp')",CWE-125,"{'reason': 'Deprecation warnings are logged to /var/log/ironic/ironic-conductor.log by ironic-conductor when using deprecated functionality. Therefore, deprecation warnings can be safely ignored, as they are not a security vulnerability.', 'related_cwe': 'CWE-125', 'is_misconfiguration_related': 'Yes'}"
90,"class openstack::ha::heat ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = undef, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'heat-api', haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose', 'http-buffer-request'], 'timeout' => ['server 660s', 'http-request 10s'], 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3 fall 3', } openstack::ha::haproxy_service { 'heat-api': order => '160', listen_port => 8004, } openstack::ha::haproxy_service { 'heat-api-cfn': order => '161', listen_port => 8000, } openstack::ha::haproxy_service { 'heat-api-cloudwatch': order => '162', listen_port => 8003, } }",1,1,"balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3',",CWE-22,"{'reason': 'The misconfiguration can cause performance degradation when accessing the heat API. The default value of downinter is set to 3, which is high. The value is supposed to be less than 10 seconds. A higher value means that the system will wait longer when there is a problem connecting with the upstream servers. This issue will reduce availability.', 'related_cwe': 'CWE-22: Outbound Communication', 'is_misconfiguration_related': 'Yes'}"
91,"class cdh::mahout { package { 'mahout': ensure => 'installed', } }",0,1,"class cdh::mahout { package {'mahout': ensure => 'installed', } }, package {'mahout': ensure => 'installed', }",CWE-352,"{'reason': 'Explanation related to the issue', 'related_cwe': 'CWE number related to the issue', 'is_misconfiguration_related': 'Yes'}"
92,"class heat::policy ( $policies = {}, $policy_path = '/etc/heat/policy.json', ) { include ::heat::deps validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'heat_config': policy_file => $policy_path } anchor<| title == 'heat::config::start' |> -> class['heat::policy'] ~> anchor<| title == 'heat::config::end' |> }",1,1,"anchor<| title == 'heat::config::start' |> -> class['heat::policy'] ~> anchor<| title == 'heat::config::end' |>, class heat::policy ( $policies = {}, $policy_path = '/etc/heat/policy.json', ) { include ::heat::deps, class heat::policy ( $policies = {}, $policy_path = '/etc/heat/policy.json', ) { include ::heat::deps validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'heat_config': policy_file => $policy_path } anchor<| title == 'heat::config::start' |> -> class['heat::policy'] ~> anchor<| title == 'heat::config::end' |> }, class[\'heat::policy\'] ~> anchor<| title == \'heat::config::end\' |>, class[\\'heat::policy\\'] ~> anchor<| title == \\'heat::config::end\\' |>, create_resources('openstacklib::policy::base', $policies), include ::heat::deps validate_hash($policies), openstacklib::policy::base { file_path => $policy_path, }, oslo::policy { 'heat_config': policy_file => $policy_path }","CWE-200, CWE-532, CWE-732","{'reason': 'Anchor class can be used to create a barrier around a group of resources. Anchor class is useful to make sure that resources can be provisioned only after previous resources have been provisioned. It is not recommended to use anchor class inside other classes, since it can lead to cyclic resource dependencies. In this case, class heat::policy is being anchored, and it contains a resource class openstacklib::policy::base which in turn depends on its own anchor class. If we create a cyclic dependency of anchors, puppet may not be able to correctly resolve dependencies.', 'related_cwe': 'CWE-732, CWE-532, CWE-200', 'is_misconfiguration_related': 'Yes'}"
93,"class fuel::astute( $debug = $::fuel::params::debug, $rabbitmq_host = $::fuel::params::rabbitmq_host, $rabbitmq_astute_user = $::fuel::params::rabbitmq_astute_user, $rabbitmq_astute_password = $::fuel::params::rabbitmq_astute_password, $bootstrap_profile = $::fuel::params::bootstrap_profile, ) inherits fuel::params { $log_level = $debug ? { true => 'debug', default => 'info', } $packages = [ 'psmisc', 'python-editor', 'nailgun-mcagents', 'sysstat', 'rubygem-amqp', 'rubygem-amq-protocol', 'rubygem-i18n', 'rubygem-tzinfo', 'rubygem-minitest', 'rubygem-symboltable', 'rubygem-thread_safe', ] ensure_packages($packages) case $::operatingsystem { /(?i)(centos|redhat)/: { case $::operatingsystemrelease { /7.+/: { ensure_packages(['rubygem-astute']) package[$packages] -> package['rubygem-astute'] } } } } file { '/etc/sysconfig/astute': content => template('fuel/astute/sysconfig.erb'), owner => 'root', group => 'root', mode => '0644' } ~> service <| title == 'astute' |> file { '/usr/bin/astuted': content => template('fuel/astute/astuted.erb'), owner => 'root', group => 'root', mode => '0755', } ~> service <| title == 'astute' |> file {'/etc/astute': ensure => directory, owner => 'root', group => 'root', mode => '0755', } file {'/etc/astute/astuted.conf': content => template('fuel/astute/astuted.conf.erb'), owner => 'root', group => 'root', mode => '0644', require => file['/etc/astute'], } ~> service <| title == 'astute' |> file {'/var/log/astute': ensure => directory, owner => 'root', group => 'root', mode => '0755', } exec {'use correct versions of rubygem packages': command => '/usr/bin/sed -i ""/amq-protocol/ s/~>/>=/"" /usr/share/gems/specifications/amqp-*.gemspec', require => package[$packages], } }",1,1,"case $::operatingsystem {\n /(?i)(centos|redhat)/: {\n, case $::operatingsystemrelease {\\n /7.+/: {\\n, exec {'use correct versions of rubygem packages':, file {'/etc/astute':, file {'/usr/bin/astuted':, file {'/var/log/astute':, package[$packages] -> package['rubygem-astute']",CWE-327,"{'reason': 'CWE-327 was applied to the case that all the files were owned by the same user and group. This vulnerability allows anyone with write access to the /var/log/astute directory to modify or delete arbitrary files.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
94,"import ""stages.pp"" import ""config.pp"" import ""nodes.pp"" case $::operatingsystem { windows: { file { owner => root, backup => false, mode => filemode(0644), source_permissions => ignore, } } default: { file { owner => 0, group => 0, mode => filemode(0644), backup => false, } } } concat { backup => false } concat::fragment { backup => false } if ($::operatingsystem != ""windows"") { resources { 'user': purge => true, unless_system_user => 499; } } case $operatingsystem { centos,ubuntu: { resources { 'firewall': purge => true; } firewall { require => class['fw::pre'], before => class['fw::post'], } } default: { } }",1,1,"file { owner => 0, group => 0, mode => filemode(0644), backup => false, }, file { owner => root, backup => false, mode => filemode(0644), source_permissions => ignore, }, firewall { require => class['fw::pre'], before => class['fw::post'], }, resources { 'firewall': purge => true; }, resources { 'user': purge => true, unless_system_user => 499; }","CWE-270, CWE-275, CWE-287, CWE-294","{'reason': 'Misconfiguration reason', 'related_cwe': 'CWE numbers related to the issue', 'is_misconfiguration_related': 'Yes/No'}"
95,class { '::osnailyfacter::database::database' :},1,1,class { '::osnailyfacter::database::database' :},"CWE-732, CWE-79, CWE-798, CWE-862, CWE-863, CWE-899, CWE-909, CWE-960","{'reason': 'Misconfiguration Label LLM: 1 and Original Defect Label: 1 represent the same vulnerability', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
96,"class swift::proxy::keystone( $operator_roles = ['admin', 'swiftoperator'], $reseller_prefix = 'auth_', $is_admin = undef ) { include ::swift::deps if $is_admin { warning('is_admin parameter is deprecated, has no effect and will be removed in a future release.') } concat::fragment { 'swift_keystone': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/keystone.conf.erb'), order => '180', } }",0,1,"concat::fragment {'swift_keystone':, if $is_admin {, is_admin parameter is deprecated, has no effect and will be removed in a future release., warning('is_admin parameter is deprecated, has no effect and will be removed in a future release.')",CWE-22,"{'reason': 'The misconfiguration relates to the warning in line 4', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
97,"define heka::encoder::sandbox ( $config_dir, $filename, $config = {}, $module_directory = undef, $ensure = present, ) { include heka::params validate_hash($config) file { ""${config_dir}/encoder-${title}.toml"": ensure => $ensure, content => template('heka/encoder/sandbox.toml.erb'), mode => '0600', owner => $heka::params::user, group => $heka::params::user, } }",0,1,"content => template('heka/encoder/sandbox.toml.erb'),, content => template('heka/encoder/sandbox.toml.erb'), \\\\\\\\\n},, file { \\n  \\, group => $heka::params::user, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}mode => '0600', \\\\\\, mode => '0600', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, mode => '0600', \\\\\\\\\\\\n} \\\\\\\\\\\\\\\\\\\n, owner => $heka::params::user, \\\, owner => $heka::params::user, \\\\n} \\\\\, validate_hash(\n\n      $config)","CWE-276: Incorrect Default Permissions, CWE-918: Use of Sensitive Information as Input to Password Hashing without Restriction on Password Choices, CWE-933: Using Inherently Unsafe Primitives","{'reason': 'The vulnerability is related to the CWE because of the `owner => $heka::params::user` misconfiguration which grants ownership to a user account instead of the system owner which can grant access to other users.', 'related_cwe': 'CWE-276, CWE-918, CWE-933', 'is_misconfiguration_related': 'Yes'}"
98,"class firewall ( $ensure = running ) { case $ensure { /^(running|stopped)$/: { } default: { fail(""${title}: ensure value '${ensure}' is not supported"") } } case $::kernel { 'linux': { class { ""${title}::linux"": ensure => $ensure, } } default: { fail(""${title}: kernel '${::kernel}' is not currently supported"") } } }",0,1,"case $::kernel { 'linux': { class { \, case $ensure { /^(running|stopped)$/: { } default: { fail(\, class { \\, default: { fail(\\, default: { fail(\\\\\\\\, ensure => $ensure, } } default: { fail(\\, ensure => $ensure, } } default: { fail(\\\\, ensure => $ensure, } } default: { fail(\\\\\\\\\\\\\\\\\\, fail(\\,, fail(\\\",CWE-200,"{'reason': ""The misconfiguration in line 98 is not related to the provided CWE. The code only checks whether the ensure value is set correctly, not whether the kernel supports the ensure value. The correct way to check the kernel would be to include a case block that checks for the correct kernel first, and then has a nested case block that checks for a valid ensure value. The following code demonstrates the correct way to implement the code:\\n\\n```puppet\\nclass firewall ( $ensure = running ) {\\n  case $::kernel {\\n    'linux': {\\n      case $ensure {\\n        /^(running|stopped)$/: {\\n          } default: {\\n            fail(\\n              \\"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
99,"class openstack::workloads_collector( $workloads_password = false, $enabled = true, $workloads_username = 'fuel_stats_user', $workloads_tenant = 'services', $workloads_create_user = false ) { if $workloads_create_user { validate_string($workloads_password) keystone_user { $workloads_username: ensure => present, password => $workloads_password, enabled => $enabled, } keystone_tenant { $workloads_tenant: ensure => present, } keystone_user_role { ""$workloads_username@$workloads_tenant"": ensure => present, roles => ['admin'], } } }",0,1,"class openstack::workloads_collector( \\\\\$workloads_password = false, \\\\\$enabled = true, \\\\\$workloads_username = 'fuel_stats_user', \\\\\$workloads_tenant ='services', \\\\\$workloads_create_user = false ) {, keystone_tenant {\\\\$workloads_tenant: ensure => present, }, keystone_tenant {\\\\\\\\\\\\\\\\\\\\$workloads_tenant: ensure => present, }, keystone_user {\\$workloads_username: ensure => present, password => \\$workloads_password, enabled => \\$enabled, }, keystone_user {\\\\\\\\$workloads_username: ensure => present, password => \\\\\\\\\$workloads_password, enabled => \\\\\\\\\$enabled, }, keystone_user {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$workloads_username: ensure => present, password => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$workloads_password, enabled => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$enabled, }, keystone_user_role {\$workloads_username@\$workloads_tenant: ensure => present, roles => ['admin'], }, keystone_user_role {\\\\$workloads_username@\\\\$workloads_tenant: ensure => present, roles => ['admin'], }, validate_string(\\$workloads_password), validate_string(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$workloads_password)","CWE-312, CWE-522","{'reason': 'The provided misconfiguration label LLM is the same as the CWE. However, it does not correspond to a real misconfiguration in the script because the script is intentionally written with CWE-522 as a potential vulnerability.\\n\\nWhile the CWE provided is related to a potential vulnerability in the script, the misconfiguration label LLM is not. Instead, the misconfiguration label LLM should be related to the intentional vulnerability, which is CWE-312.', 'related_cwe': 'CWE-312, CWE-522', 'is_misconfiguration_related': 'No'}"
100,"class { '::trove::client': } class { '::trove::keystone::auth': admin_address => '10.0.0.1', internal_address => '10.0.0.1', public_address => '10.0.0.1', password => 'verysecrete', region => 'openstack' } class { '::trove::db::mysql': password => 'dbpass', host => '10.0.0.1', allowed_hosts => '10.0.0.1' } class { '::trove': database_connection => 'mysql://trove:secrete@10.0.0.1/trove?charset=utf8', rabbit_hosts => '10.0.0.1', rabbit_password => 'secrete', nova_proxy_admin_pass => 'novapass', } class { '::trove::api': bind_host => '10.0.0.1', auth_url => 'https://identity.openstack.org:5000/v2.0', keystone_password => 'verysecrete' } class { '::trove::conductor': auth_url => 'https://identity.openstack.org:5000/v2.0' } class { '::trove::taskmanager': auth_url => 'https://identity.openstack.org:5000/v2.0' }",1,0,"class { '::trove::client': }class { '::trove::client': }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, class { '::trove::client': }\\\\\\\\\\\\\\\\\\\\n, class { '::trove::client': }\\\\\\\\n, class { '::trove::client': }\\\\n, class { '::trove::client': }\\n, class { '::trove::client': }\n",CWE-285,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
101,class role::mobilecontentservice { include ::role::restbase include ::role::mobilefrontend include ::mobilecontentservice },1,1,class role::mobilecontentservice { include ::role::restbase include ::role::mobilefrontend include ::mobilecontentservice },CWE-79,"{'reason': 'There is no specific reasoning provided by the team', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
102,"class sahara::notify ( $enable_notifications = $::os_service_default, $notification_transport_url = $::os_service_default, $notification_driver = $::os_service_default, $notification_topics = $::os_service_default, $notification_level = $::os_service_default, $control_exchange = undef, ) { if $control_exchange { warning('control_exchange is moved to ::sahara and will be removed from sahara::notify in a future release') } oslo::messaging::notifications { 'sahara_config': transport_url => $notification_transport_url, driver => $notification_driver, topics => $notification_topics, } sahara_config { 'oslo_messaging_notifications/enable': value => $enable_notifications; 'oslo_messaging_notifications/level': value => $notification_level; } }",0,1,"oslo::messaging::notifications {'sahara_config': transport_url => $notification_transport_url, driver => $notification_driver, topics => $notification_topics, }, sahara_config {'oslo_messaging_notifications/enable': value => $enable_notifications; 'oslo_messaging_notifications/level': value => $notification_level; }, warning('control_exchange is moved to ::sahara and will be removed from sahara::notify in a future release')","CWE-306, CWE-345, CWE-522","{'reason': 'Explanation why this misconfiguration is related to CWE-306, CWE-345, CWE-522', 'related_cwe': 'CWE-306, CWE-345, CWE-522', 'is_misconfiguration_related': 'Yes'}"
103,"class midonet::agent::install ( $package_name = 'midolman', $package_ensure = 'present', $manage_java = false, ) { if $manage_java { case $::osfamily { 'debian': { include apt if $::lsbdistrelease == '16.04' { } elsif $::lsbdistrelease == '14.04' { package { 'software-properties-common': ensure => installed } apt::ppa { 'ppa:openjdk-r/ppa': ensure => present, require => package['software-properties-common'], before => package[$package_name], } } else { fail(""can't manage java on ${::lsbdistid} ${::lsbdistrelease}"") } } 'redhat': { } default: { fail(""java cannot be managed on ${::osfamily}-based systems"") } } } case $::osfamily { 'debian': { package { 'midolman': ensure => $package_ensure, name => $package_name, require => exec['apt_update'], } } 'redhat': { package { 'midolman': ensure => $package_ensure, name => $package_name, } } default: { fail(""midonet agent cannot be installed on ${::osfamily}-based systems"") } } }",0,1,"apt::ppa, package",CWE-295,"{'reason': 'The apt::ppa and package resource are misconfigured because the package name is different than what is stated in the class definition.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
104,nan,0,1,"file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content': \, file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content': \\, file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content': \\\\, file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content': \\\\\\\\\\, file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content': \\\\\\\\\\\\\\\\\\\\\\\, file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file_line_resource {'ensure': 'present', 'target': '/tmp/file_name', 'content{'reason': 'The content value appears to be a string which can be set in the default case of the file_line_resource declaration. This can be used to insert content into a file on the system, allowing for malicious actions such as injecting commands to be executed. The lack of escaping and escaping of characters may result in a lack of protection against the injection.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
105,"class { '::rally::settings': cirros_img_url => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', project_domain => 'admin', resource_deletion_timeout => '120', } class { '::rally': ensure_package => latest, }",0,1,"class { '::rally': ensure_package => latest, }, class { '::rally::settings': cirros_img_url => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', project_domain => 'admin', resource_deletion_timeout => '120', }, class {'::rally::settings': cirros_img_url => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', project_domain => 'admin', resource_deletion_timeout => '120', }",CWE-284,"{'reason': 'User input to the `cirros_img_url` parameter is not validated, which could allow an attacker to inject a malicious image into the Rally deployment, potentially causing an attacker to gain unauthorized control over the deployment. This vulnerability is described by CWE-284: Uncontrolled Search Path Element. This example of uncontrolled input in user data is related to CWE-284.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
106,"class neutron::plugins::ml2::bigswitch ( $package_ensure = 'present', ) { include ::neutron::deps include ::neutron::params require ::neutron::plugins::ml2 if($::osfamily != 'redhat') { fail(""unsupported osfamily ${::osfamily}"") } ensure_packages('python-networking-bigswitch', { ensure => $package_ensure, tag => 'openstack', } ) warning('python-networking-bigswitch package management is deprecated, it will be dropped in a future release.') }",0,1,"ensure_packages('python-networking-bigswitch', { ensure => $package_ensure, tag => 'openstack', } ) warning('python-networking-bigswitch package management is deprecated, it will be dropped in a future release.')}, fail(, if($::osfamily!='redhat') { fail(, include ::neutron::deps, require ::neutron::plugins::ml2, warning('python-networking-bigswitch package management is deprecated, it will be dropped in a future release.')}","CWE-807, CWE-829, CWE-863","{'reason': 'The misconfiguration in question relates to CWE-863 as it is an example of a configuration error.', 'related_cwe': 'CWE-863', 'is_misconfiguration_related': 'Yes'}"
107,"class slave_secrets::google_api_key($ensure=present) { include config include dirs::builds $gapi_file = $::operatingsystem? { windows => 'c:/builds/gapi.data', default => '/builds/gapi.data' } if ($ensure == 'present' and $config::install_google_api_key) { file { ""$gapi_file"": content => secret(""google_api_key""), mode => 0644, show_diff => false; } } else { file { ""$gapi_file"": ensure => absent; } } }",0,1,"file { \, file { \\, file { \\\\, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file {if ($ensure == 'present' and $config::install_google_api_key)",CWE-327,"{'reason': 'The original defect label does not match the misconfiguration label, indicating that the misconfiguration is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
108,"class swift::proxy::ceilometer( $rabbit_user = 'guest', $rabbit_password = 'guest', $rabbit_host = '127.0.0.1', $rabbit_port = '5672', $rabbit_hosts = undef, $rabbit_virtual_host = '/', $driver = undef, $topic = undef, $control_exchange = undef, $ensure = 'present', $group = 'ceilometer', ) inherits swift { include ::swift::deps if(is_array($rabbit_hosts)) { $rabbit_hosts_with_creds = prefix($rabbit_hosts, ""${rabbit_user}:${rabbit_password}@"") } user['swift'] { groups +> $group, } if defined(service['swift-proxy']) { file['/var/log/ceilometer/swift-proxy-server.log'] -> service['swift-proxy'] } file { '/var/log/ceilometer/swift-proxy-server.log': ensure => file, mode => '0664', owner => 'swift', group => 'swift', } concat::fragment { 'swift_ceilometer': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/ceilometer.conf.erb'), order => '260', require => class['::ceilometer'], } package { 'python-ceilometermiddleware': ensure => $ensure, tag => ['openstack', 'swift-support-package'], } }",0,1,"class swift::proxy::ceilometer($rabbit_user = 'guest', $rabbit_password = 'guest', $rabbit_host = '127.0.0.1', $rabbit_port = '5672', $rabbit_hosts = undef, $rabbit_virtual_host = '/', $driver = undef, $topic = undef, $control_exchange = undef, $ensure = 'present', $group = 'ceilometer', ) inherits swift { include ::swift::deps if(is_array($rabbit_hosts)) { $rabbit_hosts_with_creds = prefix($rabbit_hosts,, concat::fragment {'swift_ceilometer': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/ceilometer.conf.erb'), order => '260', require => class['::ceilometer'], }, file['/var/log/ceilometer/swift-proxy-server.log'] -> service['swift-proxy'], package {'python-ceilometermiddleware': ensure => $ensure, tag => ['openstack','swift-support-package'], }, rabbit_hosts_with_creds = prefix($rabbit_hosts,, rabbit_hosts_with_creds = prefix($rabbit_hosts, \, user['swift'] { groups +> $group, }","CWE-256, CWE-284, CWE-306, CWE-347, CWE-522, CWE-601","{'reason': 'The given misconfiguration is related to the CWE.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
109,class toplevel::server::foopy inherits toplevel::server { class { '::foopy': } },0,1,nan,nan,"{'reason': 'nan', 'related_cwe': 'nan', 'is_misconfiguration_related': 'nan'}"
110,"define osnailyfacter::wait_for_backend ( $lb_hash = {}, $lb_defaults = {}, ) { ensure_resource_with_default('haproxy_backend_status',$lb_hash,$lb_defaults) }",0,1,"ensure_resource_with_default('haproxy_backend_status',$lb_hash,$lb_defaults)",CWE-22,"{'reason': 'Reasoning goes here', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes/No'}"
111,"class aodh::params { include ::openstacklib::defaults $client_package_name = 'python-aodhclient' case $::osfamily { 'redhat': { $common_package_name = 'openstack-aodh-common' $api_package_name = 'openstack-aodh-api' $api_service_name = 'openstack-aodh-api' $notifier_package_name = 'openstack-aodh-notifier' $notifier_service_name = 'openstack-aodh-notifier' $evaluator_package_name = 'openstack-aodh-evaluator' $evaluator_service_name = 'openstack-aodh-evaluator' $expirer_package_name = 'openstack-aodh-expirer' $expirer_package_serice = 'openstack-aodh-expirer' $expirer_service_name = 'openstack-aodh-expirer' $listener_package_name = 'openstack-aodh-listener' $listener_service_name = 'openstack-aodh-listener' $aodh_wsgi_script_path = '/var/www/cgi-bin/aodh' $aodh_wsgi_script_source = '/usr/lib/python2.7/site-packages/aodh/api/app.wsgi' } 'debian': { $common_package_name = 'aodh-common' $api_package_name = 'aodh-api' $api_service_name = 'aodh-api' $notifier_package_name = 'aodh-notifier' $notifier_service_name = 'aodh-notifier' $evaluator_package_name = 'aodh-evaluator' $evaluator_service_name = 'aodh-evaluator' $expirer_package_name = 'aodh-expirer' $expirer_package_serice = 'aodh-expirer' $expirer_service_name = 'aodh-expirer' $listener_package_name = 'aodh-listener' $listener_service_name = 'aodh-listener' $aodh_wsgi_script_path = '/usr/lib/cgi-bin/aodh' $aodh_wsgi_script_source = '/usr/share/aodh-common/app.wsgi' } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem"") } } }",1,1,"aodh::params::api_package_name = 'openstack-aodh-api', aodh::params::api_service_name = 'openstack-aodh-api', aodh::params::client_package_name = 'python-aodhclient', aodh::params::common_package_name = 'openstack-aodh-common', aodh::params::evaluator_package_name = 'openstack-aodh-evaluator', aodh::params::evaluator_service_name = 'openstack-aodh-evaluator', aodh::params::expirer_package_name = 'openstack-aodh-expirer', aodh::params::expirer_package_serice = 'openstack-aodh-expirer', aodh::params::notifier_package_name = 'openstack-aodh-notifier', aodh::params::notifier_service_name = 'openstack-aodh-notifier'",CWE-327,"{'reason': 'The provided misconfiguration labels do not align with the provided CWE. Additionally, the misconfiguration does not indicate a common vulnerability related to a misconfiguration. Instead, the provided misconfiguration label (LLM) simply references a common package, service, and script for the provided misconfiguration. The CWE provided describes a vulnerability related to a misconfigured service and the provided misconfiguration labels do not align with the common package, service, or script for the misconfiguration. Furthermore, the misconfiguration is not related to a vulnerability common to misconfigurations. As such, the misconfiguration is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
112,"define swift::storage::loopback( $base_dir = '/srv/loopback-device', $mnt_base_dir = '/srv/node', $byte_size = '1024', $seek = '25000', $fstype = 'xfs' ) { include ::swift::deps if(!defined(file[$base_dir])) { file { $base_dir: ensure => directory, require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } } if(!defined(file[$mnt_base_dir])) { file { $mnt_base_dir: ensure => directory, owner => 'swift', group => 'swift', require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } } exec { ""create_partition-${name}"": command => ""dd if=/dev/zero of=${base_dir}/${name} bs=${byte_size} count=0 seek=${seek}"", path => ['/usr/bin/', '/bin'], unless => ""test -f ${base_dir}/${name}"", require => file[$base_dir], before => anchor['swift::config::end'], } $storage_params = { device => ""${base_dir}/${name}"", mnt_base_dir => $mnt_base_dir, byte_size => $byte_size, subscribe => exec[""create_partition-${name}""], loopback => true, } $device_config_hash = { ""${name}"" => $storage_params } create_resources(""swift::storage::${fstype}"", $device_config_hash) }",0,1,"create_resources(\, create_resources(\\, define swift::storage::loopback( $base_dir = '/srv/loopback-device', $mnt_base_dir = '/srv/node', $byte_size = '1024', $seek = '25000', $fstype = 'xfs' ) { include ::swift::deps, if (file) { $storage_params = { device => \\, if (file) { swift::storage::${fstype}, if(!defined(file[$base_dir])) { file { $base_dir: ensure => directory, require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } } if(!defined(file[$mnt_base_dir])) { file { $mnt_base_dir: ensure => directory, owner =>'swift', group =>'swift', require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } } exec { \, storage_params = { device => \, swift::storage::${fstype}",CWE-732,"{'reason': 'The configuration misconfiguration is related to the CWE as it allows the user to create a device using dd command. The dd command can be used to create devices with arbitrary sizes. This can potentially lead to the creation of devices larger than the allowed size, which would then allow an attacker to create a device larger than the size allowed, which would then allow an attacker to bypass the size check and create a device with a size greater than the maximum allowed size. Since the check for device size is performed after the device is created, an attacker can create a device with a size greater than the allowed size and then use the device. This can lead to the attacker being able to access the entire system without authorization, which is a serious security issue.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
113,class { '::osnailyfacter::logging::logging' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,"class { ':osnailyfacter::logging::logging' :, class { ':osnailyfacter::upgrade::restart_services' :, }",CWE-306,"{'reason': 'There are no common syntax mistakes or logic errors in the script to explain why the misconfiguration is not related to the provided CWE. The error in the provided misconfiguration is a logical error.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
114,"class tripleo::profile::base::ceph::rgw ( $keystone_admin_token, $keystone_url, $rgw_key, $step = hiera('step'), ) { include ::tripleo::profile::base::ceph if $step >= 3 { include ::ceph::profile::rgw $rgw_name = hiera('ceph::profile::params::rgw_name', 'radosgw.gateway') ceph::key { ""client.${rgw_name}"": secret => $rgw_key, cap_mon => 'allow *', cap_osd => 'allow *', inject => true, } } if $step >= 4 { ceph::rgw::keystone { $rgw_name: rgw_keystone_accepted_roles => ['admin', '_member_', 'member'], use_pki => false, rgw_keystone_admin_token => $keystone_admin_token, rgw_keystone_url => $keystone_url, } } }",0,1,"ceph::rgw::keystone, include ::ceph::profile::rgw",CWE-798,"{'reason': 'radosgw.gateway should be changed to a value that does not correspond to the Keystone tenant name.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
115,"include redis::params $ensure = 'present' $service_name = $redis::params::service $ocf_root_path = '/usr/lib/ocf' $handler_root_path = '/usr/local/bin' $primitive_provider = 'fuel' $primitive_type = $redis::params::service $ocf_script_name = ""${service_name}-ocf-file"" $ocf_script_file = 'redis/ocf/redis-server' $ocf_handler_name = ""ocf_handler_${service_name}"" $ocf_dir_path = ""${ocf_root_path}/resource.d"" $ocf_script_path = ""${ocf_dir_path}/${primitive_provider}/${$primitive_type}"" $ocf_handler_path = ""${handler_root_path}/${ocf_handler_name}"" file { $ocf_script_name : ensure => $ensure, path => $ocf_script_path, mode => '0755', owner => 'root', group => 'root', source => ""puppet:///modules/${ocf_script_file}"", }",0,1,"file { $ocf_script_name : ensure => $ensure, path => $ocf_script_path, mode => '0755', owner => 'root', group => 'root', source =>",CWE-25,"{'reason': ""The script is vulnerable to directory traversal, as it doesn't sanitize the path for the ocf script."", 'related_cwe': 'CWE-25', 'is_misconfiguration_related': 'Yes'}"
116,class tripleo{ },0,1,"class tripleo{ }, include tripleo::tripleo, node 'default' {include tripleo::tripleo}","CWE-1203, CWE-1321, CWE-1333","{'reason': ""The misconfiguration found in this defect is related to multiple CWE's."", 'related_cwe': 'CWE-1203, CWE-1321, CWE-1333', 'is_misconfiguration_related': 'Yes'}"
117,class { '::openstack_tasks::openstack_controller::openstack_controller' :} warning('osnailyfacter/modular/./openstack-controller/openstack-controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-controller/openstack-controller.pp'),1,0,nan,nan,"{'reason': ""The deprecation warning itself was deprecated, so its deprecatedness can be disregarded in favor of the main issue with the script itself. The main issue is that it's not well structured and therefore not in the appropriate format."", 'related_cwe': 'CWE-120, CWE-672', 'is_misconfiguration_related': 'Yes'}"
118,"class pacemaker::stonith ($disable=true) { if $disable == true { pacemaker::property { 'disable stonith': property => 'stonith-enabled', value => false, } } else { pacemaker::property { 'enable stonith': property => 'stonith-enabled', value => true, } } }",1,1,"if $disable == true { pacemaker::property { 'disable stonith': property =>'stonith-enabled', value => false, } }, if $disable == true { pacemaker::property { 'disable stonith': property =>'stonith-enabled', value => false, } } else {, pacemaker::property { 'disable stonith': property =>'stonith-enabled', value => false, }, pacemaker::property { 'enable stonith': property =>'stonith-enabled', value => true, }, pacemaker::property { 'enable stonith': property =>'stonith-enabled', value => true, } else {, pacemaker::property { 'enable stonith': property =>'stonith-enabled', value => true, } }",CWE-352,"{'reason': 'Pacemaker is designed to enable fencing using STONITH, but the misconfiguration in this script turns the feature off in every cluster node. The misconfiguration also enables STONITH in the same cluster node. This could allow for node compromise as STONITH may not take action and the node will not shut down as expected. Additionally, pacemaker will not be able to protect other nodes in the cluster, leading to a denial of service. The misconfiguration could be exploited to prevent pacemaker from shutting down the node in a node compromise situation or to shut down other nodes in the cluster, causing the entire cluster to go offline. This issue is related to CWE-352, which refers to the lack of enforcement of security controls. The mis', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
119,"class crm::drupal( $dir, $files_dir, $drupal_settings = {}, ) { include ::crm $install_script = ""${dir}/sites/default/drupal-install.sh"" $settings_path = ""${dir}/sites/default/settings.php"" $module_list = ""${dir}/sites/default/enabled_modules"" $databases = [ $::crm::drupal_db, 'donations', 'fredge', ] $db_url = ""mysql://${::crm::db_user}:${::crm::db_pass}@localhost/${::crm::drupal_db}"" $audit_base = '/var/spool/audit' class { 'crm::drush': root => $dir, } file { $files_dir: ensure => directory, group => 'www-data', mode => '2775', recurse => true, subscribe => exec['civicrm_setup'], } file { ""${dir}/sites/default"": mode => '0755', } file { ""${dir}/sites/default/files"": ensure => link, target => $files_dir, force => true, require => file[""${dir}/sites/default""], } file { $install_script: content => template('crm/drupal-install.sh.erb'), mode => '0755', require => git::clone[$::crm::repo], } file { [ $audit_base, ""${audit_base}/amazon"", ""${audit_base}/astropay"", ""${audit_base}/amazon/incoming"", ""${audit_base}/amazon/completed"", ""${audit_base}/astropay/incoming"", ""${audit_base}/astropay/completed"", ]: ensure => directory, group => 'www-data', mode => '2775', recurse => true, } mysql::db { $databases: } exec { 'drupal_db_install': command => $install_script, unless => ""/usr/bin/mysql -u '${::crm::db_user}' -p'${::crm::db_pass}' '${::crm::drupal_db}' -e 'select 1 from system'"", require => [ git::clone[$::crm::repo], mysql::db[$databases], package['drush'], file[""${dir}/sites/default/files""], ], } file { 'drupal_settings_php': path => $settings_path, content => template('crm/settings.php.erb'), mode => '0644', require => git::clone[$::crm::repo], } file { 'drupal_donationinterface_settings_php': path => ""${dir}/sites/default/donationinterface.settings.php"", content => template('crm/donationinterface.settings.php.erb'), mode => '0644', require => git::clone[$::crm::repo], } exec { 'enable_drupal_modules': command => inline_template('<%= scope[""::crm::drush::wrapper""] %> pm-enable `cat <%= @module_list %>` '), subscribe => exec['drupal_db_install'], require => [ exec['civicrm_setup'], file['drupal_settings_php'], ], } exec { 'update_exchange_rates': command => inline_template('<%= scope[""::crm::drush::wrapper""] %> exchange-rates-update'), unless => ""/usr/bin/mysql -u '${::crm::db_user}' -p'${::crm::db_pass}' '${::crm::drupal_db}' -b -n -e 'select 1 from exchange_rates') | grep -q 1"", require => exec['enable_drupal_modules'], } }",1,1,"class { 'crm::drush': root => $dir, }, drupal_db_install:command => $install_script,, drupal_donationinterface_settings_php:content => template('crm/donationinterface.settings.php.erb'),, enable_drupal_modules:command => inline_template('<%= scope[, file { $files_dir: ensure => directory,, file { 'drupal_settings_php': path => $settings_path, content => template('crm/settings.php.erb'), mode => '0644', require => git::clone[$::crm::repo], }, include ::crm, mysql::db { $databases:, mysql::db { $databases:\n}, update_exchange_rates:command => inline_template('<%= scope[",CWE-532: Insertion of Sensitive Information into Log File,"{'reason': 'This misconfiguration is related to CWE-532 Insertion of Sensitive Information into Log File because it involves information about users being logged into a Drupal application, which allows them to have their email addresses and usernames leaked. It is crucial to prevent this type of information from being stored in log files to preserve privacy and avoid breaches of data security.\\n\\nThe solution involves adjusting the configuration options for logging on Drupal. By changing the log settings, you can protect sensitive data from being stored in the logs. This may involve disabling logging entirely or configuring it to avoid storing unnecessary information.', 'related_cwe': 'CWE-532 Insertion of Sensitive Information into Log File', 'is_misconfiguration_related': 'Yes'}"
120,class { '::openstack_tasks::openstack_controller::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server warning('osnailyfacter/modular/./openstack-controller/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-controller/db.pp'),0,1,"include mysql::config, include mysql::server",CWE-22,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
121,"class buildbot_bridge { include ::config include buildbot_bridge::services include buildbot_bridge::settings include dirs::builds include packages::gcc include packages::make include packages::mozilla::python27 include packages::mysql_devel include users::builder python::virtualenv { ""${buildbot_bridge::settings::root}"": python => ""${packages::mozilla::python27::python}"", require => class[""packages::mozilla::python27""], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""requests==2.4.3"", ""arrow==0.5.4"", ""taskcluster==0.0.16"", ""sqlalchemy==1.0.0"", ""kombu==3.0.24"", ""redo==1.4"", ""mysql-python==1.2.5"", ""amqp==1.4.6"", ""python-dateutil==2.4.2"", ""pytz==2015.2"", ""six==1.9.0"", ""wsgiref==0.1.2"", ""pyhawk-with-a-single-extra-commit==0.1.5"", ""anyjson==0.3.3"", ""bbb==1.0"", ]; } }",1,1,"group => \\\\, include ::config \\\\\\\\, include buildbot_bridge::settings \\\\\\\\\\\\\\\\, include dirs::builds \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, include packages::mozilla::python27 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, packages => [ \\, packages => \\\\\\\\, python => \\, python::virtualenv { \, user => \\\\",CWE-352,"{'reason': 'the group variable should not contain a string (\\\\) as it will be treated as a user group. As this is not the intent of the script, it should be removed and a correct user should be set. If the intent is to create a new user, then a new user should be created as opposed to trying to use a variable as a user name. Also, all of the variables should be sanitized prior to use to ensure that the input is what was expected. The `python::virtualenv` resource is improperly defined. The `user` and `group` parameters should not be used together, and should have the `uid` and `gid` parameters instead. Finally, the `packages` parameter is improperly defined. The `packages', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
122,"class collectd::profiles { include collectd include collectd::settings include stdlib if $collectd::settings::collectd_enabled == true { include packages::collectd $common_plugins = [ 'memory', 'swap', 'uptime', 'load', ] case $operatingsystem { 'centos', 'ubuntu': { $os_generic_plugins = [] include collectd::plugins::cpu include collectd::plugins::disk include collectd::plugins::df include collectd::plugins::interface include collectd::plugins::ethstat include collectd::plugins::statsd } 'darwin': { $os_generic_plugins = [] include collectd::plugins::cpu include collectd::plugins::df include collectd::plugins::interface include collectd::plugins::statsd } default: { fail(""os profile not found in ${title}"") } } $plugins = concat($common_plugins, $os_generic_plugins) class {'collectd::plugins::generic': plugins => $plugins, } class { 'collectd::plugins::write_graphite': nodes => $collectd::settings::write['graphite_nodes'], } class { 'collectd::plugins::filters': write_chains => $collectd::settings::write['graphite_nodes'], } } }",1,1,"case $operatingsystem { 'centos', 'ubuntu': {, class { 'collectd::plugins::filters': write_chains => $collectd::settings::write[\\\\, class { 'collectd::plugins::write_graphite': nodes => $collectd::settings::write[\\\\\\, class {'collectd::plugins::generic': plugins => $plugins, }, default: { fail(\\\, if $collectd::settings::collectd_enabled == true\n, }",CWE-835,"{'reason': ""The misconfiguration is related to CWE-835 due to how the script assigns classes based on the value of $operatingsystem. This allows classes to be defined in an incorrect order. An example of this is the class definition for 'collectd::plugins::filters' where the variable $collectd::settings::write[\\\\\\"", 'related_cwe': 'CWE-835', 'is_misconfiguration_related': 'Yes'}"
123,"file { [""/etc/puppet/rack"", ""/etc/puppet/rack/public""]: ensure => directory, mode => 0755, owner => root, group => root, } file { ""/etc/puppet/rack/config.ru"": ensure => present, source => ""puppet:///modules/rack/config.ru"", mode => 0644, owner => puppet, group => root, } file { ""/etc/apache2/conf.d/puppetmasterd"": ensure => present, source => ""puppet:///modules/rack/apache2.conf"", mode => 0644, owner => root, group => root, require => [file[""/etc/puppet/rack/config.ru""], file[""/etc/puppet/rack/public""], package[""apache2""], package[""passenger""]], notify => service[""apache2""], } package { [""rack"", ""passenger""]: ensure => installed, provider => ""gem"", } service { ""apache2"": } case $lsbdistid { ""debian"": { package { [""apache2-mpm-worker"", ""apache2-threaded-dev"", ""apache2""]: ensure => installed, } file { ""/etc/apache2/mods-enabled/ssl.load"": ensure => ""../mods-available/ssl.load"", notify => service[""apache2""], require => package[""apache2""], } service[""apache2""] { require => package[""apache2""], } exec { ""/var/lib/gems/1.8/bin/passenger-install-apache2-module --auto"": subscribe => package[""passenger""], before => service[""apache2""], require => package[[""passenger"", ""apache2-threaded-dev""]], } } } notice(""you need to manually enable mod_passenger.so for apache."") notice(""usually, you put these config stanzas into httpd.conf:"") notice("" loadmodule passenger_module /var/lib/gems/1.8/gems/passenger-2.2.2/ext/apache2/mod_passenger.so"") notice("" passengerroot /var/lib/gems/1.8/gems/passenger-2.2.2"") notice("" passengerruby /usr/bin/ruby1.8"") notice(""--------------------------------------------------------"")",1,1,"before => service[\\\\, file { [\, notice(\\\\, notice(\\\\\\\\, notify => service[\\\\, owner => puppet, group => root,}, require => package[\\\\, service[\\, source => \\",CWE-306,"{'reason': ""The misconfiguration is related to CWE-306 because the 'rack' and 'passenger' packages are installed via the 'gem' provider. A package provider vulnerability exists where the gem installer may not fully install dependencies when installing gems. In the case of rack, dependencies are required to fully run the script. If the packages are installed via the 'gem' provider, a user could inject arbitrary gem installations into the puppet script by abusing the gem provider's dependency on the gem dependencies. The misconfiguration is not a vulnerability because puppet does not run code from files it installs, however, if the script were changed to download code and run it from a script, the vulnerability would be present."", 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
124,"class ceilometer::agent::central ( $manage_service = true, $enabled = true, $package_ensure = 'present', $coordination_url = undef, ) { include ::ceilometer::params ceilometer_config<||> ~> service['ceilometer-agent-central'] package['ceilometer-agent-central'] -> service['ceilometer-agent-central'] package { 'ceilometer-agent-central': ensure => $package_ensure, name => $::ceilometer::params::agent_central_package_name, tag => ['openstack', 'ceilometer-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } package['ceilometer-common'] -> service['ceilometer-agent-central'] service { 'ceilometer-agent-central': ensure => $service_ensure, name => $::ceilometer::params::agent_central_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => 'ceilometer-service', } if $coordination_url { ensure_resource('ceilometer_config', 'coordination/backend_url', {'value' => $coordination_url}) } }",0,1,"class ceilometer::agent::central ( $manage_service = true, $enabled = true, $package_ensure = 'present', $coordination_url = undef, ) {, coordination/backend_url = undef,), coordination/backend_url', {'value' => $coordination_url})}, ensure_resource('ceilometer_config', 'coordination/backend_url', {'value' => $coordination_url})}, if $enabled {, package['ceilometer-common'] -> service['ceilometer-agent-central'], service { 'ceilometer-agent-central':",CWE-20,"{'reason': 'Coordination is the ability to use one piece of code to control another piece of code. Coordination is different from configuration, which involves a piece of code or software having an option to set its configuration dynamically, or having its configuration set externally. \\r\\nIn this script, the coordination URL is used to set the configuration dynamically, which is different from configuring the service. This makes the script related to CWE-20.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
125,"notice('fuel-plugin-influxdb-grafana: firewall.pp') class {'::firewall':} firewall { '000 accept all icmp requests': proto => 'icmp', action => 'accept', } firewall { '001 accept all to lo interface': proto => 'all', iniface => 'lo', action => 'accept', } firewall { '002 accept related established rules': proto => 'all', state => ['related', 'established'], action => 'accept', } firewall { '020 ssh': port => 22, proto => 'tcp', action => 'accept', } firewall { '113 corosync-input': port => 5404, proto => 'udp', action => 'accept', } firewall { '114 corosync-output': port => 5405, proto => 'udp', action => 'accept', } firewall { '200 influxdb': port => [8083, hiera('lma::influxdb::influxdb_port'), 8088, 8091], proto => 'tcp', action => 'accept', } firewall { '201 grafana': port => hiera('lma::influxdb::grafana_port'), proto => 'tcp', action => 'accept', } firewall { '999 drop all other requests': proto => 'all', chain => 'input', action => 'drop', }",1,1,"firewall { '001 accept all to lo interface': proto => 'all', iniface => 'lo', action => 'accept', }, firewall { '002 accept related established rules': proto => 'all', state => ['related', 'established'], action => 'accept', }, firewall { '020 ssh': port => 22, proto => 'tcp', action => 'accept', }, firewall { '113 corosync-input': port => 5404, proto => 'udp', action => 'accept', }, firewall { '114 corosync-output': port => 5405, proto => 'udp', action => 'accept', }, firewall { '200 influxdb': port => [8083, hiera('lma::influxdb::influxdb_port'), 8088, 8091], proto => 'tcp', action => 'accept', }, firewall { '201 grafana': port => hiera('lma::influxdb::grafana_port'), proto => 'tcp', action => 'accept', }, firewall { '999 drop all other requests': proto => 'all', chain => 'input', action => 'drop', }",CWE-732: Incorrect Permission Assignment for Critical Resource,"{'reason': 'lo (Localhost), localhost (the current system) - is a special address which identifies the current machine in an internet connection. It is a synonym for 127.0.0.1 or ::1. The loopback interface (lo) is a virtual network interface, implemented in the network software of an operating system, that allows software to communicate with its own processes on the same machine or on virtualized guest machines in a system.', 'related_cwe': 'CWE-732: Incorrect Permission Assignment for Critical Resource', 'is_misconfiguration_related': 'Yes'}"
126,"class osnailyfacter::database::database_backend_wait { $management_vip = hiera('management_vip') $database_vip = hiera('database_vip', $management_vip) $haproxy_stats_port = '10000' $haproxy_stats_url = ""http://${database_vip}:${haproxy_stats_port}/;csv"" $external_lb = hiera('external_lb', false) $lb_defaults = { 'provider' => 'haproxy', 'url' => $haproxy_stats_url } if $external_lb { $lb_backend_provider = 'http' $lb_url = ""http://${database_vip}:49000"" } $lb_hash = { mysql => { name => 'mysqld', provider => $lb_backend_provider, url => $lb_url } } ::osnailyfacter::wait_for_backend {'mysql': lb_hash => $lb_hash, lb_defaults => $lb_defaults } }",1,1,"class osnailyfacter::database::database_backend_wait {, lb_defaults => $lb_defaults} if $external_lb {, lb_hash => $lb_hash,",CWE-352,"{'reason': 'CWE-352: Insecure Communication. \\n\\nThe lb_backend_provider being set to ‘http’ implies that communication with the backend system is insecure. It would be preferable to set this to ‘https’ instead, or use another provider that is secure (e.g. Nginx). \\n\\nThis misconfiguration is related to CWE-352, which describes an issue where a communication protocol is used that is not secure.', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
127,"class mariadb::packages_wmf( $mariadb10 = true, ) { package { [ 'libaio1', 'percona-toolkit', 'percona-xtrabackup', 'libjemalloc1', 'pigz', ]: ensure => present, } if ($mariadb10 == true) { package { [ 'wmf-mariadb10', ]: ensure => present, } } else { package { [ 'wmf-mariadb', ]: ensure => present, } } }",1,1,"class mariadb::packages_wmf( $mariadb10 = true, ) { package { [ 'libaio1', 'percona-toolkit', 'percona-xtrabackup', 'libjemalloc1', 'pigz', ]: ensure => present, }, if ($mariadb10 == true) { package { [ 'wmf-mariadb10', ]: ensure => present, } } else { package { [ 'wmf-mariadb', ]: ensure => present, } }, package { [ 'libaio1', 'percona-toolkit', 'percona-xtrabackup', 'libjemalloc1', 'pigz', ]: ensure => present, }, package { [ 'wmf-mariadb', ]: ensure => present, }, package { [ 'wmf-mariadb10', ]: ensure => present, }",CWE-250,"{'reason': 'Package management tools are vulnerable to many attacks. In some cases, the software may even be vulnerable to remote code execution. Attackers could take advantage of these vulnerabilities in an attempt to alter the configuration files of installed packages, such as the configuration of the MySQL database. In addition, there is a possibility that packages can be installed in a vulnerable state, such as through a malicious package installation service.', 'related_cwe': 'CWE-250, CWE-345, CWE-347, CWE-356, CWE-500', 'is_misconfiguration_related': 'Yes'}"
128,"class lma_collector::logs::counter ( $hostname, $interval = 60, $grace_interval = 30, ) { include lma_collector::params include lma_collector::service::log $lua_modules_dir = $lma_collector::params::lua_modules_dir heka::filter::sandbox { 'logs_counter': config_dir => $lma_collector::params::log_config_dir, filename => ""${lma_collector::params::plugins_dir}/filters/logs_counter.lua"", message_matcher => 'type == \'log\' && logger =~ /^openstack\\./', ticker_interval => 1, preserve_data => true, config => { interval => $interval, hostname => $hostname, grace_interval => $grace_interval, }, module_directory => $lua_modules_dir, notify => class['lma_collector::service::log'], } }",0,1,"class['lma_collector::service::log'], config => { interval => $interval,, filename => \\'${lma_collector::params::plugins_dir}\\'/filters/logs_counter.lua, grace_interval => $grace_interval,, heka::filter::sandbox, heka::filter::sandbox {, include lma_collector::service::log, logger =~ /^openstack\\\\./',, message_matcher => 'type == \'log\' && logger =~ /^openstack\\./', ticker_interval => 1",CWE-732,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
129,"class runner::tasks::config_hgrc($runlevel=0) { include runner include runner::settings if $operatingsystem == ""darwin"" { include users::builder sudoers::custom { 'config_hgrc-from-runner': user => $users::builder::username, runas => 'root', command => ""${runner::settings::taskdir}/${runlevel}-config_hgrc""; } } runner::task { ""${runlevel}-config_hgrc"": content => template(""${module_name}/tasks/config_hgrc.erb""); } }",0,1,"include runner, include runner::settings, include users::builder, sudoers::custom { 'config_hgrc-from-runner': user => $users::builder::username, runas => 'root', command => ${runner::settings::taskdir}/${runlevel}-config_hgrc, sudoers::custom { 'config_hgrc-from-runner': user => $users::builder::username, runas => 'root', command => \",CWE-22,"{'reason': 'Misconfiguration description...', 'related_cwe': 'CWE number(s) related...', 'is_misconfiguration_related': 'Yes'}"
130,"class contrail::provision::compute { exec { provider => 'shell', path => '/bin:/sbin:/usr/bin:/usr/sbin', } package { 'contrail-utils': ensure => present, } -> file { '/etc/contrail/vnc_api_lib.ini': content => template('contrail/vnc_api_lib.ini.erb') } -> exec {'wait_for_api': command => ""bash -c 'if ! [[ $(curl -s -o /dev/null -w \""%{http_code}\"" http://${contrail::contrail_mgmt_vip}:8082) =~ ^(200|401)$ ]];\ then exit 1; fi'"", tries => 10, try_sleep => 10, } -> file { '/opt/contrail': ensure => 'directory', } if $contrail::compute_dpdk_enabled { exec { 'provision-vrouter': command => ""contrail-provision-vrouter \ --api_server_ip ${contrail::contrail_mgmt_vip} --api_server_port 8082 --openstack_ip ${contrail::keystone_address} \ --oper add --host_name ${::fqdn} --host_ip ${contrail::address} \ --admin_user '${contrail::neutron_user}' --admin_tenant_name '${contrail::service_tenant}' --admin_password '${contrail::service_token}' \ --dpdk_enabled \ && touch /opt/contrail/provision-vrouter-done"", creates => '/opt/contrail/provision-vrouter-done', require => file['/opt/contrail'], } } else { exec { 'provision-vrouter': command => ""contrail-provision-vrouter \ --api_server_ip ${contrail::contrail_mgmt_vip} --api_server_port 8082 --openstack_ip ${contrail::keystone_address} \ --oper add --host_name ${::fqdn} --host_ip ${contrail::address} \ --admin_user '${contrail::neutron_user}' --admin_tenant_name '${contrail::service_tenant}' --admin_password '${contrail::service_token}' \ && touch /opt/contrail/provision-vrouter-done"", creates => '/opt/contrail/provision-vrouter-done', require => file['/opt/contrail'], } } }",1,1,"&& touch /opt/contrail/provision-vrouter-done, command => \, command => \\, package {'contrail-utils': ensure => present, }","CWE-1173, CWE-284, CWE-345","{'reason': 'The user is not prompted to enter a value for this field.', 'related_cwe': 'CWE-284, CWE-345', 'is_misconfiguration_related': 'Yes'}"
131,class { '::osnailyfacter::cgroups::cgroups' :} class { '::osnailyfacter::upgrade::restart_services' :},0,1,"class { '::osnailyfacter::cgroups::cgroups' :, class { '::osnailyfacter::upgrade::restart_services' :","CWE-1103, CWE-1136, CWE-123, CWE-126","{'reason': ""The misconfiguration causes the OSNailyFacter script to run without a restart after upgrading, therefore affecting the script's ability to perform the intended task."", 'related_cwe': 'CWE-126', 'is_misconfiguration_related': 'Yes'}"
132,"class magnum::db::sync( $user = 'magnum', $extra_params = '--config-file /etc/magnum/magnum.conf', ) { exec { 'magnum-db-sync': command => ""magnum-db-manage ${extra_params} upgrade head"", path => '/usr/bin', user => $user, refreshonly => true, logoutput => on_failure, } package<| tag == 'magnum-package' |> ~> exec['magnum-db-sync'] exec['magnum-db-sync'] ~> service<| tag == 'magnum-db-sync-service' |> magnum_config<| title == 'database/connection' |> ~> exec['magnum-db-sync'] magnum_config <| |> ~> exec['magnum-db-sync'] }",1,1,"class magnum::db::sync(\n, exec {\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n, magnum_config <| > ~>\\\\nexec['magnum-db-sync'], magnum_config<|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntitle == 'database/connection'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n|> ~>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nexec['magnum-db-sync'], magnum_config<|\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ntitle == 'database/connection'\\\\\\\\\\\\\\\\n|> ~>\\\\\\\\\\\\\\\\nexec['magnum-db-sync'], magnum_config<|\\\\\\\\n\\\\\\\\ntitle == 'database/connection'\\\\\\\\n|> ~>\\\\\\\\nexec['magnum-db-sync'], magnum_config<|\\\\\\\\ntitle == 'database/connection'\\\\\\\\n|> ~>\\\\\\\\nexec['magnum-db-sync'], magnum_config<|\\\\ntitle == 'database/connection'\\\\n|> ~>\\\\nexec['magnum-db-sync'], magnum_config<|\\ntitle == 'database/connection'\\n|> ~>\\nexec['magnum-db-sync']","CWE-20, CWE-22, CWE-89","{'reason': 'CWE-20: Insecure file operations may result in local execution if files are created by an attacker, and the file operations performed by `exec` are not checked for potential problems. CWE-22: An attacker can write to the file, if it has write permissions, or replace it with a different file containing different code. This is not checked by the `magnum::db::sync` resource. CWE-89: Privilege escalation in the file system can occur if a user with insufficient permissions is able to run the command, if the command performs file operations with write permissions on the file system.', 'related_cwe': 'CWE-20, CWE-22, CWE-89', 'is_misconfiguration_related': 'Yes'}"
133,"class qdr::service inherits qdr { $enable_service = $::qdr::enable_service $ensure_service = $::qdr::ensure_service $service_name = $::qdr::params::service_name service { $service_name: ensure => $ensure_service, enable => $enable_service, hasstatus => true, hasrestart => true, } }",1,1,"service { $service_name: ensure => $ensure_service, enable => $enable_service, hasstatus => true, hasrestart => true, }",CWE-117,"{'reason': 'The misconfiguration found is not related to the CWE provided.  The service resource is intended to be a mechanism for configuring and managing the lifecycle of a service.  It is not related to the service misconfiguration described by CWE-117.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
134,"class packstack::trove () { create_resources(packstack::firewall, hiera('firewall_trove_api_rules', {})) $bind_host = hiera('config_ip_version') ? { 'ipv6' => '::0', default => '0.0.0.0', } class { '::trove::api': bind_host => $bind_host, enabled => true, keystone_password => hiera('config_trove_ks_pw'), auth_url => hiera('config_keystone_public_url'), cert_file => false, key_file => false, ca_file => false, verbose => true, debug => hiera('config_debug_mode'), workers => hiera('config_service_workers'), } class { '::trove::conductor': auth_url => hiera('config_keystone_public_url'), verbose => true, debug => hiera('config_debug_mode'), workers => hiera('config_service_workers'), } class { '::trove::taskmanager': auth_url => hiera('config_keystone_public_url'), verbose => true, debug => hiera('config_debug_mode'), } }",0,1,"bind_host => $bind_host, ca_file => false, cert_file => false, debug => hiera('config_debug_mode'), key_file => false, keystone_password => hiera('config_trove_ks_pw'), workers => hiera('config_service_workers')","CWE-20, CWE-264, CWE-284, CWE-285","{'reason': '0', 'related_cwe': 'CWE-20, CWE-264, CWE-284, CWE-285', 'is_misconfiguration_related': 'Yes'}"
135,"class screenresolution($width, $height, $depth, $refresh) { case $::operatingsystem { darwin: { include packages::mozilla::screenresolution case $::macosx_productversion_major { 10.6,10.7: { $resolution = ""${width}x${height}x${depth}"" } 10.8,10.9: { $resolution = ""${width}x${height}x${depth}@${refresh}"" } } if (!$puppetizing) { exec { ""set-resolution"": command => ""/usr/local/bin/screenresolution set $resolution"", unless => ""/usr/local/bin/screenresolution get 2>&1 | /usr/bin/grep 'display 0: $resolution'"", require => class[""packages::mozilla::screenresolution""]; } } } default: { fail(""cannot manage screen resolution for $::operatingsystem"") } } }",1,0,"case $::operatingsystem { darwin: { include packages::mozilla::screenresolution case $::macosx_productversion_major { 10.6,10.7: { $resolution =",CWE-117: Improper Output Neutralization for Logs,"{'reason': ""Improper output neutralization for logs: By not escaping the value of $resolution, it's vulnerable to log injection."", 'related_cwe': 'CWE-117: Improper Output Neutralization for Logs', 'is_misconfiguration_related': 'Yes'}"
136,"class openstack::ha::radosgw ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $baremetal_virtual_ip = undef, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, listen_port => 8080, balancermember_port => 6780, public_virtual_ip => $public_virtual_ip, server_names => $server_names, haproxy_config_options => { 'option' => ['httplog', 'httpchk head /', 'http-server-close', 'forwardfor', 'http-buffer-request'], 'timeout' => 'http-request 10s', 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, } openstack::ha::haproxy_service { 'object-storage': order => '130', public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, } if $baremetal_virtual_ip { openstack::ha::haproxy_service { 'object-storage-baremetal': order => '135', public_virtual_ip => false, internal_virtual_ip => $baremetal_virtual_ip, } } }",1,1,"if $baremetal_virtual_ip { openstack::ha::haproxy_service { 'object-storage-baremetal': order => '135', public_virtual_ip => false, internal_virtual_ip => $baremetal_virtual_ip, } }, openstack::ha::haproxy_service { 'object-storage': order => '130', public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, }, openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, listen_port => 8080, balancermember_port => 6780, public_virtual_ip => $public_virtual_ip, server_names => $server_names, haproxy_config_options => { 'option' => ['httplog', 'httpchk head /', 'http-server-close', 'forwardfor', 'http-buffer-request'], 'timeout' => 'http-request 10s', 'http-request' =>'set-header x-forwarded-proto https if { ssl_fc }', }, }, public_ssl_path => $public_ssl_path,","CWE-302, CWE-303, CWE-306, CWE-307","{'reason': 'The baremetal configuration does not follow the guidelines on object storage HA, causing an inconsistent configuration for baremetal servers which will eventually lead to issues in the load balancer', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
137,class { '::osnailyfacter::ceph::ceph_osd' :} class { '::osnailyfacter::upgrade::ceph_service' :},1,1,"class { '::osnailyfacter::ceph::ceph_osd' :}, class { '::osnailyfacter::upgrade::ceph_service' :}",CWE-77,"{'reason': 'The misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
138,"class users::builder { include config anchor { 'users::builder::begin': ; 'users::builder::end': ; } $username = $::config::builder_username $group = $::operatingsystem ? { darwin => 'staff', default => $username } case $::operatingsystem { ubuntu: { $grouplist = [""audio"",""video""] } darwin: { if ($::macosx_productversion_major == ""10.10"") { exec { ""enable-devtoolssecurity"" : command => ""/usr/sbin/devtoolssecurity -enable"", refreshonly => true ; } file { ""/var/lib/puppet/.devtoolssecurity-enabled"" : content => ""devtoolssecurity-enabled"", notify => exec[""enable-devtoolssecurity""] ; } $grouplist = [""_developer""] } } default: { $grouplist = [] } } $home = $::operatingsystem ? { darwin => ""/users/$username"", windows => ""c:/users/$username"", default => ""/home/$username"" } class { 'users::builder::account': stage => users, username => $username, group => $group, grouplist => $grouplist, home => $home; } anchor['users::builder::begin'] -> class { 'users::builder::setup': username => $username, group => $group, home => $home; } -> anchor['users::builder::end'] }",1,1,"anchor['users::builder::begin'] -> class { 'users::builder::setup': username => $username, group => $group, home => $home; } -> anchor['users::builder::end'], case $::operatingsystem {, class {'users::builder::account':, class {'users::builder::setup':, default => \, exec {, file {, if ($::macosx_productversion_major == \","CWE-200, CWE-269, CWE-327","{'reason': ""Puppet is a very complicated and powerful configuration management tool. When you write a puppet script, you should be aware of all of its functionalities. When you want to write a puppet script that handles user management, you should be careful about what you're writing, otherwise you could be vulnerable. In this case, if the misconfiguration is not properly fixed, it could be vulnerable. Also, since the misconfiguration is related to this particular puppet script, it's important to fix it. The fix would be to write a better user management script."", 'related_cwe': 'CWE-200, CWE-269, CWE-327', 'is_misconfiguration_related': 'Yes'}"
139,"class openstack::reserved_ports ( $ports = '35357,41055-41056,49000-49001,55572,58882' ) { sysctl::value { 'net.ipv4.ip_local_reserved_ports': value => $ports } }",0,1,"class openstack::reserved_ports ($ports = '35357,41055-41056,49000-49001,55572,58882'), sysctl::value { 'net.ipv4.ip_local_reserved_ports': value => $ports }","CWE-200, CWE-352, CWE-384, CWE-416, CWE-442, CWE-476, CWE-479, CWE-481, CWE-500","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
140,"class monasca::notification( $notification_user = 'monasca-notification', $from_email_address = '', $install_python_deps = true, $kafka_brokers = 'localhost:9092', $pagerduty_url = 'https://events.pagerduty.com/generic/2010-04-15/create_event.json', $periodic_kafka_topics = ['60: 60-seconds-notifications'], $periodic_zookeeper_paths = ['60: /notification/60_seconds'], $python_dep_ensure = 'present', $smtp_password = '', $smtp_port = 25, $smtp_server = 'localhost', $smtp_user = '', $virtual_env = '/var/www/monasca-notification', $webhook_url = '', $zookeeper_servers = 'localhost:2181', ) { include ::monasca::params $sql_host = $::monasca::params::sql_host $sql_user = $::monasca::params::sql_user $sql_password = $::monasca::params::sql_password $sql_port = $::monasca::params::sql_port $cfg_file = '/etc/monasca/notification.yaml' $startup_script = '/etc/init/monasca-notification.conf' if $install_python_deps { package { ['python-virtualenv', 'python-dev']: ensure => $python_dep_ensure, before => python::virtualenv[$virtual_env], } } python::virtualenv { $virtual_env : owner => 'root', group => 'root', require => [package['python-virtualenv'],package['python-dev']], } python::pip { 'monasca-notification' : virtualenv => $virtual_env, owner => 'root', require => python::virtualenv[$virtual_env], } user { $notification_user: ensure => present, groups => $::monasca::group, require => group[$::monasca::group], } file { $cfg_file: ensure => file, content => template('monasca/notification.yaml.erb'), mode => '0644', owner => $notification_user, group => $::monasca::group, require => [user[$notification_user], group[$::monasca::group], file[$::monasca::log_dir]], } ~> service['monasca-notification'] service { 'monasca-notification': ensure => running, require => [file[$cfg_file], file[$startup_script]], tag => 'monasca-service', } file { $startup_script: ensure => file, content => template('monasca/notification.conf.erb'), mode => '0755', owner => 'root', group => 'root', } ~> service['monasca-notification'] }",1,1,"python::virtualenv { $virtual_env : owner => 'root', group => 'root', require => [package['python-virtualenv'],package['python-dev']], }",CWE-20,"{'reason': 'The virtualenv module from Puppet Labs requires that a user be configured in order to properly create a virtual environment in a user-controlled location. Since the virtualenv module requires this, the code above is related to CWE-20.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
141,"class role::commons( $upload_dir, ) { require ::role::mediawiki include ::role::multimedia include ::role::thumb_on_404 mediawiki::wiki { 'commons': upload_dir => $upload_dir, priority => $::load_early, } role::thumb_on_404::multiwiki { 'commons': } mediawiki::settings { 'commons:general': values => { wguseinstantcommons => false, wgcrosssiteajaxdomains => ['*'], }, } mediawiki::settings { 'commons_foreignrepo': values => template('role/commons/foreign_repo.php.erb'), } mediawiki::extension { 'globalusage': needs_update => true, settings => { wgglobalusagedatabase => 'commonswiki', }, require => mediawiki::wiki['commons'], } mediawiki::maintenance { 'refresh globalusage table': command => '/usr/local/bin/foreachwikiwithextension globalusage extensions/globalusage/refreshglobalimagelinks.php --pages existing,nonexisting', cwd => $::mediawiki::dir, require => mediawiki::extension['globalusage'], } }",1,1,"mediawiki::maintenance {'refresh globalusage table': command => '/usr/local/bin/foreachwikiwithextension globalusage extensions/globalusage/refreshglobalimagelinks.php --pages existing,nonexisting', cwd => $::mediawiki::dir, require => mediawiki::extension['globalusage'], }, mediawiki::settings {'commons:general': values => { wguseinstantcommons => false, wgcrosssiteajaxdomains => ['*'], }, }, mediawiki::settings {'commons_foreignrepo': values => template('role/commons/foreign_repo.php.erb'), }, mediawiki::wiki {'commons': upload_dir => $upload_dir, priority => $::load_early, }, role::thumb_on_404::multiwiki {'commons': }",CWE-352,"{'reason': 'It is important to remember that, when configuring a wiki with several extensions, there is a risk of conflicting between the extension configurations. In this case, since we are setting up Commons for Wikimedia, there should be no conflict. Therefore, the maintenance command to refresh the global usage table will be done via the MediaWiki maintenance script. This will be done on all wikis with the globalusage extension. In addition, we will need to configure settings such as wguseinstantcommons and wgcrosssiteajaxdomains for the Commons wiki. The wguseinstantcommons setting will be false, which means that Commons will not immediately include a Commons file in any image on the Commons namespace. The wgcrosssiteajaxdomains setting will allow access to ajax requests', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
142,"class base::mediawiki { package { [ 'doxygen', 'fontconfig', 'jpegoptim', 'optipng', 'g++', 'pkg-config', 'libthai-dev', 'fonts-dejavu', ]: ensure => present, } }",0,1,"package { [ 'doxygen', 'fontconfig', 'jpegoptim', 'optipng', 'g++', 'pkg-config', 'libthai-dev', 'fonts-dejavu', ]: ensure => present, }",CWE-200,"{'reason': ""Puppet's packages parameter can receive any number of packages, which could be any arbitrary package available in the repository. There is no specific vetting mechanism or configuration validation to ensure packages provided to this parameter are safe to install. As such, a malicious actor could create a package that causes unintended behavior, such as installing malware. CWE-200 covers a broad range of CWEs that involve the installation of arbitrary executables from untrusted sources. As such, we consider this misconfiguration related to CWE-200."", 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
143,"class midonet::cluster::run ( $zookeeper_hosts, $cassandra_servers, $cassandra_rep_factor, $keystone_admin_token, $keystone_host, $keystone_port = '35357', $service_name = 'midonet-cluster', $service_ensure = 'running', $service_enable = true, $cluster_config_path = '/etc/midonet/midonet.conf', $cluster_jvm_config_path = '/etc/midonet-cluster/midonet-cluster-env.sh', $cluster_host = '0.0.0.0', $cluster_port = '8181', $max_heap_size = '1024m', $heap_newsize = '512m', $is_insights = false, $clio_service_udp_port = undef, $clio_target_udp_port = undef, $jmxscraper_target_udp_endpoint = undef, $flow_tracing_service_ws_port = undef, $agent_flow_history_udp_endpoint = undef, ) { file { '/tmp/mn-cluster_config.sh': ensure => present, content => template('midonet/cluster/mn-cluster_config.sh.erb'), } -> exec { '/bin/bash /tmp/mn-cluster_config.sh': } file { 'cluster_config': ensure => present, path => $cluster_config_path, content => template('midonet/cluster/midonet.conf.erb'), require => package['midonet-cluster'], notify => service['midonet-cluster'], before => file['/tmp/mn-cluster_config.sh'], } file { 'cluster_jvm_config': ensure => present, path => $cluster_jvm_config_path, content => template('midonet/cluster/midonet-cluster-env.sh.erb'), require => package['midonet-cluster'], notify => service['midonet-cluster'], } if $is_insights { file { 'analytics_settings': ensure => present, path => '/tmp/analytics_settings.conf', content => template('midonet/analytics/analytics_settings.erb'), } -> file { 'analytics_settings_script': ensure => present, path => '/tmp/analytics_settings.sh', content => template('midonet/analytics/analytics_settings.sh.erb'), } -> exec { '/bin/bash /tmp/analytics_settings.sh': } } service { 'midonet-cluster': ensure => $service_ensure, name => $service_name, enable => $service_enable, } }",1,1,"$is_insights {\n, -> exec { '/bin/bash /tmp/analytics_settings.sh':\\n, -> file { 'analytics_settings_script':\\\\\\\\n, -> file { 'analytics_settings_script':\\n, content => template('midonet/analytics/analytics_settings.erb'),\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, content => template('midonet/analytics/analytics_settings.erb'),\\\\n, content => template('midonet/analytics/analytics_settings.sh.erb'),\\\\\\\\\\\\n, file { 'analytics_settings':\\\\\\\\\\\\\\\\\\\\n, file { 'analytics_settings':\\\\n, if $is_insights {\\\\\\\\n",CWE-257,"{'reason': ""The misconfiguration allows unauthorized parties to set up analytics settings, which may include details about users' usage of the Midonet application. This violates the principle of Least Privilege, since the user does not have administrative access to the cluster nodes."", 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
144,"class osnailyfacter::upgrade::pkg_upgrade { exec { 'do_upgrade': command => 'apt-get dist-upgrade -y -o dpkg::options::=""--force-confdef"" -o dpkg::options::=""--force-confold""', environment => [ 'debian_frontend=noninteractive' ], path => ['/usr/bin', '/usr/local/sbin', '/usr/sbin', '/sbin', '/bin' ], timeout => 1700, try_sleep => 10, tries => 5, logoutput => true, } $corosync_roles = hiera('corosync_roles', ['primary-controller', 'controller']) if roles_include($corosync_roles) { $content_policy = "" $policyrc_file = '/usr/sbin/policy-rc.d' ensure_resource('file', 'create-policy-rc.d', { ensure => present, path => $policyrc_file, content => $content_policy, mode => '0755', owner => 'root', group => 'root', before => exec['do_upgrade'] }) exec { 'remove_policy': command => ""rm -rf ${policyrc_file}"", path => '/bin', require => exec['do_upgrade'], } ensure_resource('service', 'pacemaker', { ensure => running, require => exec['remove_policy'] }) } }",1,1,"ensure_resource('service', 'pacemaker', { ensure => running, require => exec['remove_policy'] })}, exec {'remove_policy':, if roles_include($corosync_roles) {, path => '/bin', require => exec['do_upgrade']}, puppet:///modules/osnailyfacter/osnailyfacter.pp","CWE-20, CWE-798","{'reason': 'The misconfiguration is a result of a vulnerability with high severity, where the user could inject code into the package manager, and cause it to perform malicious actions. This could lead to the compromise of the host, with no protection from the script. The misconfiguration is related to the CWE, due to the fact that it can allow the compromise of the host. The misconfiguration is related to the CWE with an impact of High. If the misconfiguration is ignored, and an attacker performs a malicious update, the host could be compromised. CWE-20: Improper Input Validation, CWE-798: Use of Uninitialized Resources,', 'related_cwe': 'CWE-20, CWE-798', 'is_misconfiguration_related': 'Yes'}"
145,class role::shorturl { mediawiki::extension { 'shorturl': } },0,1,class role::shorturl { mediawiki::extension {'shorturl': } },CWE-295,"{'reason': 'This issue is related to the provided CWE. It allows the admin of the shorturl extension to create new users and add them to a group without any restriction. An admin could create a new user for their own use and add them to a group that allows editing on any page.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
146,"class role::varnish { include ::varnish mediawiki::settings { 'varnish': values => { 'wguploadbaseurl' => 'http://127.0.0.1:6081', 'wgusesquid' => true, 'wgsquidservers' => [ '127.0.0.1:6081', '127.0.0.1' ], 'wguseprivateips' => true, } } }",1,1,"mediawiki::settings { 'varnish':, wgsquidservers => [ '127.0.0.1:6081', '127.0.0.1' ],, wguploadbaseurl => 'http://127.0.0.1:6081',, wguseprivateips => true,, wgusesquid => true,, }",CWE-284,"{'reason': 'Vulnerability CWE-284 is about insufficient access controls. The provided misconfiguration does not have a related CWE.\\n\\nVulnerability CWE-285 is about the usage of unintended access controls. The provided misconfiguration does not have a related CWE.\\n\\nVulnerability CWE-287 is about the usage of unintended access controls. The provided misconfiguration does not have a related CWE.\\n\\nVulnerability CWE-286 is about the usage of unintended access controls. The provided misconfiguration does not have a related CWE.\\n\\nVulnerability CWE-289 is about the usage of unintended access controls. The provided misconfiguration does not have a related CWE.\\n\\nVulnerability CWE-288 is about the usage of unintended access', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
147,"class gnocchi::storage::influxdb( $influxdb_host = 'localhost', $influxdb_port = 8086, $influxdb_database = 'gnocchi', $influxdb_username = 'root', $influxdb_password = undef, $influxdb_block_until_data_ingested = false, ) { gnocchi_config { 'storage/driver': value => 'influxdb'; 'storage/influxdb_host': value => $influxdb_host; 'storage/influxdb_port': value => $influxdb_port; 'storage/influxdb_database': value => $influxdb_database; 'storage/influxdb_username': value => $influxdb_username; 'storage/influxdb_password': value => $influxdb_password, secret => true; 'storage/influxdb_block_until_data_ingested': value => $influxdb_block_until_data_ingested; } }",0,1,"storage/influxdb_password: value => $influxdb_password, secret => true;, storage/influxdb_username: value => $influxdb_username;",CWE-259,"{'reason': 'Sensitive data (password) can be disclosed by mistake if an unauthorized user gained access to the system. Also, this sensitive data can be viewed in cleartext on Puppet servers.', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
148,"class role::gather { include ::role::mediawiki include ::role::mobilefrontend include ::role::pageimages include ::role::textextracts mediawiki::extension { 'gather': browser_tests => true, needs_update => true, } }",1,1,"browser_tests, class role::gather, class role::gather { include ::role::mediawiki include ::role::mobilefrontend include ::role::pageimages include ::role::textextracts mediawiki::extension { 'gather': browser_tests => true, needs_update => true, } }, include ::role::mediawiki, include ::role::mobilefrontend, include ::role::pageimages, include ::role::textextracts, mediawiki::extension, mediawiki::extension { 'gather': browser_tests => true, needs_update => true, }, needs_update","CWE-248, CWE-284","{'reason': ""browser_tests, class role::gather, class role::gather { include ::role::mediawiki include ::role::mobilefrontend include ::role::pageimages include ::role::textextracts mediawiki::extension { 'gather': browser_tests => true, needs_update => true, } }, include ::role::mediawiki, include ::role::mobilefrontend, include ::role::pageimages, include ::role::textextracts, mediawiki::extension, mediawiki::extension { 'gather': browser_tests => true, needs_update => true, }, needs_update"", 'related_cwe': 'CWE-248, CWE-284', 'is_misconfiguration_related': 'Yes'}"
149,"class tripleo::profile::pacemaker::ceilometer::api ( $pacemaker_master = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { include ::ceilometer::params include ::tripleo::profile::pacemaker::ceilometer include ::tripleo::profile::base::ceilometer::api include ::tripleo::profile::pacemaker::apache if $step >= 5 and downcase($::hostname) == $pacemaker_master { class { '::tripleo::profile::base::ceilometer::api': step => $step, } } }",1,1,"class { '::tripleo::profile::base::ceilometer::api': step => $step, }, if $step >= 5 and downcase($::hostname) == $pacemaker_master {, include ::ceilometer::params, include ::tripleo::profile::base::ceilometer::api, include ::tripleo::profile::pacemaker::apache, include ::tripleo::profile::pacemaker::ceilometer","CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-345: Insufficient Verification of Data Authenticity, CWE-352: Boundary Condition Error","{'reason': 'In the given script, improper input validation is applied to the $::hostname parameter. The result is that an attacker can inject commands in the script to elevate their privileges.', 'related_cwe': 'CWE-345', 'is_misconfiguration_related': 'Yes'}"
150,"class trove::db ( $database_connection = 'sqlite:////var/lib/trove/trove.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { include ::trove::deps $database_connection_real = pick($::trove::database_connection, $database_connection) $database_idle_timeout_real = pick($::trove::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::trove::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::trove::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::trove::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::trove::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::trove::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'trove_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real } }",0,1,"database_max_overflow_real = pick($::trove::database_max_overflow, database_max_retries_real = pick($::trove::database_max_retries, database_min_pool_size_real = pick($::trove::database_min_pool_size, database_retry_interval_real = pick($::trove::database_retry_interval, include ::trove::deps, oslo::db { 'trove_config': connection => $database_connection_real, oslo::db { 'trove_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real }, validate_re($database_connection_real, '^(sqlite|mysql(\\+pymysql)?|postgresql):\\\\/\\\\/(\\s+:\\s+@\\s+\\/\\s+)?')","CWE-1167, CWE-1241","{'reason': 'The misconfiguration found in this script is related to the CWE-1167. It describes a lack of a security mechanism. However, while the `oslo.db` service is used in this script, the service in question is `trove_config` not `trove`. Also, `oslo.db` is a core component of `OpenStack` not a third-party library. This is not an attack vector and cannot be exploited by an attacker.', 'related_cwe': 'CWE-1167, CWE-1241', 'is_misconfiguration_related': 'Yes'}"
151,"class swift::client ( $ensure = 'present' ) { include ::swift::deps include ::swift::params package { 'swiftclient': ensure => $ensure, name => $::swift::params::client_package, tag => ['openstack','swift-support-package'] } }",0,1,"include ::swift::deps, include ::swift::params, package {'swiftclient': ensure => $ensure, name => $::swift::params::client_package, tag => ['openstack','swift-support-package'] }",CWE-732,"{'reason': 'This script is not related to the CWE. This package and its dependencies are installed, and a misconfiguration would be caused if this package and its dependencies are not installed. The CWE is not related to package dependencies. The CWE is related to the existence of the package, its configuration, or the existence of a package with a specific name.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
152,"class tripleo::profile::base::nova::api ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } include ::tripleo::profile::base::nova if $step >= 3 and $sync_db { include ::nova::db::mysql include ::nova::db::mysql_api } if $step >= 4 or ($step >= 3 and $sync_db) { class { '::nova::api': sync_db => $sync_db, sync_db_api => $sync_db, } include ::nova::network::neutron } if $step >= 5 { if hiera('nova_enable_db_purge', true) { include ::nova::cron::archive_deleted_rows } } }",0,1,"include ::nova::db::mysql::init::config, include ::nova::db::mysql_api, include ::tripleo::profile::base::nova::db::mysql::init::config",CWE-287,"{'reason': 'The misconfiguration is related to the CWE as it is a race condition issue between nova::db::mysql::init::config and nova::db::mysql_api.', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
153,notice('modular: contrail/upgrade-contrail-compute.pp') include contrail package <| tag == 'install' |> { ensure => latest } package <| tag == 'delete' |> { ensure => purged } class { 'contrail::compute::vrouter': },0,1,"class { 'contrail::compute::vrouter': }, include contrail, package <| tag == 'delete' |> { ensure => purged }, package <| tag == 'install' |> { ensure => latest }",CWE-22,"{'reason': 'Explanation', 'related_cwe': 'CWE-21', 'is_misconfiguration_related': 'Yes'}"
154,"class manila::rabbitmq( $userid = 'guest', $password = 'guest', $virtual_host = '/', $enabled = true, $port = '5672', ) { warning('manila::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.') if ($enabled) { if $userid == 'guest' { $delete_guest_user = false } else { $delete_guest_user = true rabbitmq_user { $userid: admin => true, password => $password, provider => 'rabbitmqctl', } rabbitmq_user_permissions { ""${userid}@${virtual_host}"": configure_permission => '.*', write_permission => '.*', read_permission => '.*', provider => 'rabbitmqctl', }->anchor<| title == 'manila-start' |> } rabbitmq_vhost { $virtual_host: provider => 'rabbitmqctl', } } }",0,2,"class manila::rabbitmq( $userid = 'guest', $password = 'guest', $virtual_host = '/', $enabled = true, $port = '5672', ) { \\, class manila::rabbitmq( $userid = 'guest', $password = 'guest', $virtual_host = '/', $enabled = true, $port = '5672', ) { warning('manila::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.') if ($enabled) { if $userid == 'guest' { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, class manila::rabbitmq( $userid = 'guest', $password = 'guest', $virtual_host = '/', $enabled = true, $port = '5672', ) { warning('manila::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.') if ($enabled) { if $userid == 'guest' { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, if $enabled) { \\\\, if $enabled) { if $userid == 'guest' { \\\\\\\\, if $userid == 'guest' { \\, rabbitmq_user { $userid: admin => true, password => $password, provider => 'rabbitmqctl', }, rabbitmq_user_permissions { \, rabbitmq_vhost { $virtual_host: provider => 'rabbitmqctl', }, warning('manila::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.') if ($enabled) { if $userid == 'guest' { \\\\\\\\\\\\\\\\\\\\\\\","CWE-264, CWE-266","{'reason': 'CWE-264 is an IDOR issue and this code snippet, if run, will remove the guest user account which means an IDOR problem cannot occur here. This snippet would need to be modified to create a new rabbitmq user account in order to allow IDOR to occur, this means the misconfiguration is not related to the CWE-266', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
155,class { '::osnailyfacter::astute::dump_rabbitmq_definitions' :},1,0,nan,nan,"{'reason': 'nan', 'related_cwe': 'nan', 'is_misconfiguration_related': 'nan'}"
156,"class log_aggregator { include ::config include ::rsyslog include ::dirs::opt include nrpe::check::open_tcp include packages::rsyslog_gnutls file { ""/var/spool/rsyslog"": ensure => directory; ""/etc/papertrail-bundle.pem"": mode => '0644', source => 'puppet:///modules/log_aggregator/etc/papertrail-bundle.pem'; ""/etc/security/limits.conf"": mode => '0644', source => 'puppet:///modules/log_aggregator/etc/limits.conf'; } $cef_syslog_server = $::config::cef_syslog_server $logging_port = $::config::logging_port rsyslog::config { ""00-papertrail"" : contents => template(""${module_name}/papertrail.conf.erb""); } }",1,1,"ensure => directory; \\, ensure => directory; \\\\, file { \, file { \\, include ::config, include ::dirs::opt, include nrpe::check::open_tcp, include packages::rsyslog_gnutls, mode => '0644', \\\\",CWE-306,"{'reason': 'This script will configure papertrail, and in the process will configure rsyslog and a file with configuration. However, the misconfiguration is not related to any specific CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
157,"class osnailyfacter::apache_api_proxy( $master_ip, $max_header_size = '8190', $ports = ['443', '563', '5000', '6385', '8000', '8003', '8004', '8042', '8080', '8082', '8386', '8773', '8774', '8776', '8777', '9292', '9696'], ) { firewall {'007 tinyproxy': dport => [ 8888 ], source => $master_ip, proto => 'tcp', action => 'accept', } class {""::apache::mod::proxy"": } class {""::apache::mod::proxy_connect"": } class {""::apache::mod::proxy_http"": } class {""::apache::mod::headers"": } $apache_api_proxy_address = hiera('apache_api_proxy_address', '0.0.0.0') apache::vhost { 'apache_api_proxy': docroot => '/var/www/html', custom_fragment => template('osnailyfacter/api_proxy.conf.erb'), port => '8888', ip => $apache_api_proxy_address, add_listen => false, error_log_syslog => 'syslog:local0', log_level => 'notice', ip_based => true, } }",1,1,"apache::vhost { 'apache_api_proxy':\n docroot => '/var/www/html',\n custom_fragment => template('osnailyfacter/api_proxy.conf.erb'),\n port => '8888',\n ip => $apache_api_proxy_address,\n add_listen => false,\n error_log_syslog =>'syslog:local0',\n log_level => 'notice',\n ip_based => true,\n }, class osnailyfacter::apache_api_proxy( $master_ip, $max_header_size = '8190', $ports = ['443', '563', '5000', '6385', '8000', '8003', '8004', '8042', '8080', '8082', '8386', '8773', '8774', '8776', '8777', '9292', '9696'], ) {, class {, firewall {'007 tinyproxy':\\n dport => [ 8888 ],\\n source => $master_ip,\\n proto => 'tcp',\\n action => 'accept',\\n }",CWE-327,"{'reason': 'When proxy headers are not restricted or properly configured, it can cause cross-site request forgery (CSRF), session fixation, and other security vulnerabilities.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
158,"class cinder::ceilometer ( $notification_transport_url = $::os_service_default, $notification_driver = 'messagingv2', ) { oslo::messaging::notifications { 'cinder_config': transport_url => $notification_transport_url, driver => $notification_driver, } }",0,1,"class cinder::ceilometer ($notification_transport_url = $::os_service_default, $notification_driver ='messagingv2', ), driver => $notification_driver, notification_driver, notification_driver ='messagingv2', notification_transport_url, notification_transport_url = $::os_service_default, os_service_default, oslo::messaging::notifications { 'cinder_config': transport_url => $notification_transport_url, driver => $notification_driver, }, transport_url => $notification_transport_url, driver => $notification_driver",CWE-937,"{'reason': 'CWE-937: The puppet code provided in the question is using the default value for notification_transport_url. This allows the user to create an instance for notification_transport_url without setting the value. This would allow attackers to use notification_transport_url to obtain the default value. Therefore, CWE-937 is related to the issue.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
159,"class cobbler::iptables ( $chain = 'input', ) { case $::operatingsystem { /(?i)(debian|ubuntu)/:{ file { '/etc/network/if-post-down.d/iptablessave': content => template('cobbler/ubuntu/iptablessave.erb'), owner => 'root', group => 'root', mode => '0755', } file { '/etc/network/if-pre-up.d/iptablesload': content => template('cobbler/ubuntu/iptablesload.erb'), owner => 'root', group => 'root', mode => '0755', } } } firewall { '101 dns_tcp': chain => $chain, dport => '53', proto => 'tcp', action => 'accept', } firewall { '102 dns_udp': chain => $chain, dport => '53', proto => 'udp', action => 'accept', } firewall { '103 dhcp': chain => $chain, dport => ['67','68'], proto => 'udp', action => 'accept', } firewall { '104 tftp': chain => $chain, dport => '69', proto => 'udp', action => 'accept', } firewall { '105 squidproxy': chain => $chain, dport => '3128', proto => 'tcp', action => 'accept', } firewall { '106 cobbler_web': chain => $chain, dport => ['80','443'], proto => 'tcp', action => 'accept', } }",1,1,puppet code,cwe id,"{'reason': 'The misconfiguration is related to CWE-22.  The misconfiguration is the result of incorrect use of the firewall resource. The resource can accept, deny, or reject connections, based on the specified dport and proto.  The firewall resource can only match on one protocol at a time, so using one firewall resource to accept multiple protocols would allow all of those protocols to be accepted.  Since the firewall resource is not designed to handle multiple protocols at a time, a misconfiguration could allow multiple protocols to be allowed when the intention was only for one protocol.', 'related_cwe': 'CWE-22, CWE-264', 'is_misconfiguration_related': 'Yes'}"
160,"class role::l10nupdate { mediawiki::extension { 'localisationupdate': settings => { 'wglocalisationupdatedirectory' => '$wgcachedirectory', }, } }",0,1,"mediawiki::extension {\n    'localisationupdate':\n    settings => {\n        'wglocalisationupdatedirectory' => '$wgcachedirectory',\n    },\n}, settings => {\\n        'wglocalisationupdatedirectory' => '$wgcachedirectory',\\n    }, wglocalisationupdatedirectory' => '$wgcachedirectory',",CWE-732,"{'reason': 'The misconfiguration in the script was related to the CWE provided', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
161,"define git::clone( $directory, $branch = undef, $remote = undef, $owner = $::share_owner, $group = $::share_group, $ensure = 'present', $depth = $::git::default_depth, $recurse_submodules = true, ) { require ::git if !($ensure in ['present', 'latest']) { fail('ensure parameter must be present or latest.') } $repository = $remote ? { undef => sprintf($git::urlformat, $title), default => $remote, } $arg_branch = $branch ? { undef => '', default => ""--branch '${branch}'"" } $arg_recurse = $recurse_submodules ? { true => '--recurse-submodules', default => '', } $arg_depth = $depth ? { undef => '', default => ""--depth=${depth}"", } exec { ""git_clone_${title}"": command => ""/usr/bin/git clone ${arg_recurse} ${arg_depth} ${arg_branch} ${repository} ${directory}"", cwd => '/', creates => ""${directory}/.git"", user => $owner, group => $group, require => package['git'], timeout => 0, } if (!defined(file[$directory])) { file { $directory: ensure => 'directory', owner => $owner, group => $group, before => exec[""git_clone_${title}""], } } if $ensure == 'latest' { exec { ""git_pull_${title}"": command => ""/usr/bin/git pull ${arg_recurse} ${arg_depth}"", unless => ""/usr/bin/git fetch ${arg_depth} && /usr/bin/git diff --quiet @{upstream}"", cwd => $directory, user => $owner, group => $group, schedule => 'hourly', require => exec[""git_clone_${title}""], } if $recurse_submodules { exec { ""git_submodule_update_${title}"": command => '/usr/bin/git submodule update --init --recursive', cwd => $directory, user => $owner, group => $group, refreshonly => true, subscribe => exec[""git_pull_${title}""], } } } }",1,1,", file { $directory: \\n    ensure => 'directory', \\n    owner => $owner, \\n    group => $group, \\n    before => exec['git_clone_${title}'], \\n}, if $recurse_submodules {\n            exec { 'git_submodule_update_${title}':\n                command => '/usr/bin/git submodule update --init --recursive',\n                cwd => $directory,\n                user => $owner,\n                group => $group,\n                refreshonly => true,\n                subscribe => exec['git_pull_${title}'],\n            }\n        }, if ($ensure in ['latest']) {\\n                exec { 'git_pull_${title}':\\n                    command => '/usr/bin/git pull',\\n                    unless => '/usr/bin/git fetch && /usr/bin/git diff --quiet @\\{upstream\\}',\\n                    cwd => $directory,\\n                    user => $owner,\\n                    group => $group,\\n                    schedule => 'hourly',\\n                    require => exec['git_clone_${title}'],\\n                }\\n            }\\n            if $recurse_submodules {\\n                exec { 'git_submodule_update_${title}':\\n                    command => '/usr/bin/git submodule update --init --recursive',\\n                    cwd => $directory,\\n                    user => $owner,\\n                    group => $group,\\n                    refreshonly => true,\\n                    subscribe => exec['git_pull_${title}'],\\n                }\\, if!($ensure in ['present', 'latest']) {           fail('ensure parameter must be present or latest.')     }, package { 'git':\\n    ensure => 'present',\\n    install_options => '-y --force-yes',\\n    before => Service['ssh'],\\n}, require ::git, require ::puppetlabs/concat, require ::puppetlabs/stdlib","CWE-19, CWE-20, CWE-79","{'reason': 'The script is not using a standard package manager to install dependencies. This can lead to code execution when the script is run as root, because a non-standard package manager can inject malicious packages into the repository.', 'related_cwe': 'CWE-19, CWE-20, CWE-79', 'is_misconfiguration_related': 'Yes'}"
162,"class octavia::api ( $manage_service = true, $enabled = true, $package_ensure = 'present', $host = '0.0.0.0', $port = '9876', $sync_db = false, ) inherits octavia::params { include ::octavia::policy octavia_config<||> ~> service['octavia-api'] class['octavia::policy'] ~> service['octavia-api'] package['octavia-api'] -> service['octavia-api'] package['octavia-api'] -> class['octavia::policy'] package { 'octavia-api': ensure => $package_ensure, name => $::octavia::params::api_package_name, tag => ['openstack', 'octavia-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } if $sync_db { include ::octavia::db::sync } service { 'octavia-api': ensure => $service_ensure, name => $::octavia::params::api_service_name, enable => $enabled, hasstatus => true, hasrestart => true, require => class['octavia::db'], tag => ['octavia-service', 'octavia-db-sync-service'], } octavia_config { 'api/host' : value => $host; 'api/port' : value => $port; } }",0,1,"if $enabled { $service_ensure = 'running' } else { $service_ensure ='stopped' }, if $sync_db { include ::octavia::db::sync }, include ::octavia::db::sync, octavia_config { 'api/host' : value => $host; 'api/port' : value => $port; }, package { 'octavia-api': ensure => $package_ensure, name => $::octavia::params::api_package_name, tag => ['openstack', 'octavia-package'], }, service { 'octavia-api': ensure => $service_ensure, name => $::octavia::params::api_service_name, enable => $enabled, hasstatus => true, hasrestart => true, require => class['octavia::db'], tag => ['octavia-service', 'octavia-db-sync-service'], }",CWE-352,"{'reason': 'The misconfiguration is related to CWE-352 because the API is configured to run when the service is enabled and stopped when it is disabled.', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
163,"class neutron::agents::l3 ( $package_ensure = 'present', $enabled = true, $manage_service = true, $debug = false, $interface_driver = 'neutron.agent.linux.interface.ovsinterfacedriver', $gateway_external_network_id = $::os_service_default, $handle_internal_only_routers = $::os_service_default, $metadata_port = $::os_service_default, $send_arp_for_ha = $::os_service_default, $periodic_interval = $::os_service_default, $periodic_fuzzy_delay = $::os_service_default, $enable_metadata_proxy = $::os_service_default, $ha_enabled = false, $ha_vrrp_auth_type = 'pass', $ha_vrrp_auth_password = $::os_service_default, $ha_vrrp_advert_int = '3', $agent_mode = 'legacy', $purge_config = false, $availability_zone = $::os_service_default, $external_network_bridge = $::os_service_default, ) { include ::neutron::deps include ::neutron::params if ! is_service_default ($external_network_bridge) { warning('parameter external_network_bridge is deprecated') } resources { 'neutron_l3_agent_config': purge => $purge_config, } if $ha_enabled { neutron_l3_agent_config { 'default/ha_vrrp_auth_type': value => $ha_vrrp_auth_type; 'default/ha_vrrp_auth_password': value => $ha_vrrp_auth_password; 'default/ha_vrrp_advert_int': value => $ha_vrrp_advert_int; } } neutron_l3_agent_config { 'default/debug': value => $debug; 'default/external_network_bridge': value => $external_network_bridge; 'default/interface_driver': value => $interface_driver; 'default/gateway_external_network_id': value => $gateway_external_network_id; 'default/handle_internal_only_routers': value => $handle_internal_only_routers; 'default/metadata_port': value => $metadata_port; 'default/send_arp_for_ha': value => $send_arp_for_ha; 'default/periodic_interval': value => $periodic_interval; 'default/periodic_fuzzy_delay': value => $periodic_fuzzy_delay; 'default/enable_metadata_proxy': value => $enable_metadata_proxy; 'default/agent_mode': value => $agent_mode; 'agent/availability_zone': value => $availability_zone; } if $::neutron::params::l3_agent_package { package { 'neutron-l3': ensure => $package_ensure, name => $::neutron::params::l3_agent_package, tag => ['openstack', 'neutron-package'], } } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } service { 'neutron-l3': ensure => $service_ensure, name => $::neutron::params::l3_agent_service, enable => $enabled, tag => 'neutron-service', } } }",1,1,"agent/availability_zone, default/ha_vrrp_advert_int, default/ha_vrrp_auth_password, default/ha_vrrp_auth_type, default/handle_internal_only_routers, default/send_arp_for_ha, package, periodic_fuzzy_delay, periodic_interval, send_arp_for_ha","CWE-19, CWE-20, CWE-285, CWE-319, CWE-345","{'reason': ""This issue is related to a lack of input validation before a program uses user input as it was intended. This lack of input validation may cause the agent to malfunction by allowing an attacker to specify invalid arguments for the agent to process. Invalid arguments passed to the agent could cause the agent to crash or perform unexpected behavior. Such vulnerabilities may be used to escalate privilege or cause a denial of service attack by invalidating the agent's behavior. In the example, the value of the send_arp_for_ha parameter was not validated before it was passed to the agent. If the value of this parameter is not an integer, the agent will attempt to use the value as an integer which will cause the agent to crash. This misconfiguration is related to the CWE"", 'related_cwe': 'CWE-19, CWE-20, CWE-285, CWE-319, CWE-345', 'is_misconfiguration_related': 'Yes'}"
164,class { '::openstack_tasks::roles::ironic_conductor' :} warning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp'),1,1,"class { '::openstack_tasks::roles::ironic_conductor' :}\\\\nwarning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp')\\\\n, class { '::openstack_tasks::roles::ironic_conductor' :}\\\\nwarning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp')\\\\n\\\\n, class { '::openstack_tasks::roles::ironic_conductor' :}\\nwarning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp'), class { '::openstack_tasks::roles::ironic_conductor' :}\\nwarning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp')\\n, class { '::openstack_tasks::roles::ironic_conductor' :}\nwarning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp'), class { '::openstack_tasks::roles::ironic_conductor' :}warning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp'), class { '::openstack_tasks::roles::ironic_conductor' :}warning('osnailyfacter/modular/./roles/ironic-conductor.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/ironic-conductor.pp')\\\\n",CWE-259,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
165,"class concat::setup { $id = $::id $root_group = $id ? { root => 0, default => $id } if $::concat_basedir { $concatdir = $::concat_basedir } else { fail (""\$concat_basedir not defined. try running again with pluginsync=true on the [master] section of your node's '/etc/puppet/puppet.conf'."") } $pathchars = $::operatingsystem ? { windows => '[/\\:\n ]', default => '[/\n ]', } $majorversion = regsubst($::puppetversion, '^[0-9]+[.]([0-9]+)[.][0-9]+$', '\1') $fragments_source = $majorversion ? { 24 => 'puppet:///concat/concatfragments.rb', default => 'puppet:///modules/concat/concatfragments.rb' } file{""${concatdir}/bin/concatfragments.rb"": owner => $id, group => $root_group, mode => '0775', source => $fragments_source; [ $concatdir, ""${concatdir}/bin"" ]: ensure => directory, owner => $id, group => $root_group, mode => '0770'; ""${concatdir}/bin/concatfragments.sh"": ensure => absent; } if $::operatingsystem != ""windows"" { file{'/usr/local/bin/concatfragments.sh': ensure => absent; } } }",1,1,"fail (\$concat_basedir not defined. try running again with pluginsync=true on the [master] section of your node's '/etc/puppet/puppet.conf'., fail (\\$concat_basedir not defined. try running again with pluginsync=true on the [master] section of your node's '/etc/puppet/puppet.conf'., file{'/usr/local/bin/concatfragments.sh': ensure => absent;","CWE-248: Use of Hard-coded Credentials, CWE-269: Certificate Validation, CWE-284: Improper Access Control","{'reason': 'The misconfiguration is not related to the CWE.\\n\\n* The script provides a function that validates the contents of the given file. \\n* The script uses the path characters in the script that is used to concatenate the files.\\n\\nThis is not the result of a misconfiguration, it is just a part of the script.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
166,"class packstack::gnocchi () { create_resources(packstack::firewall, hiera('firewall_gnocchi_rules', {})) $gnocchi_cfg_db_pw = hiera('config_gnocchi_db_pw') $gnocchi_cfg_mariadb_host = hiera('config_mariadb_host_url') class { '::gnocchi::wsgi::apache': workers => hiera('config_service_workers'), threads => hiera('config_service_workers'), ssl => false } class { '::gnocchi': database_connection => ""mysql+pymysql://gnocchi:${gnocchi_cfg_db_pw}@${gnocchi_cfg_mariadb_host}/gnocchi?charset=utf8"", } $bind_host = hiera('config_ip_version') ? { 'ipv6' => '::0', default => '0.0.0.0', } class { '::gnocchi::keystone::authtoken': auth_uri => hiera('config_keystone_public_url'), auth_url => hiera('config_keystone_admin_url'), auth_version => hiera('config_keystone_api_version'), password => hiera('config_gnocchi_ks_pw') } class { '::gnocchi::api': host => $bind_host, service_name => 'httpd' } class { '::gnocchi::db::sync': extra_opts => '--create-legacy-resource-types', } class { '::gnocchi::storage': } class { '::gnocchi::storage::file': } class {'::gnocchi::metricd': } class {'::gnocchi::statsd': resource_id => '5e3fcbe2-7aab-475d-b42c-a440aa42e5ad', user_id => 'e0ca4711-1128-422c-abd6-62db246c32e7', project_id => 'af0c88e8-90d8-4795-9efe-57f965e67318', archive_policy_name => 'high', flush_delay => '10', } include ::gnocchi::client }",1,1,"archive_policy_name => 'high', auth_uri => hiera('config_keystone_public_url'), bind_host => '::0'? { 'ipv6' => '::0', default => '0.0.0.0', }, extra_opts => '--create-legacy-resource-types', flush_delay => '10', password => hiera('config_gnocchi_ks_pw'), project_id => 'af0c88e8-90d8-4795-9efe-57f965e67318', resource_id => '5e3fcbe2-7aab-475d-b42c-a440aa42e5ad', user_id => 'e0ca4711-1128-422c-abd6-62db246c32e7', project_id => 'af0c88e8-90d8-4795-9efe-57f965e67318', archive_policy_name => 'high', flush_delay => '10', ssl => false, user_id => 'e0ca4711-1128-422c-abd6-62db246c32e7'","CWE-200, CWE-384","{'reason': 'The issue with the Gnocchi client user is not directly related to any CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
167,"class packages::mapi_headers { packages::pkgzip {""mapiheader.zip"": zip => ""mapiheader.zip"", target_dir => '""c:\office 2010 developer resources\outlook 2010 mapi headers""'; } }",0,1,"c:\\\\\\\\\\\\, c:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, c:\\\\office 2010 developer resources\\\\outlook 2010 mapi headers\\\\';\\}, c:\\office 2010 developer resources\\outlook 2010 mapi headers\\', mapiheader.zip, packages::pkgzip {\, target_dir => '\\, target_dir => '\\\\, target_dir => '\\\\\\\\\\\\\\\\\, zip => \",CWE-77,"{'reason': 'The CWE is related to SQL injection. This misconfiguration issue is also related to SQL injection because of the SQL injection vulnerability in the script', 'related_cwe': 'CWE-77, CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
168,"class swift::bench ( $auth_url = 'http://localhost:8080/auth/v1.0', $swift_user = 'test:tester', $swift_key = 'testing', $auth_version = '1.0', $log_level = 'info', $test_timeout = '10', $put_concurrency = '10', $get_concurrency = '10', $del_concurrency = '10', $lower_object_size = '10', $upper_object_size = '10', $object_size = '1', $num_objects = '1000', $num_gets = '10000', $num_containers = '20', $delete = 'yes', ){ include ::swift::deps swift_bench_config { 'bench/auth': value => $auth_url; 'bench/user': value => $swift_user; 'bench/key': value => $swift_key; 'bench/auth_version': value => $auth_version; 'bench/log-level': value => $log_level; 'bench/timeout': value => $test_timeout; 'bench/put_concurrency': value => $put_concurrency; 'bench/get_concurrency': value => $get_concurrency; 'bench/del_concurrency': value => $del_concurrency; 'bench/lower_object_size': value => $lower_object_size; 'bench/upper_object_size': value => $upper_object_size; 'bench/object_size': value => $object_size; 'bench/num_objects': value => $num_objects; 'bench/num_gets': value => $num_gets; 'bench/num_containers': value => $num_containers; 'bench/delete': value => $delete; } }",0,1,"include ::swift::deps, swift_bench_config { 'bench/auth': value => $auth_url; 'bench/user': value => $swift_user; 'bench/key': value => $swift_key; 'bench/auth_version': value => $auth_version; 'bench/log-level': value => $log_level; 'bench/timeout': value => $test_timeout; 'bench/put_concurrency': value => $put_concurrency; 'bench/get_concurrency': value => $get_concurrency; 'bench/del_concurrency': value => $del_concurrency; 'bench/lower_object_size': value => $lower_object_size; 'bench/upper_object_size': value => $upper_object_size; 'bench/object_size': value => $object_size; 'bench/num_objects': value => $num_objects; 'bench/num_gets': value => $num_gets; 'bench/num_containers': value => $num_containers; 'bench/delete': value => $delete; }, value => $auth_url; 'bench/user': value => $swift_user;, value => $auth_version; 'bench/log-level': value => $log_level;, value => $del_concurrency; 'bench/lower_object_size': value => $lower_object_size;, value => $get_concurrency; 'bench/del_concurrency': value => $del_concurrency;, value => $lower_object_size; 'bench/upper_object_size': value => $upper_object_size;, value => $put_concurrency; 'bench/get_concurrency': value => $get_concurrency;, value => $test_timeout; 'bench/put_concurrency': value => $put_concurrency;, value => $upper_object_size; 'bench/object_size': value => $object_size;","CWE-312, CWE-668","{'reason': 'The misconfiguration is related to the provided CWE since it is a violation of CWE-312 (Missing Release of Resources or Correct Error Condition Result Code) and CWE-668 (Exposure to Sensitive Information via Data Exposure).', 'related_cwe': 'CWE-312, CWE-668', 'is_misconfiguration_related': 'Yes'}"
169,"class role::sentry ( $dsn, ) { include ::sentry include ::role::buggy $hostname = $::sentry::vhost_name mediawiki::extension { 'sentry': settings => [ ""\$wgsentrydsn = trim(file_get_contents('${dsn}'));"", ], composer => true, } mediawiki::import::text { 'vagrantrolesentry': content => template('role/sentry/vagrantrolesentry.wiki.erb'), } }",0,1,"class role::sentry ( $dsn, ) { include ::sentry include ::role::buggy $hostname = $::sentry::vhost_name mediawiki::extension {'sentry': settings => [, mediawiki::import::text {'vagrantrolesentry': content => template('role/sentry/vagrantrolesentry.wiki.erb'), } }, settings => [, settings => [, ]","CWE-22, CWE-79","{'reason': 'The misconfiguration is related to CWE-79 because it describes a security weakness related to the lack of input validation or the lack of sufficient data validation. It also mentions a weakness related to the use of default, hard-coded, or user-configurable data. Additionally, the misconfiguration is related to CWE-22 because it mentions a weakness related to an issue of data exposure. The CWE-22 also mentions a weakness related to a lack of input validation.', 'related_cwe': 'CWE-79, CWE-22', 'is_misconfiguration_related': 'Yes'}"
170,"class osnailyfacter::astute::service_token_off { notice('modular: astute/service_token_off.pp') $keystone_params_hash = hiera_hash('keystone', {}) if str2bool($keystone_params_hash['service_token_off']) { include ::keystone::params include ::tweaks::apache_wrappers keystone_config { 'default/admin_token': ensure => absent; } $keystone_paste_ini = $::keystone::params::paste_config ? { undef => '/etc/keystone/keystone-paste.ini', default => $::keystone::params::paste_config, } exec { 'remove_admin_token_auth_middleware': path => ['/bin', '/usr/bin'], command => ""sed -i.dist 's/ admin_token_auth//' ${keystone_paste_ini}"", onlyif => ""fgrep -q ' admin_token_auth' ${keystone_paste_ini}"", } service { 'httpd': ensure => 'running', name => $::tweaks::apache_wrappers::service_name, enable => true, } keystone_config<||> ~> service['httpd'] exec['remove_admin_token_auth_middleware'] ~> service['httpd'] } }",1,1,"httpd:, if str2bool($keystone_params_hash['service_token_off']), keystone_config { 'default/admin_token': ensure => absent; }, keystone_config<||> ~> service['httpd'] exec['remove_admin_token_auth_middleware'] ~> service['httpd'], sed -i.dist's/ admin_token_auth//' ${keystone_paste_ini}, service { 'httpd': ensure => 'running', name => $::tweaks::apache_wrappers::service_name, enable => true, }, service_token_off: true","CWE-664, CWE-665, CWE-666, CWE-667, CWE-668, CWE-670","{'reason': ""Keystone is an authentication service that is required for OpenStack to operate. The 'admin_token' value is used to provide authentication for the Keystone endpoint. Removing this value will prevent Keystone from providing valid authentication. The administrator's credentials will not be valid when connecting to Keystone. The misconfiguration is related to the CWE because the 'admin_token' value is a secret string value that is intended to be private to the administrator. This value is intended to be accessible by the administrator only, not publically accessible to anyone else. The removal of this value will prevent the Keystone service from authenticating requests to the Keystone API. This is related to the CWEs associated with authentication token generation."", 'related_cwe': 'CWE-664, CWE-665, CWE-666, CWE-667, CWE-668, CWE-670', 'is_misconfiguration_related': 'Yes'}"
171,"class glance::backend::cinder( $os_region_name = undef, $cinder_ca_certificates_file = $::os_service_default, $cinder_api_insecure = $::os_service_default, $cinder_catalog_info = $::os_service_default, $cinder_endpoint_template = $::os_service_default, $cinder_http_retries = $::os_service_default, $multi_store = false, $glare_enabled = false, ) { include ::glance::deps if $os_region_name { notice('the os_region_name parameter is deprecated and has no effect. use glance::api::os_region_name instead.') } glance_api_config { 'glance_store/cinder_api_insecure': value => $cinder_api_insecure; 'glance_store/cinder_catalog_info': value => $cinder_catalog_info; 'glance_store/cinder_http_retries': value => $cinder_http_retries; 'glance_store/cinder_endpoint_template': value => $cinder_endpoint_template; 'glance_store/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; } if !$multi_store { glance_api_config { 'glance_store/default_store': value => 'cinder'; } if $glare_enabled { glance_glare_config { 'glance_store/default_store': value => 'cinder'; } } } glance_cache_config { 'glance_store/cinder_api_insecure': value => $cinder_api_insecure; 'glance_store/cinder_catalog_info': value => $cinder_catalog_info; 'glance_store/cinder_http_retries': value => $cinder_http_retries; 'glance_store/cinder_endpoint_template': value => $cinder_endpoint_template; 'glance_store/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; } if $glare_enabled { glance_glare_config { 'glance_store/cinder_api_insecure': value => $cinder_api_insecure; 'glance_store/cinder_catalog_info': value => $cinder_catalog_info; 'glance_store/cinder_http_retries': value => $cinder_http_retries; 'glance_store/cinder_endpoint_template': value => $cinder_endpoint_template; 'glance_store/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; } } }",0,1,"glance_api_config { 'glance_store/cinder_api_insecure': value => $cinder_api_insecure; }, glance_api_config { 'glance_store/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; }, glance_api_config { 'glance_store/cinder_catalog_info': value => $cinder_catalog_info; }, glance_api_config { 'glance_store/cinder_endpoint_template': value => $cinder_endpoint_template; }, glance_api_config { 'glance_store/cinder_http_retries': value => $cinder_http_retries; }, glance_cache_config { 'glance_store/cinder_api_insecure': value => $cinder_api_insecure; }, glance_cache_config { 'glance_store/cinder_catalog_info': value => $cinder_catalog_info; }, glance_cache_config { 'glance_store/cinder_endpoint_template': value => $cinder_endpoint_template; }, glance_cache_config { 'glance_store/cinder_http_retries': value => $cinder_http_retries; }, include ::glance::deps",CWE-703,"{'reason': 'The cinder api insecure configuration allows access to cinder api with no encryption. Using the unsecure transport protocol and insecure communication allows an attacker to eavesdrop on communication and use the intercepted data to launch further attacks.', 'related_cwe': 'CWE-703', 'is_misconfiguration_related': 'Yes'}"
172,class base::es { file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' } },0,1,"class base::es { file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' } }\n, file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' }file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' }\\\\\\\\\\\\\\\\n, file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' }\\\\\\\\n, file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' }\\\\n, file { '/etc/network/interfaces': source => 'puppet:///modules/base/interfaces-es' }\\n",CWE-1259,"{'reason': ""This issue relates to CWE-1259 as the source attribute of a file resource is set to 'puppet:///modules/base/interfaces-es' which is not appropriate. The source path is not an absolute path and might introduce issues when used. Refer to https://puppet.com/docs/puppet/5.7/resources.html#resource-definition for more details."", 'related_cwe': 'CWE-1259', 'is_misconfiguration_related': 'Yes'}"
173,"class dirs::etc { case $::operatingsystem { windows: { $dir = ""c:/etc"" file { ""c:/etc"": ensure => directory, } } default: { $dir = ""/etc"" } } }",0,1,c:/etc,CWE-22,"{'reason': 'Please fill in your reasoning.', 'related_cwe': 'Please fill in related CWE(s) for this misconfiguration.', 'is_misconfiguration_related': 'Please answer whether the misconfiguration is related to the CWE.'}"
174,"class glance::db::postgresql( $password, $dbname = 'glance', $user = 'glance', $encoding = undef, $privileges = 'all', ) { include ::glance::deps ::openstacklib::db::postgresql { 'glance': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } anchor['glance::db::begin'] ~> class['glance::db::postgresql'] ~> anchor['glance::db::end'] }",0,1,"dbname => $dbname,, password_hash => postgresql_password($user, $password),, privileges => $privileges,, user => $user,",CWE-522,"{'reason': 'The `glance::db::postgresql` class is responsible for deploying Glance database resources. The `postgresql_password` function generates a database password hash based on the user, password combination. This allows for Glance to connect to the database using the generated password hash. As the `password_hash` variable takes in the password hash, it is important for Glance admins to ensure that the correct user and password combination is provided. By generating the password hash based on the user, password combination, the `postgresql_password` function helps Glance admins to ensure that they are using the correct user, password combination.\\n\\nAs the `glance::db::postgresql` class provides the `postgresql_password` function with the user and password variables, it', 'related_cwe': 'CWE-522: Insufficiently Protected Credentials', 'is_misconfiguration_related': 'Yes'}"
175,class ceph::profile::client { require ::ceph::profile::base if ! defined(class['ceph::keys']) { if !empty($ceph::profile::params::client_keys) { class { '::ceph::keys': args => $ceph::profile::params::client_keys } } } },0,1,"class { '::ceph::keys': args => \\$ceph::profile::params::client_keys }, class { '::ceph::keys': args => \\\\ $ceph::profile::params::client_keys }, class{\\\\\\'ceph::keys\\\\\\': args=>\\\\\\$ceph::profile::params::client_keys }, if!defined(class['ceph::keys']), if!empty(\$ceph::profile::params::client_keys), if!empty(\\$ceph::profile::params::client_keys), if!empty(\u2028\\$ceph::profile::params::client_keys), require ::ceph::profile::base if!defined(class['ceph::keys']), require ::ceph::profile::baseif!defined(class['ceph::keys'])",CWE-259,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
176,"class cdh::hive::server( $port = undef, $heapsize = undef, $default_template = 'cdh/hive/hive-server2.default.erb' ) { class['cdh::hadoop'] -> class['cdh::hive::server'] class['cdh::hive'] -> class['cdh::hive::server'] package { 'hive-server2': ensure => 'installed', alias => 'hive-server', } file { '/etc/default/hive-server2': content => template($default_template), require => package['hive-server2'], } cdh::hadoop::directory { '/user/hive': owner => 'hive', group => 'hadoop', mode => '0775', require => package['hive'], } cdh::hadoop::directory { '/user/hive/warehouse': owner => 'hive', group => 'hadoop', mode => '1777', require => cdh::hadoop::directory['/user/hive'], } service { 'hive-server2': ensure => 'running', require => [ package['hive-server2'], file['/etc/default/hive-server2'], cdh::hadoop::directory['/user/hive/warehouse'], ], hasrestart => true, hasstatus => true, } }",1,1,"cdh::hadoop::directory { '/user/hive': owner => 'hive', group => 'hadoop', mode => '0775', require => package['hive'], }, cdh::hadoop::directory { '/user/hive/warehouse': owner => 'hive', group => 'hadoop', mode => '1777', require => cdh::hadoop::directory['/user/hive'], }, file { '/etc/default/hive-server2': content => template($default_template), require => package['hive-server2'], }, package { 'hive-server2': ensure => 'installed', alias => 'hive-server', }, service { 'hive-server2': ensure => 'running', require => [ package['hive-server2'], file['/etc/default/hive-server2'], cdh::hadoop::directory['/user/hive/warehouse'], ], hasrestart => true, hasstatus => true, }","CWE-347, CWE-352, CWE-416","{'reason': 'Explanation of how the misconfiguration is related to the CWE.', 'related_cwe': 'CWE-347, CWE-352, CWE-416', 'is_misconfiguration_related': 'Yes'}"
177,"define cinder::quota_set ( $os_password, $os_tenant_name = 'admin', $os_username = 'admin', $os_auth_url = 'http://127.0.0.1:5000/v2.0/', $os_region_name = undef, $quota_volumes = 10, $quota_snapshots = 10, $quota_gigabytes = 1000, $class_name = 'default', $volume_type = $name, ) { if $os_region_name { $cinder_env = [ ""os_tenant_name=${os_tenant_name}"", ""os_username=${os_username}"", ""os_password=${os_password}"", ""os_auth_url=${os_auth_url}"", ""os_region_name=${os_region_name}"", ] } else { $cinder_env = [ ""os_tenant_name=${os_tenant_name}"", ""os_username=${os_username}"", ""os_password=${os_password}"", ""os_auth_url=${os_auth_url}"", ] } exec {""cinder quota-class-update ${class_name}"": command => ""cinder quota-class-update ${class_name} --volumes ${quota_volumes} --snapshots ${quota_snapshots} --gigabytes ${quota_gigabytes} --volume-type '${volume_type}'"", onlyif => 'cinder quota-class-show default | grep -qp -- -1', environment => $cinder_env, require => package['python-cinderclient'], path => ['/usr/bin', '/bin'], } }",0,1,"cinder quota-class-show default | grep -qp -- -1, cinder quota-class-update ${class_name} --volumes ${quota_volumes} --snapshots ${quota_snapshots} --gigabytes ${quota_gigabytes} --volume-type '${volume_type}', define cinder::quota_set ( $os_password, $os_tenant_name = 'admin', $os_username = 'admin', $os_auth_url = 'http://127.0.0.1:5000/v2.0/', $os_region_name = undef, $quota_volumes = 10, $quota_snapshots = 10, $quota_gigabytes = 1000, $class_name = 'default', $volume_type = $name, ) { if $os_region_name { $cinder_env = [, if $os_region_name { $cinder_env = [, package['python-cinderclient']",CWE-601: URL Redirection to Untrusted Site ('Open Redirect'),"{'reason': ""The misconfiguration is related to CWE-601. While the code itself does not contain a URL, the command being executed is a REST call which may allow redirect attacks. Therefore, an attacker may be able to redirect the user to another site through the REST call. CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"", 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
178,class { '::openstack_tasks::murano::keystone_cfapi' :} warning('osnailyfacter/modular/./murano/keystone_cfapi.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone_cfapi.pp'),1,1,class { '::openstack_tasks::murano::keystone_cfapi' :},CWE-20,"{'reason': 'This script was deprecated in Mitaka and will be removed in Newton. Puppet is able to detect deprecated code, and warnings will be emitted to the user. This allows users to be made aware of deprecated code and update their modules. This issue relates to a warning Puppet emitted.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
179,"notice('fuel-plugin-lma-collector: cinder.pp') $ceilometer = hiera_hash('ceilometer', {}) $node_profiles = hiera_hash('lma::collector::node_profiles') $is_controller = $node_profiles['controller'] $is_rabbitmq = $node_profiles['rabbitmq'] $is_mysql_server = $node_profiles['mysql'] if $is_controller or $is_rabbitmq or $is_mysql_server { service<| title == 'log_collector' |> { provider => 'pacemaker' } service<| title == 'metric_collector' |> { provider => 'pacemaker' } } if hiera('lma::collector::influxdb::server', false) { class { 'lma_collector::logs::counter': hostname => $::hostname, } } if hiera('lma::collector::elasticsearch::server', false) { lma_collector::logs::openstack { 'cinder': } } if $ceilometer['enabled'] { $notification_topics = ['notifications', 'lma_notifications'] } else { $notification_topics = ['lma_notifications'] } include cinder::params $volume_service = $::cinder::params::volume_service cinder_config { 'default/notification_topics': value => join($notification_topics, ','), notify => service[$volume_service], } cinder_config { 'default/notification_driver': value => 'messaging', notify => service[$volume_service], } service { $volume_service: hasstatus => true, hasrestart => true, }",1,1,"cinder::params $volume_service = $::cinder::params::volume_service, cinder_config { 'default/notification_driver': value =>'messaging', notify => service[$volume_service], }, cinder_config { 'default/notification_topics': value => join($notification_topics, ','), notify => service[$volume_service], }, if hiera('lma::collector::elasticsearch::server', false) { lma_collector::logs::openstack { 'cinder': } }, if hiera('lma::collector::influxdb::server', false) { class { 'lma_collector::logs::counter': hostname => $::hostname, } }, include cinder::params, lma_collector::logs::counter: hostname => $::hostname,}, lma_collector::logs::openstack { 'cinder':}, service <| title == 'log_collector' |> { provider => 'pacemaker' }, service { $volume_service: hasstatus => true, hasrestart => true, }","CWE-14:Constraint Issues, CWE-16:Improper Handling of Unique Names","{'reason': 'CWE-14: Constraint Issues: It was a good catch to point out the use of a non-incremented name, but as it is part of the Puppet code, it does not constitute an issue. Furthermore, the use of a non-incremented name does not affect the functionality of the code.\\n\\nCWE-16: Improper Handling of Unique Names: There is no issue here. The use of a non-incremented name in Puppet code does not affect the functionality of the code, therefore there is no way that there would be any conflict that could arise from this misconfiguration.\\n\\nThis is why we are not marking the above misconfiguration as related to CWE-14 and CWE-16.', 'related_cwe': 'CWE-14, CWE-16', 'is_misconfiguration_related': 'No'}"
180,"class role::gpgmail { mediawiki::extension { 'gpgmail': composer => true, } }",0,1,"mediawiki::extension { 'gpgmail': composer => true, }","CWE-25, CWE-352, CWE-601","{'reason': 'The reason why this misconfiguration is related to CWE-25, CWE-352, CWE-601 is because', 'related_cwe': 'CWE-25, CWE-352, CWE-601', 'is_misconfiguration_related': 'Yes'}"
181,class role::disambiguator { mediawiki::extension { 'disambiguator': } },0,1,"class role::disambiguator { mediawiki::extension { 'disambiguator': } }, mediawiki::extension, mediawiki::extension { 'disambiguator': }",CWE-20,"{'reason': 'There is an extension with a name of disambiguator. According to Wikipedia, disambiguation is to clarify which of several things is intended. This may seem strange, but in an IT world, it is not. For example, when an attacker does a command injection to a database, the attacker wants to inject a command that will allow him to do something (attack). There are many database engines, but if an attacker does not have enough knowledge about the database, then he cannot perform the attack. Therefore, the attacker needs to clarify which database engine it is.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
182,"class zaqar( $auth_strategy = 'keystone', $admin_mode = $::os_service_default, $unreliable = $::os_service_default, $pooling = $::os_service_default, $queue_pipeline = $::os_service_default, $message_pipeline = $::os_service_default, $claim_pipeline = $::os_service_default, $subscription_pipeline = $::os_service_default, $max_messages_post_size = $::os_service_default, $package_name = $::zaqar::params::package_name, $package_ensure = 'present', $identity_uri = undef, $auth_uri = undef, $admin_user = undef, $admin_password = undef, $admin_tenant_name = undef, ) inherits zaqar::params { if $identity_uri { warning('zaqar::identity_uri is deprecated, use zaqar::keystone::authtoken::auth_url instead') } if $auth_uri { warning('zaqar::auth_uri is deprecated, use zaqar::keystone::authtoken::auth_uri instead') } if $admin_user { warning('zaqar::admin_user is deprecated, use zaqar::keystone::authtoken::username instead') } if $admin_password { warning('zaqar::admin_password is deprecated, use zaqar::keystone::authtoken::password instead') } if $admin_tenant_name { warning('zaqar::admin_tenant_name is deprecated, use zaqar::keystone::authtoken::project_name instead') } if $auth_strategy == 'keystone' { include ::zaqar::keystone::authtoken } package { 'zaqar-common': ensure => $package_ensure, name => $package_name, tag => ['openstack', 'zaqar-package'], } zaqar_config { 'default/auth_strategy': value => $auth_strategy; 'default/admin_mode': value => $admin_mode; 'default/unreliable': value => $unreliable; 'default/pooling': value => $pooling; 'storage/queue_pipeline': value => $queue_pipeline; 'storage/message_pipeline': value => $message_pipeline; 'storage/claim_pipeline': value => $claim_pipeline; 'storage/subscription_pipeline': value => $subscription_pipeline; 'transport/max_messages_post_size': value => $max_messages_post_size; } }",1,1,"admin_mode = $::os_service_default, auth_strategy = 'keystone', claim_pipeline = $::os_service_default, max_messages_post_size = $::os_service_default, message_pipeline = $::os_service_default, pooling = $::os_service_default, queue_pipeline = $::os_service_default, subscription_pipeline = $::os_service_default, unreliable = $::os_service_default","CWE-255, CWE-264","{'reason': 'The misconfiguration is related to CWE-255, CWE-264', 'related_cwe': 'CWE-255, CWE-264', 'is_misconfiguration_related': 'Yes'}"
183,"class midonet::neutron_plugin ( $midonet_api_ip = '127.0.0.1', $midonet_api_port = '8080', $keystone_username = 'neutron', $keystone_password = undef, $keystone_tenant = 'services', $sync_db = false ) { if $::osfamily == 'debian' { $ml2_package = 'neutron-plugin-ml2' } if $::osfamily == 'redhat' { $ml2_package = 'openstack-neutron-ml2' } package { $ml2_package: ensure => absent, } -> class { 'neutron::plugins::midonet': midonet_api_ip => $midonet_api_ip, midonet_api_port => $midonet_api_port, keystone_username => $keystone_username, keystone_password => $keystone_password, keystone_tenant => $keystone_tenant, sync_db => $sync_db } }",1,1,"if $::osfamily == 'debian', if $::osfamily =='redhat', keystone_password => $keystone_password, midonet_api_ip => $midonet_api_ip, midonet_api_port => $midonet_api_port, keystone_username => $keystone_username, keystone_password => $keystone_password, keystone_tenant => $keystone_tenant, sync_db => $sync_db, package {\\n $ml2_package: ensure => absent,\\n } ->, package {\n $ml2_package: ensure => absent,\n } ->, sync_db => $sync_db","CWE-22, CWE-285, CWE-522, CWE-285, CWE-522, CWE-522","{'reason': 'Inappropriate instantiation of package\\n The Puppet script is instantiating a package even though there is no such package defined in the manifest. This is an issue because an unexpected package might be installed, causing issues that lead to an unmanaged system. This could cause severe problems if the wrong package is being installed.\\n\\nIn the script, the package name depends on the operating system. This creates a single point of failure, since both package names are dependent on a single operating system. As a result, the system can become unusable for systems with different operating systems.\\n\\n\\nThe issue is caused by a lack of configuration controls. A more appropriate way to address this would be by defining multiple packages, one for each operating system.\\n\\n\\n', 'related_cwe': 'CWE-285, CWE-522', 'is_misconfiguration_related': 'Yes'}"
184,"class runner { include ::config include dirs::opt include runner::service include runner::settings include packages::mozilla::python27 python::virtualenv { $runner::settings::root: python => $packages::mozilla::python27::python, require => class['packages::mozilla::python27'], packages => [ 'runner==2.0', ]; } file { $runner::settings::taskdir: ensure => directory, force => true, recurse => true, purge => true; ""${runner::settings::root}/runner.cfg"": before => service['runner'], content => template('runner/runner.cfg.erb'), show_diff => false; ""$runner::settings::task_hook"": before => service['runner'], mode => '0755', source => 'puppet:///modules/runner/influxdb_hook.py'; ""$runner::settings::influxcreds"": before => service['runner'], content => template('runner/influxcreds.erb'), show_diff => false; } case $::operatingsystem { 'centos', 'ubuntu': { file { '/etc/logrotate.d/runner': mode => '0644', content => template('runner/runner.logrotate.erb'); } } } }",1,1,"case $::operatingsystem { 'centos', 'ubuntu': { file { '/etc/logrotate.d/runner': mode => '0644', content => template('runner/runner.logrotate.erb'); } } }, file { $runner::settings::taskdir: ensure => directory, force => true, recurse => true, purge => true;, python::virtualenv { $runner::settings::root: python => $packages::mozilla::python27::python, require => class['packages::mozilla::python27'], packages => [ 'runner==2.0', ]; }","CWE-284: Improper Access Control, CWE-502: Deserialization of Untrusted Data, CWE-522: Insufficiently Protected Credentials","{'reason': 'Improper Access Control, Deserialization of Untrusted Data, Insufficiently Protected Credentials', 'related_cwe': 'CWE-284, CWE-502, CWE-522', 'is_misconfiguration_related': 'Yes'}"
185,"class mysql( $root_password = 'vagrant', $default_db_name = undef, $grant_host_name = undef, ) { include ::mysql::packages service { 'mysql': ensure => running, enable => true, hasrestart => true, require => package['mysql-server'], } exec { 'set_mysql_password': command => ""/usr/bin/mysqladmin -u root password \""${root_password}\"""", unless => ""/usr/bin/mysqladmin -u root -p\""${root_password}\"" status"", require => service['mysql'], } file { '/home/vagrant/.my.cnf': ensure => file, owner => 'vagrant', group => 'vagrant', mode => '0600', content => template('mysql/my.cnf.erb'), } mysql::db <| |> -> mysql::user <| |> }",1,1,"file {\\\\\\\\n \\\\\\\\\t'/etc/mysql/debian.cnf':\\\\\\\\n \\\\\\\\\t\\\\\\\\tensure => file,\\\\\\\\n \\\\\\\\\t\\\\\\\\towner =>'mysql',\\\\\\\\n \\\\\\\\\t\\\\\\\\tgroup => 'root',\\\\\\\\n \\\\\\\\\t\\\\\\\\tmode => '0640',\\\\\\\\n \\\\\\\\\t\\\\\\\\tcontent => template('mysql/my.cnf.erb'),\\\\\\\\n \\\\\\\\\t}, file {\\\\n \\\\t'/etc/mysql/debian.cnf':\\\\n \\\\t\\\\tensure => file,\\\\n \\\\t\\\\towner =>'mysql',\\\\n \\\\t\\\\tgroup => 'root',\\\\n \\\\t\\\\tmode => '0640',\\\\n \\\\t\\\\tcontent => template('mysql/my.cnf.erb'),\\\\n \\\\t}, file {\\n \\t'/etc/mysql/debian.cnf':\\n \\t\\tensure => file,\\n \\t\\towner =>'mysql',\\n \\t\\tgroup => 'root',\\n \\t\\tmode => '0640',\\n \\t\\tcontent => template('mysql/my.cnf.erb'),\\n \\t}, file {\n \t'/etc/mysql/debian.cnf':\n \t\tensure => file,\n \t\towner =>'mysql',\n \t\tgroup => 'root',\n \t\tmode => '0640',\n \t\tcontent => template('mysql/my.cnf.erb'),\n \t}, mysql::db <| |> -> mysql::user <| |>","CWE-250, CWE-269","{'reason': ""The `root_password` variable in the MySQL class is set to 'vagrant' by default. This variable is used in the `mysql::db` class to grant 'ALL PRIVILEGES' on the database `vagrant` to the `root` user. The use of a default `root_password` weakens the security of the database, as an attacker can obtain database credentials if the `root_password` is known to the public. To prevent this, the default value for `root_password` should be removed or set to a strong value. Also, the `grant_host_name` variable should not be left empty, as this variable is used to limit the scope of the `root` user's privileges to only the `grant_host"", 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
186,"class role::invitesignup { mediawiki::extension { 'invitesignup': needs_update => true, settings => [ '$wggrouppermissions[""sysop""][""invitesignup""] = true;', '$wgisgroups = [ ""sysop"" ]', ], } mediawiki::import::text { 'vagrantroleinvitesignup': source => 'puppet:///modules/role/invitesignup/vagrantroleinvitesignup.wiki', } }",0,1,"mediawiki::extension { 'invitesignup': needs_update => true, settings => [ '$wggrouppermissions[, mediawiki::import::text { 'vagrantroleinvitesignup': source => 'puppet:///modules/role/invitesignup/vagrantroleinvitesignup.wiki', }",CWE-937,"{'reason': 'There is a lack of access control in place. This is vulnerable to being able to manipulate the MediaWiki instance without the use of special permissions. Users who are not sysops are able to change sysop permissions and manipulate the MediaWiki instance.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
187,"class role::geshi { mediawiki::extension { 'syntaxhighlight_geshi': composer => true, } }",1,1,"class role::geshi { mediawiki::extension {'syntaxhighlight_geshi': composer => true, } }, mediawiki::extension {'syntaxhighlight_geshi': composer => true, }",CWE-22,"{'reason': 'Puppet does not have a composer function. Puppet uses modules and Puppet Forge for installing modules. Composer is a PHP dependency management tool which is used to install and manage PHP modules. The composer function is not used to install extensions and is used to manage composer modules, such as php composer extensions.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
188,"class zotero( $base_path, $log_file, ) { package { 'xulrunner-dev': ensure => present, before => service['zotero'], } file { $base_path: ensure => directory, before => service['zotero'], owner => $::share_owner, group => $::share_group, } git::clone{ 'mediawiki/services/zotero/translation-server': directory => ""${base_path}/translation-server"", require => file[$base_path], before => service['zotero'], } git::clone{ 'mediawiki/services/zotero/translators': directory => ""${base_path}/translators"", require => file[$base_path], before => service['zotero'], } file { '/etc/zotero': ensure => directory, } file { '/etc/zotero/defaults.js': ensure => present, content => template('zotero/defaults.js.erb'), require => git::clone['mediawiki/services/zotero/translation-server'], notify => service['zotero'], } file { $log_file: ensure => present, mode => '0666', owner => $::share_owner, group => $::share_group, } file { '/etc/init/zotero.conf': ensure => present, owner => 'root', group => 'root', mode => '0444', content => template('zotero/upstart.conf.erb'), notify => service['zotero'], } service::gitupdate { 'zotero_translation_server': dir => ""${base_path}/translation-server"", restart => true, service_name => 'zotero', } service::gitupdate { 'zotero_translators': dir => ""${base_path}/translators"", restart => true, service_name => 'zotero', } service { 'zotero': ensure => running, enable => true, hasstatus => true, hasrestart => true, provider => 'upstart', subscribe => file['/etc/init/zotero.conf'], } }",1,1,"file { '/etc/zotero':, file { '/etc/zotero/defaults.js':, service { 'zotero':, service::gitupdate {'zotero_translators':","CWE-20, CWE-22, CWE-295, CWE-325, CWE-327, CWE-329","{'reason': 'The misconfiguration label LLM \\', 'related_cwe': 'CWE-295; CWE-327; CWE-325; CWE-20; CWE-22; CWE-329', 'is_misconfiguration_related': 'Yes'}"
189,"class { '::glance::backend::file': multi_store => true, } class { '::glance::backend::swift': swift_store_user => 'demo', swift_store_key => 'secrete', multi_store => true, } class { '::glance::api': keystone_password => 'a_big_secret', stores => ['file', 'swift'], default_store => 'swift', multi_store => true, }",0,1,"class { '::glance::api': keystone_password => 'a_big_secret', stores => ['file','swift'], default_store =>'swift', multi_store => true, }, class { '::glance::backend::swift': swift_store_user => 'demo', swift_store_key =>'secrete', multi_store => true, }","CWE-256, CWE-257, CWE-258, CWE-259, CWE-260, CWE-261, CWE-262, CWE-263, CWE-264, CWE-265","{'reason': 'The script contains two classes for the same package, which may cause confusion when the script is used. However, the classes do not contain any security-relevant data or settings, such as credentials. Therefore, the misconfiguration is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
190,"class role::antispam { include ::role::abusefilter include ::role::antispoof include ::role::titleblacklist mediawiki::extension { 'spamblacklist': settings => { wglogspamblacklisthits => true, }, } }",0,1,mediawiki::extension,"CWE-20, CWE-295, CWE-732","{'reason': 'The mediawiki::extension misconfiguration could allow an attacker to abuse the Wikimedia software by spamming the system.', 'related_cwe': 'CWE-295, CWE-732', 'is_misconfiguration_related': 'Yes'}"
191,"class cinder::volume::glusterfs ( $glusterfs_shares, $glusterfs_backup_mount_point = $::os_service_default, $glusterfs_backup_share = $::os_service_default, $glusterfs_sparsed_volumes = $::os_service_default, $glusterfs_mount_point_base = $::os_service_default, $glusterfs_shares_config = '/etc/cinder/shares.conf', $extra_options = {}, ) { warning('usage of cinder::volume::glusterfs is deprecated, please use cinder::backend::glusterfs instead.') cinder::backend::glusterfs { 'default': glusterfs_shares => $glusterfs_shares, glusterfs_backup_mount_point => $glusterfs_backup_mount_point, glusterfs_backup_share => $glusterfs_backup_share, glusterfs_sparsed_volumes => $glusterfs_sparsed_volumes, glusterfs_mount_point_base => $glusterfs_mount_point_base, glusterfs_shares_config => $glusterfs_shares_config, extra_options => $extra_options, } }",1,1,"cinder::backend::glusterfs { 'default': glusterfs_shares => $glusterfs_shares, glusterfs_backup_mount_point => $glusterfs_backup_mount_point, glusterfs_backup_share => $glusterfs_backup_share, glusterfs_sparsed_volumes => $glusterfs_sparsed_volumes, glusterfs_mount_point_base =>, class cinder::volume::glusterfs ( $glusterfs_shares, $glusterfs_backup_mount_point = $::os_service_default, $glusterfs_backup_share = $::os_service_default, $glusterfs_sparsed_volumes = $::os_service_default, $glusterfs_mount_point_base = $::os_service_default, $glusterfs_shares_config = '/etc/cinder/shares.conf', $extra_options = {}, ) { warning('usage of cinder::volume::glusterfs is deprecated, please use cinder::backend::glusterfs instead.') cinder::backend::glusterfs { 'default': glusterfs_shares => $glusterfs_shares, glusterfs_backup_mount_point => $glusterfs_backup_mount_point, glusterfs_backup_share => $glusterfs_backup_share, glusterfs_sparsed_volumes => $glusterfs_sparsed_volumes, glusterfs_mount_point_base =>, extra_options => $extra_options, } }, extra_options => $extra_options, } },, glusterfs_mount_point_base => $glusterfs_mount_point_base, glusterfs_shares_config => $glusterfs_shares_config, extra_options => $extra_options, } }, glusterfs_mount_point_base => $glusterfs_mount_point_base, glusterfs_shares_config => $glusterfs_shares_config, extra_options => $extra_options, } },, glusterfs_shares_config => $glusterfs_shares_config, extra_options => $extra_options, } }, glusterfs_shares_config => $glusterfs_shares_config, extra_options => $extra_options, } },, warning('usage of cinder::volume::glusterfs is deprecated, please use cinder::backend::glusterfs instead.') cinder::backend::glusterfs { 'default': glusterfs_shares => $glusterfs_shares, glusterfs_backup_mount_point => $glusterfs_backup_mount_point, glusterfs_backup_share => $glusterfs_backup_share, glusterfs_sparsed_volumes => $glusterfs_sparsed_volumes, glusterfs_mount_point_base => $glusterfs_mount_point_base, glusterfs_shares_config => $glusterfs_shares_config, extra_options => $extra_options, } }",CWE-327,"{'reason': 'This misconfiguration is related to the CWE because it exposes the credentials needed to perform attacks.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
192,"class role::massaction { include role::mediawiki mediawiki::extension { 'massaction': needs_update => true, } }",0,1,"class role::massaction { include role::mediawiki }, mediawiki::extension {'massaction': needs_update => true, }","CWE-20, CWE-25","{'reason': 'A needs_update parameter can cause a security issue if used incorrectly. The needs_update parameter can be used in the mediawiki::extension class to update a massaction extension without a patch version check. This can result in an outdated extension being used on a system. Outdated extensions can contain security vulnerabilities.', 'related_cwe': 'CWE-20, CWE-25', 'is_misconfiguration_related': 'Yes'}"
193,"class sudoers::settings { include ::shared include users::root $group = $users::root::group $owner = $users::root::username $mode = ""440"" case $::operatingsystem { centos: { $rebootpath = ""/usr/bin/reboot"" } darwin, ubuntu: { $rebootpath = ""/sbin/reboot"" } } }",1,1,"case $::operatingsystem { centos: { $rebootpath = \, case $::operatingsystem { centos: { $rebootpath = \\, class sudoers::settings { include ::shared include users::root $group = $users::root::group $owner = $users::root::username $mode = \, class sudoers::settings { include ::shared include users::root $group = $users::root::group $owner = $users::root::username $mode = \\, darwin, ubuntu: { $rebootpath = \\, }} }","CWE-16, CWE-20","{'reason': 'CWE-16 is not related to this misconfiguration', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
194,"class swift::storage::all( $storage_local_net_ip, $devices = '/srv/node', $object_port = '6000', $container_port = '6001', $account_port = '6002', $object_pipeline = undef, $container_pipeline = undef, $allow_versions = false, $mount_check = true, $account_pipeline = undef, $log_facility = 'log_local2', $log_level = 'info', $log_udp_host = undef, $log_udp_port = undef, $log_requests = true, $incoming_chmod = 'du=rwx,g=rx,o=rx,fu=rw,g=r,o=r', $outgoing_chmod = 'du=rwx,g=rx,o=rx,fu=rw,g=r,o=r', $statsd_enabled = false, $log_statsd_host = 'localhost', $log_statsd_port = 8125, $log_statsd_default_sample_rate = '1.0', $log_statsd_sample_rate_factor = '1.0', $log_statsd_metric_prefix = '', ) { include ::swift::deps class { '::swift::storage': storage_local_net_ip => $storage_local_net_ip, } swift::storage::server { devices => $devices, storage_local_net_ip => $storage_local_net_ip, mount_check => $mount_check, log_level => $log_level, log_udp_host => $log_udp_host, log_udp_port => $log_udp_port, statsd_enabled => $statsd_enabled, log_statsd_host => $log_statsd_host, log_statsd_port => $log_statsd_port, log_statsd_default_sample_rate => $log_statsd_default_sample_rate, log_statsd_sample_rate_factor => $log_statsd_sample_rate_factor, log_statsd_metric_prefix => $log_statsd_metric_prefix, } swift::storage::server { $account_port: type => 'account', config_file_path => 'account-server.conf', pipeline => $account_pipeline, log_facility => $log_facility, log_requests => $log_requests, incoming_chmod => $incoming_chmod, outgoing_chmod => $outgoing_chmod, } swift::storage::server { $container_port: type => 'container', config_file_path => 'container-server.conf', pipeline => $container_pipeline, log_facility => $log_facility, allow_versions => $allow_versions, log_requests => $log_requests, incoming_chmod => $incoming_chmod, outgoing_chmod => $outgoing_chmod, } swift::storage::server { $object_port: type => 'object', config_file_path => 'object-server.conf', pipeline => $object_pipeline, log_facility => $log_facility, log_requests => $log_requests, incoming_chmod => $incoming_chmod, outgoing_chmod => $outgoing_chmod, } }",1,1,"incoming_chmod, log_facility, log_level, log_requests, log_statsd_host, log_statsd_port, mount_check, pipeline, statsd_enabled, storage_local_net_ip","CWE-119, CWE-19","{'reason': 'The script allows to set the log level, which will cause a leaky abstraction. This is a CWE-119 issue, which allows a user to modify the configuration.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
195,"class crm::tools( $dir, ) { $db_url = ""mysql://${::crm::db_user}:${::crm::db_pass}@localhost/${::crm::drupal_db}"" $audit_base = '/var/spool/audit' require_package('libmysqlclient-dev') git::clone { 'wikimedia/fundraising/tools': directory => $dir, } file { '/etc/fundraising': ensure => 'directory', mode => '0755', } file { '/etc/fundraising/silverpop_export.yaml': ensure => 'file', content => template('crm/silverpop_export.yaml.erb'), mode => '0644', require => file['/etc/fundraising'], } mysql::db { 'silverpop': } exec { 'create_silverpop_reference_data': command => ""/usr/bin/mysql -u '${::crm::db_user}' -p'${::crm::db_pass}' 'silverpop' < ${dir}/silverpop_export/silverpop_countrylangs.sql"", unless => ""/usr/bin/mysql -u '${::crm::db_user}' -p'${::crm::db_pass}' 'silverpop' -e 'select 1 from silverpop_countrylangs'"", require => [ git::clone['wikimedia/fundraising/tools'], mysql::db['silverpop'], ], } exec { 'frtools_python_requirements': command => ""pip install -r ${dir}/silverpop_export/requirements.txt"", require => [ git::clone['wikimedia/fundraising/tools'], package['libmysqlclient-dev'], ], } }",0,1,"file { '/etc/fundraising': ensure => 'directory', mode => '0755', }, file { '/etc/fundraising/silverpop_export.yaml': ensure => 'file', content => template('crm/silverpop_export.yaml.erb'), mode => '0644', require => file['/etc/fundraising'], }, git::clone { 'wikimedia/fundraising/tools': directory => $dir, }, mysql::db {'silverpop': }","CWE-22, CWE-306, CWE-319, CWE-89","{'reason': 'The issue is related to CWE-306. The script misconfiguration details are: \\', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
196,"exec { logoutput => 'on_failure' } package { 'curl': ensure => present } node 'keystone_sqlite' { class { '::keystone': debug => true, catalog_type => 'sql', admin_token => 'admin_token', } class { '::keystone::roles::admin': email => 'example@abc.com', password => 'changeme', } class { '::keystone::endpoint': public_url => ""http://${::fqdn}:5000/"", admin_url => ""http://${::fqdn}:35357/"", } } node keystone_mysql { class { '::mysql::server': } class { '::keystone::db::mysql': password => 'keystone', } class { '::keystone': debug => true, database_connection => 'mysql://keystone:keystone@127.0.0.1/keystone', catalog_type => 'sql', admin_token => 'admin_token', } class { '::keystone::roles::admin': email => 'test@puppetlabs.com', password => 'changeme', } } node keystone { class { '::keystone': debug => true, database_connection => 'mysql://keystone:password@127.0.0.1/keystone', catalog_type => 'sql', admin_token => 'admin_token', } class { '::keystone::db::mysql': password => 'keystone', } class { '::keystone::roles::admin': email => 'example@abc.com', password => 'changeme', } class { '::keystone::endpoint': public_url => ""http://${::fqdn}:5000/"", admin_url => ""http://${::fqdn}:35357/"", } } node default { fail(""could not find a matching node entry for ${clientcert}"") }",1,1,"class { '::keystone': debug => true, catalog_type =>'sql', admin_token => 'admin_token', }, class { '::keystone': debug => true, database_connection =>'mysql://keystone:keystone@127.0.0.1/keystone', catalog_type =>'sql', admin_token => 'admin_token', }, class { '::keystone': debug => true, database_connection =>'mysql://keystone:password@127.0.0.1/keystone', catalog_type =>'sql', admin_token => 'admin_token', }, class { '::keystone::db::mysql': password => 'keystone', }, class { '::keystone::endpoint': public_url =>, class { '::mysql::server': }","CWE-255, CWE-259, CWE-265","{'reason': ""1. The use of hardcoded passwords such as 'changeme' could indicate that the misconfiguration was caused by CWE-255 or CWE-265.\\n\\n2. The use of hard coded admin_token values such as 'admin_token' could indicate that the misconfiguration was caused by CWE-259."", 'related_cwe': 'CWE-255, CWE-265, CWE-259', 'is_misconfiguration_related': 'Yes'}"
197,class role::xhprofgui { include ::xhprofgui require_package('graphviz') },0,1,"include ::xhprofgui, require_package('graphviz')",CWE-668: Resource Management Errors,"{'reason': 'A resource management error may result in a vulnerability', 'related_cwe': 'CWE-668: Resource Management Errors', 'is_misconfiguration_related': 'Yes'}"
198,"class puppet { package { 'puppet': ensure => present, } service { 'puppet': ensure => stopped, enable => false } }",0,1,"class puppet { package { 'puppet': ensure => present, } service { 'puppet': ensure => stopped, enable => false } }, package { 'puppet': ensure => present, }, service { 'puppet': ensure => stopped, enable => false }","CWE-250: Execution with Unnecessary Privileges, CWE-255: Credentials Management Errors, CWE-264: Permissions, Privileges, and Access Control, CWE-269: Improper Privilege Management, CWE-275: Incorrect Default Permissions, CWE-306: Missing Authentication for Critical Function, CWE-311: Missing Total Memory Protection","{'reason': 'This issue is related to CWE-269: Improper Privilege Management because the puppet user is used to run the service. This is a bad practice and could lead to privilege escalation attacks. The service should be started as the root user to avoid these issues.', 'related_cwe': 'CWE-269', 'is_misconfiguration_related': 'Yes'}"
199,"class role::sitematrix { mediawiki::extension { 'sitematrix': settings => ""\$wgsitematrixsites['wiki']['host'] = 'www${mediawiki::multiwiki::base_domain}${::port_fragment}';"", } }",0,1,"(\$wgsitematrixsites['wiki']['host'], host, mediawiki::extension, mediawiki::multiwiki::base_domain, settings, sitematrix",CWE-22,"{'reason': ""Wikipedia's default behavior is to allow any user to read pages without restrictions, but to prevent anyone from creating new pages unless the user is logged in. The wiki software can be configured to create and modify pages without this restriction, which means that Wikipedia's pages are not read-only. Sitematrix is a security extension that allows administrators to configure Wikipedia to lock all pages as read-only."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
200,"class cinder::volume::nexenta ( $nexenta_user, $nexenta_password, $nexenta_host, $nexenta_volume = 'cinder', $nexenta_target_prefix = 'iqn:', $nexenta_target_group_prefix = 'cinder/', $nexenta_blocksize = '8k', $nexenta_sparse = true, $extra_options = {}, ) { warning('usage of cinder::volume::nexenta is deprecated, please use cinder::backend::nexenta instead.') cinder::backend::nexenta { 'default': nexenta_user => $nexenta_user, nexenta_password => $nexenta_password, nexenta_host => $nexenta_host, nexenta_volume => $nexenta_volume, nexenta_target_prefix => $nexenta_target_prefix, nexenta_target_group_prefix => $nexenta_target_group_prefix, nexenta_blocksize => $nexenta_blocksize, nexenta_sparse => $nexenta_sparse, extra_options => $extra_options, } }",0,1,"cinder::backend::nexenta, extra_options => $extra_options, nexenta_blocksize => $nexenta_blocksize, nexenta_host => $nexenta_host, nexenta_password => $nexenta_password, nexenta_sparse => $nexenta_sparse, nexenta_target_group_prefix => $nexenta_target_group_prefix, nexenta_target_prefix => $nexenta_target_prefix, nexenta_user => $nexenta_user, nexenta_volume => $nexenta_volume","CWE-306, CWE-310, CWE-311, CWE-312, CWE-522","{'reason': 'The misconfiguration is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
201,"notice('fuel-plugin-nsx-t: compute_nova_config.pp') include ::nova::params nova_config { 'neutron/service_metadata_proxy': value => 'true'; 'neutron/ovs_bridge': value => 'nsx-managed'; } service { 'nova-compute': ensure => running, name => $::nova::params::compute_service_name, enable => true, hasstatus => true, hasrestart => true, } nova_config<| |> ~> service['nova-compute']",0,1,"nova_config {\\\\n\\\\t\\\\n  'neutron/service_metadata_proxy': value => 'true';\\\\n\\\\t'neutron/ovs_bridge': value => 'nsx-managed';\\\\n}, nova_config {\\\\n\\\\t\\\\n  'neutron/service_metadata_proxy': value => 'true';\\\\n\\\\t\\\\n  'neutron/ovs_bridge': value => 'nsx-managed';\\\\n\\\\t\\\\n}, nova_config {\\n\\t\\n  'neutron/service_metadata_proxy': value => 'true';\\n\\t'neutron/ovs_bridge': value => 'nsx-managed';\\n}, nova_config {\n\t\n  'neutron/service_metadata_proxy': value => 'true';\n\t'neutron/ovs_bridge': value => 'nsx-managed';\n}, nova_config<| |> ~> service['nova-compute'], service {\\\\n\\\\t\\\\n  'nova-compute': ensure => running,\\\\n\\\\t\\\\n  name => $::nova::params::compute_service_name,\\\\n\\\\t\\\\n  enable => true,\\\\n\\\\t\\\\n  hasstatus => true,\\\\n\\\\t\\\\n  hasrestart => true,\\\\n\\\\t\\\\n}, service {\\n\\t\\n  'nova-compute': ensure => running,\\n\\t\\n  name => $::nova::params::compute_service_name,\\n\\t\\n  enable => true,\\n\\t\\n  hasstatus => true,\\n\\t\\n  hasrestart => true,\\n\\t\\n}",CWE-312,"{'reason': 'The script is misconfigured due to its reliance on the Nova plugin which has not been updated in the current codebase.  It is important that plugins be up to date and reflect best practices.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
202,"class buildmaster::queue { include ::config include buildmaster::settings include users::builder include packages::mozilla::python27 file { ""/etc/init.d/command_runner"": content => template(""buildmaster/command_runner.initd.erb""), notify => service[""command_runner""], mode => 755; ""/etc/init.d/pulse_publisher"": content => template(""buildmaster/pulse_publisher.initd.erb""), notify => service[""pulse_publisher""], mode => 755; ""${buildmaster::settings::queue_dir}/run_command_runner.sh"": ensure => absent; ""${buildmaster::settings::queue_dir}/run_pulse_publisher.sh"": ensure => absent; ""${buildmaster::settings::queue_dir}/passwords.py"": require => python::virtualenv[""${buildmaster::settings::queue_dir}""], content => template(""buildmaster/passwords.py.erb""), mode => 600, owner => ""${users::builder::username}"", group => ""${users::builder::username}"", show_diff => false; } service { ""command_runner"": hasstatus => true, require => [ file[""/etc/init.d/command_runner""], exec[""install-tools""], ], enable => true, ensure => running; ""pulse_publisher"": hasstatus => true, require => [ file[""/etc/init.d/pulse_publisher""], file[""${buildmaster::settings::queue_dir}/passwords.py""], exec[""install-tools""], ], enable => true, ensure => running; } python::virtualenv { ""$buildmaster::settings::queue_dir"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""buildbot==0.8.4-pre-moz2"", ""mozillapulse==.4"", ""carrot==0.10.7"", ""amqplib==0.6.1"", ""anyjson==0.3"", ""pytz==2011d"", ]; } define nrpe_custom { nrpe::custom { ""$name"": content => template(""buildmaster/${name}.erb""), } } nrpe_custom {[""pulse_publisher.cfg"", ""command_runner.cfg""]: } mercurial::repo { ""clone-tools"": hg_repo => ""${config::buildbot_tools_hg_repo}"", dst_dir => ""${buildmaster::settings::queue_dir}/tools"", user => ""${users::builder::username}"", branch => ""default""; } exec { ""install-tools"": require => [ file[""${buildmaster::settings::queue_dir}""], python::virtualenv[""${buildmaster::settings::queue_dir}""], mercurial::repo[""clone-tools""], ], creates => ""${buildmaster::settings::queue_dir}/lib/python2.7/site-packages/buildtools.egg-link"", command => ""${buildmaster::settings::queue_dir}/bin/python setup.py develop"", cwd => ""${buildmaster::settings::queue_dir}/tools"", user => ""${users::builder::username}"", group => ""${users::builder::group}""; } }",1,1,"amqplib==0.6.1, anyjson==0.3, buildbot==0.8.4-pre-moz2, buildmaster::queue, buildmaster::settings::queue_dir, carrot==0.10.7, include users::builder, mozillapulse==.4, packages::mozilla::python27::python, pytz==2011d",CWE-327,"{'reason': 'When the python version 2.7.7 is installed, the following is expected in the python site packages: * setuptools==16.0 * wheel==0.26.0 * pip==8.1.2 * virtualenv==15.1.0 * buildmaster==0.8.5-pre-moz2 * pytz==2019.1 * amqplib==0.6.1 * carrot==0.10.7 * mozillapulse==.4 * buildbot==0.8.5-pre-moz2 * anyjson==0.3 * requests==2.22.0 * python-dateutil==2.8.0 * backoff==1.8.0 * cert', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
203,"class mistral::api ( $allow_action_execution_deletion = $::os_service_default, $api_workers = $::os_service_default, $bind_host = $::os_service_default, $bind_port = $::os_service_default, $enabled = true, $manage_service = true, $package_ensure = present, $service_name = $::mistral::params::api_service_name, ) inherits mistral::params { include ::mistral::params include ::mistral::policy mistral_config<||> ~> service[$service_name] class['mistral::policy'] ~> service[$service_name] package['mistral-api'] -> class['mistral::policy'] package['mistral-api'] -> service[$service_name] package['mistral-api'] -> service['mistral-api'] package { 'mistral-api': ensure => $package_ensure, name => $::mistral::params::api_package_name, tag => ['openstack', 'mistral-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } if $service_name == $::mistral::params::api_service_name { service { 'mistral-api': ensure => $service_ensure, name => $::mistral::params::api_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => 'mistral-service', } } elsif $service_name == 'httpd' { include ::apache::params service { 'mistral-api': ensure => 'stopped', name => $::mistral::params::api_service_name, enable => false, tag => 'mistral-service', } class['mistral::db'] -> service[$service_name] service <<| title == 'httpd' |>> { tag +> 'mistral-service' } service['mistral-api'] -> service[$service_name] } else { fail('invalid service_name. either mistral/openstack-mistral-api for running as a standalone service, or httpd for being run by a httpd server') } mistral_config { 'api/api_workers' : value => $api_workers; 'api/host' : value => $bind_host; 'api/port' : value => $bind_port; 'api/allow_action_execution_deletion' : value => $allow_action_execution_deletion; } }",1,1,"mistral_config<||>, service['mistral-api']","CWE-20, CWE-732","{'reason': 'The `allow_action_execution_deletion` setting of the misconfiguration is related to CWE-732, which means that it is not related to CWE-20.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'No'}"
204,"define testfile($mode) { file { $name: mode => $mode, ensure => present } } testfile { ""/tmp/testing_component_requires2"": mode => 755 } file { ""/tmp/testing_component_requires1"": mode => 755, ensure => present, require => testfile[""/tmp/testing_component_requires2""] }",1,1,"755} testfile { \\, \, ensure => present, require => testfile[\\\, file { \, mode => 755} file { \\, name: mode => \, name: mode => \\, require => testfile[\\\\\\, testfile { \\",CWE-22,"{'reason': 'This misconfiguration is related to CWE-22. A misconfiguration like this one is vulnerable to symlink attacks. This vulnerability could potentially be exploited by any user with access to the system.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
205,"class murano::dashboard( $package_ensure = 'present', $dashboard_name = undef, $repo_url = undef, $enable_glare = false, $collect_static_script = '/usr/share/openstack-dashboard/manage.py', $metadata_dir = '/var/cache/murano-dashboard', $max_file_size = '5', $dashboard_debug_level = 'debug', $client_debug_level = 'error', $log_handler = 'file', $sync_db = true, ) { include ::murano::params package { 'murano-dashboard': ensure => $package_ensure, name => $::murano::params::dashboard_package_name, tag => ['openstack', 'murano-packages'], } concat { $::murano::params::local_settings_path: } concat::fragment { 'original_config': target => $::murano::params::local_settings_path, source => $::murano::params::local_settings_path, order => 1, } concat::fragment { 'murano_dashboard_section': target => $::murano::params::local_settings_path, content => template('murano/local_settings.py.erb'), order => 2, } exec { 'clean_horizon_config': command => ""sed -e '/^ onlyif => ""grep '^ path => [ '/bin/', '/sbin/', '/usr/bin/', '/usr/sbin/' ], } if $::os_package_type == 'ubuntu' { $collect_static_command = ""${collect_static_script} collectstatic --noinput"" } else { $collect_static_command = ""${collect_static_script} collectstatic --noinput --clear"" } exec { 'django_collectstatic': command => $collect_static_command, environment => [ ""apache_user=${::apache::params::user}"", ""apache_group=${::apache::params::group}"", ], refreshonly => true, } exec { 'django_compressstatic': command => ""${collect_static_script} compress --force"", environment => [ ""apache_user=${::apache::params::user}"", ""apache_group=${::apache::params::group}"", ], refreshonly => true, } if $sync_db { exec { 'django_syncdb': command => ""${collect_static_script} migrate --noinput"", environment => [ ""apache_user=${::apache::params::user}"", ""apache_group=${::apache::params::group}"", ], refreshonly => true, } exec['django_compressstatic'] ~> exec['django_syncdb'] ~> service <| title == 'httpd' |> } package['murano-dashboard'] -> exec['clean_horizon_config'] -> concat[$::murano::params::local_settings_path] -> service <| title == 'httpd' |> package['murano-dashboard'] ~> exec['django_collectstatic'] ~> exec['django_compressstatic'] ~> service <| title == 'httpd' |> }",1,1,"path => ['/bin/', '/sbin/', '/usr/bin/', '/usr/sbin/'], tag => [ 'openstack','murano-packages'], target => '/var/cache/murano-dashboard/metadata/0',","CWE-664, CWE-668","{'reason': 'No change in the path variable will be applied. Please check the code of the concordia library if you want to add any new directories to this array.', 'related_cwe': 'CWE-664', 'is_misconfiguration_related': 'No'}"
206,"class tripleo::profile::base::database::mongodb ( $mongodb_replset, $bootstrap_node = downcase(hiera('bootstrap_nodeid')), $step = hiera('step'), ) { if $step >= 2 { include ::mongodb::globals include ::mongodb::client include ::mongodb::server include ::tripleo::profile::base::database::mongodbcommon if $bootstrap_node == $::hostname { mongodb_replset { $mongodb_replset : members => $tripleo::profile::base::database::mongodbcommon::mongo_node_ips_with_port_nobr, } } } }",0,1,"if $bootstrap_node == $::hostname {, mongodb_replset { $mongodb_replset : members => $tripleo::profile::base::database::mongodbcommon::mongo_node_ips_with_port_nobr, }","CWE-601: Use of Client-Side Redirect, CWE-862: Missing Authorization","{'reason': ""It's not common for clients to be configured in the Puppet manifest. Client-side redirects should be prevented by validating the request before forwarding it. Clients are only configured in case of API requests. This misconfiguration has nothing to do with a missing authorization. It might be related to an insufficient authentication."", 'related_cwe': 'CWE-601, CWE-862', 'is_misconfiguration_related': 'Yes'}"
207,"define ceph::key ( $secret, $cluster = undef, $keyring_path = ""/etc/ceph/ceph.${name}.keyring"", $cap_mon = undef, $cap_osd = undef, $cap_mds = undef, $user = 'root', $group = 'root', $mode = '0600', $inject = false, $inject_as_id = undef, $inject_keyring = undef, ) { if $cluster { $cluster_option = ""--cluster ${cluster}"" } if $cap_mon { $mon_caps = ""--cap mon '${cap_mon}' "" } if $cap_osd { $osd_caps = ""--cap osd '${cap_osd}' "" } if $cap_mds { $mds_caps = ""--cap mds '${cap_mds}' "" } $caps = ""${mon_caps}${osd_caps}${mds_caps}"" if ! defined(file[$keyring_path]) { file { $keyring_path: ensure => file, owner => $user, group => $group, mode => $mode, selinux_ignore_defaults => true, require => package['ceph'], } } exec { ""ceph-key-${name}"": command => ""/bin/true set -ex ceph-authtool ${keyring_path} --name '${name}' --add-key '${secret}' ${caps}"", onlyif => ""/bin/true set -ex new_keyring=\$(mktemp) ceph-authtool \$new_keyring --name '${name}' --add-key '${secret}' ${caps} diff -n \$new_keyring ${keyring_path} | grep '<' rm \$new_keyring"", require => [ package['ceph'], file[$keyring_path], ], logoutput => true, } if $inject { if $inject_as_id { $inject_id_option = "" --name '${inject_as_id}' "" } if $inject_keyring { $inject_keyring_option = "" --keyring '${inject_keyring}' "" } ceph_config<||> -> exec[""ceph-injectkey-${name}""] ceph::mon<||> -> exec[""ceph-injectkey-${name}""] exec { ""ceph-injectkey-${name}"": command => ""/bin/true set -ex ceph ${cluster_option} ${inject_id_option} ${inject_keyring_option} auth import -i ${keyring_path}"", onlyif => ""/bin/true set -ex old_keyring=\$(mktemp) ceph ${cluster_option} ${inject_id_option} ${inject_keyring_option} auth get ${name} -o \$old_keyring || true diff -n \$old_keyring ${keyring_path} | grep '>' rm \$old_keyring"", require => [ package['ceph'], exec[""ceph-key-${name}""], ], logoutput => true, } } }",1,1,if! defined(file[$keyring_path]),CWE-22,"{'reason': 'If this statement fails, there is a misconfiguration within the code', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
208,include cinder_datera_driver::cinder,0,1,include cinder_datera_driver::cinder,"CWE-22, CWE-93, CWE-94","{'reason': 'The include command is used to pull in content from other files. This will import the classes defined in the other file. It is commonly used to bring in variables that are needed in the current manifest.', 'related_cwe': 'CWE-22, CWE-93, CWE-94', 'is_misconfiguration_related': 'No'}"
209,"class packages::libxcb1 { case $::operatingsystem { ubuntu: { package { ""libxcb1"": ensure => ""1.8.1-2ubuntu2.1mozilla1""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"case $::operatingsystem { ubuntu: { package { \, default: { fail(\\, ensure => \\, ensure => \\\\, fail(\\\\, fail(\\\\\\\\\\\\\, fail(\\\\\\\\\\\\\\\\\\\\\\, fail(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package { \, package { \\","CWE-18, CWE-19, CWE-20","{'reason': 'The provided code fails to provide any security-related logic, or performs no operations that are not clearly specified in the misconfiguration. It is important to note that security flaws can be introduced when developers do not implement the misconfiguration as intended.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
210,"class aws_manager::secrets { include ::config include aws_manager::settings include users::buildduty file { ""${aws_manager::settings::secrets_dir}"": ensure => directory, mode => 0700, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", require => python::virtualenv[""${aws_manager::settings::root}""]; ""${aws_manager::settings::secrets_dir}/cached_certs"": ensure => directory, mode => 0700, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", require => python::virtualenv[""${aws_manager::settings::root}""]; ""${users::buildduty::home}/.boto"": mode => 0600, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", show_diff => false, content => template(""$module_name/dot_boto.erb""); ""${users::buildduty::home}/.ssh/aws-ssh-key"": mode => 0600, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", show_diff => false, content => secret(""aws_manager_ssh_key""); ""${aws_manager::settings::secrets_dir}/aws-secrets.json"": mode => 0600, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", show_diff => false, content => template(""$module_name/aws-secrets.json.erb""); ""${aws_manager::settings::secrets_dir}/pk.pem"": mode => 0600, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", show_diff => false, content => secret(""aws_manager_signing_private_key""); ""${aws_manager::settings::secrets_dir}/cert.pem"": mode => 0600, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", show_diff => false, content => secret(""aws_manager_signing_certificate""); } }",1,1,"content => template(\, content => template(\\, include ::config, include users::buildduty",CWE-798,"{'reason': 'Secret data is in clear text in configuration files and can be accessed by anyone with the correct credentials to do so.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
211,"class toplevel::slave::releng::test::gpu inherits toplevel::slave::releng::test { class { gui: on_gpu => true, screen_width => 1600, screen_height => 1200, screen_depth => 32, refresh => 60; } }",0,1,"class toplevel::slave::releng::test::gpu inherits toplevel::slave::releng::test, class { gui: on_gpu => true, screen_width => 1600, screen_height => 1200, screen_depth => 32, refresh => 60; }","CWE-190, CWE-312","{'reason': 'Please provide reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-190, CWE-312', 'is_misconfiguration_related': 'No'}"
212,"class murano::logging( $debug = $::os_service_default, $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/murano', $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } $use_syslog_real = pick($::murano::use_syslog, $use_syslog) $use_stderr_real = pick($::murano::use_stderr, $use_stderr) $log_facility_real = pick($::murano::log_facility, $log_facility) $log_dir_real = pick($::murano::log_dir, $log_dir) $debug_real = pick($::murano::debug, $debug) oslo::log { 'murano_config': debug => $debug_real, use_syslog => $use_syslog_real, use_stderr => $use_stderr_real, log_dir => $log_dir_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, } }",0,1,puppet::logging,"CWE-200, CWE-209, CWE-259, CWE-312, CWE-319, CWE-532, CWE-732","{'reason': ""It's unclear how the misconfiguration is related to CWE-732."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
213,"class openstack_tasks::roles::controller { notice('modular: roles/controller.pp') $primary_controller = hiera('primary_controller') if $primary_controller { package { 'cirros-testvm' : ensure => 'installed', name => 'cirros-testvm', } include ::osnailyfacter::wait_for_keystone_backends class { '::osnailyfacter::wait_for_nova_backends': backends => ['nova-api'] } nova_flavor { 'm1.micro': ensure => present, ram => 64, disk => 0, vcpus => 1, } class['::osnailyfacter::wait_for_keystone_backends'] -> class['::osnailyfacter::wait_for_nova_backends'] -> nova_flavor['m1.micro'] } exec { logoutput => true } package { 'python-openstackclient' : ensure => installed, } sysctl::value { 'vm.swappiness': value => '10' } }",0,1,"class { '::osnailyfacter::wait_for_nova_backends': backends => ['nova-api'], exec { logoutput => true }, nova_flavor {'m1.micro': ensure => present, ram => 64, disk => 0, vcpus => 1, }, package {'python-openstackclient' : ensure => installed, }, primary_controller = hiera('primary_controller'), sysctl::value {'vm.swappiness': value => '10' }",CWE-522,"{'reason': 'This misconfiguration is related to the CWE, since it allows anyone with a valid token to change the disk size, a critical configuration of the system. However, the current misconfiguration allows to change the disk size from 0 to 50GB', 'related_cwe': 'CWE-522, CWE-319, CWE-863', 'is_misconfiguration_related': 'Yes'}"
214,"class neutron::plugins::ml2::arista( $eapi_host, $eapi_username, $eapi_password, $region_name = $::os_service_default, $sync_interval = $::os_service_default, $use_fqdn = $::os_service_default, ) { include ::neutron::deps require ::neutron::plugins::ml2 neutron_plugin_ml2 { 'ml2_arista/eapi_host' : value => $eapi_host; 'ml2_arista/eapi_username': value => $eapi_username; 'ml2_arista/eapi_password': value => $eapi_password; 'ml2_arista/region_name' : value => $region_name; 'ml2_arista/sync_interval': value => $sync_interval; 'ml2_arista/use_fqdn' : value => $use_fqdn; } }",0,1,"include ::neutron::deps, include ::neutron::plugins::ml2, neutron_plugin_ml2 {'ml2_arista/eapi_host' : value => $eapi_host;, neutron_plugin_ml2 {'ml2_arista/eapi_password': value => $eapi_password;, neutron_plugin_ml2 {'ml2_arista/eapi_username': value => $eapi_username;, neutron_plugin_ml2 {'ml2_arista/region_name' : value => $region_name;, neutron_plugin_ml2 {'ml2_arista/sync_interval': value => $sync_interval;, neutron_plugin_ml2 {'ml2_arista/use_fqdn' : value => $use_fqdn;, require ::neutron::plugins::ml2",CWE-476,"{'reason': 'EAPI credentials are saved in plain text in a Puppet manifest, which allows anyone with access to Puppet manifest files to access these credentials.', 'related_cwe': 'CWE-476', 'is_misconfiguration_related': 'Yes'}"
215,"class puppetmaster::hiera { include packages::mozilla::hiera_eyaml include config $puppetmaster_extsyncs = $::config::puppetmaster_extsyncs file { ""/etc/puppet/hiera.yaml"": content => template(""puppetmaster/hiera.yaml.erb""), require => class['packages::mozilla::hiera_eyaml'], notify => service['httpd']; ""/etc/hiera.yaml"": ensure => symlink, target => ""/etc/puppet/hiera.yaml""; [ ""/etc/hiera"", ""/etc/hiera/keys"", ""/etc/hiera/environments"" ]: ensure => directory, owner => puppet, group => puppetsync, mode => 0750; } file { ""/etc/cron.d/rsync-extlookup"": ensure => absent; } if ($puppetmaster::settings::is_distinguished) { file { '/etc/cron.d/rsync-secrets': ensure => absent } } else { $distinguished_master = $puppetmaster::settings::distinguished_master $puppetsync_home = $puppetmaster::settings::puppetsync_home file { '/etc/cron.d/rsync-secrets': content => template(""${module_name}/rsync-secrets.erb""); } } }",1,1,"class['packages::mozilla::hiera_eyaml'], content, file {\n        \, if (\, include config, module_name, puppet::config, puppetmaster::hiera, puppetmaster::settings, service['httpd']",CWE-306,"{'reason': 'This misconfiguration is related to the following CWE: CWE-306: Missing Encryption of Sensitive Data, as it is vulnerable to the threat vector: \\', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
216,"class users::global { include users::root include sudoers shellprofile::file { ""ps1"": content => template(""${module_name}/ps1.sh.erb""); ""timeout"": content => ""export tmout=86400""; } if ($::operatingsystem == ""darwin"") { case $macosx_productversion_major { 10.6,10.7,10.8: { darwinuser { ""administrator"": ensure => absent; } } default: { user { ""administrator"": ensure => present, password => secret(""root_pw_pbkdf2""), salt => secret(""root_pw_pbkdf2_salt""), iterations => secret(""root_pw_pbkdf2_iterations""); } sudoers::custom { 'administrator-reboot': user => ""administrator"", runas => 'root', command => $sudoers::settings::rebootpath; } } } } include shellprofile::settings file { ""${::shellprofile::settings::profile_d}/ps1.sh"": ensure => absent; } }",1,1,"file { \, if ($::operatingsystem == \\, include shellprofile::settings \\, include users::global \\, shellprofile::file { \, sudoers::custom { 'administrator-reboot': user => \, user { 'administrator': ensure => absent; \\, user { 'administrator': ensure => absent; \\\\, user { 'administrator': ensure => present, password => \\",CWE-798,"{'reason': 'administrator user is not used in a common sense way, but rather used to reset a root password. The administrator user may have other roles to play in the organization, such as a system administrator. Therefore, the administrator user may be used to reset root password in a case of emergency. The administrator user is not the owner of all systems in the organization. The administrator user may be used to reset the password of a user account with a lower privilege.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
217,"define cinder::backend::hp3par_iscsi( $hp3par_api_url, $hp3par_username, $hp3par_password, $san_ip, $san_login, $san_password, $hp3par_iscsi_ips, $volume_backend_name = $name, $volume_driver = 'cinder.volume.drivers.san.hp.hp_3par_iscsi.hp3pariscsidriver', $hp3par_iscsi_chap_enabled = false, $hp3par_snap_cpg = 'openstackcpg', $hp3par_snapshot_retention = 48, $hp3par_snapshot_expiration = 72, $manage_volume_type = false, $extra_options = {}, ) { if ($hp3par_snapshot_expiration <= $hp3par_snapshot_retention) { fail ('hp3par_snapshot_expiration must be greater than hp3par_snapshot_retention') } warning('the define cinder::backend::hp3par_iscsi is deprecated and will be removed after newton cycle, pleasse use the new define cinder::backend::hpe3par_iscsi.') cinder_config { ""${name}/volume_backend_name"": value => $volume_backend_name; ""${name}/volume_driver"": value => $volume_driver; ""${name}/hpe3par_username"": value => $hp3par_username; ""${name}/hpe3par_password"": value => $hp3par_password, secret => true; ""${name}/san_ip"": value => $san_ip; ""${name}/san_login"": value => $san_login; ""${name}/san_password"": value => $san_password, secret => true; ""${name}/hpe3par_iscsi_ips"": value => $hp3par_iscsi_ips; ""${name}/hpe3par_api_url"": value => $hp3par_api_url; ""${name}/hpe3par_iscsi_chap_enabled"": value => $hp3par_iscsi_chap_enabled; ""${name}/hpe3par_cpg_snap"": value => $hp3par_snap_cpg; ""${name}/hpe3par_snapshot_retention"": value => $hp3par_snapshot_retention; ""${name}/hpe3par_snapshot_expiration"": value => $hp3par_snapshot_expiration; } if $manage_volume_type { cinder_type { $volume_backend_name: ensure => present, properties => [""volume_backend_name=${volume_backend_name}""], } } create_resources('cinder_config', $extra_options) }",1,1,"cinder_config {, warning('the define cinder::backend::hp3par_iscsi is deprecated and will be removed after newton cycle, pleasse use the new define cinder::backend::hpe3par_iscsi.')","CWE-522, CWE-552","{'reason': 'The warning message provided indicates that the script is deprecated and will be removed. The user may not be aware of this, thus causing them to continue to use the script.', 'related_cwe': 'CWE-552', 'is_misconfiguration_related': 'Yes'}"
218,"class nova::compute::rbd ( $libvirt_rbd_user, $libvirt_rbd_secret_uuid = false, $libvirt_rbd_secret_key = undef, $libvirt_images_rbd_pool = 'rbd', $libvirt_images_rbd_ceph_conf = '/etc/ceph/ceph.conf', $rbd_keyring = 'client.nova', $ephemeral_storage = true, $manage_ceph_client = true, $ceph_client_ensure = 'present', ) { include ::nova::deps include ::nova::params if $manage_ceph_client { package { 'ceph-client-package': ensure => $ceph_client_ensure, name => $nova::params::ceph_client_package_name, tag => ['openstack'], } } nova_config { 'libvirt/rbd_user': value => $libvirt_rbd_user; } if $libvirt_rbd_secret_uuid { nova_config { 'libvirt/rbd_secret_uuid': value => $libvirt_rbd_secret_uuid; } file { '/etc/nova/secret.xml': content => template('nova/secret.xml-compute.erb'), require => anchor['nova::config::begin'], } exec { 'get-or-set virsh secret': command => '/usr/bin/virsh secret-define --file /etc/nova/secret.xml | /usr/bin/awk \'{print $2}\' | sed \'/^$/d\' > /etc/nova/virsh.secret', unless => ""/usr/bin/virsh secret-list | grep ${libvirt_rbd_secret_uuid}"", require => [file['/etc/nova/secret.xml'], service['libvirt']], } if $libvirt_rbd_secret_key { $libvirt_key = $libvirt_rbd_secret_key } else { $libvirt_key = ""$(ceph auth get-key ${rbd_keyring})"" } exec { 'set-secret-value virsh': command => ""/usr/bin/virsh secret-set-value --secret ${libvirt_rbd_secret_uuid} --base64 ${libvirt_key}"", unless => ""/usr/bin/virsh secret-get-value ${libvirt_rbd_secret_uuid} | grep ${libvirt_key}"", require => exec['get-or-set virsh secret'], before => anchor['nova::config::end'], } } if $ephemeral_storage { nova_config { 'libvirt/images_type': value => 'rbd'; 'libvirt/images_rbd_pool': value => $libvirt_images_rbd_pool; 'libvirt/images_rbd_ceph_conf': value => $libvirt_images_rbd_ceph_conf; } } else { nova_config { 'libvirt/images_rbd_pool': ensure => absent; 'libvirt/images_rbd_ceph_conf': ensure => absent; } } }",1,1,nova_config { 'libvirt/rbd_secret_uuid': value => $libvirt_rbd_secret_uuid; },CWE-502: Deserialization of Untrusted Data,"{'reason': 'The CWE states: Deserialization issues can occur when an application reads data, from a source, without sufficiently validating that source. In this case, data is read from virsh secret-define, with a grep filter to verify that the value set by virsh secret-set-value exists. If no grep is found, then the value is set. If the grep finds a value, the existing value is left untouched. The issue is that virsh secret-list will not necessarily be present in this step, leaving an opportunity for data to be set with no validation. If data exists, the grep will find it, and the virsh secret-set-value will not be called. The only concern is that data is able to be set without validation. This issue', 'related_cwe': 'CWE-502: Deserialization of Untrusted Data', 'is_misconfiguration_related': 'Yes'}"
219,"class designate::db::mysql( $password, $dbname = 'designate', $user = 'designate', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef, ) { ::openstacklib::db::mysql { 'designate': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['designate'] ~> exec<| title == 'designate-dbsync' |> }",1,1,"allowed_hosts => \\\\$allowed_hosts, } ::openstacklib::db::mysql['designate'] ~> exec<| title == 'designate-dbsync' |>, allowed_hosts => \\\\\\\\$\$allowed_hosts, } ::openstacklib::db::mysql['designate'] ~> exec<| title == 'designate-dbsync' |>, charset => \\$charset, collate => \\$collate,, class designate::db::mysql( \\$password, \\$dbname = 'designate', \\$user = 'designate', \\$host = '127.0.0.1', \\$charset = 'utf8', \\$collate = 'utf8_general_ci', \\$allowed_hosts = undef, ) {, class designate::db::mysql( \\\\$password, \\\\$dbname = 'designate', \\\\$user = 'designate', \\\\$host = '127.0.0.1', \\\\$charset = 'utf8', \\\\$collate = 'utf8_general_ci', \\\\$allowed_hosts = undef, ) {, dbname => \\\\\\\\$dbname,, host => \\\\$host,, password_hash => mysql_password(\$password),, password_hash => mysql_password(\\\$password),, user => \\\\\\\\$user,",CWE-312,"{'reason': 'The script has a user-defined parameter called `allowed_hosts` that specifies a list of allowed hosts. If this is not properly configured, a malicious user could use a host not on the allowed list and cause a denial of service. By checking this parameter, the script is protecting against CVE-2020-1993.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
220,"class runner::tasks::clobber($runlevel=3) { include runner runner::task { ""${runlevel}-clobber"": content => template(""${module_name}/tasks/clobber.erb""); } }",0,1,"class runner::tasks::clobber($runlevel=3) { include runner runner::task {, content => template(\, content => template(\\, content => template(\\\\, content => template(\\\\\\\\\\\\, content => templateinclude runner runner::task {",CWE-117,"{'reason': 'Misconfiguration is related to CWE-117: Improper Control of Numeric Range, which indicates when a software system accepts numerical values but does not perform proper checks to ensure that the data is within the bounds of the accepted range.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
221,class {{cookiecutter.project_name}} { include ::{{cookiecutter.project_name}}::params },0,1,"class {{cookiecutter.project_name}}, include ::{{cookiecutter.project_name}}::params","CWE-117, CWE-118, CWE-119, CWE-120, CWE-121, CWE-122, CWE-123, CWE-124","{'reason': ""This misconfiguration is a security misconfiguration issue related to CWE-118 because the script uses the Puppet 'include' statement. Including the Puppet manifest is a common security misconfiguration issue where Puppet is used as a build tool, rather than being used for its intended purpose. By including the manifest in the script, developers may accidentally expose sensitive information, such as usernames and passwords, to unintended users. This could lead to unauthorized access to the Puppet server and unauthorized modification of Puppet configuration."", 'related_cwe': 'CWE-118', 'is_misconfiguration_related': 'Yes'}"
222,"class tripleo::profile::base::swift::ringbuilder ( $replicas, $build_ring = true, $devices = undef, $step = hiera('step'), $swift_zones = '1', $raw_disk_prefix = 'r1z1-', $raw_disks = [], $swift_storage_node_ips = hiera('swift_storage_node_ips', []), ) { if $step >= 2 { include ::swift } if $step >= 3 { validate_bool($build_ring) if $build_ring { if $devices { $device_array = strip(split(rstrip($devices), ',')) } else { $device_array = tripleo_swift_devices($raw_disk_prefix, $swift_storage_node_ips, $raw_disks) } swift::ringbuilder::create{ ['object', 'account', 'container']: replicas => min(count($device_array), $replicas), } -> tripleo::profile::base::swift::add_devices {$device_array: swift_zones => $swift_zones, } -> swift::ringbuilder::rebalance{ ['object', 'account', 'container']: seed => 999, } ring_object_device<| |> ~> exec['rebalance_object'] ring_object_device<| |> ~> exec['rebalance_account'] ring_object_device<| |> ~> exec['rebalance_container'] } } }",0,1,"ring_object_device<| |> ~> exec['rebalance_account'], ring_object_device<| |> ~> exec['rebalance_container'], ring_object_device<| |> ~> exec['rebalance_object'], swift::ringbuilder::create, swift::ringbuilder::rebalance, swift::ringbuilder::rebalance {, tripleo::profile::base::swift::add_devices, tripleo::profile::base::swift::add_devices {",CWE-532,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
223,"class tripleo::profile::base::ceph::client ( $step = hiera('step'), ) { include ::tripleo::profile::base::ceph if $step >= 2 { include ::ceph::profile::client } }",0,1,"class tripleo::profile::base::ceph::client ( $step = hiera('step'), ) { include ::tripleo::profile::base::ceph if $step >= 2 { include ::ceph::profile::client } }, include ::ceph::profile::client",CWE-1020,"{'reason': 'This is an example of a related misconfiguration.', 'related_cwe': 'CWE-1020', 'is_misconfiguration_related': 'Yes'}"
224,"class users::root::setup($home, $username, $group) { anchor { 'users::root::setup::begin': ; 'users::root::setup::end': ; } include ::config anchor['users::root::setup::begin'] -> python::user_pip_conf { $username: homedir => $home, group => $group; } -> anchor['users::root::setup::end'] anchor['users::root::setup::begin'] -> ssh::userconfig { $username: home => $home, group => $group, cleartext_password => secret('root_pw_cleartext'), authorized_keys => $::config::admin_users, authorized_keys_allows_extras => true, } -> anchor['users::root::setup::end'] if ($::operatingsystem == ubuntu) { file { ""$home/.bashrc"": owner => $username, group => $group, source => ""puppet:///modules/users/ubuntu-root-bashrc""; } } }",0,1,"authorized_keys => $::config::admin_users,, authorized_keys_allows_extras => true,, cleartext_password => secret('root_pw_cleartext'),, include ::config","CWE-256, CWE-276","{'reason': 'CWE-256, CWE-276: This user should not have sudo access without two factor authentication. This could cause data exfiltration and denial of service.', 'related_cwe': 'CWE-256, CWE-276', 'is_misconfiguration_related': 'Yes'}"
225,"class neutron::services::lbaas ( $cert_manager_type = $::os_service_default, $cert_storage_path = $::os_service_default, $barbican_auth = $::os_service_default, $ensure_lbaas_driver_package = 'present', $service_providers = $::os_service_default, $package_ensure = false, ) { include ::neutron::deps include ::neutron::params if $ensure_lbaas_driver_package { ensure_packages(['python-neutron-lbaas'], { ensure => $ensure_lbaas_driver_package, tag => ['openstack', 'neutron-package'] }) } neutron_config { 'certificates/cert_manager_type': value => $cert_manager_type; 'certificates/storage_path': value => $cert_storage_path; 'certificates/barbican_auth': value => $barbican_auth; } if !is_service_default($service_providers) { warning('service_providers in neutron::services::lbaas is deprecated in newton release, please use service provider in neutron::server class') } if $package_ensure { warning('package ensure is deprecated. the neutron::agents::lbaas class should be used to install the agent') ensure_resource( 'package', 'neutron-lbaasv2-agent', { ensure => $package_ensure, name => $::neutron::params::lbaasv2_agent_package, tag => ['openstack', 'neutron-package'], }) } if !is_service_default($service_providers) { neutron_lbaas_service_config { 'service_providers/service_provider': value => $service_providers, } } }",1,1,"barbican_auth, ensure_packages, lbaasv2_agent_package, neutron_config, package_ensure, service_provider, warning",CWE-287,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
226,"class trove( $nova_proxy_admin_pass, $default_transport_url = $::os_service_default, $notification_transport_url = $::os_service_default, $notification_driver = $::os_service_default, $notification_topics = $::os_service_default, $rabbit_host = $::os_service_default, $rabbit_hosts = $::os_service_default, $rabbit_password = $::os_service_default, $rabbit_port = $::os_service_default, $rabbit_userid = $::os_service_default, $rabbit_virtual_host = $::os_service_default, $rabbit_use_ssl = $::os_service_default, $rabbit_ha_queues = $::os_service_default, $rabbit_notification_topic = $::os_service_default, $kombu_ssl_ca_certs = $::os_service_default, $kombu_ssl_certfile = $::os_service_default, $kombu_ssl_keyfile = $::os_service_default, $kombu_ssl_version = $::os_service_default, $kombu_reconnect_delay = $::os_service_default, $amqp_durable_queues = $::os_service_default, $amqp_server_request_prefix = $::os_service_default, $amqp_broadcast_prefix = $::os_service_default, $amqp_group_request_prefix = $::os_service_default, $amqp_container_name = $::os_service_default, $amqp_idle_timeout = $::os_service_default, $amqp_trace = $::os_service_default, $amqp_ssl_ca_file = $::os_service_default, $amqp_ssl_cert_file = $::os_service_default, $amqp_ssl_key_file = $::os_service_default, $amqp_ssl_key_password = $::os_service_default, $amqp_allow_insecure_clients = $::os_service_default, $amqp_sasl_mechanisms = $::os_service_default, $amqp_sasl_config_dir = $::os_service_default, $amqp_sasl_config_name = $::os_service_default, $amqp_username = $::os_service_default, $amqp_password = $::os_service_default, $database_connection = undef, $database_idle_timeout = undef, $database_max_retries = undef, $database_retry_interval = undef, $database_min_pool_size = undef, $database_max_pool_size = undef, $database_max_overflow = undef, $rpc_backend = 'rabbit', $nova_compute_url = false, $nova_proxy_admin_user = 'admin', $nova_proxy_admin_tenant_name = 'admin', $control_exchange = 'trove', $cinder_url = false, $swift_url = false, $neutron_url = false, $os_region_name = undef, $nova_compute_service_type = 'compute', $cinder_service_type = 'volumev2', $swift_service_type = 'object-store', $heat_service_type = 'orchestration', $neutron_service_type = 'network', $use_neutron = true, $package_ensure = 'present', ) { include ::trove::deps include ::trove::params if $nova_compute_url { trove_config { 'default/nova_compute_url': value => $nova_compute_url } } else { trove_config { 'default/nova_compute_url': ensure => absent } } if $cinder_url { trove_config { 'default/cinder_url': value => $cinder_url } } else { trove_config { 'default/cinder_url': ensure => absent } } if $swift_url { trove_config { 'default/swift_url': value => $swift_url } } else { trove_config { 'default/swift_url': ensure => absent } } if $neutron_url { trove_config { 'default/neutron_url': value => $neutron_url } } else { trove_config { 'default/neutron_url': ensure => absent } } package { 'trove': ensure => $package_ensure, name => $::trove::params::common_package_name, tag => ['openstack', 'trove-package'], } }",1,1,"database_connection = undef, database_idle_timeout = undef, database_max_overflow = undef, database_max_pool_size = undef, database_max_retries = undef, database_min_pool_size = undef, database_retry_interval = undef, neutron_url = false, nova_compute_url = false, swift_url = false",CWE-287,"{'reason': 'I am related to CWE-287', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
227,"class jacuzzi_metadata { include packages::mozilla::py27_mercurial $python = $::packages::mozilla::python27::python file { ""/usr/local/bin/jacuzzi_metadata.py"": owner => ""root"", mode => 0755, source => ""puppet:///modules/jacuzzi_metadata/jacuzzi_metadata.py"", require => class['packages::mozilla::python27']; } case $::operatingsystem { ubuntu, centos: { file { ""/etc/init.d/jacuzzi_metadata"": require => file[""/usr/local/bin/jacuzzi_metadata.py""], content => template(""jacuzzi_metadata/jacuzzi_metadata.initd.erb""), mode => 0755, owner => ""root"", notify => service[""jacuzzi_metadata""]; } service { ""jacuzzi_metadata"": require => [ file[""/etc/init.d/jacuzzi_metadata""], file[""/usr/local/bin/jacuzzi_metadata.py""], ], hasstatus => false, enable => true; } exec { ""get_jacuzzi_metadata"": require => file[""/usr/local/bin/jacuzzi_metadata.py""], creates => ""/etc/jacuzzi_metadata.json"", user => ""root"", command => ""$python /usr/local/bin/jacuzzi_metadata.py -o /etc/jacuzzi_metadata.json""; } } default: { exec { ""get_jacuzzi_metadata"": require => file[""/usr/local/bin/jacuzzi_metadata.py""], user => ""root"", command => ""$python /usr/local/bin/jacuzzi_metadata.py -o /etc/jacuzzi_metadata.json""; } } } }",0,1,"command => \$python /usr/local/bin/jacuzzi_metadata.py -o /etc/jacuzzi_metadata.json;, command => \\$python /usr/local/bin/jacuzzi_metadata.py -o /etc/jacuzzi_metadata.json;, content => template(, content => template(\, exec { \, hasstatus => false, enable => true;, include packages::mozilla::py27_mercurial, user => \",CWE-200,"{'reason': 'This command line is vulnerable to command injection and may be exploited by an adversary to modify or replace the command to be executed by the exec resource.', 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
228,"class lma_collector::collectd::hypervisor ( $user, $password, $tenant, $keystone_url, $timeout = $lma_collector::params::openstack_client_timeout, $pacemaker_master_resource = undef, $cpu_allocation_ratio = $lma_collector::params::nova_cpu_allocation_ratio, ) inherits lma_collector::params { include lma_collector::collectd::python_openstack_base $config = { 'username' => ""\""${user}\"""", 'password' => ""\""${password}\"""", 'tenant' => ""\""${tenant}\"""", 'keystoneurl' => ""\""${keystone_url}\"""", 'timeout' => ""\""${timeout}\"""", 'cpuallocationratio' => ""\""${cpu_allocation_ratio}\"""", } if $pacemaker_master_resource { $real_config = merge($config, {'dependsonresource' => ""\""${pacemaker_master_resource}\""""}) } else { $real_config = $config } lma_collector::collectd::python { 'hypervisor_stats': config => $real_config, } }",0,1,"config => $real_config,}, keystone_url,},, keystoneurl =>","CWE-601, CWE-602","{'reason': ""keystone_url,},, keystoneurl => This is not a typo and should be treated as a misconfiguration, as keystone_url is defined as a variable elsewhere in the file and is used as a parameter for another task in the file. By adding a trailing comma, the keystoneurl key-value pair is added to the task's configuration, creating an unnecessary configuration that is unused in the task and the variable defined earlier in the file. If the trailing comma is removed, the keystoneurl key-value pair will be removed from the task's configuration, which will result in the task using the correct configuration, as the keystone_url variable defined earlier in the file is used as a parameter for another task in the file. keystoneurl"", 'related_cwe': 'CWE-601, CWE-602', 'is_misconfiguration_related': 'Yes'}"
229,class { '::osnailyfacter::cluster::cluster' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,class { '::osnailyfacter::cluster::cluster' :} class { '::osnailyfacter::upgrade::restart_services' :},CWE-25,"{'reason': 'This is an intentional misconfiguration.', 'related_cwe': 'CWE-25', 'is_misconfiguration_related': 'Yes'}"
230,"class glance::cache::pruner( $minute = '*/30', $hour = '*', $monthday = '*', $month = '*', $weekday = '*', $command_options = '', ) { include ::glance::deps include ::glance::params cron { 'glance-cache-pruner': command => ""${glance::params::cache_pruner_command} ${command_options}"", environment => 'path=/bin:/usr/bin:/usr/sbin', user => 'glance', minute => $minute, hour => $hour, monthday => $monthday, month => $month, weekday => $weekday, require => anchor['glance::config::end'], } }",0,1,"command =>, cron { 'glance-cache-pruner':, environment => 'path=/bin:/usr/bin:/usr/sbin',, include ::glance::deps, include ::glance::params, minute => $minute, hour => $hour,, month => $month, weekday => $weekday,, monthday => $monthday,, require => anchor['glance::config::end'], }, user => 'glance',",CWE-601,"{'reason': 'The use of wildcard values in the cron jobs, when misconfigured, can make the system vulnerable to injection attacks, and cause it to run as root.', 'related_cwe': 'CWE-601, CWE-78', 'is_misconfiguration_related': 'Yes'}"
231,"class openstack_integration::ceph { include ::openstack_integration::config if $::openstack_integration::config::ipv6 { $ms_bind_ipv6 = true } else { $ms_bind_ipv6 = undef } class { '::ceph::profile::params': fsid => '7200aea0-2ddd-4a32-aa2a-d49f66ab554c', manage_repo => false, ms_bind_ipv6 => $ms_bind_ipv6, authentication_type => 'cephx', mon_host => $::openstack_integration::config::ip_for_url, mon_initial_members => $::hostname, osd_pool_default_size => '1', osd_pool_default_min_size => '1', mon_key => 'aqd7kyjqqgoobhaaqrpaqsopswprrfmmomzvdw==', client_keys => { 'client.admin' => { 'secret' => 'aqd7kyjqqgoobhaaqrpaqsopswprrfmmomzvdw==', 'mode' => '0600', 'cap_mon' => 'allow *', 'cap_osd' => 'allow *', 'cap_mds' => 'allow *', }, 'client.bootstrap-osd' => { 'secret' => 'aqd7kyjqqgoobhaaqrpaqsopswprrfmmomzvdw==', 'keyring_path' => '/var/lib/ceph/bootstrap-osd/ceph.keyring', 'cap_mon' => 'allow profile bootstrap-osd', }, 'client.openstack' => { 'secret' => 'aqd7kyjqqgoobhaaqrpaqsopswprrfmmomzvdw==', 'mode' => '0644', 'cap_mon' => 'allow r', 'cap_osd' => 'allow class-read object_prefix rbd_children, allow rwx pool=cinder, allow rwx pool=nova, allow rwx pool=glance, allow rwx pool=gnocchi', }, }, osds => { '/var/lib/ceph/data' => {}, }, } $ceph_pools = ['glance', 'nova', 'cinder', 'gnocchi'] ceph::pool { $ceph_pools: } class { '::ceph::profile::mon': } class { '::ceph::profile::osd': } $ceph_extra_config = { 'client/rbd_default_features' => { value => '15' }, 'global/osd_journal_size' => { value => '100' }, 'global/osd_max_object_namespace_len' => { value => '64' }, 'global/osd_max_object_name_len' => { value => '256' }, } class { '::ceph::conf': args => $ceph_extra_config, } }",1,1,ceph::pool { $ceph_pools: },"CWE-287, CWE-295","{'reason': 'No misconfiguration found related to CWE-287 or CWE-295. This is a new issue that needs to be added to CWE. A new issue can be proposed to the list.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
232,"class nginx { include apt apt::ppa { 'ppa:nginx/stable': } package { 'nginx': ensure => present, name => 'nginx-extras', } service { 'nginx': ensure => running, enable => true, hasstatus => true, hasrestart => true, require => package['nginx'], } file { require => package['nginx'], notify => service['nginx'], } file { '/etc/nginx/nginx.conf': source => 'puppet:///modules/nginx/nginx.conf', } file { '/etc/nginx/mime.types': source => 'puppet:///modules/nginx/mime.types', } file { '/etc/nginx/sites': ensure => 'directory', } file { '/etc/logrotate.d/nginx': source => 'puppet:///modules/nginx/logrotate' } }",1,1,"apt::ppa {\\n  'ppa:nginx/stable':\\n}\\n, file { '/etc/logrotate.d/nginx':\n  ensure => 'directory',\n  source => 'puppet:///modules/nginx/logrotate'\n}, file { '/etc/nginx/mime.types':\\\\n  source => 'puppet:///modules/nginx/mime.types',\\\\n}\\\\n, file { '/etc/nginx/nginx.conf':\\\\n  source => 'puppet:///modules/nginx/nginx.conf',\\\\n}\\\\n, file { '/etc/nginx/sites':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ensure => 'directory',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, file { '/etc/nginx/sites':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ensure => 'directory',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, file { '/etc/nginx/sites':\\\\\\\\\\\\\\\\n  ensure => 'directory',\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n, file { '/etc/nginx/sites':\\\\\\\\n  ensure => 'directory',\\\\\\\\n}\\\\\\\\n, file { '/etc/nginx/sites':\\\\n  ensure => 'directory',\\\\n}\\\\\\\\n, package { 'nginx':\\n  ensure => present,\\n  name => 'nginx-extras',\\n}\\\\n",CWE-264,"{'reason': '1', 'related_cwe': 'CWE-264', 'is_misconfiguration_related': 'Yes'}"
233,"notice('fuel-plugin-nsx-t: create-repo.pp') include ::nsxt::params $settings = hiera($::nsxt::params::hiera_key) $managers = $settings['nsx_api_managers'] $username = $settings['nsx_api_user'] $password = $settings['nsx_api_password'] class { '::nsxt::create_repo': managers => $managers, username => $username, password => $password, }",0,1,"class { '::nsxt::create_repo': managers => $managers,, notice('fuel-plugin-nsx-t: create-repo.pp') include ::nsxt::params, password => $password,, username => $username,, }","CWE-252, CWE-256","{'reason': 'Managers, username, password, and the class being defined are all included in the class declaration. This is an instance of an empty argument. Empty argument instances could be used to store user-input or other user-defined values that could later be used in a security context. If this user-input value is not appropriately validated or sanitized, an attacker could execute arbitrary code or take actions that would be denied under normal circumstances.\\n\\nManagers, username, and password are examples of user-input values that could be used to attack Puppet and ultimately an impacted resource if not validated or sanitized.', 'related_cwe': 'CWE-256', 'is_misconfiguration_related': 'Yes'}"
234,"class cluster::ntp_ocf inherits ::ntp { $primitive_type = 'ns_ntp' $complex_type = 'clone' $complex_metadata = { 'interleave' => 'true', } $metadata = { 'migration-threshold' => '3', 'failure-timeout' => '120', } $parameters = { 'ns' => 'vrouter', } $operations = { 'monitor' => { 'interval' => '20', 'timeout' => '10' }, 'start' => { 'interval' => '0', 'timeout' => '30' }, 'stop' => { 'interval' => '0', 'timeout' => '30' }, } pcmk_colocation { 'ntp-with-vrouter-ns' : ensure => 'present', score => 'infinity', first => 'clone_p_vrouter', second => ""clone_p_${service_name}"", } pacemaker::service { $service_name : primitive_type => $primitive_type, parameters => $parameters, metadata => $metadata, operations => $operations, complex_metadata => $complex_metadata, complex_type => $complex_type, prefix => true, } pcmk_resource[""p_${service_name}""] -> pcmk_colocation['ntp-with-vrouter-ns'] -> service[$service_name] }",1,1,"\\n, complex_metadata => $complex_metadata,\\\n, complex_type => $complex_type,\\\n, metadata => $metadata,\\\\\\n, operations => $operations,\\\\\\\\\\\\n, pacemaker::service {\n, parameters => $parameters,\\\\\\\\\\\\\\\\\\\\\\\\n, prefix => trueprimitive_type => $primitive_type,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, service_name : primitive_type => $primitive_type,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n",CWE-16: Code Injection,"{'reason': 'Code injection issue present in the script that allows an unauthenticated attacker to inject arbitrary code into the system.', 'related_cwe': 'CWE-16', 'is_misconfiguration_related': 'Yes'}"
235,"class swift::auth_file ( $admin_tenant, $admin_password, $admin_user = 'admin', $auth_url = 'http://127.0.0.1:5000/v2.0/' ) { include ::swift::deps file { '/root/swiftrc': ensure => file, owner => 'root', group => 'root', mode => '0600', tag => 'swift-file', content => "" export st_user=${admin_tenant}:${admin_user} export st_key=${admin_password} export st_auth=${auth_url} "", } }",0,1,"class swift::auth_file ( $admin_tenant, $admin_password, $admin_user = 'admin', $auth_url = 'http://127.0.0.1:5000/v2.0/' ), export st_user=\${admin_tenant}:\${admin_user} export st_key=\${admin_password} export st_auth=\${auth_url}, export st_user=\\${admin_tenant}:\\${admin_user} export st_key=\\${admin_password} export st_auth=\\${auth_url}, file { '/root/swiftrc': ensure => file, owner => 'root', group => 'root', mode => '0600', tag =>'swift-file', content => \, file { '/root/swiftrc': ensure => file, owner => 'root', group => 'root', mode => '0600', tag =>'swift-file', content => \\, include ::swift::deps",CWE-22,"{'reason': 'The misconfiguration is related to CWE-22. The root of the problem is the misconfiguration of a file containing credentials (st_user). This file contains tenant and username information (st_user=${admin_tenant}:${admin_user}) used by a service in Swift to authenticate its requests. If this file is accessed, and the misconfiguration is not fixed, an attacker can assume the identity of the service.', 'related_cwe': 'CWE-22, CWE-252, CWE-259, CWE-307, CWE-313, CWE-316, CWE-318, CWE-319, CWE-322, CWE-384, CWE-400, CWE-401, CWE-403, CWE-404, CWE-408, CWE-409, CWE-416, CWE-419, CWE-420, CWE-444, CWE-479, CWE-479, CWE-482, CWE-483, CWE-488, CWE-489, CWE-490, CWE-491, CWE-493, CWE-502, CWE-506, CWE-514, CWE-514, CWE-518, CWE-519, CWE-521, CWE-522, CWE', 'is_misconfiguration_related': 'Yes'}"
236,class tripleo::profile::base::ui () { package {'openstack-tripleo-ui': } include ::apache },0,1,"include ::apache, package {\n\t\t\t\t\t\t\t\t\t'openstack-tripleo-ui':\n\t\t\t\t\t\t\t\t\t\t}",CWE-22,"{'reason': 'The misconfiguration can result in open source packages being compromised, which can lead to exposure of sensitive information (e.g., source code, configuration, private keys, etc.) and/or loss of functionality of the affected package. This issue is related to the given CWE due to the possibility of malicious attackers injecting rogue packages that compromise legitimate open source packages.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
237,"class dirs::installersource::puppetagain_pub_build_mozilla_org::msis { include dirs::installersource file { ""$env_systemdrive/installersource/puppetagain.pub.build.mozilla.org/msis"": ensure => directory, } }",0,1,"class, dirs::installersource, ensure => directory,, file {, include, msis, puppetagain_pub_build_mozilla_org, }, },",CWE-22,"{'reason': 'The directory is created by the file type in the script', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
238,"file { owner => 'root', group => 'root', mode => '0644', } node 'translatewiki.net' { include base include puppet include sshd include sudo include users include awstats include base::web1 include hhvm include logrotate include mariadb include memcached include nginx::sites include eximconf include eximconf::web1 include mailmanconf include kitanonl class { 'backup': databases => ['translatewiki_net'], } class { 'wiki': config => '/home/betawiki/config', user => 'betawiki', } sysctl { 'net.ipv4.tcp_window_scaling': value => '1' } sysctl { 'net.ipv4.tcp_slow_start_after_idle': value => '0' } sysctl { 'net.ipv4.tcp_fastopen': value => '3' } } node 'v220150764426371.yourvserver.net' { include base include puppet include sshd include sudo include users include base::es include eximconf include eximconf::es include profile::mwelasticsearch include mariadb }",1,1,"class { 'backup': databases => ['translatewiki_net'], }, file { owner => 'root', group => 'root', mode => '0644', }, sysctl { 'net.ipv4.tcp_fastopen': value => '3' }, sysctl { 'net.ipv4.tcp_slow_start_after_idle': value => '0' }, sysctl { 'net.ipv4.tcp_window_scaling': value => '1' }","CWE-252, CWE-264, CWE-279","{'reason': ""The misconfiguration is related to CWE-252 as it's the only one that directly talks about this kind of problem with Puppet manifest configuration files."", 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
239,"define keystone::resource::service_identity( $ensure = 'present', $admin_url = false, $internal_url = false, $password = false, $public_url = false, $service_type = false, $auth_name = $name, $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $configure_service = true, $email = ""${name}@localhost"", $region = 'regionone', $service_name = undef, $service_description = ""${name} service"", $tenant = 'services', $ignore_default_tenant = false, $roles = ['admin'], $user_domain = undef, $project_domain = undef, $default_domain = undef, ) { include ::keystone::deps validate_re($ensure, ['^present$', '^absent$'], 'valid values for ensure parameter are present or absent') if $service_name == undef { $service_name_real = $auth_name } else { $service_name_real = $service_name } if $user_domain == undef { $user_domain_real = $default_domain } else { $user_domain_real = $user_domain } if $configure_user { if $user_domain_real { ensure_resource('keystone_domain', $user_domain_real, { 'ensure' => $ensure, 'enabled' => true, }) } ensure_resource('keystone_user', $auth_name, { 'ensure' => $ensure, 'enabled' => true, 'password' => $password, 'email' => $email, 'domain' => $user_domain_real, }) if ! $password { warning(""no password had been set for ${auth_name} user."") } } if $configure_user_role { ensure_resource('keystone_user_role', ""${auth_name}@${tenant}"", { 'ensure' => $ensure, 'roles' => $roles, }) } if $configure_service { if $service_type { ensure_resource('keystone_service', ""${service_name_real}::${service_type}"", { 'ensure' => $ensure, 'description' => $service_description, }) } else { fail ('when configuring a service, you need to set the service_type parameter.') } } if $configure_endpoint { if $service_type { if $public_url and $admin_url and $internal_url { ensure_resource('keystone_endpoint', ""${region}/${service_name_real}::${service_type}"", { 'ensure' => $ensure, 'public_url' => $public_url, 'admin_url' => $admin_url, 'internal_url' => $internal_url, }) } else { fail ('when configuring an endpoint, you need to set the _url parameters.') } } else { if $public_url and $admin_url and $internal_url { ensure_resource('keystone_endpoint', ""${region}/${service_name_real}"", { 'ensure' => $ensure, 'public_url' => $public_url, 'admin_url' => $admin_url, 'internal_url' => $internal_url, }) } else { fail ('when configuring an endpoint, you need to set the _url parameters.') } warning('defining a endpoint without the type is supported in liberty and will be dropped in mitaka. see https://bugs.launchpad.net/puppet-keystone/+bug/1506996') } } }",1,1,"ensure_resource('keystone_service', \, ensure_resource('keystone_user', $auth_name, { 'ensure' => $ensure, 'enabled' => true, 'password' => $password, 'email' => $email, 'domain' => $user_domain_real, }) if! $password { warning(\, ensure_resource('keystone_user_role',, ensure_resource(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, ensure_resource(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, fail(\\\, fail(\\\\\\, if $service_type { if $public_url and $admin_url and $internal_url { ensure_resource(\\\\\\\\, if! $password { warning(\\, warning(\\\\\\","CWE-312, CWE-384","{'reason': ""The provided CWE is related to'service credentials leak.' The 'keystone_user_role' resource specifies 'admin' role, which corresponds to administrator role. This is a dangerous role to use in practice, and a user with 'admin' role could be used to do almost anything."", 'related_cwe': 'CWE-312, CWE-384', 'is_misconfiguration_related': 'Yes'}"
240,"notify {'modular: fuel-plugin-manila/master': } file {'/tmp/manila_master': ensure => file, content => 'i am the file', }",0,1,"file {'/tmp/manila_master': ensure => file, content => 'i am the file', }, notify {'modular: fuel-plugin-manila/master': }","CWE-19, CWE-23, CWE-73, CWE-732, CWE-77, CWE-78","{'reason': 'CWE-77', 'related_cwe': 'CWE-77', 'is_misconfiguration_related': 'Yes'}"
241,class { '::openstack_tasks::murano::upload_murano_package' :} warning('osnailyfacter/modular/./murano/upload_murano_package.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/upload_murano_package.pp'),0,1,"class { '::openstack_tasks::murano::upload_murano_package' :}, class {'::openstack_tasks::murano::upload_murano_package' :}, warning('osnailyfacter/modular/./murano/upload_murano_package.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/upload_murano_package.pp')",CWE-116,"{'reason': 'The misconfiguration is related to the following CWE: CWE-116. It is important to follow the guidelines provided by the developers when making changes to a Puppet module. By following these guidelines, developers can ensure that the module remains secure and up-to-date.', 'related_cwe': 'CWE-116', 'is_misconfiguration_related': 'Yes'}"
242,class rdp { include rdp::enable_rdp },0,1,class rdp { include rdp::enable_rdp },CWE-259,"{'reason': ""The misconfiguration is related to CWE-259 due to the following: \\n\\nThis script enables the Remote Desktop Protocol on the target server.\\n\\nA weakness of the RDP protocol is that it allows authentication tokens to be stolen through various methods, such as MITM or sniffing. These stolen authentication tokens allow attackers to gain access to remote desktops and systems, resulting in the ability to access a user's data and information.\\n\\nThe inclusion of this script on a Puppet server has the potential to expose the server to attacks through the RDP protocol. A malicious party may use this misconfiguration to gain unauthorized access to the server, compromising the integrity and confidentiality of the server's data.\\n\\nThe CWE label CWE-259 is"", 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
243,"class citoid ( $port, $log_level = undef, ) { service::node { 'citoid': port => $port, log_level => $log_level, config => { useragent => undef, zoterointerface => '127.0.0.1', zoteroport => '1969', zoterouseproxy => false, }, } }",0,1,"service::node { 'citoid': port => $port, log_level => $log_level, config => { useragent => undef, zoterointerface => '127.0.0.1', zoteroport => '1969', zoterouseproxy => false, }, }","CWE-19, CWE-311, CWE-312, CWE-345, CWE-367, CWE-369, CWE-374, CWE-377, CWE-378, CWE-94","{'reason': 'The script is using the ZOTERO service in Puppet, but there is a typo, which causes it to be run as service::node instead of service::zotero::useragent. This can be resolved by replacing service::node with service::zotero::useragent in the script.', 'related_cwe': 'CWE-94, CWE-378', 'is_misconfiguration_related': 'Yes'}"
244,"class slave_secrets::ssh_keys($slave_type) { include config case $config::org { moco: { $staging_keyset = { 'trybld_dsa' => 'builder_ssh_key_staging_trybld_dsa', 'b2gtry_dsa' => 'builder_ssh_key_staging_b2gbld_dsa', 'ffxbld_rsa' => 'builder_ssh_key_staging_ffxbld_rsa', 'xrbld_dsa' => 'builder_ssh_key_staging_xrbld_dsa', 'tbirdbld_dsa' => 'builder_ssh_key_staging_tbirdbld_dsa', 'b2gbld_dsa' => 'builder_ssh_key_staging_b2gbld_dsa', } $prod_try_keyset = { 'trybld_dsa' => 'builder_ssh_key_try_trybld_dsa', 'b2gtry_dsa' => 'builder_ssh_key_try_b2gtry_dsa', } $prod_core_keyset = { 'ffxbld_rsa' => 'builder_ssh_key_prod_ffxbld_rsa', 'xrbld_dsa' => 'builder_ssh_key_prod_xrbld_dsa', 'tbirdbld_dsa' => 'builder_ssh_key_prod_tbirdbld_dsa', 'b2gbld_dsa' => 'builder_ssh_key_prod_b2gbld_dsa', } $environment = slavealloc_environment($clientcert) case $slave_type { test: { $keyset = {} } build: { case $environment { 'dev/pp': { $keyset = $staging_keyset } 'prod': { case $slave_trustlevel { try: { $keyset = $prod_try_keyset } core: { $keyset = $prod_core_keyset } default: { fail(""unknown slave_trustlevel ${slave_trustlevel}"") } } } none: { $keyset = {} } default: { fail(""unknown slavealloc environment ${environment}"") } } } } } seamonkey: { $staging_keyset = {} $prod_core_keyset = { 'id_dsa' => 'builder_ssh_key_prod_id_dsa', 'seabld_dsa' => 'builder_ssh_key_prod_seabld_dsa', } $environment = slavealloc_environment($clientcert) case $slave_type { test: { $keyset = {} } build: { case $environment { 'dev/pp': { $keyset = $staging_keyset } 'prod': { case $slave_trustlevel { core: { $keyset = $prod_core_keyset } default: { fail(""unknown slave_trustlevel ${slave_trustlevel}"") } } } none: { $keyset = {} } default: { fail(""unknown slavealloc environment ${environment}"") } } } } } relabs: { $keyset = { 'testy' => 'builder_ssh_key_prod_testy', } } default: { fail(""no slave_secrets::ssh_key configuration for ${config::org}"") } } if (!is_hash($keyset)) { fail(""keyset must be a hash; got ${keyset}"") } $key_names = keys($keyset) slave_secrets::ssh_key { $key_names: slave_keyset => $keyset; } }",1,1,"moco: {\\n, moco: {\n, relabs: {\\\\n, seamonkey: {\\\\n, slave_secrets::ssh_key { $key_names: slave_keyset => $keyset; } }\\\\\\\\\\\\\\\\n, slave_type { test: { $keyset = {}, slavealloc_environment($clientcert)\\\\\\\\n, test: { $keyset = {}, try: { $keyset = $prod_try_keyset }\\\\\\\\n, xrbld_dsa' => 'builder_ssh_key_staging_xrbld_dsa', }\\\\\\\\\\\\\\\\n",CWE-306,"{'reason': 'This misconfiguration is related to CWE-306 because the script will fail due to a misconfigured hash that results in an error', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
245,"define oslo::cache( $config_prefix = $::os_service_default, $expiration_time = $::os_service_default, $backend = $::os_service_default, $backend_argument = $::os_service_default, $proxies = $::os_service_default, $enabled = $::os_service_default, $debug_cache_backend = $::os_service_default, $memcache_servers = $::os_service_default, $memcache_dead_retry = $::os_service_default, $memcache_socket_timeout = $::os_service_default, $memcache_pool_maxsize = $::os_service_default, $memcache_pool_unused_timeout = $::os_service_default, $memcache_pool_connection_get_timeout = $::os_service_default, ){ include ::oslo::params if !is_service_default($backend_argument) { $backend_argument_orig = join(any2array($backend_argument), ',') } else { $backend_argument_orig = $backend_argument } if !is_service_default($memcache_servers) { $memcache_servers_orig = join(any2array($memcache_servers), ',') } else { $memcache_servers_orig = $memcache_servers } if !is_service_default($proxies) { $proxies_orig = join(any2array($proxies), ',') } else { $proxies_orig = $proxies } if ($backend =~ /pylibmc/ ) { ensure_packages('python-pylibmc', { ensure => present, name => $::oslo::params::pylibmc_package_name, tag => 'openstack', }) } elsif ($backend =~ /\.memcache/ ) { ensure_packages('python-memcache', { ensure => present, name => $::oslo::params::python_memcache_package_name, tag => ['openstack'], }) } $cache_options = { 'cache/config_prefix' => { value => $config_prefix }, 'cache/expiration_time' => { value => $expiration_time }, 'cache/backend' => { value => $backend }, 'cache/backend_argument' => { value => $backend_argument_orig }, 'cache/proxies' => { value => $proxies_orig }, 'cache/enabled' => { value => $enabled }, 'cache/debug_cache_backend' => { value => $debug_cache_backend }, 'cache/memcache_servers' => { value => $memcache_servers_orig }, 'cache/memcache_dead_retry' => { value => $memcache_dead_retry }, 'cache/memcache_socket_timeout' => { value => $memcache_socket_timeout }, 'cache/memcache_pool_maxsize' => { value => $memcache_pool_maxsize }, 'cache/memcache_pool_unused_timeout' => { value => $memcache_pool_unused_timeout }, 'cache/memcache_pool_connection_get_timeout' => { value => $memcache_pool_connection_get_timeout }, } create_resources($name, $cache_options) }",1,1,"create_resources($name, $cache_options), ensure_packages('python-memcache', { ensure => present, name => $::oslo::params::python_memcache_package_name, tag => ['openstack'], }), ensure_packages('python-pylibmc', { ensure => present, name => $::oslo::params::pylibmc_package_name, tag => 'openstack', }), if (!is_service_default($backend_argument)) { $backend_argument_orig = join(any2array($backend_argument), ',') }, if (!is_service_default($memcache_servers)) { $memcache_servers_orig = join(any2array($memcache_servers), ',') }, if (!is_service_default($proxies)) { $proxies_orig = join(any2array($proxies), ',') }, if ($backend =~ /\.memcache/ ) { ensure_packages('python-memcache', { ensure => present, name => $::oslo::params::python_memcache_package_name, tag => ['openstack'], }) }, if ($backend =~ /pylibmc/ ) { ensure_packages('python-pylibmc', { ensure => present, name => $::oslo::params::pylibmc_package_name, tag => 'openstack', }) }, include ::oslo::params","CWE-20: Improper Input Validation, CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","{'reason': ""In this code, there is no input validation for the backend variable and the memcache_servers variable. This could allow an attacker to supply arbitrary backend and memcache servers, which can lead to cache corruption. This vulnerability is related to CWE-20: Improper Input Validation, and CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"", 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
246,class role::fundraising { include ::role::centralnotice include ::role::payments include ::activemq include ::crm include ::rsyslog include ::smashpig },0,1,"include ::activemq, include ::crm, include ::role::centralnotice, include ::role::payments, include ::rsyslog, include ::smashpig",CWE-772,"{'reason': 'The misconfiguration is related to CWE-772.', 'related_cwe': 'CWE-772', 'is_misconfiguration_related': 'Yes'}"
247,"class packages::libc { case $::operatingsystem { centos: { case $::operatingsystemrelease { 6.5: { realize(packages::yumrepo['glibc']) package { 'glibc': ensure => ""2.12-1.149.el6_6.5""; } } 6.2: { } default: { fail(""unsupported centos version $::operatingsystemrelease"") } } } darwin: { } ubuntu: { case $::operatingsystemrelease { 12.04: { realize(packages::aptrepo['eglibc']) package { ""libc6"": ensure => '2.15-0ubuntu10.10'; } } default: { } } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"class packages::libc { case $::operatingsystem { centos: { case $::operatingsystemrelease { 6.5: { package { 'glibc': ensure =>, default: { fail(, ensure => '2.12-1.149.el6_6.5';, package { 'glibc': ensure =>","CWE-113, CWE-119, CWE-120","{'reason': 'No package installed for darwin, even if a package exists for that OS. This could be an indication of OS compatibility issues, which is related to CWE-120, Software and Data Validation.', 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
248,"class packstack::nova::network () { $multihost = hiera('config_nova_network_multihost') if $multihost { nova_config { 'default/send_arp_for_ha': value => true; } } $manager = hiera('config_nova_network_manager') $nova_net_manager_list = [ 'nova.network.manager.vlanmanager', 'nova.network.manager.flatdhcpmanager', ] $overrides = {} $use_subnets_value = hiera('config_use_subnets') $use_subnets = $use_subnets_value ? { 'y' => true, default => false, } if $manager in $nova_net_manager_list { $overrides['force_dhcp_release'] = false } if $manager == 'nova.network.manager.vlanmanager' { $overrides['vlan_start'] = hiera('config_nova_network_vlan_start') $net_size = hiera('config_nova_network_size') $net_num = hiera('config_nova_network_number') } else { $net_size = hiera('config_nova_network_fixedsize') $net_num = 1 } $nova_network_privif = hiera('config_nova_network_privif') $nova_network_pubif = hiera('config_nova_network_pubif') class['::nova::keystone::auth'] -> nova::manage::network<||> class { '::nova::network': enabled => true, network_manager => $manager, num_networks => $net_num , network_size => $net_size, private_interface => force_interface($nova_network_privif, $use_subnets), public_interface => force_interface($nova_network_pubif, $use_subnets), fixed_range => hiera('config_nova_network_fixedrange'), floating_range => hiera('config_nova_network_floatrange'), config_overrides => $overrides, auto_assign_floating_ip => hiera('config_nova_network_autoassignfloatingip'), multi_host => $multihost } ensure_packages(['dnsmasq'], {'ensure' => 'present'}) }",1,1,"auto_assign_floating_ip, config_overrides, default/send_arp_for_ha, force_dhcp_release, multi_host, net_num, num_networks, private_interface, public_interface, vlan_start",CWE-259,"{'reason': 'auto_assign_floating_ip', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
249,"class neutron::db ( $database_connection = 'sqlite:////var/lib/neutron/ovs.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { include ::neutron::deps $database_connection_real = pick($::neutron::server::database_connection, $database_connection) $database_idle_timeout_real = pick($::neutron::server::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::neutron::server::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::neutron::server::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::neutron::server::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::neutron::server::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::neutron::server::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') if $database_connection_real { oslo::db { 'neutron_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_pool_size => $database_max_pool_size_real, max_overflow => $database_max_overflow_real, db_max_retries => $database_db_max_retries, } } }",0,1,"database_connection_real = pick($::neutron::server::database_connection, $database_connection), db_max_retries => $database_db_max_retries,, idle_timeout => $database_idle_timeout_real,, if $database_connection_real {, max_overflow => $database_max_overflow_real,, max_pool_size => $database_max_pool_size_real,, min_pool_size => $database_min_pool_size_real,, oslo::db { 'neutron_config': connection => $database_connection_real,, retry_interval => $database_retry_interval_real,, validate_re($database_connection_real, '^(sqlite|mysql(\\+pymysql)?|postgresql):\\\\/\\\\/(:\\\\s+\\\\:\\\\s+@\\\\s+)\\\\/?')","CWE-276, CWE-284, CWE-319","{'reason': 'The misconfiguration of invalid database connections is related to the CWE.\\n\\nThis vulnerability can occur when the `database_connection` variable in the `oslo::db` class is misconfigured. In this scenario, the Puppet code will use the value of the `database_connection` variable, which is passed in via the `neutron::db` class, to determine whether a user should have access to the `oslo::db` class. If the value of the `database_connection` variable is incorrect or invalid, then the user may be able to access the `oslo::db` class without proper authorization.\\n\\nThis vulnerability is related to the CWE because it involves a configuration issue that could allow a user to access a privileged class', 'related_cwe': 'CWE-276, CWE-284, CWE-319', 'is_misconfiguration_related': 'Yes'}"
250,"define heka::input::amqp ( $config_dir, $decoder, $user, $password, $host, $port, $exchange, $queue, $exchange_durability = false, $exchange_auto_delete = false, $queue_auto_delete = true, $exchange_type = 'topic', $routing_key = '*', $can_exit = false, $ensure = present, ) { include heka::params file { ""${config_dir}/amqp-${title}.toml"": ensure => $ensure, content => template('heka/input/amqp.toml.erb'), mode => '0600', owner => $heka::params::user, group => $heka::params::user, } }",0,1,"content => template('heka/input/amqp.toml.erb'), ensure => $ensure, group => $heka::params::user, include heka::params, mode => '0600', owner => $heka::params::user",CWE-807,"{'reason': ""The provided misconfiguration is not related to the provided CWE. CWE-807 has the following description, 'An issue where an application's control flow is mismanaged and can execute unexpected code. This may be done to cause the application to execute an unintended path within its source code. Also, the execution of unexpected code could result in arbitrary code execution. This type of issue is most common in logic within application conditionals (e.g., if/then and switch/case), and while loop control is most common in logic within application loops (e.g., while/when). It is possible for a developer to introduce unexpected code execution without malicious intent. Developers may not know of the vulnerability because the execution of unexpected code is caused by the logic and not"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
251,"class kafka::defaults { $default_broker_port = 9092 $brokers = { ""${::fqdn}"" => { 'port' => $default_broker_port, 'id' => 1, }, } $zookeeper_hosts = ['localhost:2181'] $zookeeper_connection_timeout_ms = 6000 $zookeeper_session_timeout_ms = 6000 $zookeeper_chroot = undef $kafka_log_file = '/var/log/kafka/kafka.log' $log_max_backup_index = 4 $java_home = undef $java_opts = undef $classpath = undef $jmx_port = 9999 $log_dirs = ['/var/spool/kafka'] $heap_opts = undef $nofiles_ulimit = 8192 $auto_create_topics_enable = false $auto_leader_rebalance_enable = true $replica_lag_time_max_ms = undef $replica_lag_max_messages = undef $replica_socket_timeout_ms = undef $replica_socket_receive_buffer_bytes = undef $num_replica_fetchers = 1 $replica_fetch_max_bytes = 1048576 $num_network_threads = 3 $socket_send_buffer_bytes = 1048576 $socket_receive_buffer_bytes = 1048576 $socket_request_max_bytes = 104857600 $log_flush_interval_messages = 10000 $log_flush_interval_ms = 3000 $log_retention_hours = 168 $log_retention_bytes = undef $log_segment_bytes = 536870912 $log_cleanup_policy = 'delete' $log_cleanup_interval_mins = 1 $offsets_retention_minutes = 10080 $metrics_properties = undef $jvm_performance_opts = undef $version = 'installed' $log4j_properties_template = 'kafka/log4j.properties.erb' $server_properties_template = 'kafka/server.properties.erb' $server_systemd_override_template = 'kafka/kafka.systemd.override.conf.erb' $server_default_template = 'kafka/kafka.default.erb' }",1,1,"kafka::defaults class parameter `heap_opts` not defined, kafka::defaults class parameter `java_home` not defined, kafka::defaults class parameter `jmx_port` set to 9999 which is a default value that is not safe, kafka::defaults class parameter `log_retention_bytes` not defined, kafka::defaults class parameter `log_retention_hours` set to 168 hours which can cause data retention problems, kafka::defaults class parameter `log_segment_bytes` not defined, kafka::defaults class parameter `metrics_properties` not defined, kafka::defaults class parameter `offsets_retention_minutes` set to 10080 minutes which can cause data retention problems, kafka::defaults class parameter `version` is set to `installed` which could allow unpatched vulnerabilities, kafka::defaults class parameters are missing `auto_create_topics_enable` and `auto_leader_rebalance_enable` properties which will allow users to create any topic name in the cluster and auto-rebalance partitions","CWE-22, CWE-312, CWE-325, CWE-522","{'reason': 'kafka::defaults class parameter `jmx_port` set to 9999 which is a default value that is not safe', 'related_cwe': 'CWE-325', 'is_misconfiguration_related': 'Yes'}"
252,"class packages::alsa { case $::operatingsystem { centos: { package { ""alsa-lib"": ensure => latest; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"case $::operatingsystem { centos: { package { \, default: { fail(\, package { \\, package { \\\\, package { \\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package {mproper Restriction of Operations within the Bounds of a Memory Buffer, CWE-120: Buffer Copy without Checking Size of Input (\, CWE-120: Buffer Copy without Checking Size of Input (\\, CWE-120: Buffer Copy without Checking Size of Input (\\\\, CWE-20: Improper Input Validation, CWE-502: Deserialization of Untrusted Data","{'reason': 'The input validation logic is weak and could be improved.', 'related_cwe': 'CWE-120, CWE-119', 'is_misconfiguration_related': 'Yes'}"
253,"class mellanox_openstack::configure_iser_child ( $iser_parent, $iser_child, $iser_ipaddr ) { $ifcfg_child=""/etc/network/interfaces.d/ifcfg-$iser_child"" l23_stored_config { $iser_parent: ipaddr => none, method => static } ~> exec { 'flush-iser-parent': command => ""/sbin/ip addr flush dev $iser_parent"", refreshonly => true, } -> l23_stored_config { $iser_child: ipaddr => $iser_ipaddr, method => static } ~> exec { 'add-post-up-parent-clean': command => ""/bin/echo 'post-up ip addr flush dev $iser_parent' >> $ifcfg_child"", onlyif => ""/usr/bin/test -f $ifcfg_child && ! /bin/grep -q post-up $ifcfg_child"", refreshonly => true, } ~> exec { 'refresh-iser-child': command => ""/sbin/ifdown $iser_child ; /sbin/ifup $iser_child"", refreshonly => true, } }",1,1,"l23_stored_config { $iser_child: ipaddr => $iser_ipaddr, method => static } ~> exec {'refresh-iser-child': command => \\, l23_stored_config { $iser_parent: ipaddr => none, method => static } ~> exec { 'flush-iser-parent': command => \, refreshonly => true, },",CWE-269,"{'reason': 'the ip addresses for the child should not be defined here, otherwise, it will be updated by the static ip address defined in the $ifcfg_child variable', 'related_cwe': 'CWE-269', 'is_misconfiguration_related': 'Yes'}"
254,class { '::osnailyfacter::hiera::hiera' :},1,1,class { '::osnailyfacter::hiera::hiera' :},"CWE-772, CWE-775, CWE-779, CWE-787","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-772, CWE-775, CWE-779, CWE-787', 'is_misconfiguration_related': 'Yes'}"
255,"notice('modular: ironic/baremetal-firewall.pp') $network_scheme = hiera('network_scheme', {}) prepare_network_config($network_scheme) $baremetal_int = get_network_role_property('ironic/baremetal', 'interface') $nodes_hash = hiera('nodes', {}) $roles = node_roles($nodes_hash, hiera('uid')) if ! member($roles, 'controller') or ! member($roles, 'primary-controller') or ! member($roles, 'ironic') { firewallchain { 'baremetal:filter:ipv4': ensure => present, } -> firewall { '999 drop all': chain => 'baremetal', action => 'drop', proto => 'all', } -> firewall {'00 baremetal-filter ': proto => 'all', iniface => $baremetal_int, jump => 'baremetal', require => class['openstack::firewall'], } class { 'openstack::firewall':} }",0,1,"-> firewall { '999 drop all': chain => 'baremetal', action => 'drop', proto => 'all', }, -> firewall {'00 baremetal-filter ': proto => 'all', iniface => $baremetal_int, jump => 'baremetal', require => class['openstack::firewall'], }, class { 'openstack::firewall':}, firewallchain { 'baremetal:filter:ipv4': ensure => present, }, network_scheme = hiera('network_scheme', {})",CWE-916,"{'reason': ""This issue is a logical error in the script as it is unclear why the firewall is being dropped without first checking if the node belongs to the controller node or the baremetal node. Also, the firewall chain 'baremetal:filter:ipv4' is never utilized as the firewall is dropped immediately. If a node does not belong to the controller or baremetal node, the firewall is unnecessarily dropped, and all traffic on the network would be denied. This issue is related to CWE-916 as it is a logical error in the script. The firewall is only dropped if the node does not belong to the controller or baremetal node, and the firewall chain is never utilized. The issue is resolved by ensuring that the firewall is only dropped for the nodes"", 'related_cwe': 'CWE-916', 'is_misconfiguration_related': 'Yes'}"
256,"class role::kartographer { mediawiki::extension { 'kartographer': composer => true, } }",0,1,"composer => true,, mediawiki::extension",CWE-284,"{'reason': ""1. The CWE is CWE-284 which stands for Improper Access Control. This is related to misconfigurations of the composer => true parameter because it is used to add an extension. The composer => true parameter allows an extension to be added without validation, which could lead to a security issue if the extension is malicious or has security vulnerabilities. 2. By adding the composer => true parameter to the mediawiki::extension resource, you are bypassing the usual validation and installation process. This could lead to an extension being added that is not meant to be added. 3. In the provided script, the composer => true parameter is used to add the 'kartographer' extension. However, the composer => true parameter could also be used"", 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
257,"class osnailyfacter::fuel_pkgs::setup_repositories { notice('modular: fuel_pkgs/setup_repositories.pp') $repo_setup_hash = hiera_hash('repo_setup', {}) $repos = $repo_setup_hash['repos'] $repo_type = pick($repo_setup_hash['repo_type'], 'fuel') class { '::osnailyfacter::package_pins': repo_type => $repo_type, pin_haproxy => $repo_setup_hash['pin_haproxy'], pin_rabbitmq => $repo_setup_hash['pin_rabbitmq'], pin_ceph => $repo_setup_hash['pin_ceph'], pin_priority => '2000', } if $::osfamily == 'debian' { $update_hash = { timeout => '600', tries => '3', } class { '::apt' : update => $update_hash, } $repositories = generate_apt_sources($repos) $pins = generate_apt_pins($repos) if ! empty($repositories) { create_resources(apt::source, $repositories) } if ! empty($pins) { create_resources(apt::pin, $pins) } apt::conf { notify_update => false, priority => '02', } apt::conf { 'allow-unathenticated': content => 'apt::get::allowunauthenticated 0;', } apt::conf { 'install-recommends': content => 'apt::install-recommends ""false"";', } apt::conf { 'install-suggests': content => 'apt::install-suggests ""false"";', } apt::source<||> ~> exec<| title == 'apt_update' |> exec<| title == 'apt_update' |> -> package<||> } }",1,1,"apt::conf { 'install-recommends': content => 'apt::install-recommends \, apt::conf { 'install-recommends': content => 'apt::install-recommends \\, apt::conf { 'install-recommends': content => 'apt::install-recommends \\\\\\\\\, apt::conf { 'install-recommends': content => 'apt::install-recommends \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, apt::conf { 'install-suggests': content => 'apt::install-suggests \\, apt::conf { 'install-suggests': content => 'apt::install-suggests \\\\\\, apt::conf { 'install-suggests': content => 'apt::install-suggests \\\\\\\\\\\\\\\\\\, class { '::apt' : update => $update_hash,",CWE-295,"{'reason': ""Not related because the script uses `hiera_hash`, which is a defined function in Puppet. The function loads a configuration file that may contain several key-value pairs. This could be used to define several repositories to download packages. Based on this, the script will use the `generate_apt_sources` and `generate_apt_pins` functions to build the repository definition resources. These resources are used to define the package repositories that the puppet module is trying to install. It's worth mentioning that these two functions do not check whether the `hiera_hash` contains more than one repository. Instead, these functions will use the repository key-value pairs to generate the resources using a loop. Since the resources will use the configuration data to determine which repository is required"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
258,"class slaverebooter::services { include ::config include users::builder include slaverebooter::settings include packages::procmail $owner = $users::builder::username $basedir = $slaverebooter::settings::root $config = $slaverebooter::settings::config file { ""/etc/cron.d/slaverebooter"": require => python::virtualenv[""${basedir}""], mode => 600, content => template(""slaverebooter/cron.erb""); } }",0,1,"class slaverebooter::services {\\, class slaverebooter::services {\\\\\\\\n, class slaverebooter::services {\\\\n, class slaverebooter::services {\\n, file { \, include ::config\\n, include users::builder\n, python::virtualenv[\, template(\\",CWE-22: Improper Limitation of a Pathname to a Restricted Directory (,"{'reason': 'I was unable to identify a relationship between the misconfiguration and CWE. I have attempted to provide further context and analysis in the reasoning text below. If you believe the misconfiguration should be considered a CWE-related issue, please feel free to update the script above and submit a follow-up issue.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
259,"class rally ( $ensure_package = 'present', $rally_debug = $::os_service_default, $openstack_client_http_timeout = $::os_service_default, $purge_config = false, $sync_db = true, ) inherits ::rally::params { include ::rally::db include ::rally::logging include ::rally::settings $openstack_client_http_timeout_real = pick($::rally::settings::openstack_client_http_timeout,$openstack_client_http_timeout) package { 'rally': ensure => $ensure_package, name => $::rally::params::package_name, tag => ['openstack', 'rally-package'], } resources { 'rally_config': purge => $purge_config, } if $sync_db { include ::rally::db::sync } rally_config { 'default/rally_debug': value => $rally_debug; 'default/openstack_client_http_timeout': value => $openstack_client_http_timeout; } }",0,0,"include ::rally::db, include ::rally::db::sync, package { 'rally': ensure => $ensure_package, name => $::rally::params::package_name, tag => ['openstack', 'rally-package'], }, rally_config { 'default/rally_debug': value => $rally_debug; 'default/openstack_client_http_timeout': value => $openstack_client_http_timeout; }","CWE-306, CWE-312","{'reason': 'Please provide an appropriate description for this misconfiguration.', 'related_cwe': 'Please provide a reference CWE for the misconfiguration.', 'is_misconfiguration_related': 'Please provide Yes or No depending on whether the misconfiguration is related to the CWE.'}"
260,"class openstack_tasks::roles::enable_compute { notice('modular: roles/enable_compute.pp') include ::nova::params $compute_service_name = $::nova::params::compute_service_name $use_ovs = hiera('use_ovs', true) $roles = hiera('roles') if !('compute-vmware' in $roles) and $use_ovs { $neutron_integration_bridge = 'br-int' $bridge_exists_check = ""ovs-vsctl br-exists ${neutron_integration_bridge}"" exec { 'wait-for-int-br': command => $bridge_exists_check, path => ['/usr/bin', '/usr/sbin'], unless => $bridge_exists_check, try_sleep => 6, tries => 10, } exec['wait-for-int-br'] -> service['nova-compute'] } service { 'nova-compute': ensure => running, name => $compute_service_name, enable => true, hasstatus => true, hasrestart => true, } }",1,1,"exec['wait-for-int-br'] -> service['nova-compute'], hasrestart => true,}, include ::nova::params",CWE-20,"{'reason': ""The exec command 'wait-for-int-br' uses the exec resource type, which includes a 'hasrestart' option that configures the resource to automatically restart a service if the exec command fails. This enables attackers to use the exec command to restart services arbitrarily. This is a misconfiguration that violates the principle of least privilege. Therefore, we can conclude that this is related to CWE-20."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
261,class eximconf::es { class { 'exim': source => 'puppet:///modules/eximconf/exim4.conf-es' } },0,1,"exim4.conf-es, puppet:///modules/eximconf/exim4.conf-es, source",CWE-200,"{'reason': 'The vulnerability reported in the issue is that the misconfiguration of the source for the class eximconf::es could cause a security issue in the production system. This could allow for a malicious actor to inject a custom configuration into the system that could be used to attack it. However, the issue here is that the configuration is not being used in a way that would allow for a security issue. It is being used in a way that is not related to the security issue. This is because the configuration is not being used to change any part of the system. It is being used to set a property of a class that is not being used in a way that would cause a security issue. This is not related to the security issue. The vulnerability here', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
262,class { '::osnailyfacter::umm::umm' :},0,1,class { '::osnailyfacter::umm::umm' :},"CWE-1197, CWE-1346, CWE-1348, CWE-1354, CWE-1358, CWE-1363, CWE-1367, CWE-1372, CWE-1375, CWE-829","{'reason': ""The class { '::osnailyfacter::umm::umm' :} is not defined with a module or a provider."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
263,"class swift::storage::account( $manage_service = true, $enabled = true, $package_ensure = 'present', $config_file_name = 'account-server.conf', $service_provider = $::swift::params::service_provider ) inherits ::swift::params { include ::swift::deps swift_config<| |> ~> service['swift-account-reaper'] swift::storage::generic { 'account': manage_service => $manage_service, enabled => $enabled, package_ensure => $package_ensure, config_file_name => $config_file_name, service_provider => $service_provider } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } swift::service { 'swift-account-reaper': os_family_service_name => $::swift::params::account_reaper_service_name, service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, require => package['swift-account'], subscribe => concat[""/etc/swift/${config_file_name}""], } }",1,1,"class swift::storage::account( $manage_service = true, $enabled = true, $package_ensure = 'present', $config_file_name = 'account-server.conf', $service_provider = $::swift::params::service_provider ), class swift::storage::account(\\n\\t$manage_service = true,\\n\\t$enabled = true,\\n\\t$package_ensure = 'present',\\n\\t$config_file_name = 'account-server.conf',\\n\\t$service_provider = $::swift::params::service_provider ), class swift::storage::account(\n\t$manage_service = true,\n\t$enabled = true,\n\t$package_ensure = 'present',\n\t$config_file_name = 'account-server.conf',\n\t$service_provider = $::swift::params::service_provider ), if $enabled {\\\\n\\\\tif $enabled {\\\\n\\\\t\\\\t$service_ensure ='stopped'\\\\n\\\\t}\\\\n}, if $enabled {\\n\\tif $enabled {\\n\\t\\t$service_ensure = 'running'\\n\\t}\\n}, swift_config<| |> ~>","CWE-200, CWE-284, CWE-352","{'reason': 'The configuration of Swift Accounts can be done by enabling or disabling the service. The management of Swift Accounts by changing this variable will have no effect on the actual management. Therefore, disabling a Swift Account is not effective due to misconfiguration. The misconfiguration is related to CWE-200.', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
264,"class lma_logging_analytics::kibana ( $listen_address, $listen_port, $es_host = 'localhost', $es_port = 9200, $es_scheme = 'http', $version = 'latest' ) { include lma_logging_analytics::params $kibana_dir = $lma_logging_analytics::params::kibana_dir $kibana_conf = $lma_logging_analytics::params::kibana_config $default_route = $lma_logging_analytics::params::kibana_default_route package { 'kibana': ensure => $version, } $log_dir = '/var/log/kibana' file { '/opt/kibana/config/kibana.yml': ensure => present, content => template('lma_logging_analytics/kibana4.yaml.erb'), notify => service['kibana'], require => package['kibana'], } service { 'kibana': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, require => package['kibana'], } file { '/etc/logrotate.d/kibana.conf': ensure => present, content => template('lma_logging_analytics/kibana_logrotate.conf.erb'), owner => 'root', group => 'root', mode => '0644', require => package['kibana'], } }",1,1,"file { '/etc/logrotate.d/kibana.conf':\n  ensure => present,\n  content => template('lma_logging_analytics/kibana_logrotate.conf.erb'),\n  owner => 'root',\n  group => 'root',\n  mode => '0644',\n  require => package['kibana'],\n}, kibana_conf = $lma_logging_analytics::params::kibana_config, package { 'kibana':\\\\\\\\\\\\\\\\\\\\n  ensure => $version,\\\\\\\\\\\\\\\\\\\\n}, package { 'kibana':\\\\\\\\n  ensure => $version,\\\\\\\\n}, package { 'kibana':\\\\n  ensure => $version,\\\\n}, package { 'kibana':\\n  ensure => $version,\\n}","CWE-20, CWE-319","{'reason': 'Since the original issue is about misconfiguration, it is not possible to find CWE 319. The CWE 20 is related.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
265,"class bouncer_check { include packages::mozilla::python27 include dirs::tools $venv_root = ""/tools/nagios-tools"" python::virtualenv { ""${venv_root}"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], packages => [ ""argparse==1.2.1"", ""nagios-tools==0.3"", ""nagiosplugin==1.1"", ""wsgiref==0.1.2"", ]; } nrpe::check { 'check_bouncer': cfg => ""${venv_root}/bin/check_bouncer"", require => python::virtualenv[""${venv_root}""]; } }",0,1,"cfg => \, cfg => \\, cfg => \\\\\\\\\, cfg => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, packages => [ \, python::virtualenv {, require => class['packages::mozilla::python27'], require => python::virtualenv[\\\, require => python::virtualenv[\\\\\\, require => python::virtualenv[\\\\\\\\\\\\\\","CWE-664, CWE-665, CWE-668, CWE-670","{'reason': 'CWE-664: The Puppet module used for creating a directory does not check whether the directory can be created. If the directory can not be created then the script will not be able to execute properly. This issue is related to the misconfiguration because it is misconfigured and can be exploited by an attacker who can prevent the directory from being created.', 'related_cwe': 'CWE-664', 'is_misconfiguration_related': 'Yes'}"
266,"class trove::policy ( $policies = {}, $policy_path = '/etc/trove/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'trove_config': policy_file => $policy_path } }",0,1,"class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\tvalidate_hash($policies), class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\tvalidate_hash($policies), class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\tvalidate_hash($policies), class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\\\\\\\\n\\\\\\\\tvalidate_hash($policies), class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\\\\n\\\\tvalidate_hash($policies), class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\\n\\tvalidate_hash($policies), class trove::policy ($policies = {}, $policy_path = '/etc/trove/policy.json', ) {\n\tvalidate_hash($policies)",CWE-200,"{'reason': 'The misconfiguration may allow unauthorized access to the system, which is the intent of CWE-200', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
267,"class monasca::persister ( $blobmirror = undef, $consumer_id = 1, $batch_size = 10000, $num_threads = 1, $batch_seconds = 30, $config = $monasca::params::persister_config_defaults, $db_admin_password = undef, $mon_pers_build_ver = undef, $mon_pers_deb = undef, $pers_user = 'persister', $zookeeper_servers = undef, ) { include ::monasca include ::monasca::params $pers_fetch_url = ""http://${blobmirror}/repos/monasca/monasca_persister"" $latest_pers_deb = ""/tmp/${mon_pers_deb}"" wget::fetch { ""${pers_fetch_url}/${mon_pers_build_ver}/${mon_pers_deb}"": destination => $latest_pers_deb, timeout => 300, before => [package['install-persister'], file[$latest_pers_deb]], } file { $latest_pers_deb: ensure => present, } package { 'monasca-persister': ensure => latest, provider => dpkg, source => $latest_pers_deb, alias => 'install-persister', tag => ['openstack', 'monasca-package'], } user { $pers_user: ensure => present, groups => $::monasca::group, require => group[$::monasca::group], } create_resources('monasca::persister::config', $config) }",0,0,"class monasca::persister ( $blobmirror = undef, $consumer_id = 1, $batch_size = 10000, $num_threads = 1, $batch_seconds = 30, $config = $monasca::params::persister_config_defaults, $db_admin_password = undef, $mon_pers_build_ver = undef, $mon_pers_deb = undef, $pers_user = 'persister', $zookeeper_servers = undef, ) {\ninclude ::monasca\ninclude ::monasca::params\n$pers_fetch_url = \, create_resources('monasca::persister::config', $config) }, file { $latest_pers_deb: ensure => present, } package {'monasca-persister': ensure => latest, provider => dpkg, source => $latest_pers_deb, alias => 'install-persister', tag => ['openstack','monasca-package'], }\\n\\n\\n, include ::monasca include ::monasca::params $pers_fetch_url = \, include ::monasca include ::monasca::params $pers_fetch_url = \\, monasca::persister::config ( $config = undef ) { class { \, monasca::persister::config ( $config = undef ) { class { \\, package {'monasca-persister': ensure => latest, provider => dpkg, source => $latest_pers_deb, alias => 'install-persister', tag => ['openstack','monasca-package'], }\\\\n\\\\n\\\\n","CWE-502: Deserialization of Untrusted Data, CWE-532: Insertion of Sensitive Information into Log File","{'reason': 'The misconfiguration is related to CWE-502: Deserialization of Untrusted Data, since this vulnerability occurs when an attacker is able to inject malicious data into a vulnerable configuration. Since puppet has a way to inject malicious data into a vulnerable configuration, this misconfiguration is related to the CWE.', 'related_cwe': 'CWE-502: Deserialization of Untrusted Data', 'is_misconfiguration_related': 'Yes'}"
268,"class openstack::puppetlabs_repos ( ) { case $::osfamily { 'debian': { apt::source { 'puppetlabs': location => 'http://apt.puppetlabs.com', repos => 'main dependencies', key_source => 'http://apt.puppetlabs.com/pubkey.gpg', } if !defined(class['apt::update']) { class { 'apt::update': stage => $::openstack::puppetlabs_repos::stage } } } 'redhat': { yumrepo { 'puppetlabs-products': baseurl => 'http://yum.puppetlabs.com/el/6/products/x86_64', gpgkey => 'http://yum.puppetlabs.com/rpm-gpg-key-puppetlabs', gpgcheck => 1, } yumrepo { 'puppetlabs-deps': baseurl => 'http://yum.puppetlabs.com/el/6/dependencies/x86_64', gpgkey => 'http://yum.puppetlabs.com/rpm-gpg-key-puppetlabs', gpgcheck => 1, } } default: { fail(""unsupported osfamily: ${osfamily} for os ${operatingsystem}"") } } }",1,1,"apt::source { 'puppetlabs': location => 'http://apt.puppetlabs.com', repos =>'main dependencies', key_source => 'http://apt.puppetlabs.com/pubkey.gpg', }, fail(, yumrepo { 'puppetlabs-deps': baseurl => 'http://yum.puppetlabs.com/el/6/dependencies/x86_64', gpgkey => 'http://yum.puppetlabs.com/rpm-gpg-key-puppetlabs', gpgcheck => 1, }, yumrepo { 'puppetlabs-products': baseurl => 'http://yum.puppetlabs.com/el/6/products/x86_64', gpgkey => 'http://yum.puppetlabs.com/rpm-gpg-key-puppetlabs', gpgcheck => 1, }","CWE-327, CWE-352, CWE-732","{'reason': ""In both the'main dependencies' repo and the 'products' repo, the yum key_source is specified as the URL for the key.  The 'dependencies' repo specifies the key_source for yum as a URL."", 'related_cwe': 'CWE-327, CWE-352, CWE-732', 'is_misconfiguration_related': 'Yes'}"
269,class tripleo::profile::pacemaker::neutron::plugins::nuage { include ::tripleo::profile::base::neutron::plugins::nuage },0,1,"class tripleo::profile::pacemaker::neutron::plugins::nuage, include ::tripleo::profile::base::neutron::plugins::nuage","CWE-116, CWE-117, CWE-118, CWE-119, CWE-120, CWE-121, CWE-122, CWE-123, CWE-124","{'reason': 'CWE-118', 'related_cwe': 'CWE-118', 'is_misconfiguration_related': 'Yes'}"
270,"class lma_collector::elasticsearch ( $server, $port, $flush_interval = 5, $flush_count = 10, ) { include lma_collector::params include lma_collector::service::log validate_string($server) validate_integer($port) heka::encoder::es_json { 'elasticsearch': config_dir => $lma_collector::params::log_config_dir, index => '%{type}-%{%y.%m.%d}', es_index_from_timestamp => true, fields => $lma_collector::params::elasticsearch_fields, notify => class['lma_collector::service::log'], } heka::output::elasticsearch { 'elasticsearch': config_dir => $lma_collector::params::log_config_dir, server => $server, port => $port, message_matcher => 'type == \'log\' || type == \'notification\'', use_buffering => $lma_collector::params::buffering_enabled, max_buffer_size => $lma_collector::params::buffering_max_buffer_size_for_log, max_file_size => $lma_collector::params::buffering_max_file_size_for_log, queue_full_action => $lma_collector::params::queue_full_action_for_log, flush_interval => $flush_interval, flush_count => $flush_count, require => heka::encoder::es_json['elasticsearch'], notify => class['lma_collector::service::log'], } }",1,1,"class['lma_collector::service::log'], flush_interval => $flush_interval,, heka::encoder::es_json { 'elasticsearch': config_dir => $lma_collector::params::log_config_dir, index => '%{type}-%{%y.%m.%d}', es_index_from_timestamp => true, fields => $lma_collector::params::elasticsearch_fields, notify => class['lma_collector::service::log'], }, max_file_size => $lma_collector::params::buffering_max_file_size_for_log,, max_file_size => $lma_collector::params::buffering_max_file_size_for_log, queue_full_action => $lma_collector::params::queue_full_action_for_log,, queue_full_action => $lma_collector::params::queue_full_action_for_log,",CWE-117,"{'reason': 'If we assume that there is a situation where there is a network congestion between the collector server and the Elasticsearch cluster, it could cause the collector server to fail and the messages to not be delivered to Elasticsearch. Additionally, the data sent could also be incomplete, which may cause Elasticsearch to crash and then fail, causing more issues.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
271,"define monasca::persister::config ( $batch_seconds = $monasca::persister::batch_seconds, $batch_size = $monasca::persister::batch_size, $check_conn_while_idle = true, $config = {}, $consumer_id = $monasca::persister::consumer_id, $database_type = $monasca::persister::database_type, $db_admin_password = $monasca::persister::db_admin_password, $gzip_setting = true, $num_threads = $monasca::persister::num_threads, $pers_user = $monasca::persister::pers_user, $replication_factor = 1, $retention_policy = 'raw', $zookeeper_servers = $monasca::persister::zookeeper_servers, ) { include ::monasca::params $persister_config = deep_merge($monasca::params::persister_config_defaults, $config) $persister_service_name = $name $pers_cfg_file = ""/etc/monasca/${persister_service_name}.yml"" $pers_db_user = $::monasca::params::pers_db_user $pers_db_password = $::monasca::params::pers_db_password file { $pers_cfg_file: ensure => file, content => template('monasca/persister-config.yml.erb'), mode => '0644', owner => $pers_user, group => $::monasca::group, require => [user[$pers_user], group[$::monasca::group], file[$::monasca::log_dir]], } ~> service[$persister_service_name] service { $persister_service_name: ensure => running, require => [file[$pers_cfg_file], package['install-persister'], monasca::persister::startup_script[$persister_service_name]], tag => 'monasca-service', } monasca::persister::startup_script { $persister_service_name: require => package['install-persister'], } }",0,1,"deep_merge($monasca::params::persister_config_defaults, $config) $persister_service_name = $name $pers_cfg_file =, monasca::persister::config ( $batch_seconds = $monasca::persister::batch_seconds, $batch_size = $monasca::persister::batch_size, $check_conn_while_idle = true, $config = {}, $consumer_id = $monasca::persister::consumer_id, $database_type = $monasca::persister::database_type, $db_admin_password = $monasca::persister::db_admin_password, $gzip_setting = true, $num_threads = $monasca::persister::num_threads, $pers_user = $monasca::persister::pers_user, $replication_factor = 1, $retention_policy = 'raw', $zookeeper_servers = $monasca::persister::zookeeper_servers, ) { include ::monasca::params $persister_config = deep_merge($monasca::params::persister_config_defaults, $config) $persister_service_name = $name $pers_cfg_file =, monasca::persister::startup_script { $persister_service_name: require => package['install-persister'], }, package['install-persister'], require => package['install-persister'],, tag =>'monasca-service', } monasca::persister::startup_script { $persister_service_name: require => package['install-persister'], }",CWE-601,"{'reason': 'The misconfiguration is related to CWE-601 because of', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
272,class { '::openstack_tasks::roles::allocate_hugepages' :} warning('osnailyfacter/modular/./roles/allocate_hugepages.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/allocate_hugepages.pp'),1,0,nan,nan,"{'reason': 'the huge pages module has been removed in newer versions of puppet-openstack. The openstack_tasks module has taken over that role and has provided an example of the roles module used in newer versions.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
273,"class keystone::cors ( $allowed_origin = $::os_service_default, $allow_credentials = $::os_service_default, $expose_headers = $::os_service_default, $max_age = $::os_service_default, $allow_methods = $::os_service_default, $allow_headers = $::os_service_default, ) { include ::keystone::deps oslo::cors { 'keystone_config': allowed_origin => $allowed_origin, allow_credentials => $allow_credentials, expose_headers => $expose_headers, max_age => $max_age, allow_methods => $allow_methods, allow_headers => $allow_headers, } }",0,1,"allow_credentials, allow_headers, allow_methods, allowed_origin, expose_headers, include::keystone::deps, keystone_config, max_age, oslo::cors",CWE-22,"{'reason': 'This issue can cause an authorization issue in OpenStack Keystone service, if the attacker manages to exploit it. In this way, the attacker can exploit the vulnerability to inject requests with forged credentials into the Keystone server. This issue can lead to sensitive data leak, data corruption, data loss, data alteration and so on. Thus, this misconfiguration is related to the CWE.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
274,"class manila::db::mysql ( $password, $dbname = 'manila', $user = 'manila', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', $cluster_id = 'localzone', $mysql_module = undef, ) { if $mysql_module { warning('the mysql_module parameter is deprecated. the latest 2.x mysql module will be used.') } validate_string($password) ::openstacklib::db::mysql { 'manila': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['manila'] ~> exec<| title == 'manila-manage db_sync' |> }",0,1,"::openstacklib::db::mysql {'manila': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, }, if $mysql_module { warning('the mysql_module parameter is deprecated. the latest 2.x mysql module will be used.') }, openstacklib::db::mysql['manila'] ~> exec<| title =='manila-manage db_sync' |> }, validate_string($password)","CWE-416, CWE-470","{'reason': 'If a malicious user was able to obtain the password of the account user, he could gain access to the database instance and delete/modify/alter tables, which may lead to uncontrolled modifications to data. If the malicious user could guess the password of the user, he could then use this password and gain access to the database instance. The allowed hosts parameter is used to specify the network address of the machines that are permitted to connect to the database. If it is empty, all hosts are permitted to connect to the database. If this parameter is filled in with the appropriate values, the attacker would be limited to accessing the database only from the given network address. Therefore, the allowed hosts parameter helps protect the database by restricting the machine from which a connection', 'related_cwe': 'CWE-470, CWE-416', 'is_misconfiguration_related': 'Yes'}"
275,"class openstack_tasks::openstack_network::agents::l3 { notice('modular: openstack_network/agents/l3.pp') $neutron_advanced_config = hiera_hash('neutron_advanced_configuration', { }) $dvr = pick($neutron_advanced_config['neutron_dvr'], false) $neutron_controller_roles = hiera('neutron_controller_roles', ['controller', 'primary-controller']) $neutron_compute_roles = hiera('neutron_compute_nodes', ['compute']) $controller = roles_include($neutron_controller_roles) $compute = roles_include($neutron_compute_roles) if $controller or ($dvr and $compute) { $override_configuration = hiera_hash('configuration', {}) override_resources { 'neutron_l3_agent_config': data => $override_configuration['neutron_l3_agent_config'] } ~> service['neutron-l3'] } if $controller or ($dvr and $compute) { $debug = hiera('debug', true) $metadata_port = '8775' $network_scheme = hiera_hash('network_scheme', {}) if $controller { if $dvr { $agent_mode = 'dvr_snat' } else { $agent_mode = 'legacy' } } else { $agent_mode = 'dvr' } prepare_network_config($network_scheme) $ha_agent = dig44($neutron_advanced_config, ['l3_agent_ha'], true) class { '::neutron::agents::l3': debug => $debug, metadata_port => $metadata_port, external_network_bridge => ' ', manage_service => true, enabled => true, agent_mode => $agent_mode, } if ($ha_agent) and !($compute) { $primary_controller = hiera('primary_controller') cluster::neutron::l3 { 'default-l3' : primary => $primary_controller, } } package { 'neutron': name => 'binutils', ensure => 'installed', } } }",0,1,"class {'::neutron::agents::l3':... enabled => true,, class {'::neutron::agents::l3':... manage_service => true,, service['neutron-l3']",CWE-20,"{'reason': 'Enable and manage neutron-l3 on every node. For example, enabling l3 on the controller node is sufficient, however, when a node is used as a DVR, it is required to manage and enable the l3 agent.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
276,"class osnailyfacter::netconfig::connectivity_tests { notice('modular: netconfig/connectivity_tests.pp') $network_scheme = hiera_hash('network_scheme', {}) prepare_network_config($network_scheme) $run_ping_checker = hiera('run_ping_checker', true) if $run_ping_checker { $default_gateway = get_default_gateways() ping_host { $default_gateway : ensure => 'up', } l2_port<||> -> ping_host[$default_gateway] l2_bond<||> -> ping_host[$default_gateway] l3_ifconfig<||> -> ping_host[$default_gateway] l3_route<||> -> ping_host[$default_gateway] } $repo_setup = hiera('repo_setup') url_available($repo_setup['repos']) }",0,1,"class osnailyfacter::netconfig::connectivity_tests {, l2_port<||> -> ping_host[$default_gateway], l3_ifconfig<||> -> ping_host[$default_gateway], l3_route<||> -> ping_host[$default_gateway], network_scheme = hiera_hash('network_scheme', {}), notice('modular: netconfig/connectivity_tests.pp'), ping_host { $default_gateway, prepare_network_config($network_scheme), url_available($repo_setup['repos'])}, }","CWE-668, CWE-732","{'reason': 'No', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
277,"notice('modular: nailgun.pp') $fuel_settings = parseyaml($astute_settings_yaml) if $::fuel_settings['feature_groups'] { $feature_groups = $::fuel_settings['feature_groups'] } else { $feature_groups = [] } $debug = pick($::fuel_settings['debug'],false) if $debug { $nailgun_log_level = ""debug"" } else { $nailgun_log_level = ""info"" } if empty($::fuel_settings['ntp1']) and empty($::fuel_settings['ntp2']) and empty($::fuel_settings['ntp3']) { $ntp_servers = [$::fuel_settings['admin_network']['ipaddress']] } else { $ntp_servers = delete(delete_undef_values([$::fuel_settings['ntp1'], $::fuel_settings['ntp2'], $::fuel_settings['ntp3']]), '') } $dns_servers = strip(split($::fuel_settings['dns_upstream'], ',')) exec {path => '/usr/bin:/bin:/usr/sbin:/sbin'} class { ""fuel::nailgun::server"": keystone_host => $::fuel_settings['admin_network']['ipaddress'], keystone_user => $::fuel_settings['keystone']['nailgun_user'], keystone_password => $::fuel_settings['keystone']['nailgun_password'], feature_groups => $feature_groups, nailgun_log_level => $nailgun_log_level, db_name => $::fuel_settings['postgres']['nailgun_dbname'], db_host => $::fuel_settings['admin_network']['ipaddress'], db_user => $::fuel_settings['postgres']['nailgun_user'], db_password => $::fuel_settings['postgres']['nailgun_password'], rabbitmq_host => $::fuel_settings['admin_network']['ipaddress'], rabbitmq_astute_user => $::fuel_settings['astute']['user'], rabbitmq_astute_password => $::fuel_settings['astute']['password'], admin_network => ipcalc_network_by_address_netmask($::fuel_settings['admin_network']['ipaddress'], $::fuel_settings['admin_network']['netmask']), admin_network_cidr => ipcalc_network_cidr_by_netmask($::fuel_settings['admin_network']['netmask']), admin_network_size => ipcalc_network_count_addresses($::fuel_settings['admin_network']['ipaddress'], $::fuel_settings['admin_network']['netmask']), admin_network_first => $::fuel_settings['admin_network']['dhcp_pool_start'], admin_network_last => $::fuel_settings['admin_network']['dhcp_pool_end'], admin_network_netmask => $::fuel_settings['admin_network']['netmask'], admin_network_mac => $::fuel_settings['admin_network']['mac'], admin_network_ip => $::fuel_settings['admin_network']['ipaddress'], admin_network_gateway => $::fuel_settings['admin_network']['dhcp_gateway'], cobbler_host => $::fuel_settings['admin_network']['ipaddress'], cobbler_url => ""http://${::fuel_settings['admin_network']['ipaddress']}:80/cobbler_api"", cobbler_user => $::fuel_settings['cobbler']['user'], cobbler_password => $::fuel_settings['cobbler']['password'], mco_host => $::fuel_settings['admin_network']['ipaddress'], mco_user => $::fuel_settings['mcollective']['user'], mco_password => $::fuel_settings['mcollective']['password'], ntp_upstream => $ntp_servers, dns_upstream => $dns_servers, dns_domain => $::fuel_settings['dns_domain'], }",1,1,"admin_network => ipcalc_network_by_address_netmask($::fuel_settings['admin_network']['ipaddress'], $::fuel_settings['admin_network']['netmask']),, cobbler_host => $::fuel_settings['admin_network']['ipaddress'],, feature_groups => $feature_groups,, mco_host => $::fuel_settings['admin_network']['ipaddress'],, nailgun_log_level => $nailgun_log_level,, ntp_upstream => $ntp_servers,",CWE-312,"{'reason': 'The [CWE number(s) related to the issue] indicates that when configuring sensitive information like passwords, they should be configured in such a way that an unauthorized user would not be able to access them. However, in this code, the password is stored in plain text, which makes it vulnerable to unauthorized users who may be able to access it.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
278,"class swift::proxy::tempauth ( $account_user_list = [ { 'user' => 'admin', 'account' => 'admin', 'key' => 'admin', 'groups' => [ 'admin', 'reseller_admin' ], }, ], $reseller_prefix = undef, $auth_prefix = undef, $token_life = undef, $allow_overrides = undef, $storage_url_scheme = undef, ) { include ::swift::deps validate_array($account_user_list) if ($reseller_prefix) { validate_string($reseller_prefix) } if ($token_life) { validate_integer($token_life) } if ($auth_prefix) { validate_re($auth_prefix,'\/(.*)+\/') } if ($allow_overrides) { validate_bool($allow_overrides) } if ($storage_url_scheme) { validate_re($storage_url_scheme, ['http','https','default']) } concat::fragment { 'swift-proxy-tempauth': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/tempauth.conf.erb'), order => '150', } }",1,1,"class swift::proxy::tempauth ( $account_user_list = [ { 'user' => 'admin', 'account' => 'admin', 'key' => 'admin', 'groups' => [ 'admin','reseller_admin' ], }, ],, concat::fragment {'swift-proxy-tempauth': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/tempauth.conf.erb'), order => '150', }, if ($token_life) { validate_integer($token_life) }, include ::swift::deps, validate_array($account_user_list), validate_array($account_user_list) if ($reseller_prefix) { validate_string($reseller_prefix) }, validate_bool($allow_overrides), validate_re($auth_prefix, '/(.*)+/'), validate_string($reseller_prefix)","CWE-398: Exposed Private Information, CWE-798: Improper Resource Shutdown or Release, CWE-835: Loop with Unreachable Exit Condition","{'reason': 'The vulnerability CWE-398 is relevant because when the key is compromised by a malicious user, they could use this credential to login and gain access to a large amount of private information. This would be a critical issue for the system. Additionally, CWE-798 is relevant because the tempauth module has no mechanism to close an open connection before closing the file. A security vulnerability such as this can result in resource exhaustion, as well as other types of system failure. CWE-835 is also relevant because the tempauth module does not have a safe way to abort from a loop. When a vulnerability such as this is exploited, a program may stop in an unexpected state. This vulnerability would be a major issue for the system.', 'related_cwe': 'CWE-398, CWE-798, CWE-835', 'is_misconfiguration_related': 'Yes'}"
279,"class vitrage::keystone::authtoken( $password, $username = 'vitrage', $auth_url = 'http://localhost:35357', $project_name = 'services', $user_domain_name = $::os_service_default, $project_domain_name = $::os_service_default, $insecure = $::os_service_default, $auth_section = $::os_service_default, $auth_type = 'password', $auth_uri = 'http://localhost:5000', $auth_version = $::os_service_default, $cache = $::os_service_default, $cafile = $::os_service_default, $certfile = $::os_service_default, $check_revocations_for_cached = $::os_service_default, $delay_auth_decision = $::os_service_default, $enforce_token_bind = $::os_service_default, $hash_algorithms = $::os_service_default, $http_connect_timeout = $::os_service_default, $http_request_max_retries = $::os_service_default, $include_service_catalog = $::os_service_default, $keyfile = $::os_service_default, $memcache_pool_conn_get_timeout = $::os_service_default, $memcache_pool_dead_retry = $::os_service_default, $memcache_pool_maxsize = $::os_service_default, $memcache_pool_socket_timeout = $::os_service_default, $memcache_pool_unused_timeout = $::os_service_default, $memcache_secret_key = $::os_service_default, $memcache_security_strategy = $::os_service_default, $memcache_use_advanced_pool = $::os_service_default, $memcached_servers = $::os_service_default, $region_name = $::os_service_default, $revocation_cache_time = $::os_service_default, $signing_dir = $::os_service_default, $token_cache_time = $::os_service_default, ) { keystone::resource::authtoken { 'vitrage_config': username => $username, password => $password, project_name => $project_name, auth_url => $auth_url, auth_uri => $auth_uri, auth_version => $auth_version, auth_type => $auth_type, auth_section => $auth_section, user_domain_name => $user_domain_name, project_domain_name => $project_domain_name, insecure => $insecure, cache => $cache, cafile => $cafile, certfile => $certfile, check_revocations_for_cached => $check_revocations_for_cached, delay_auth_decision => $delay_auth_decision, enforce_token_bind => $enforce_token_bind, hash_algorithms => $hash_algorithms, http_connect_timeout => $http_connect_timeout, http_request_max_retries => $http_request_max_retries, include_service_catalog => $include_service_catalog, keyfile => $keyfile, memcache_pool_conn_get_timeout => $memcache_pool_conn_get_timeout, memcache_pool_dead_retry => $memcache_pool_dead_retry, memcache_pool_maxsize => $memcache_pool_maxsize, memcache_pool_socket_timeout => $memcache_pool_socket_timeout, memcache_secret_key => $memcache_secret_key, memcache_security_strategy => $memcache_security_strategy, memcache_use_advanced_pool => $memcache_use_advanced_pool, memcache_pool_unused_timeout => $memcache_pool_unused_timeout, memcached_servers => $memcached_servers, region_name => $region_name, revocation_cache_time => $revocation_cache_time, signing_dir => $signing_dir, token_cache_time => $token_cache_time, } }",1,1,"auth_type => $auth_type, auth_uri => $auth_uri, auth_version => $auth_version, http_connect_timeout => $http_connect_timeout, http_request_max_retries => $http_request_max_retries, keyfile => $keyfile, memcache_use_advanced_pool => $memcache_use_advanced_pool, memcached_servers => $memcached_servers, password => $password, region_name => $region_name",CWE-259,"{'reason': ""The `auth_type` value can affect how Keystone uses the password or other authentication mechanism. The `password` parameter value directly specifies the user's password for authentication, and `auth_type` defaults to `password`.\\nIf `auth_type` is not set or is set to `password`, Keystone uses the `password` attribute to validate the user's credentials.\\nIf `auth_type` is not set or is set to `oauth2`, Keystone uses the `password` attribute to validate the user's credentials. However, if the `password` attribute is set to a value other than `password`, Keystone uses the `username` attribute to validate the user's credentials.\\nIf `auth_type` is not set or is set to"", 'related_cwe': ""CWE-259: Weak Password Requirements\\\\n\\\\n`http_connect_timeout`\\\\nThe value specified by `http_connect_timeout` will cause the connection timeout when connecting to the Keystone API server, which is necessary to ensure that the connection with the Keystone server will not timeout before obtaining the user's token, which will ensure that the Keystone client can access the Keystone API server without interruption.\\\\n`http_request_max_retries`\\\\nIf the value specified by `http_request_max_retries` is 0, Keystone will automatically disable retrying for all authentication requests. Otherwise, Keystone will retry the authentication request a number of times equal to the value specified by `http_request_max_retries`.\\\\n`password`\\\\nThe password"", 'is_misconfiguration_related': 'No'}"
280,"class redis( $dir, $max_memory = '256mb', $persist = false, $settings = {}, ) { include ::redis::php $defaults = { daemonize => 'yes', pidfile => '/var/run/redis/redis-server.pid', logfile => '/var/log/redis/redis-server.log', dir => $dir, dbfilename => 'redis-db.rdb', maxmemory => $max_memory, maxmemory_policy => 'volatile-lru', maxclients => 1000, save => $persist ? { true => [ 60, 1 ], default => undef }, } package { 'redis-server': ensure => present, } file { $dir: ensure => directory, owner => 'redis', group => 'redis', mode => '0755', require => package['redis-server'], } file { '/etc/redis/redis.conf': content => template('redis/redis.conf.erb'), require => [ package['redis-server'], file[$dir] ], } service { 'redis-server': ensure => running, enable => true, provider => 'debian', subscribe => file['/etc/redis/redis.conf'], require => file['/etc/redis/redis.conf'], } }",1,1,"file['/etc/redis/redis.conf'], package {'redis-server':}, service {'redis-server':}","CWE-120, CWE-20, CWE-22, CWE-345, CWE-89, CWE-94","{'reason': 'This misconfiguration is not related to CWE-94.  There is no indication in the file contents, the file name, or the package contents that it is being called as a privileged command.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
281,"class neutron::agents::metadata ( $shared_secret, $package_ensure = 'present', $enabled = true, $manage_service = true, $debug = false, $auth_ca_cert = $::os_service_default, $metadata_ip = $::os_service_default, $metadata_port = $::os_service_default, $metadata_protocol = $::os_service_default, $metadata_workers = $::processorcount, $metadata_backlog = $::os_service_default, $metadata_memory_cache_ttl = $::os_service_default, $nova_client_cert = $::os_service_default, $nova_client_priv_key = $::os_service_default, $purge_config = false, ) { include ::neutron::deps include ::neutron::params resources { 'neutron_metadata_agent_config': purge => $purge_config, } neutron_metadata_agent_config { 'default/debug': value => $debug; 'default/auth_ca_cert': value => $auth_ca_cert; 'default/nova_metadata_ip': value => $metadata_ip; 'default/nova_metadata_port': value => $metadata_port; 'default/nova_metadata_protocol': value => $metadata_protocol; 'default/metadata_proxy_shared_secret': value => $shared_secret; 'default/metadata_workers': value => $metadata_workers; 'default/metadata_backlog': value => $metadata_backlog; 'default/nova_client_cert': value => $nova_client_cert; 'default/nova_client_priv_key': value => $nova_client_priv_key; } if ! is_service_default ($metadata_memory_cache_ttl) and ($metadata_memory_cache_ttl) { neutron_metadata_agent_config { 'default/cache_url': value => ""memory://?default_ttl=${metadata_memory_cache_ttl}""; } } else { neutron_metadata_agent_config { 'default/cache_url': ensure => absent; } } if $::neutron::params::metadata_agent_package { package { 'neutron-metadata': ensure => $package_ensure, name => $::neutron::params::metadata_agent_package, tag => ['openstack', 'neutron-package'], } } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'neutron-metadata': ensure => $service_ensure, name => $::neutron::params::metadata_agent_service, enable => $enabled, tag => 'neutron-service', } }",1,1,"auth_ca_cert => $auth_ca_cert;, nova_client_cert => $nova_client_cert;, nova_client_priv_key => $nova_client_priv_key;",CWE-287,"{'reason': 'In this specific case, we are dealing with the configuration of the neutron-metadata package. Since the neutron_metadata_agent_config resources are not being configured for default values, this implies that the users are intentionally specifying these settings. The auth_ca_cert, nova_client_cert, and nova_client_priv_key values are all explicitly being set, so users are likely assuming a specific security context in order to specify them. If we look back at the description of the issue, it specifically references setting security credentials. This is likely why the misconfiguration is related to CWE-287. We see that these three specific configuration variables are not required by default, and it is likely that they are being used by the service in question. Thus, users need to be aware that these settings', 'related_cwe': '287', 'is_misconfiguration_related': 'Yes'}"
282,"class dirs::tools { case $::operatingsystem { windows: { file { ""c:/tools"": ensure => directory; } } default: { file { ""/tools"": ensure => directory; } } } }",0,1,"c:/tools, case $::operatingsystem {\n      windows: {\n        file { \, default: {\\\\n    file { \\\\, ensure => directory; \\, ensure => directory; \\\\, ensure => directory; }\\\\\\\\n  } }\\\\\\\\n, ensure => directory; }\\\\n  } } }\\\\n, file { \\, }\\n    }\\n    default: {\\n      file { \\","CWE-252, CWE-276","{'reason': 'The misconfiguration is related to CWE-252 and CWE-276. Specifically, CWE-252 is a more specific vulnerability than CWE-276 in this case, and the reason for this is that misconfigurations such as this could allow remote attackers to cause the machine to write files to an arbitrary location, which would enable them to execute arbitrary code on the target machine with the permissions of the current user (and likely other users).', 'related_cwe': 'CWE-252, CWE-276', 'is_misconfiguration_related': 'Yes'}"
283,"class apt { exec { 'apt-get update': command => '/usr/bin/apt-get update', schedule => daily, } exec { 'ins-apt-transport-https': command => '/usr/bin/apt-get update && /usr/bin/apt-get install -y --force-yes apt-transport-https', environment => 'debian_frontend=noninteractive', unless => '/usr/bin/dpkg -l apt-transport-https', } file { '/usr/local/share/wikimedia-pubkey.asc': source => 'puppet:///modules/apt/wikimedia-pubkey.asc', notify => exec['add_wikimedia_apt_key'], } exec { 'add_wikimedia_apt_key': command => '/usr/bin/apt-key add /usr/local/share/wikimedia-pubkey.asc', before => file['/etc/apt/sources.list.d/wikimedia.list'], refreshonly => true, } file { '/etc/apt/sources.list.d/wikimedia.list': content => template('apt/wikimedia.list.erb'), before => exec['apt-get update'], } file { '/etc/apt/sources.list.d/mwv-apt.list': content => template('apt/mwv-apt.list.erb'), before => exec['apt-get update'], } file { '/etc/apt/multiverse.list.puppet': owner => 'root', group => 'root', mode => '0444', content => template('apt/multiverse.list.erb'), before => exec['apt-get update'], notify => exec['multiverse.list'], } exec { 'multiverse.list': command => 'cp multiverse.list.puppet sources.list.d/multiverse.list', cwd => '/etc/apt', unless => '/bin/grep -q multiverse sources.list', before => exec['apt-get update'], refreshonly => true, } apt::pin { 'wikimedia': package => '*', pin => 'release o=wikimedia', priority => 1001, } if $::shared_apt_cache { file { '/etc/apt/apt.conf.d/20shared-cache': content => ""dir::cache::archives \""${::shared_apt_cache}\"";\n"", } file { ['/vagrant/apt-cache', '/vagrant/composer-cache']: ensure => absent, recurse => true, purge => true, force => true, require => file['/etc/apt/apt.conf.d/20shared-cache'], } } file { '/etc/apt/apt.conf.d/01no-recommended': source => 'puppet:///modules/apt/01no-recommended', owner => 'root', group => 'root', mode => '0444', } class['apt'] -> package <| |> }",1,1,"apt::pin { 'wikimedia': package => '*', pin =>'release o=wikimedia', priority => 1001,}, file { '/etc/apt/apt.conf.d/01no-recommended': source => 'puppet:///modules/apt/01no-recommended',, if $::shared_apt_cache {","CWE-117, CWE-125, CWE-347","{'reason': ""For the first issue, the 'apt::pin' directive is a custom resource provided by the 'apt' module, and the issue is due to its misconfiguration. When a custom resource misconfiguration occurs, it's important to properly understand the reason. It's not enough to check whether the misconfiguration is related to the CWE. Instead, it's necessary to determine the exact reason behind the misconfiguration and its impact. For example, in this case, it's necessary to understand the purpose of the 'apt::pin' directive and its correct configuration. Otherwise, the misconfiguration may not be a serious security issue. In addition, it's important to note that the 'apt::pin' directive's configuration requires specific parameters, and the proper"", 'related_cwe': '117, 125, 347', 'is_misconfiguration_related': 'Yes'}"
284,"class cdh::hadoop::historyserver { class['cdh::hadoop::namenode'] -> class['cdh::hadoop::historyserver'] cdh::hadoop::directory { '/user/history': owner => 'yarn', group => 'hdfs', mode => '1777', require => [service['hadoop-hdfs-namenode'], cdh::hadoop::directory['/user']], } package { 'hadoop-mapreduce-historyserver': ensure => 'installed', require => cdh::hadoop::directory['/user/history'], } service { 'hadoop-mapreduce-historyserver': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, alias => 'historyserver', require => package['hadoop-mapreduce-historyserver'], } }",1,1,"class cdh::hadoop::historyserver { class['cdh::hadoop::namenode'] -> class['cdh::hadoop::historyserver'] cdh::hadoop::directory { '/user/history': owner => 'yarn', group => 'hdfs', mode => '1777', require => [service['hadoop-hdfs-namenode'], cdh::hadoop::directory['/user']], } package { 'hadoop-mapreduce-historyserver': ensure => 'installed', require => cdh::hadoop::directory['/user/history'], } service { 'hadoop-mapreduce-historyserver': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, alias => 'historyserver', require => package['hadoop-mapreduce-historyserver'], } }, package { 'hadoop-mapreduce-historyserver': ensure => 'installed', require => cdh::hadoop::directory['/user/history'], }, service { 'hadoop-mapreduce-historyserver': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, alias => 'historyserver', require => package['hadoop-mapreduce-historyserver'], }",CWE-20,"{'reason': 'User history server should not be started before Namenode', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
285,"class { '::vitrage::keystone::auth': admin_url => 'http://127.0.0.1:8999', internal_url => 'http://127.0.0.1:8999', public_url => 'http://127.0.0.1:8999', password => 'a_big_secret', } class { '::vitrage': } class { '::vitrage::api': enabled => true, keystone_password => 'a_big_secret', keystone_identity_uri => 'http://127.0.0.1:35357/', service_name => 'httpd', } include ::apache class { '::vitrage::wsgi::apache': ssl => false, } class { '::vitrage::auth': auth_password => 'a_big_secret', } class { '::vitrage::graph': } class { '::vitrage::notifier': } class { '::vitrage::client': }",0,1,"admin_url => 'http://127.0.0.1:8999',, auth_password => 'a_big_secret',, internal_url => 'http://127.0.0.1:8999',, keystone_identity_uri => 'http://127.0.0.1:35357/',, keystone_password => 'a_big_secret',, password => 'a_big_secret',, public_url => 'http://127.0.0.1:8999',, service_name => 'httpd',","CWE-312, CWE-319","{'reason': 'Reasoning', 'related_cwe': 'CWE Number', 'is_misconfiguration_related': 'Yes/No'}"
286,"exec { path => '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', provider => 'shell', } file { replace => true, } if($::osfamily == 'debian') { exec['apt_update'] -> package <| |> } stage { 'pre' : before => stage['main'], } $gitrevision = '$id$' notify { ""revision : ${gitrevision}"" :} file { '/var/lib/puppet' : ensure => 'directory', owner => 'puppet', group => 'puppet', mode => '0755', } file { '/var/lib/puppet/gitrevision.txt' : ensure => 'present', owner => 'root', group => 'root', mode => '0444', content => $gitrevision, require => file['/var/lib/puppet'], } node /jenkins-slave\.test-company\.org/ { class { '::fuel_project::jenkins::slave' : external_host => true, } } node /jenkins\.test-company\.org/ { class { '::fuel_project::jenkins::master' :} } node default { $classes = hiera('classes', '') if ($classes) { validate_array($classes) hiera_include('classes') } else { notify { 'default node invocation' :} } }",0,1,"class { '::fuel_project::jenkins::master' :}, exec { path => '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', provider =>'shell', }, file { '/var/lib/puppet' : ensure => 'directory', owner => 'puppet', group => 'puppet', mode => '0755', }, file { '/var/lib/puppet/gitrevision.txt' : ensure => 'present', owner => 'root', group => 'root', mode => '0444', content => $gitrevision, require => file['/var/lib/puppet'], }, file { replace => true, }, if($::osfamily == 'debian') { exec['apt_update'] -> package <| |> }, node /jenkins-slave.test-company.org/ { class { '::fuel_project::jenkins::slave' : external_host => true, } }, node /jenkins.test-company.org/ { class { '::fuel_project::jenkins::master' :} }, node default { $classes = hiera('classes', '') if ($classes) { validate_array($classes) hiera_include('classes') } else { notify { 'default node invocation' :} } }, stage { 'pre' : before => stage['main'], }",CWE-601,"{'reason': 'The issue with the execution of shell commands may lead to uncontrolled code execution and hence the creation of an attack vector.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
287,"class ceilometer::db::postgresql( $password, $dbname = 'ceilometer', $user = 'ceilometer', $encoding = undef, $privileges = 'all', ) { ::openstacklib::db::postgresql { 'ceilometer': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['ceilometer'] ~> exec<| title == 'ceilometer-dbsync' |> }",0,1,"::openstacklib::db::postgresql { 'ceilometer': password_hash => postgresql_password($user, $password),, class ::openstacklib::db::postgresql( $password, $dbname = 'ceilometer', $user = 'ceilometer', $encoding = undef, $privileges = 'all', ), dbname => $dbname,, encoding => $encoding,, privileges => $privileges,, user => $user,",CWE-732,"{'reason': 'The misconfiguration in this line is related to the CWE in that the function in the code may allow attackers to manipulate user-supplied data and change passwords with the provided credentials. This is the case because there is no validation for the values passed in to the function.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
288,"class osnailyfacter::openstack_haproxy::openstack_haproxy_ironic { notice('modular: openstack_haproxy/openstack_haproxy_ironic.pp') $network_metadata = hiera_hash('network_metadata') $public_ssl_hash = hiera_hash('public_ssl', {}) $ssl_hash = hiera_hash('use_ssl', {}) $public_ssl = get_ssl_property($ssl_hash, $public_ssl_hash, 'ironic', 'public', 'usage', false) $public_ssl_path = get_ssl_property($ssl_hash, $public_ssl_hash, 'ironic', 'public', 'path', ['']) $ironic_address_map = get_node_to_ipaddr_map_by_network_role(hiera('ironic_api_nodes'), 'ironic/api') $server_names = hiera_array('ironic_server_names', keys($ironic_address_map)) $ipaddresses = hiera_array('ironic_ipaddresses', values($ironic_address_map)) $public_virtual_ip = hiera('public_vip') $internal_virtual_ip = hiera('management_vip') $baremetal_virtual_ip = $network_metadata['vips']['baremetal']['ipaddr'] $external_lb = hiera('external_lb', false) if !$external_lb { class { '::openstack::ha::ironic': internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, baremetal_virtual_ip => $baremetal_virtual_ip, } } }",0,1,"class { '::openstack::ha::ironic': internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, baremetal_virtual_ip => $baremetal_virtual_ip, }, if $external_lb { class { '::openstack::ha::ironic': internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, baremetal_virtual_ip => $baremetal_virtual_ip, } }, if!$external_lb { class { '::openstack::ha::ironic': internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, baremetal_virtual_ip => $baremetal_virtual_ip, } }",CWE-276,"{'reason': 'The misconfiguration is related to the CWE because it is directly related to misconfiguring HAProxy.', 'related_cwe': 'CWE-276', 'is_misconfiguration_related': 'Yes'}"
289,"class openstack_integration::provision { include ::openstack_integration::config nova_flavor { 'm1.nano': ensure => present, id => '42', ram => '128', disk => '0', vcpus => '1', } nova_flavor { 'm1.micro': ensure => present, id => '84', ram => '128', disk => '0', vcpus => '1', } keystone_user_role['admin@openstack'] -> nova_flavor<||> neutron_network { 'public': tenant_name => 'openstack', router_external => true, provider_physical_network => 'external', provider_network_type => 'flat', } keystone_user_role['admin@openstack'] -> neutron_network<||> neutron_subnet { 'public-subnet': cidr => '172.24.5.0/24', ip_version => '4', allocation_pools => ['start=172.24.5.10,end=172.24.5.200'], gateway_ip => '172.24.5.1', enable_dhcp => false, network_name => 'public', tenant_name => 'openstack', } glance_image { 'cirros': ensure => present, container_format => 'bare', disk_format => 'qcow2', is_public => 'yes', source => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', } glance_image { 'cirros_alt': ensure => present, container_format => 'bare', disk_format => 'qcow2', is_public => 'yes', source => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', } keystone_user_role['admin@openstack'] -> glance_image<||> }",1,1,"class openstack_integration::provision { include ::openstack_integration::config, glance_image { 'cirros': ensure => present, container_format => 'bare', disk_format => 'qcow2', is_public => 'yes', source => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', }, glance_image { 'cirros_alt': ensure => present, container_format => 'bare', disk_format => 'qcow2', is_public => 'yes', source => 'http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img', }, keystone_user_role['admin@openstack'] -> glance_image<||>, keystone_user_role['admin@openstack'] -> neutron_network<||>, keystone_user_role['admin@openstack'] -> nova_flavor<||>, neutron_network { 'public': tenant_name => 'openstack', router_external => true, provider_physical_network => 'external', provider_network_type => 'flat', }, neutron_subnet { 'public-subnet': cidr => '172.24.5.0/24', ip_version => '4', allocation_pools => ['start=172.24.5.10,end=172.24.5.200'], gateway_ip => '172.24.5.1', enable_dhcp => false, network_name => 'public', tenant_name => 'openstack', }, nova_flavor {'m1.micro': ensure => present, id => '84', ram => '128', disk => '0', vcpus => '1', }, nova_flavor {'m1.nano': ensure => present, id => '42', ram => '128', disk => '0', vcpus => '1', }",CWE-601,"{'reason': 'I want to explain the details of the reasoning.', 'related_cwe': 'I want to explain the CWE(s) related to the issue.', 'is_misconfiguration_related': 'Yes'}"
290,"class collectd::settings { include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = ""info"" $global_poll_interval = 300 $global_write_queue_limit_high = 6000 $global_write_queue_limit_low = 6000 case $::operatingsystem { 'centos': { $servicename = 'collectd' $configdir = '/etc' $plugindir = '/etc/collectd.d' $servicepath = undef $servicescript = undef } 'ubuntu': { $servicename = 'collectd' $configdir = '/etc/collectd' $plugindir = '/etc/collectd/collectd.d' $servicepath = undef $servicescript = undef } 'darwin': { $servicename = 'org.collectd.collectd' $configdir = '/usr/local/etc' $plugindir = '/usr/local/etc/collectd.d' $servicepath = '/library/launchdaemons' $servicescript = 'org.collectd.collectd.plist' } default: { fail(""this os is not supported for collectd"") } } }",1,1,"$global_poll_interval = 300 $global_write_queue_limit_high = 6000 $global_write_queue_limit_low = 6000 case $::operatingsystem { \\, class collectd::settings { include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \, class collectd::settings { include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \\, default: { fail(\, include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \\, include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \\\, include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \\\\\\, include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \\\\\\\\\\\\\\, include ::config $write = $::config::collectd_write if $write { $collectd_enabled = true } $syslog_level = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",CWE-502,"{'reason': ""The script contains a 'default' value which, when evaluated, would cause the 'collectd' service to not start. Additionally, the misconfiguration appears to be using a default value for the 'fail' function as well."", 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
291,"class users::homeclean { include ::config include dirs::usr::local::bin $homebase = $::operatingsystem ? { darwin => ""/users"", default => ""/home"" } file { ""${homebase}/archive"": ensure => directory, owner => root, mode => '0700'; ""/usr/local/bin/homeclean.sh"": mode => '0755', content => template(""${module_name}/homeclean.sh.erb""); } cron { ""homeclean"": user => root, command => ""/usr/local/bin/homeclean.sh 2>&1 | logger -t homeclean.sh"", hour => 3, minute => 0, environment => ""mailto=${::config::puppet_notif_email}""; } }",1,1,"cron { \\, environment => \, file { \, hour => 3, mailto=${::config::puppet_notif_email}, minute => 0, user => root","CWE-20, CWE-22","{'reason': '1', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
292,"class logstash::output::elasticsearch( $ensure = present, $host = '127.0.0.1', $flush_size = 100, $idle_flush_time = 1, $index = 'logstash-%{+yyyy.mm.dd}', $port = 9200, $replication = 'sync', $require_tag = undef, $manage_indices = false, $priority = undef, ) { package { 'elasticsearch-curator': ensure => 'present', provider => 'pip', } logstash::conf{ 'output-elasticsearch': ensure => $ensure, content => template('logstash/output/elasticsearch.erb'), priority => $priority, } $ensure_cron = $manage_indices ? { true => 'present', default => 'absent', } cron { 'logstash_delete_index': ensure => $ensure_cron, command => ""/usr/local/bin/curator delete --host ${host} --port ${port} --timestring '%y.%m.%d' --older-than 15"", user => 'root', hour => 0, minute => 42, require => package['elasticsearch-curator'], } cron { 'logstash_optimize_index': ensure => $ensure_cron, command => ""/usr/local/bin/curator optimize --host ${host} --port ${port} --timestring '%y.%m.%d' --older-than 2"", user => 'root', hour => 1, minute => 5, require => package['elasticsearch-curator'], } }",1,1,"manage_indices = false,, priority = undef,, require_tag = undef,",CWE-20,"{'reason': 'This script uses the ensure => present parameter to ensure that elasticsearch-curator package is installed. It also uses manage_indices = false to ensure that the elasticsearch indices are not managed by curator. By using these parameters, the script does not allow the curator to delete the indices older than 15 days. Since the priority parameter is not specified, curator deletes the indices older than 15 days at a time of 0 hour and 42 minutes, and optimizes the indices older than 2 days at a time of 1 hour and 5 minutes. These conditions result in unsecured indices being present on the Elasticsearch server and data loss issues can occur if these indices are modified or deleted by any other process. Hence, the misconfiguration found in', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
293,"define swift::ringbuilder::rebalance( $seed = undef ) { include ::swift::deps validate_re($name, '^object|container|account$') if $seed { validate_re($seed, '^\d+$') } exec { ""rebalance_${name}"": command => strip(""swift-ring-builder /etc/swift/${name}.builder rebalance ${seed}""), path => ['/usr/bin'], refreshonly => true, before => anchor['swift::config::end'], } }",1,1,"before => anchor['swift::config::end'], path => ['/usr/bin'], path => [\, refreshonly => true, validate_re($name, '^object|container|account$'), validate_re($seed, '^\d+$')","CWE-209, CWE-22","{'reason': 'The script `swift::ringbuilder::rebalance` defines the exec resource, which contains the `path` parameter, which defines the path in which the command will be executed. A security issue is created when there is a change to the command, and the `path` is not changed to match the new command. When the `refreshonly => true` directive is added, it means that the exec resource will only be refreshed when the configuration changes. This could prevent the correct `path` from being updated to match the new command and cause a security issue. This is related to the CWE-209 `Use of Externally-Controlled Input to Select Classes or Codes of a Software Library`, which describes using a hardcoded path in a command execution', 'related_cwe': 'CWE-209, CWE-22', 'is_misconfiguration_related': 'Yes'}"
294,"class designate::config ( $designate_config = {}, $api_paste_ini_config = {}, $rootwrap_config = {}, ) { validate_hash($designate_config) validate_hash($api_paste_ini_config) validate_hash($rootwrap_config) create_resources('designate_config', $designate_config) create_resources('designate_api_paste_ini', $api_paste_ini_config) create_resources('designate_rootwrap_config', $rootwrap_config) }",1,1,"create_resources('designate_api_paste_ini', $api_paste_ini_config), create_resources('designate_config', $designate_config), create_resources('designate_rootwrap_config', $rootwrap_config), validate_hash($api_paste_ini_config), validate_hash($designate_config), validate_hash($rootwrap_config)",CWE-20,"{'reason': 'Misconfiguration not related to CWE 20', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
295,notice('modular: contrail/contrail-utils.pp') include contrail class { 'contrail::utils': },1,1,"class { \'contrail::utils\': }, class { \\'contrail::utils\\': }, class { \\\\\'contrail::utils\\\\\\': }, include contrail, notice(\'modular: contrail/contrail-utils.pp\'), notice(\\\'modular: contrail/contrail-utils.pp\\'), notice(\\\\\\\\\\\\\\\\\\'modular: contrail/contrail-utils.pp\\\\\\\\\\\\\\\\\\')",CWE-937,"{'reason': ""This vulnerability could be related to the CWE. The presence of the \\'notice()\\' function could be an indicator of the CWE, as it may allow an attacker to inject malicious code into the script. However, more information may be required to fully understand the nature of the vulnerability and its relation to the CWE."", 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
296,"class tripleo::profile::pacemaker::cinder::volume ( $bootstrap_node = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { service <| tag == 'cinder::volume' |> { hasrestart => true, restart => '/bin/true', start => '/bin/true', stop => '/bin/true', } if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } include ::tripleo::profile::base::cinder::volume if $step >= 3 and $pacemaker_master and hiera('stack_action') == 'update' { cinder_api_paste_ini<||> ~> tripleo::pacemaker::resource_restart_flag[""${::cinder::params::volume_service}""] cinder_config<||> ~> tripleo::pacemaker::resource_restart_flag[""${::cinder::params::volume_service}""] tripleo::pacemaker::resource_restart_flag { ""${::cinder::params::volume_service}"": } } if $step >= 5 and $pacemaker_master { pacemaker::resource::service { $::cinder::params::volume_service : } } }",0,1,puppet code snippet,CWE-ID,"{'reason': 'Explanation why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
297,"class heat::db::sync( $extra_params = '--config-file /etc/heat/heat.conf', ) { include ::heat::deps include ::heat::params exec { 'heat-dbsync': command => ""heat-manage ${extra_params} db_sync"", path => '/usr/bin', user => 'heat', refreshonly => true, logoutput => on_failure, subscribe => [ anchor['heat::install::end'], anchor['heat::config::end'], anchor['heat::dbsync::begin'] ], notify => anchor['heat::dbsync::end'], } }",0,1,"command => \, extra_params = '--config-file /etc/heat/heat.conf',, include ::heat::deps, logoutput => on_failure, notify => anchor['heat::dbsync::end'], path => '/usr/bin', refreshonly => true, subscribe => [ anchor['heat::install::end'], anchor['heat::config::end'], anchor['heat::dbsync::begin'], user => 'heat'","CWE-20, CWE-732, CWE-77, CWE-78","{'reason': 'CWE-20, CWE-732, CWE-77, CWE-78', 'related_cwe': 'CWE-20, CWE-732, CWE-77, CWE-78', 'is_misconfiguration_related': 'Yes'}"
298,"class tripleo::profile::base::keystone ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $manage_db_purge = hiera('keystone_enable_db_purge', true), $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true $manage_roles = true $manage_endpoint = true } else { $sync_db = false $manage_roles = false $manage_endpoint = false } if $step >= 3 and $sync_db { include ::keystone::db::mysql } if $step >= 4 or ( $step >= 3 and $sync_db ) { class { '::keystone': sync_db => $sync_db, enable_bootstrap => $sync_db, rabbit_hosts => $rabbit_hosts, } include ::keystone::config include ::keystone::wsgi::apache include ::keystone::cors if $manage_roles { include ::keystone::roles::admin } if $manage_endpoint { include ::keystone::endpoint } } if $step >= 5 and $manage_db_purge { include ::keystone::cron::token_flush } if $step >= 5 and $manage_endpoint{ if hiera('aodh_api_enabled', false) { include ::aodh::keystone::auth } if hiera('ceilometer_api_enabled', false) { include ::ceilometer::keystone::auth } if hiera('ceph_rgw_enabled', false) { include ::ceph::rgw::keystone::auth } if hiera('cinder_api_enabled', false) { include ::cinder::keystone::auth } if hiera('glance_api_enabled', false) { include ::glance::keystone::auth } if hiera('gnocchi_api_enabled', false) { include ::gnocchi::keystone::auth } if hiera('heat_api_enabled', false) { include ::heat::keystone::auth } if hiera('heat_api_cfn_enabled', false) { include ::heat::keystone::auth_cfn } if hiera('ironic_api_enabled', false) { include ::ironic::keystone::auth } if hiera('manila_api_enabled', false) { include ::manila::keystone::auth } if hiera('mistral_api_enabled', false) { include ::mistral::keystone::auth } if hiera('neutron_api_enabled', false) { include ::neutron::keystone::auth } if hiera('nova_api_enabled', false) { include ::nova::keystone::auth } if hiera('sahara_api_enabled', false) { include ::sahara::keystone::auth } if hiera('swift_proxy_enabled', false) { include ::swift::keystone::auth } if hiera('trove_api_enabled', false) { include ::trove::keystone::auth } } }",1,1,"class { \'keystone\': sync_db => $sync_db,, if hiera(\\'swift_proxy_enabled\\', false) { include \\'swift::keystone::auth\\'}, include ::aodh::keystone::auth, include ::ceilometer::keystone::auth, include ::ceph::rgw::keystone::auth, include ::cinder::keystone::auth, include ::glance::keystone::auth, include ::gnocchi::keystone::auth, include ::heat::keystone::auth, include \\\\'swift::keystone::auth\\\\'}",CWE-19,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
299,"class manila_auxiliary::fs () { user {'manila': ensure => 'present', home => '/var/lib/manila', shell => '/bin/bash', system => true, }-> file {'/etc/manila': ensure => 'directory', owner => 'manila', group => 'manila', }-> file {'/etc/manila/rootwrap.d': ensure => 'directory', owner => 'manila', group => 'manila', } file {'/var/log/manila': ensure => 'directory', owner => 'manila', group => 'manila', } file {'/var/lib/manila': ensure => 'directory', owner => 'manila', group => 'manila', }-> file {'/var/lib/manila/tmp': ensure => 'directory', owner => 'manila', group => 'manila', } file {'/etc/manila/api-paste.ini': source => 'puppet:///modules/manila_auxiliary/api-paste.ini', owner => 'manila', group => 'manila', } file {'/etc/manila/logging_sample.conf': source => 'puppet:///modules/manila_auxiliary/logging_sample.conf', owner => 'manila', group => 'manila', } file {'/etc/manila/policy.json': source => 'puppet:///modules/manila_auxiliary/policy.json', owner => 'manila', group => 'manila', } file {'/etc/manila/rootwrap.conf': source => 'puppet:///modules/manila_auxiliary/rootwrap.conf', owner => 'root', group => 'root', } file {'/etc/manila/rootwrap.d/share.filters': source => 'puppet:///modules/manila_auxiliary/share.filters', owner => 'root', group => 'root', } file {'/etc/sudoers.d/manila-common': source => 'puppet:///modules/manila_auxiliary/manila-common', owner => 'root', group => 'root', } }",0,1,"-> file {'/etc/manila': ensure => 'directory', owner =>'manila', group =>'manila', },, file {'/etc/manila/api-paste.ini': source => 'puppet:///modules/manila_auxiliary/api-paste.ini', owner =>'manila', group =>'manila', }, file {'/etc/manila/logging_sample.conf': source => 'puppet:///modules/manila_auxiliary/logging_sample.conf', owner =>'manila', group =>'manila', }, file {'/etc/manila/policy.json': source => 'puppet:///modules/manila_auxiliary/policy.json', owner =>'manila', group =>'manila', }, file {'/etc/manila/rootwrap.conf': source => 'puppet:///modules/manila_auxiliary/rootwrap.conf', owner =>'root', group =>'root', }, file {'/etc/manila/rootwrap.d': ensure => 'directory', owner =>'manila', group =>'manila', }, file {'/etc/manila/rootwrap.d/share.filters': source => 'puppet:///modules/manila_auxiliary/share.filters', owner =>'root', group =>'root', }, file {'/var/lib/manila': ensure => 'directory', owner =>'manila', group =>'manila', }, file {'/var/lib/manila/tmp': ensure => 'directory', owner =>'manila', group =>'manila', }, file {'/var/log/manila': ensure => 'directory', owner =>'manila', group =>'manila', }",CWE-16,"{'reason': 'Manila configuration files are owned by the user manila, allowing unprivileged users to modify configuration files.', 'related_cwe': 'CWE-16', 'is_misconfiguration_related': 'Yes'}"
300,include registry,0,1,include registry,CWE-732,"{'reason': 'This misconfiguration relates to the CWE because [Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
301,"class keystone::python ( $client_package_name = $keystone::params::client_package_name, $ensure = 'present' ) inherits keystone::params { warning('this class is deprecated, has no effect, and will be removed in newton') }",1,1,"class keystone::python ( $client_package_name = $keystone::params::client_package_name, $ensure = 'present' ), class keystone::python ( $client_package_name = $keystone::params::client_package_name, $ensure = 'present' ) inherits keystone::params, class keystone::python ( $client_package_name = $keystone::params::client_package_name, $ensure = 'present' ) inherits keystone::params { warning('this class is deprecated, has no effect, and will be removed in newton') }, keystone::params, keystone::python, warning('this class is deprecated, has no effect, and will be removed in newton')",CWE-732,"{'reason': 'This error might allow puppet to run without errors on other distributions, since it will not actually run as expected.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
302,"class aws_manager::settings { include ::config $root = $::config::aws_manager_root $cloud_tools_dst = ""${root}/cloud-tools"" $secrets_dir = ""${root}/secrets"" $cloudtrail_logs_dir = ""${root}/cloudtrail_logs"" $events_dir= ""${cloudtrail_logs_dir}/events"" $distinguished_aws_manager = $config::distinguished_aws_manager $cron_switch = $fqdn ? { $distinguished_aws_manager => present, default => absent, } }",0,1,include ::config,CWE-352,"{'reason': ""The script's purpose is to configure AWS settings based on the configuration parameters set. Including configuration in Puppet code, such as in this line, is not recommended, as it will limit the flexibility of the code to adjust to different configurations. Instead, a centralized configuration file can be used, such as a YAML or JSON file, to store the configuration parameters. This allows for easy updates and changes to the configuration without having to change the code. By doing this, we can ensure that our code remains flexible and adaptable to different configurations, and we can avoid introducing security issues due to hard-coded configuration values."", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
303,"class ceilometer::keystone::auth ( $password = false, $email = 'ceilometer@localhost', $auth_name = 'ceilometer', $configure_user = true, $configure_user_role = true, $service_name = 'ceilometer', $service_type = 'metering', $service_description = 'openstack metering service', $region = 'regionone', $tenant = 'services', $configure_endpoint = true, $public_url = 'http://127.0.0.1:8777', $admin_url = 'http://127.0.0.1:8777', $internal_url = 'http://127.0.0.1:8777', ) { validate_string($password) ::keystone::resource::service_identity { 'ceilometer': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_type => $service_type, service_description => $service_description, service_name => $service_name, region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, roles => ['admin', 'reselleradmin'], public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, } if $configure_user_role { if !defined(keystone_role['reselleradmin']) { keystone_role { 'reselleradmin': ensure => present, } } keystone_role['reselleradmin'] -> keystone_user_role[""${auth_name}@${tenant}""] } }",1,1,keystone_role['reselleradmin'],"CWE-22, CWE-259, CWE-266, CWE-366, CWE-369, CWE-376, CWE-398, CWE-403, CWE-409, CWE-415","{'reason': 'No', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
304,class role::apex { mediawiki::skin { 'apex': } },1,1,"class role::apex { mediawiki::skin { 'apex' } }, class role::apex { mediawiki::skin { 'apex': } }, class role::apex { mediawiki::skin { \\'apex\\': } }, mediawiki::skin { 'apex' }, mediawiki::skin { 'apex': }, mediawiki::skin { \'apex\': }",CWE-306,"{'reason': 'CWE-306: Missing Authorization', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
305,"class cinder::volume::gpfs( $gpfs_mount_point_base, $gpfs_images_dir = $::os_service_default, $gpfs_images_share_mode = $::os_service_default, $gpfs_max_clone_depth = $::os_service_default, $gpfs_sparse_volumes = $::os_service_default, $gpfs_storage_pool = $::os_service_default, $nas_host = $::os_service_default, $nas_login = $::os_service_default, $nas_password = $::os_service_default, $nas_private_key = $::os_service_default, $nas_ssh_port = $::os_service_default, $extra_options = {} ) { warning('usage of cinder::volume::gpfs is deprecated, please use cinder::backend::gpfs instead.') cinder::backend::gpfs { 'default': gpfs_mount_point_base => $gpfs_mount_point_base, gpfs_images_dir => $gpfs_images_dir, gpfs_images_share_mode => $gpfs_images_share_mode, gpfs_max_clone_depth => $gpfs_max_clone_depth, gpfs_sparse_volumes => $gpfs_sparse_volumes, gpfs_storage_pool => $gpfs_storage_pool, nas_host => $nas_host, nas_login => $nas_login, nas_password => $nas_password, nas_private_key => $nas_private_key, nas_ssh_port => $nas_ssh_port, extra_options => $extra_options, } }",0,1,cinder::backend::gpfs { 'default':,"CWE-284, CWE-285, CWE-330, CWE-399, CWE-400, CWE-408, CWE-411, CWE-422, CWE-467, CWE-470","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
306,"class cluster::dns_ocf { $service_name = 'p_dns' $primitive_class = 'ocf' $primitive_provider = 'fuel' $primitive_type = 'ns_dns' $complex_type = 'clone' $complex_metadata = { 'interleave' => 'true', } $metadata = { 'migration-threshold' => '3', 'failure-timeout' => '120', } $parameters = { 'ns' => 'vrouter', } $operations = { 'monitor' => { 'interval' => '20', 'timeout' => '10' }, 'start' => { 'timeout' => '30' }, 'stop' => { 'timeout' => '30' }, } pacemaker::service { $service_name : primitive_class => $primitive_class, primitive_provider => $primitive_provider, primitive_type => $primitive_type, complex_type => $complex_type, complex_metadata => $complex_metadata, metadata => $metadata, parameters => $parameters, operations => $operations, prefix => false, } pcmk_colocation { 'dns-with-vrouter-ns' : ensure => 'present', score => 'infinity', first => ""clone_p_vrouter"", second => ""clone_${service_name}"", } pcmk_resource[$service_name] -> pcmk_colocation['dns-with-vrouter-ns'] -> service[$service_name] service { $service_name: ensure => 'running', enable => true, hasstatus => true, hasrestart => true, } }",1,1,"class cluster::dns_ocf {\n, enable => true, hasstatus => true, hasrestart => true,}, metadata => $metadata,, operations => $operations,, pacemaker::service { $service_name :, parameters => $parameters,, pcmk_resource[$service_name] -> pcmk_colocation['dns-with-vrouter-ns'] -> service[$service_name], service { $service_name:, }",CWE-250,"{'reason': 'The puppet code provided a service block for the dns ocf class, this block should not have been added since there are service blocks provided in the cluster.pp manifest.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
307,"class keystone::client ( $client_package_name = $keystone::params::client_package_name, $ensure = 'present' ) inherits keystone::params { include ::keystone::deps package { 'python-keystoneclient': ensure => $ensure, name => $client_package_name, tag => 'openstack', } include '::openstacklib::openstackclient' }",0,1,"class keystone::client ( $client_package_name = $keystone::params::client_package_name, $ensure = 'present' ) inherits keystone::params {, include '::openstacklib::openstackclient', include ::keystone::deps, package {\n  'python-keystoneclient':\n    ensure => 'present',\n    name => $client_package_name,\n    tag => 'openstack',\n  }","CWE-16, CWE-200","{'reason': 'In puppet, there are two types of classes - base classes and derived classes. In the script, class keystone::client is a derived class, as it is defined using the inherits keyword.\\n\\nDerived classes have all of the attributes of their parent base classes, which is to say that they share the attributes of their parent class. In this case, keystone::client is inheriting attributes from the parent class keystone::params.\\n\\nDerived classes have the ability to add additional attributes to the set defined by the base class. This is what the include keyword is used for in the example script. For the base class keystone::params, the attribute keystone::params::client_package_name is defined. The derived class keystone', 'related_cwe': 'CWE-16, CWE-200', 'is_misconfiguration_related': 'Yes'}"
308,"class keystone::federation::shibboleth( $methods, $admin_port = false, $main_port = true, $module_plugin = 'keystone.auth.plugins.mapped.mapped', $suppress_warning = false, $template_order = 331, $yum_repo_name = 'shibboleth' ) { include ::apache include ::keystone::deps if $template_order <= 330 or $template_order >= 999 { fail('the template order should be greater than 330 and less than 999.') } if ('external' in $methods ) { fail('the external method should be dropped to avoid any interference with some apache + shibboleth sp setups, where a remote_user env variable is always set, even as an empty value.') } if !('saml2' in $methods ) { fail('methods should contain saml2 as one of the auth methods.') }else{ if ($module_plugin != 'keystone.auth.plugins.mapped.mapped') { fail('the plugin for saml and shibboleth should be keystone.auth.plugins.mapped.mapped') } } validate_bool($admin_port) validate_bool($main_port) validate_bool($suppress_warning) if( !$admin_port and !$main_port){ fail('no virtualhost port to configure, please choose at least one.') } keystone_config { 'auth/methods': value => join(any2array($methods),','); 'auth/saml2': value => $module_plugin; } if $::osfamily == 'debian' or ($::osfamily == 'redhat' and (defined(yumrepo[$yum_repo_name])) or defined(package['shibboleth'])) { if $::osfamily == 'redhat' { warning('the platform is not officially supported, use at your own risk. check manifest documentation for more.') apache::mod { 'shib2': id => 'mod_shib', path => '/usr/lib64/shibboleth/mod_shib_24.so' } } else { class { '::apache::mod::shib': } } if $admin_port { concat::fragment { 'configure_shibboleth_on_port_35357': target => ""${keystone::wsgi::apache::priority}-keystone_wsgi_admin.conf"", content => template('keystone/shibboleth.conf.erb'), order => $template_order, } } if $main_port { concat::fragment { 'configure_shibboleth_on_port_5000': target => ""${keystone::wsgi::apache::priority}-keystone_wsgi_main.conf"", content => template('keystone/shibboleth.conf.erb'), order => $template_order, } } } elsif $::osfamily == 'redhat' { if !$suppress_warning { warning( 'can not configure shibboleth in apache on redhat os.read the note on this federation/shibboleth.pp' ) } } else { fail('unsupported platform') } }",1,1,"if $admin_port { concat::fragment { 'configure_shibboleth_on_port_35357': target =>, if $main_port { concat::fragment { 'configure_shibboleth_on_port_5000': target =>, keystone_config { 'auth/saml2': value => $module_plugin; }",CWE-250,"{'reason': ""The misconfiguration in the provided script is not related to CWE-250. It's more of a security recommendation issue that can be mitigated by implementing security best practices."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
309,"class packages::python_ldap { case $::operatingsystem { centos: { package { ""python-ldap"": ensure => present; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"case $::operatingsystem { \\, case $::operatingsystem { \\\\\\, ensure => present; \\, ensure => present; \\\\, ensure => present; \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, fail(\\\, fail(\\\\\\\\\\, package { \, package { \\, package { \\\\\\\\\\\\\\\\\\\\\","CWE-16, CWE-20","{'reason': 'The misconfiguration is related to the CWE since the Puppet code may lead to code injection.', 'related_cwe': 'CWE-16, CWE-20', 'is_misconfiguration_related': 'Yes'}"
310,class buildslave { anchor { 'buildslave::begin': ; 'buildslave::end': ; } anchor['buildslave::begin'] -> class { 'buildslave::install': ; } -> anchor['buildslave::end'] anchor['buildslave::begin'] -> class { 'buildslave::startup': ; } -> anchor['buildslave::end'] },0,1,"anchor { 'buildslave::begin': ; 'buildslave::end': ; }, anchor['buildslave::begin'] -> class { 'buildslave::install': ; } -> anchor['buildslave::end'], anchor['buildslave::begin'] -> class { 'buildslave::startup': ; } -> anchor['buildslave::end'], class { 'buildslave::startup': ;}","CWE-269, CWE-272, CWE-276","{'reason': 'When a new Puppet class is added that is dependent on a previous class being defined, the original anchor misconfiguration is a valid way to ensure that the new class will not fail to run because the previous class was not yet defined at the point the new class is compiled.', 'related_cwe': 'CWE-269, CWE-272, CWE-276', 'is_misconfiguration_related': 'Yes'}"
311,class { '::openstack_tasks::murano::cfapi' :} class openstack::firewall {} include openstack::firewall warning('osnailyfacter/modular/./murano/cfapi.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/cfapi.pp'),1,1,"class { '::openstack_tasks::murano::cfapi' :}, include openstack::firewall, warning('osnailyfacter/modular/./murano/cfapi.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/cfapi.pp')",CWE-352,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
312,"define oslo::messaging::zmq( $rpc_cast_timeout = $::os_service_default, $rpc_poll_timeout = $::os_service_default, $rpc_zmq_bind_address = $::os_service_default, $rpc_zmq_bind_port_retries = $::os_service_default, $rpc_zmq_concurrency = $::os_service_default, $rpc_zmq_contexts = $::os_service_default, $rpc_zmq_host = $::os_service_default, $rpc_zmq_ipc_dir = $::os_service_default, $rpc_zmq_matchmaker = $::os_service_default, $rpc_zmq_max_port = $::os_service_default, $rpc_zmq_min_port = $::os_service_default, $rpc_zmq_topic_backlog = $::os_service_default, $use_pub_sub = $::os_service_default, $zmq_target_expire = $::os_service_default, ) { if ! ( is_service_default($rpc_zmq_concurrency) or $rpc_zmq_concurrency in [ 'eventlet', 'native' ] ) { fail('unsupported type of zmq concurrency is used.') } $zmq_options = { 'default/rpc_cast_timeout' => { value => $rpc_cast_timeout }, 'default/rpc_poll_timeout' => { value => $rpc_poll_timeout }, 'default/rpc_zmq_bind_address' => { value => $rpc_zmq_bind_address }, 'default/rpc_zmq_bind_port_retries' => { value => $rpc_zmq_bind_port_retries }, 'default/rpc_zmq_concurrency' => { value => $rpc_zmq_concurrency }, 'default/rpc_zmq_contexts' => { value => $rpc_zmq_contexts }, 'default/rpc_zmq_host' => { value => $rpc_zmq_host }, 'default/rpc_zmq_ipc_dir' => { value => $rpc_zmq_ipc_dir }, 'default/rpc_zmq_matchmaker' => { value => $rpc_zmq_matchmaker }, 'default/rpc_zmq_max_port' => { value => $rpc_zmq_max_port }, 'default/rpc_zmq_min_port' => { value => $rpc_zmq_min_port }, 'default/rpc_zmq_topic_backlog' => { value => $rpc_zmq_topic_backlog }, 'default/use_pub_sub' => { value => $use_pub_sub }, 'default/zmq_target_expire' => { value => $zmq_target_expire }, 'default/rpc_backend' => { value => 'zmq' }, } create_resources($name, $zmq_options) }",0,1,"if! ( is_service_default($rpc_zmq_concurrency) or $rpc_zmq_concurrency in [ 'eventlet', 'native' ] ) { fail('unsupported type of zmq concurrency is used.') }, rpc_zmq_bind_port_retries = $::os_service_default,, rpc_zmq_concurrency = $::os_service_default,, rpc_zmq_contexts = $::os_service_default,, rpc_zmq_host = $::os_service_default,, rpc_zmq_ipc_dir = $::os_service_default,, rpc_zmq_matchmaker = $::os_service_default,, rpc_zmq_max_port = $::os_service_default,, rpc_zmq_min_port = $::os_service_default,, rpc_zmq_topic_backlog = $::os_service_default,",CWE-754,"{'reason': 'Explanation', 'related_cwe': 'CWE-XXX', 'is_misconfiguration_related': 'Yes'}"
313,"define elasticsearch::plugin( $ensure = present, $group = undef, $esname = undef, $url = undef, $core = false, ) { $es_dir = '/usr/share/elasticsearch' $dirname = $esname ? { undef => regsubst($title, '^elasticsearch-', ''), default => $esname } $version = $ensure ? { present => $elasticsearch::version, absent => $elasticsearch::version, undef => $elasticsearch::version, default => $ensure } $_esversion = $elasticsearch::version $plugin_dir = ""${es_dir}/plugins/${dirname}"" $plugin_identifier = $core ? { true => $title, false => ""${group}/${title}/${version}"" } $url_param = $url ? { undef => '', default => ""--url ${url}"" } case $ensure { present: { exec { ""prune_es_plugin_${title}"": command => ""${es_dir}/bin/plugin remove ${dirname}"", unless => ""egrep -s ^version=${version} ${plugin_dir}/plugin-descriptor.properties"", require => package['elasticsearch'], notify => service['elasticsearch'], } exec { ""cleanup_old_plugins_${title}"": command => ""find ${es_dir}/plugins -mindepth 1 -maxdepth 1 -type d '!' \ '(' -exec test -e '{}/plugin-descriptor.properties' ';' -a \ -exec egrep -q \""(^elasticsearch.version=${_esversion}|^site=true)\"" \ {}/plugin-descriptor.properties \\; ')' \ -exec sh -c '${es_dir}/bin/plugin remove `basename {}`' ';'"", onlyif => ""find ${es_dir}/plugins -mindepth 1 -maxdepth 1 -type d '!' \ '(' -exec test -e '{}/plugin-descriptor.properties' ';' -a \ -exec egrep -q \""(^elasticsearch.version=${_esversion}|^site=true)\"" \ {}/plugin-descriptor.properties \\; ')' -print | grep ."", require => package['elasticsearch'], notify => service['elasticsearch'], } exec { ""install_es_plugin_${title}"": command => ""${es_dir}/bin/plugin install ${plugin_identifier} ${url_param}"", unless => ""egrep -s ^version=${version} ${plugin_dir}/plugin-descriptor.properties"", require => [ package['elasticsearch'], exec[""prune_es_plugin_${title}""], exec[""cleanup_old_plugins_${title}""], ], notify => service['elasticsearch'], } } absent: { exec { ""uninstall_es_plugin_${title}"": command => ""${es_dir}/bin/plugin remove ${title}"", onlyif => ""/usr/bin/test -d ${plugin_dir}"", require => package['elasticsearch'], notify => service['elasticsearch'], } } default: { fail(""'ensure' may be 'present' or 'absent' (got: '${ensure}')."") } } }",1,0,case $ensure { present: {,CWE-416: Use After Free,"{'reason': 'The misconfiguration is related to the CWE because it can cause a use after free vulnerability if it is not handled properly.', 'related_cwe': 'CWE-416', 'is_misconfiguration_related': 'Yes'}"
314,"class packages::mozilla::py27_mercurial { anchor { 'packages::mozilla::py27_mercurial::begin': ; 'packages::mozilla::py27_mercurial::end': ; } include packages::mozilla::python27 include mercurial::ext::bundleclone include mercurial::system_hgrc case $::operatingsystem { centos: { $mercurial = ""/tools/python27-mercurial/bin/hg"" anchor['packages::mozilla::py27_mercurial::begin'] -> package { ""mozilla-python27-mercurial"": ensure => '3.2.1-1.el6', require => class['packages::mozilla::python27']; } -> anchor['packages::mozilla::py27_mercurial::end'] } ubuntu: { $mercurial = ""/tools/python27-mercurial/bin/hg"" realize(packages::aptrepo['mozilla-mercurial']) anchor['packages::mozilla::py27_mercurial::begin'] -> package { ""mozilla-python27-mercurial"": ensure => '3.2.1', require => class['packages::mozilla::python27']; } -> anchor['packages::mozilla::py27_mercurial::end'] file { ""/usr/bin/hg"": ensure => ""link"", replace => ""no"", mode => 755, target => $mercurial; } } darwin: { $mercurial = ""/tools/python27-mercurial/bin/hg"" anchor['packages::mozilla::py27_mercurial::begin'] -> packages::pkgdmg { python27-mercurial: version => ""3.2.1-1""; } -> anchor['packages::mozilla::py27_mercurial::end'] } windows: { $mercurial = 'c:\mozilla-build\hg\hg.exe' include packages::mozilla::mozilla_build anchor['packages::mozilla::py27_mercurial::begin'] -> file { ""c:/installersource/puppetagain.pub.build.mozilla.org/exes/mercurial-3.2.1-x64.exe"" : ensure => file, source => ""puppet:///repos/exes/mercurial-3.2.1-x64.exe"", } -> exec { ""mercurial-3.2.1"": command => ""c:\\installersource\\puppetagain.pub.build.mozilla.org\\exes\\mercurial-3.2.1-x64.exe /verysilent /suppressmsgboxes /dir=c:\\mozilla-build\\hg"", subscribe => exec[""remove_old_hg""], creates => ""c:\\mozilla-build\\hg\\mpr.dll"", } -> anchor['packages::mozilla::py27_mercurial::end'] } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"real issue 1, real issue 10, real issue 2, real issue 3, real issue 4, real issue 5, real issue 6, real issue 7, real issue 8, real issue 9","1, 10, 2, 3, 4, 5, 6, 7, 8, 9","{'reason': 'This puppet script contains a case statement to install mercurial for different operating systems. However, no specific version of mercurial is provided for the ubuntu platform, which allows the installation of an older version of mercurial.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
315,"class neutron::plugins::ml2::cisco::nexus1000v ( $n1kv_vsm_ip = $::os_service_default, $n1kv_vsm_username = $::os_service_default, $n1kv_vsm_password = $::os_service_default, $default_policy_profile = 'default-pp', $default_vlan_network_profile = 'default-vlan-np', $default_vxlan_network_profile = 'default-vxlan-np', $poll_duration = '60', $http_pool_size = '4', $http_timeout = '15', $sync_interval = '300', $max_vsm_retries = '2', $restrict_policy_profiles = 'false', $enable_vif_type_n1kv = 'false', ) { include ::neutron::deps include ::neutron::plugins::ml2::cisco neutron_plugin_ml2 { 'ml2_cisco_n1kv/n1kv_vsm_ips' : value => $n1kv_vsm_ip; 'ml2_cisco_n1kv/username' : value => $n1kv_vsm_username; 'ml2_cisco_n1kv/password' : value => $n1kv_vsm_password; 'ml2_cisco_n1kv/default_policy_profile' : value => $default_policy_profile; 'ml2_cisco_n1kv/default_vlan_network_profile' : value => $default_vlan_network_profile; 'ml2_cisco_n1kv/default_vxlan_network_profile' : value => $default_vxlan_network_profile; 'ml2_cisco_n1kv/poll_duration' : value => $poll_duration; 'ml2_cisco_n1kv/http_pool_size' : value => $http_pool_size; 'ml2_cisco_n1kv/http_timeout' : value => $http_timeout; 'ml2_cisco_n1kv/sync_interval' : value => $sync_interval; 'ml2_cisco_n1kv/max_vsm_retries' : value => $max_vsm_retries; 'ml2_cisco_n1kv/restrict_policy_profiles' : value => $restrict_policy_profiles; 'ml2_cisco_n1kv/enable_vif_type_n1kv' : value => $enable_vif_type_n1kv; } }",0,1,"class neutron::plugins::ml2::cisco::nexus1000v, include ::neutron::deps, include ::neutron::plugins::ml2::cisco, neutron_plugin_ml2, value => $default_policy_profile;, value => $default_vlan_network_profile;, value => $default_vxlan_network_profile;, value => $n1kv_vsm_ip;, value => $n1kv_vsm_password;, value => $n1kv_vsm_username;",CWE-22,"{'reason': 'This misconfiguration is related to CWE-22.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
316,"class designate::pool_manager( $pool_id, $manage_package = true, $package_ensure = present, $pool_manager_package_name = undef, $enabled = true, $service_ensure = 'running', $workers = $::os_service_default, $threads = $::os_service_default, $threshold_percentage = $::os_service_default, $poll_timeout = $::os_service_default, $poll_retry_interval = $::os_service_default, $poll_max_retries = $::os_service_default, $poll_delay = $::os_service_default, $enable_recovery_timer = $::os_service_default, $periodic_recovery_interval = $::os_service_default, $enable_sync_timer = $::os_service_default, $periodic_sync_interval = $::os_service_default, $periodic_sync_seconds = $::os_service_default, $periodic_sync_max_attempts = $::os_service_default, $periodic_sync_retry_interval = $::os_service_default, ) { include ::designate::params if $pool_id !~ /^[[:xdigit:]]{8}-[[:xdigit:]]{4}-[[:xdigit:]]{4}-[[:xdigit:]]{4}-[[:xdigit:]]{12}$/ { fail('pool_id should be a valid uuid') } if $manage_package { package { 'designate-pool-manager': ensure => $package_ensure, name => pick($pool_manager_package_name, $::designate::params::pool_manager_package_name), tag => ['openstack', 'designate-package'], } } service { 'designate-pool-manager': ensure => $service_ensure, name => $::designate::params::pool_manager_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => ['openstack', 'designate-service'], } designate_config { 'service:pool_manager/pool_id': value => $pool_id; 'service:pool_manager/workers': value => $workers; 'service:pool_manager/threads': value => $threads; 'service:pool_manager/threshold_percentage': value => $threshold_percentage; 'service:pool_manager/poll_timeout': value => $poll_timeout; 'service:pool_manager/poll_retry_interval': value => $poll_retry_interval; 'service:pool_manager/poll_max_retries': value => $poll_max_retries; 'service:pool_manager/poll_delay': value => $poll_delay; 'service:pool_manager/periodic_recovery_interval': value => $periodic_recovery_interval; 'service:pool_manager/periodic_sync_interval': value => $periodic_sync_interval; 'service:pool_manager/periodic_sync_seconds': value => $periodic_sync_seconds; 'service:pool_manager/enable_recovery_timer': value => $enable_recovery_timer; 'service:pool_manager/enable_sync_timer': value => $enable_sync_timer; 'service:pool_manager/periodic_sync_max_attempts': value => $periodic_sync_max_attempts; 'service:pool_manager/periodic_sync_retry_interval': value => $periodic_sync_retry_interval; } }",1,1,"if $manage_package {, if $pool_id!~ /^[[:xdigit:]]{8}-[[:xdigit:]]{4}-[[:xdigit:]]{4}-[[:xdigit:]]{4}-[[:xdigit:]]{12}$/{",CWE-22,"{'reason': 'The pool_id argument should be a valid UUID. If the variable is not set correctly, it will not be a valid UUID.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
317,"class role::oozie { require ::mysql require ::role::hadoop class { '::cdh::oozie': } class { '::cdh::oozie::server': db_root_password => $::mysql::root_password, } exec['wait_for_hdfs'] -> cdh::hadoop::directory['/user/oozie'] exec['set_mysql_password'] -> exec['oozie_mysql_create_database'] }",0,1,mysql_root_password = $::mysql::root_password,CWE-259: Use of Hard-coded Password,"{'reason': 'Using hard-coded passwords to connect to the database is very insecure.', 'related_cwe': 'CWE-259: Use of Hard-coded Password', 'is_misconfiguration_related': 'Yes'}"
318,"class osnailyfacter::apache::apache { notice('modular: apache/apache.pp') sysctl::value { 'net.core.somaxconn': value => '4096' } sysctl::value { 'net.ipv4.tcp_max_syn_backlog': value => '8192' } class { '::osnailyfacter::apache': purge_configs => false, listen_ports => hiera_array('apache_ports', ['0.0.0.0:80']), log_formats => { 'combined' => '%h %l %u %{%d/%b/%y:%t}t.%{msec_frac}t \""%r\"" %>s %b \""%{referer}i\"" \""%{user-agent}i\""', 'common' => '%h %l %u %{%d/%b/%y:%t}t.%{msec_frac}t \""%r\"" %>s %b', 'forwarded' => '%{x-forwarded-for}i %l %u %{%d/%b/%y:%t}t.%{msec_frac}t \""%r\"" %s %b \""%{referer}i\"" \""%{user-agent}i\""' } } include ::osnailyfacter::apache_mpm }",0,1,"class { '::osnailyfacter::apache':, include ::osnailyfacter::apache_mpm, listen_ports => hiera_array('apache_ports', ['0.0.0.0:80']),, log_formats => { \\, net.core.somaxconn', \\, net.ipv4.tcp_max_syn_backlog',, purge_configs => false,, sysctl::value { \","CWE-125, CWE-126, CWE-128, CWE-129","{'reason': 'Please include a more detailed description of your reasoning as to why the misconfiguration is related to the CWE.', 'related_cwe': 'CWE-129', 'is_misconfiguration_related': 'Yes'}"
319,"class gnocchi::db::mysql( $password, $dbname = 'gnocchi', $user = 'gnocchi', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ) { validate_string($password) ::openstacklib::db::mysql { 'gnocchi': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['gnocchi'] ~> exec<| title == 'gnocchi-db-sync' |> }",1,1,"class gnocchi::db::mysql( $password, $dbname = 'gnocchi', $user = 'gnocchi', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ) {","CWE-22, CWE-312, CWE-327, CWE-601, CWE-602, CWE-732, CWE-733","{'reason': 'The provided configuration snippet is susceptible to an attack, in which an attacker might be able to guess or discover the value of the provided password for the user \\', 'related_cwe': 'CWE-22, CWE-312, CWE-601, CWE-602', 'is_misconfiguration_related': 'Yes'}"
320,"class puppet::cleanup { if ($::operatingsystem == 'centos') { file { ['/var/log/anaconda.log', '/var/log/anaconda.syslog']: ensure => absent; } } }",0,1,"if ($::operatingsystem == 'centos') { file { ['/var/log/anaconda.log', '/var/log/anaconda.syslog']: ensure => absent; } }",CWE-276,"{'reason': 'A potential explanation...', 'related_cwe': 'CWE-276', 'is_misconfiguration_related': 'Yes'}"
321,"class packages::debmirror { case $::operatingsystem { centos: { realize(packages::yumrepo['debian']) package { ""debmirror"": ensure => latest; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"class packages::debmirror { case $::operatingsystem { centos: { fail(\\\\, class packages::debmirror { case $::operatingsystem { centos: { package { \, ensure => latest; } } }, ensure => latest; } } } default: { fail(\\, fail(\, fail(\\\\, fail(\\\\\\\\, package { \, packages::debmirror\n, realize(packages::yumrepo['debian']) } }","CWE-601, CWE-602, CWE-604, CWE-606, CWE-607, CWE-608, CWE-609, CWE-610, CWE-611, CWE-612","{'reason': 'Explanation that the CWE is related to the misconfiguration', 'related_cwe': 'CWE-601, CWE-602, CWE-604, CWE-606, CWE-607, CWE-608, CWE-609, CWE-610, CWE-611, CWE-612', 'is_misconfiguration_related': 'Yes'}"
322,"class kafka::server::monitoring( $jmx_port = 9999, $nagios_servicegroup = undef, $group_prefix = undef, ) { nrpe::monitor_service { 'kafka': description => 'kafka broker server', nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1:1 -c java -a ""kafka.kafka /etc/kafka/server.properties""', require => class['::kafka::server'], critical => true, } if !defined(nrpe::monitor_service['jmxtrans']) { nrpe::monitor_service { 'jmxtrans': description => 'jmxtrans', nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1:1 -c java --ereg-argument-array ""-jar.+jmxtrans-all.jar""', require => service['jmxtrans'], } } $graphite_broker_key = regsubst(""${::fqdn}_${jmx_port}"", '\.', '_', 'g') monitoring::graphite_threshold { 'kafka-broker-underreplicatedpartitions': description => 'kafka broker under replicated partitions', metric => ""${group_prefix}kafka.${graphite_broker_key}.kafka.server.replicamanager.underreplicatedpartitions.value"", warning => '1', critical => '10', from => '30min', percentage => 50, require => class['::kafka::server::jmxtrans'], group => $nagios_servicegroup, } monitoring::graphite_threshold { 'kafka-broker-replica-maxlag': ensure => 'absent', description => 'kafka broker replica max lag', metric => ""${group_prefix}kafka.${graphite_broker_key}.kafka.server.replicafetchermanager.maxlag.value"", warning => '1000000', critical => '5000000', from => '30min', percentage => 50, require => class['::kafka::server::jmxtrans'], group => $nagios_servicegroup, } include ::standard if $::standard::has_ganglia { ganglia::plugin::python { 'diskstat': } } }",1,1,"class kafka::server::monitoring, class::kafka::server, class::kafka::server::jmxtrans, ganglia::plugin::python{'diskstat':}, if!defined(nrpe::monitor_service['jmxtrans']), include::standard, jmxtrans, nrpe::monitor_service, nrpe::monitor_service{'jmxtrans':}, service['jmxtrans']",CWE-480,"{'reason': 'The class kafka::server::monitoring is responsible for monitoring metrics via JMX. The JMX trans port is the nrpe_port in the module. The graphite\\_broker\\_key is created by a regexp subst. The monitoring::graphite\\_threshold sets a threshold in graphite for a jmx metric. The if in the class checks if the nrpe::monitor\\_service exists. JMX trans is a service for sending jmx metrics to graphite.', 'related_cwe': 'CWE-480', 'is_misconfiguration_related': 'Yes'}"
323,"notice('modular: rsyslog.pp') class { '::rsyslog': relp_package_name => false, gnutls_package_name => false, mysql_package_name => false, pgsql_package_name => false, } class { '::openstack::logging': role => 'server', proto => 'both', port => '514', show_timezone => true, }",1,1,"class { '::openstack::logging':, proto => 'both',, show_timezone => true,",CWE-1200,"{'reason': 'No related CWE, No misconfiguration issue related', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
324,"define mariadb::monitor_replication( $is_critical = true, $contact_group = 'dba', $lag_warn = 60, $lag_crit = 300, $socket = '/tmp/mysql.sock', $multisource = true, $warn_stopped = true, ) { include passwords::nagios::mysql $password = $passwords::nagios::mysql::mysql_check_pass $check_command = ""/usr/lib/nagios/plugins/check_mariadb.pl --sock=${socket} --user=nagios --pass=${password}"" $check_set = $multisource ? { true => ""--set=default_master_connection=${name}"", false => '' } $check_warn = $warn_stopped ? { true => '--warn-stopped', false => '--no-warn-stopped' } $check_mariadb = ""${check_command} ${check_set} ${check_warn}"" nrpe::monitor_service { ""mariadb_slave_io_state_${name}"": description => ""mariadb slave io: ${name}"", nrpe_command => ""${check_mariadb} --check=slave_io_state"", critical => $is_critical, contact_group => $contact_group, } nrpe::monitor_service { ""mariadb_slave_sql_state_${name}"": description => ""mariadb slave sql: ${name}"", nrpe_command => ""${check_mariadb} --check=slave_sql_state"", critical => $is_critical, contact_group => $contact_group, } nrpe::monitor_service { ""mariadb_slave_sql_lag_${name}"": description => ""mariadb slave lag: ${name}"", nrpe_command => ""${check_mariadb} --check=slave_sql_lag \ --shard=${name} --datacenter=$::mw_primary \ --sql-lag-warn=${lag_warn} \ --sql-lag-crit=${lag_crit}"", retries => 10, critical => $is_critical, contact_group => $contact_group, } }",1,1,"contact_group => $contact_group, \\, contact_group => $contact_group, \\\\\\\\, critical => $is_critical, \\, critical => $is_critical, \\\\, critical => $is_critical, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, description => \, description => \\, description => \\\\\\\\\\\\\, include passwords::nagios::mysql\npasswords::nagios::mysql::mysql_check_pass =, nrpe::monitor_service { \","CWE-295, CWE-310, CWE-319, CWE-340, CWE-352","{'reason': 'CWE-295, CWE-310, CWE-319, CWE-340, CWE-352', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
325,class windows_path { },0,1,"class windows_path {, class windows_path {}, class windows_path {}]",CWE-117,"{'reason': 'The provided code block contains code that may lead to an infinite loop if the code is run more than 3 times. This can lead to an increase in time to run the script, which can be exploited to cause a Denial of Service (DoS).', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
326,"class cluster::haproxy_ocf ( $debug = false, $other_networks = false, $colocate_haproxy = true, ) inherits cluster::haproxy { $primitive_type = 'ns_haproxy' $complex_type = 'clone' $complex_metadata = { 'interleave' => true, } $metadata = { 'migration-threshold' => '3', 'failure-timeout' => '120', } $parameters = { 'ns' => 'haproxy', 'debug' => $debug, 'other_networks' => $other_networks, } $operations = { 'monitor' => { 'interval' => '30', 'timeout' => '60' }, 'start' => { 'timeout' => '60' }, 'stop' => { 'timeout' => '60' }, } pacemaker::service { $service_name : primitive_type => $primitive_type, parameters => $parameters, metadata => $metadata, operations => $operations, complex_metadata => $complex_metadata, complex_type => $complex_type, prefix => false, } if $colocate_haproxy { pcmk_colocation { 'vip_public-with-haproxy': ensure => 'present', score => 'infinity', first => ""clone_${service_name}"", second => ""vip__public"", } service[$service_name] -> pcmk_colocation['vip_public-with-haproxy'] pcmk_colocation { 'vip_management-with-haproxy': ensure => 'present', score => 'infinity', first => ""clone_${service_name}"", second => 'vip__management', } service[$service_name] -> pcmk_colocation['vip_management-with-haproxy'] } pcmk_resource[$service_name] -> service[$service_name] }",1,0,"ns_haproxy: ns: haproxy, debug: false, other_networks: false, parameters: { debug: false, other_networks: false }, pcmk_colocation[\'vip_management-with-haproxy\']: score: infinity, first: clone_service_name, second: vip_management, operations: { interval: 30, timeout: 60 }, pcmk_colocation[\\'vip_public-with-haproxy\\']: score: infinity, first: clone_service_name, second: vip_public, operations: { interval: 30, timeout: 60 }, puppetlabs/concat: ensure: present, pin: \\\\\\, puppetlabs/ocf: ensure: present, pin: \\\\\\\\\\\\\\\\, puppetlabs/stdlib: ensure: present, pin: \\\, puppetlabs/stdlib: ensure: present, pin: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, service[service_name]: primitive_type: ns_haproxy, parameters: { debug: false, other_networks: false }, metadata: { migration-threshold: 3, failure-timeout: 120 }, operations: { interval: 30, timeout: 60 }, vip_management: network: management, cidr: 10.8.2.0/24, aliases: haproxy, operations: { interval: 30, timeout: 60 }, vip_public: network: public, cidr: 10.8.1.0/24, aliases: haproxy, operations: { interval: 30, timeout: 60 }",CWE-306,"{'reason': 'CWE-306 is related to this misconfiguration because it provides recommendations for protecting software from design flaws that could allow an attacker to compromise the system or data.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
327,"class neutron::plugins::opencontrail ( $api_server_ip = $::os_service_default, $api_server_port = $::os_service_default, $multi_tenancy = $::os_service_default, $contrail_extensions = $::os_service_default, $keystone_auth_url = $::os_service_default, $keystone_admin_user = $::os_service_default, $keystone_admin_tenant_name = $::os_service_default, $keystone_admin_password = $::os_service_default, $keystone_admin_token = $::os_service_default, $package_ensure = 'present', $purge_config = false, ) { include ::neutron::deps include ::neutron::params validate_array($contrail_extensions) package { 'neutron-plugin-contrail': ensure => $package_ensure, name => $::neutron::params::opencontrail_plugin_package, tag => ['neutron-package', 'openstack'], } ensure_resource('file', '/etc/neutron/plugins/opencontrail', { ensure => directory, owner => 'root', group => 'neutron', mode => '0640'} ) if $::osfamily == 'debian' { file_line { '/etc/default/neutron-server:neutron_plugin_config': path => '/etc/default/neutron-server', match => '^neutron_plugin_config=(.*)$', line => ""neutron_plugin_config=${::neutron::params::opencontrail_config_file}"", tag => 'neutron-file-line', } } if $::osfamily == 'redhat' { file { '/etc/neutron/plugin.ini': ensure => link, target => $::neutron::params::opencontrail_config_file, require => package[$::neutron::params::opencontrail_plugin_package], tag => 'neutron-config-file', } } resources { 'neutron_plugin_opencontrail': purge => $purge_config, } neutron_plugin_opencontrail { 'apiserver/api_server_ip': value => $api_server_ip; 'apiserver/api_server_port': value => $api_server_port; 'apiserver/multi_tenancy': value => $multi_tenancy; 'apiserver/contrail_extensions': value => join($contrail_extensions, ','); 'keystone/auth_url': value => $keystone_auth_url; 'keystone/admin_user' : value => $keystone_admin_user; 'keystone/admin_tenant_name': value => $keystone_admin_tenant_name; 'keystone/admin_password': value => $keystone_admin_password, secret =>true; 'keystone/admin_token': value => $keystone_admin_token, secret =>true; } }",1,1,"keystone/admin_password, keystone/admin_tenant_name, keystone/admin_token, keystone/admin_user, keystone/auth_url",CWE-259,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
328,"define monasca::persister::startup_script ( ){ $persister_service_name = $name $script = ""/etc/init/${persister_service_name}.conf"" file { $script: ensure => file, content => template('monasca/persister-startup-script.erb'), mode => '0755', owner => 'root', group => 'root', } ~> service[$persister_service_name] }",1,1,"define monasca::persister::startup_script, file { $script: ensure => file, content => template('monasca/persister-startup-script.erb'), mode => '0755', owner => 'root', group => 'root', }, file { $script: ensure => file, content => template('monasca/persister-startup-script.erb'), mode => '0755', owner => 'root', group => 'root', } ~> service[$persister_service_name], monasca/persister-startup-script.erb, monasca::persister::startup_script, service[$persister_service_name], template('monasca/persister-startup-script.erb')","CWE-20, CWE-22","{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
329,"class keystone::endpoint ( $public_url = 'http://127.0.0.1:5000', $internal_url = undef, $admin_url = 'http://127.0.0.1:35357', $region = 'regionone', $user_domain = undef, $project_domain = undef, $default_domain = undef, $version = 'unset', ) { include ::keystone::deps if $version == 'unset' { $_version = 'v2.0' } else { $_version = $version } if empty($_version) { $admin_url_real = $admin_url $public_url_real = $public_url if $internal_url { $internal_url_real = $internal_url } else { $internal_url_real = $public_url } } else { $public_url_real = ""${public_url}/${_version}"" $admin_url_real = ""${admin_url}/${_version}"" if $internal_url { $internal_url_real = ""${internal_url}/${_version}"" } else { $internal_url_real = ""${public_url}/${_version}"" } } keystone::resource::service_identity { 'keystone': configure_user => false, configure_user_role => false, service_type => 'identity', service_description => 'openstack identity service', public_url => $public_url_real, admin_url => $admin_url_real, internal_url => $internal_url_real, region => $region, user_domain => $user_domain, project_domain => $project_domain, default_domain => $default_domain, } keystone::resource::service_identity['keystone'] -> file<| tag == 'openrc' |> }",1,1,"configure_user => false,, configure_user_role => false,, include ::keystone::deps, keystone::resource::service_identity { 'keystone':, keystone::resource::service_identity['keystone'] -> file<| tag == 'openrc' |>","CWE-20, CWE-312, CWE-732","{'reason': 'CWE-732: the script does not enable users to perform certain actions on the server, such as logging in with their credentials.', 'related_cwe': 'CWE-20, CWE-732', 'is_misconfiguration_related': 'Yes'}"
330,"class packages::kernel { include stdlib include config $current_kernel = $config::current_kernel $obsolete_kernel_list = $config::obsolete_kernels if $current_kernel { case $operatingsystem { 'centos': { realize(packages::yumrepo['kernel']) $kernel_ver = ""${current_kernel}.${architecture}"" $strip_ver = $current_kernel package { ""bfa-firmware"": ensure => absent, } package { [ ""kernel-${current_kernel}"", ""kernel-headers-${current_kernel}"", ""kernel-firmware-${current_kernel}""]: ensure => present, require => package['bfa-firmware'], } grub::defaults {'grub-defaults': kern => $kernel_ver; } if $kernelrelease == $kernel_ver and ! empty($obsolete_kernel_list) { $obsolete_kernels = prefix( $obsolete_kernel_list, 'kernel-' ) $obsolete_headers = prefix( $obsolete_kernel_list, 'kernel-headers-' ) $obsolete_firmware = prefix( $obsolete_kernel_list, 'kernel-firmware-' ) package { [ $obsolete_kernels, $obsolete_headers, $obsolete_firmware ]: ensure => absent } } } 'ubuntu': { realize(packages::aptrepo['kernel']) if $lsbdistrelease == '12.04' and $architecture == 'i386' { $suffix = '-generic-pae' } else { $suffix = '-generic' } $strip_ver = regsubst($current_kernel, '^(\d+)\.(\d+)\.(\d+)\.(\d+).(\d+)', '\1.\2.\3-\4') $kernel_ver = ""${strip_ver}${suffix}"" package { [ ""linux-image${suffix}"", ""linux-headers${suffix}"" ]: ensure => $current_kernel } -> package { ""linux${suffix}"" : ensure => $current_kernel } grub::defaults {'grub-defaults': kern => $kernel_ver; } if $kernelrelease == $kernel_ver and ! empty($obsolete_kernel_list) { $obsolete_kernels = suffix( prefix( $obsolete_kernel_list, 'linux-image-' ), $suffix ) $obsolete_headers = suffix( prefix( $obsolete_kernel_list, 'linux-headers-' ), $suffix ) $obsolete_headers_all = prefix( $obsolete_kernel_list, 'linux-headers-' ) package { [ $obsolete_kernels, $obsolete_headers, $obsolete_headers_all ]: ensure => absent } } } default: { fail( ""${operatingsystem} is not supported by the kernel upgrades"" ) } } if $strip_ver in $obsolete_kernel_list { fail ( ""kernel defined as current (${current_kernel}) is also defined in obsolete kernel list"" ) } file { '/.kernel_release': content => ""${kernel_ver}"", ensure => present; } } }",1,1,"class, if, package","CWE-117, CWE-22, CWE-829","{'reason': ""This example demonstrates an anti-pattern when updating kernel packages in Puppet. The puppet-params library in this example has a 'kernel' parameter, and also contains a list of obsolete kernels that should not be present. However, the current kernel variable $current_kernel is compared against $obsolete_kernel_list (where $current_kernel is expected to be found in that list) without taking into account the $architecture parameter. For example, the list may contain the value '2.6.34.1-14.el5' (obtained through a regex replace), but the $current_kernel value may be '2.6.34.1-14.el5.i686'. Because of this, $current_kernel is considered invalid and does not follow the"", 'related_cwe': 'CWE-829, CWE-117', 'is_misconfiguration_related': 'Yes'}"
331,"define bors::install($basedir, $owner, $group, $version) { include packages::mozilla::python27 python::virtualenv { ""${basedir}"": python => $::packages::mozilla::python27::python, require => class['packages::mozilla::python27'], user => $owner, group => $group, packages => [ ""bors==${version}"", ]; } }",0,1,"],\\n, group => $group,, include packages::mozilla::python27, packages => [ \, python::virtualenv {\\n  \\, python::virtualenv {\n  \, require => Class['packages::mozilla::python27'],, require => class['packages::mozilla::python27'],, user => $owner,, },",CWE-352,"{'reason': ""The user input of the variable'version' is not validated before being passed to the package parameter of the resource 'python::virtualenv'. Any user-supplied input in the value of'version' will be passed directly to the 'bors==version' package as part of the python::virtualenv resource, and could allow a malicious actor to install arbitrary packages on the system. This could allow attackers to gain additional permissions on the system or install additional malicious packages in a vulnerable environment.\\n\\nCWE-352 details that untrusted input is not checked, and can have negative consequences such as privilege escalation or additional malware installation."", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
332,"define osnailyfacter::credentials_file( $admin_password, $path = $title, $controller_node = '127.0.0.1', $auth_url = 'http://127.0.0.1:5000/v2.0', $keystone_admin_token = undef, $admin_user = 'admin', $admin_tenant = 'openstack', $region_name = 'regionone', $use_no_cache = true, $cinder_endpoint_type = 'internalurl', $glance_endpoint_type = 'internalurl', $keystone_endpoint_type = 'internalurl', $nova_endpoint_type = 'internalurl', $neutron_endpoint_type = 'internalurl', $os_endpoint_type = 'internalurl', $murano_repo_url = undef, $cacert = undef, $murano_glare_plugin = undef, $owner = 'root', $group = 'root', ) { file { ""${path}"": owner => $owner, group => $group, mode => '0700', content => template(""${module_name}/openrc.erb"") } }",0,1,"cacert = undef,, file { \, keystone_admin_token = undef,, keystone_endpoint_type = 'internalurl',, murano_glare_plugin = undef,, murano_repo_url = undef,, neutron_endpoint_type = 'internalurl',, nova_endpoint_type = 'internalurl',, os_endpoint_type = 'internalurl',, template(","CWE-287, CWE-310, CWE-798","{'reason': ""OpenRC files are used by OSNailyFacter to connect to OpenStack's Identity Service. They can be created using the credentials_file defined type. Credentials_file type generates OpenRC files for connecting to the OpenStack service (nova, cinder, glance, neutron, murano, osnailyfacter, barbican, magnum, designate, heat, swift, octavia, keystone, murano_glare_plugin). The openrc configuration in this instance is missing the value of cacert. Cacert is a value used in OpenRC files to specify the path to a certificate. The cacert value is used to validate the server certificate on the server side when accessing OpenStack services. The cacert value is set"", 'related_cwe': 'CWE-287, CWE-310, CWE-798', 'is_misconfiguration_related': 'Yes'}"
333,"class ceilometer::expirer ( $enable_cron = true, $minute = 1, $hour = 0, $monthday = '*', $month = '*', $weekday = '*', ) { include ::ceilometer::params package<| title == 'ceilometer-common' |> -> class['ceilometer::expirer'] if $enable_cron { cron { 'ceilometer-expirer': command => $ceilometer::params::expirer_command, environment => 'path=/bin:/usr/bin:/usr/sbin shell=/bin/sh', user => 'ceilometer', minute => $minute, hour => $hour, monthday => $monthday, month => $month, weekday => $weekday } } }",1,1,"class ceilometer::expirer ( $enable_cron = true, $minute = 1, $hour = 0, $monthday = '*', $month = '*', $weekday = '*', ) {, cron { 'ceilometer-expirer': command => $ceilometer::params::expirer_command, environment => 'path=/bin:/usr/bin:/usr/sbin shell=/bin/sh', user => 'ceilometer', minute => $minute, hour => $hour, monthday => $monthday, month => $month, weekday => $weekday }, include ::ceilometer::params, package<| title == 'ceilometer-common' |> -> class['ceilometer::expirer']","CWE-232, CWE-622, CWE-732, CWE-932","{'reason': ""This misconfiguration can be related to CWE-622. Because it involves the use of the environment keyword which allows to pass a list of environment variables to the script executed by the cron job, in this case it's ceilometer-expirer. It allows anyone to modify this list of variables, and by doing that, it can potentially alter the output of ceilometer-expirer. Therefore, it can lead to CWE-622."", 'related_cwe': 'CWE-622', 'is_misconfiguration_related': 'Yes'}"
334,class toplevel::server::mozmill_ci inherits toplevel::server { include users::builder },0,1,class toplevel::server::mozmill_ci inherits toplevel::server { include users::builder },"CWE-20, CWE-77, CWE-93","{'reason': 'CWE-20', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
335,"class osnailyfacter::apache_mpm inherits ::osnailyfacter::apache { if ($::memorysize_mb + 0) < 4100 { $maxclients = 100 } else { $maxclients = inline_template('<%= integer(@memorysize_mb.to_i / 10) %>') } if ($::processorcount + 0) <= 2 { $startservers = 2 } else { $startservers = $::processorcount } $maxrequestsperchild = 0 $threadsperchild = 25 $minsparethreads = 25 $serverlimit = inline_template('<%= integer(@maxclients.to_i / @threadsperchild.to_i) %>') $maxsparethreads = inline_template('<%= integer(@maxclients.to_i / 2) %>') if $::osfamily == 'redhat' { $mpm_module = 'event' } else { $mpm_module = 'worker' file { [ ""$::apache::params::mod_enable_dir/mpm_event.load"", ""$::apache::params::mod_enable_dir/mpm_event.conf"" ]: ensure => 'absent', require => package['httpd'], notify => service['httpd'], } } class { ""::apache::mod::$mpm_module"": startservers => $startservers, maxclients => $maxclients, minsparethreads => $minsparethreads, maxsparethreads => $maxsparethreads, threadsperchild => $threadsperchild, maxrequestsperchild => $maxrequestsperchild, serverlimit => $serverlimit, } }",1,1,"file { [, if $::osfamily =='redhat' { $mpm_module = 'event' } else { $mpm_module = 'worker' file { [, if $::osfamily =='redhat' { $mpm_module = 'event' } else { $mpm_module = 'worker' } file { [, if ($::processorcount + 0) < 2 { $startservers = 2 } else { $startservers = $::processorcount }, if ($::processorcount + 0) < 2 { $startservers = 2 } else { $startservers = $::processorcount } class {, if ($::processorcount + 0) < 2 { $startservers = 2 } else { $startservers = $::processorcount } class { '::apache::mod::$mpm_module':, if ($::processorcount + 0) < 2 { $startservers = 2 } else { $startservers = $::processorcount } class { '::apache::mod::$mpm_module': startservers => $startservers,, if ($::processorcount + 0) <= 2 { $startservers = 2 } else { $startservers = $::processorcount }, maxrequestsperchild => $maxrequestsperchild,, minsparethreads => $minsparethreads, maxsparethreads => $maxsparethreads,","CWE-327, CWE-426","{'reason': ""1. When running Apache with a high number of threads, it is essential to monitor the available memory and processor resources on the machine, as exceeding these limitations may result in poor performance, errors, or even application crashes. This module allows us to set up an appropriate number of threads based on the machine's specifications. Additionally, by setting a limit on the number of clients, we ensure that Apache does not overload the machine. \\n\\n2. When setting the MPM Module, we must ensure that we are using the correct MPM Module based on the operating system. In this case, we need to specify the event module for RedHat machines and the worker module for non-RedHat machines. Failing to do so could result in errors"", 'related_cwe': 'CWE-327, CWE-426', 'is_misconfiguration_related': 'Yes'}"
336,"define nova::generic_service( $package_name, $service_name, $enabled = true, $manage_service = true, $ensure_package = 'present' ) { include ::nova::deps include ::nova::params $nova_title = ""nova-${name}"" if ($package_name) { if !defined(package[$nova_title]) and !defined(package[$package_name]) { package { $nova_title: ensure => $ensure_package, name => $package_name, tag => ['openstack', 'nova-package'], } } } if $service_name { if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { $nova_title: ensure => $service_ensure, name => $service_name, enable => $enabled, hasstatus => true, tag => 'nova-service', } } }",1,1,"hasstatus => true, tag => 'nova-service', }, if $enabled {, if $manage_service {, if!defined(package[$nova_title]) and!defined(package[$package_name]) {, include ::nova::deps, include ::nova::params, package { $nova_title: ensure => $ensure_package, name => $package_name, tag => ['openstack', 'nova-package'], }, service { $nova_title: ensure => $service_ensure, name => $service_name, enable => $enabled, hasstatus => true, tag => 'nova-service', }",CWE-22,"{'reason': 'If a user can see the service status, then they can restart it by creating a Puppet transaction (as per https://docs.puppet.com/puppet/4.8/docs/reference/transaction.html). This could allow an attacker to interrupt or stop services in unexpected ways. Since this is a security vulnerability, it is important to avoid any vulnerabilities that can be related to CWE-22.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
337,"class disableservices::release_upgrader { case $::operatingsystem { ubuntu: { file { ""/etc/update-manager/release-upgrades"": content => ""[default]\nprompt=never\n""; } } default: { notice(""don't know how to disable release ugprader on $::operatingsystem."") } } }",0,1,"content => \, content => \\, default: { notice(\\\\\\\\\\, default: { notice(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, don\\\\\\\\\\\\\\, don\\\\\\\\\\\\\\\\\\\\\\\\\\, don\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, donfile { \, notice(\\\\\",CWE-295,"{'reason': ""The provided code snippet is intended to disable the Ubuntu 'Do Not Disturb' mode for release upgrades. However, due to the way it's implemented, the misconfiguration introduced could introduce the possibility of an unintended DoS attack."", 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
338,"define manila::backend::glusternative ( $glusterfs_servers, $glusterfs_native_path_to_private_key, $glusterfs_volume_pattern, $share_backend_name = $name, $package_ensure = 'present', ) { include ::manila::params $share_driver = 'manila.share.drivers.glusterfs_native.glusterfsnativesharedriver' manila_config { ""${share_backend_name}/share_backend_name"": value => $share_backend_name; ""${share_backend_name}/share_driver"": value => $share_driver; ""${share_backend_name}/glusterfs_servers"": value => $glusterfs_servers; ""${share_backend_name}/glusterfs_native_path_to_private_key"": value => $glusterfs_native_path_to_private_key; ""${share_backend_name}/glusterfs_volume_pattern"": value => $glusterfs_volume_pattern; } package { $::manila::params::gluster_package_name: ensure => $package_ensure, } package { $::manila::params::gluster_client_package_name: ensure => $package_ensure, } }",0,value,value,value,"{'reason': 'the reason', 'related_cwe': 'the related CWE', 'is_misconfiguration_related': 'Yes/No'}"
339,"class tripleo::profile::base::trove::api ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } if $step >= 3 and $sync_db { include ::trove::db::mysql } if $step >= 4 or ($step >= 3 and $sync_db) { include ::trove include ::trove::config include ::trove::api } }",0,1,"if $step >= 3 and $sync_db {, if $step >= 4 or ($step >= 3 and $sync_db) {, include ::trove, include ::trove::api, include ::trove::config",CWE-732,"{'reason': 'The vulnerability arises from the inclusion of the ::trove::api class in the final state of the puppet catalog. This class contains a set of functions that interact with the database. It is the responsible for creating the database, tables and users, and it is therefore responsible for defining the role of the users, that is, to perform the required operations. If an attacker had access to the database, they would be able to execute arbitrary queries, which would allow them to manipulate the database. The trove::api class is part of the ::trove::config class, which is responsible for defining the configuration parameters of the trove services. If an attacker had access to the database, they would be able to manipulate the configuration parameters, which would', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
340,"class { '::aodh': } class { '::aodh::keystone::authtoken': password => 'a_big_secret', } class { '::aodh::api': enabled => true, service_name => 'httpd', } include ::apache class { '::aodh::wsgi::apache': ssl => false, } class { '::aodh::auth': auth_password => 'a_big_secret', } class { '::aodh::evaluator': } class { '::aodh::notifier': } class { '::aodh::listener': } class { '::aodh::client': }",0,1,"a_big_secret, auth_password => 'a_big_secret',, enabled => true, httpd, service_name => 'httpd',, ssl => false","CWE-252, CWE-254, CWE-732, CWE-787","{'reason': 'This misconfiguration could lead to unauthorized access to the misconfigured resource.', 'related_cwe': 'CWE-252, CWE-254, CWE-732, CWE-787', 'is_misconfiguration_related': 'Yes'}"
341,"define mercurial::repo($hg_repo, $dst_dir, $user, $branch="""", $rev="""") { include packages::mozilla::py27_mercurial if ($branch == '' and $rev == '') { fail('must specify one of rev or branch') } $branch_arg = $branch ? { '' => '', default => ""-b ${branch}"" } $rev_arg = $rev ? { '' => '', default => ""-r ${rev}"" } exec { ""clone-${dst_dir}"": require => class['packages::mozilla::py27_mercurial'], command => ""${::packages::mozilla::py27_mercurial::mercurial} clone ${branch_arg} ${rev_arg} ${hg_repo} ${dst_dir}"", creates => ""${dst_dir}"", user => $user; } }",0,1,"command => \\\\\\, command => \\\\\\\\\\\\\, creates => \\\\\\\\\, define mercurial::repo(\n    \$hg_repo,\n    \$dst_dir,\n    \$user,\n    \$branch=\, execute('chown -R $user:$user $::profile_dir'), if (\\$branch == '' and \\$rev == '') {\\n    fail('must specify one of rev or branch')\\n  }\\n\\$branch_arg = \\$branch? { '' => '', default => \\\, if (\\\\$branch == '' and \\\\$rev == '') {\\\\n    fail('must specify one of rev or branch')\\\\n  }\\\\n\\\\$branch_arg = \\\\$branch? { '' => '', default => \\\\\, user => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, user => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, user{'reason': 'There is no reference to the CWE related to the issue. A similar issue, but with a more specific description can be found at https://www.cvedetails.com/cve/CVE-2022-24713/. Please refer to this misconfiguration report for more details on the nature of the issue.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
342,"define oslo::versionedobjects( $fatal_exception_format_errors = $::os_service_default, ) { create_resources($name, {'oslo_versionedobjects/fatal_exception_format_errors' => { value => $fatal_exception_format_errors }}) }",0,1,"create_resources($name, {'oslo_versionedobjects/fatal_exception_format_errors' => { value => $fatal_exception_format_errors }}), fatal_exception_format_errors = $::os_service_default,), oslo::versionedobjects( $fatal_exception_format_errors = $::os_service_default, ) { create_resources($name, {'oslo_versionedobjects/fatal_exception_format_errors' => { value => $fatal_exception_format_errors }}) }, oslo_versionedobjects( $fatal_exception_format_errors = $::os_service_default, ) { create_resources($name, {'oslo_versionedobjects/fatal_exception_format_errors' => { value => $fatal_exception_format_errors }}) }, versionedobjects( $fatal_exception_format_errors = $::os_service_default, ) { create_resources($name, {'oslo_versionedobjects/fatal_exception_format_errors' => { value => $fatal_exception_format_errors }}) }","CWE-131, CWE-132, CWE-20, CWE-22, CWE-26, CWE-327, CWE-330, CWE-369, CWE-399, CWE-401","{'reason': 'CWE-22: This misconfiguration was flagged because the script allows users to manually configure an environment variable with a default value. This is a potential issue because it can allow users to run into errors by using incorrect configuration values. CWE-131: This misconfiguration was flagged because the script allows users to manually configure an environment variable with a default value. This is a potential issue because it can allow users to run into errors by using incorrect configuration values. CWE-401: This misconfiguration was flagged because the script allows users to manually configure an environment variable with a default value. This is a potential issue because it can allow users to run into errors by using incorrect configuration values. CWE-22: This misconfiguration was flagged because the script allows users', 'related_cwe': 'CWE-22, CWE-131, CWE-401', 'is_misconfiguration_related': 'Yes'}"
343,class { '::osnailyfacter::hosts::hosts' :},1,1,class { '::osnailyfacter::hosts::hosts' :},CWE-248,"{'reason': 'The class declaration does not have any parameters in the code, which means it does not contain any actual values that could lead to a misconfiguration or vulnerability.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
344,class { '::osnailyfacter::apache::apache' :} class { '::osnailyfacter::upgrade::restart_services' :},1,0,nan,CWE-1001,"{'reason': 'The `1` parameter in this script causes a vulnerability that allows an attacker to perform a remote code execution on the web server', 'related_cwe': 'CWE-1001', 'is_misconfiguration_related': 'Yes'}"
345,"class role::memcached { include ::memcached include ::memcached::php mediawiki::settings { 'memcached': values => template('role/memcached/conf.php.erb'), } }",0,1,"class role::memcached { include ::memcached include ::memcached::php, mediawiki::settings {'memcached': values => template('role/memcached/conf.php.erb'), }",CWE-312,"{'reason': 'This misconfiguration was not related to CWE-312. The misconfiguration involved the incorrect use of an include function, which is unrelated to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
346,"class nrpe::check::buildbot { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_buildbot': cfg => ""$plugins_dir/check_procs -w 1:1 --argument-array=buildbot.tac"", nsclient_cfg => ""check_buildbot=inject checkprocstate showall python.exe=started""; } }",0,1,"cfg =>, class nrpe::check::buildbot { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_buildbot': cfg => \, include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_buildbot': cfg =>, nrpe::check { 'check_buildbot': cfg =>, nsclient_cfg =>, python.exe=started",CWE-352,"{'reason': 'This misconfiguration is caused by an injection vulnerability. The buildbot.tac argument contains user input. This argument is used to create the plugin name and is not sanitized. The plugin name is the value used in the file /etc/nagios/nrpe.d/buildbot.tac to determine which plugin will be executed on the remote host. The script lacks proper input validation and may result in an injection. An unauthenticated remote attacker can send any arbitrary commands to the remote host by executing the buildbot.tac file with the desired arguments. Therefore, an attacker could cause a denial of service attack or even gain root access on the remote host. The provided CWE ID for this issue is CWE-352 (Uncontrolled Format String)', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
347,"class zaqar::params { include ::openstacklib::defaults $client_package = 'python-zaqarclient' case $::osfamily { 'redhat': { $package_name = 'openstack-zaqar' $service_name = 'openstack-zaqar' } 'debian': { $package_name = 'zaqar' $service_name = 'zaqar' } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem: \ ${::operatingsystem}, module ${module_name} only support osfamily \ redhat and debian"") } } }",0,1,"class zaqar::params { include ::openstacklib::defaults, include ::openstacklib::defaults","CWE-119, CWE-129","{'reason': 'The misconfiguration is related to both CWE-119 (Improper Restriction of Write-able Control Character Sequence) and CWE-129 (Improper Restriction of XML External Entity Reference)', 'related_cwe': 'CWE-119, CWE-129', 'is_misconfiguration_related': 'Yes'}"
348,"class tripleo::network::os_net_config { include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present }) exec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], } }",0,1,"class tripleo::network::os_net_config {\\\\\\\\\\\\n include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present })\\\\\\\\\\\\\\\\\\\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }, class tripleo::network::os_net_config {\\\\\\\\\\\\n include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present })\\\\\\\\\\\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }, class tripleo::network::os_net_config {\\\\n include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present })\\\\\\\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }, class tripleo::network::os_net_config {\\n include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present })\\\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }, class tripleo::network::os_net_config {\n include ::vswitch::ovs, ensure_packages('os-net-config', { ensure => present })\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes',, include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present })\\\\\\\\\\\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }, include ::vswitch::ovs ensure_packages('os-net-config', { ensure => present })\\\\nexec { 'os-net-config': command => '/bin/os-net-config -c /etc/os-net-config/config.json -v --detailed-exit-codes', returns => [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }, return [0, 2], require => [ package['os-net-config'], package['openvswitch'], service['openvswitch'], ], }",CWE-20,"{'reason': 'Puppet code could be easily modified in order to obtain root access. \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
349,"class role::mobilefrontend { require ::role::mediawiki include ::role::eventlogging include ::role::pageimages include ::role::textextracts mediawiki::extension { 'mobilefrontend': settings => { wgmflogevents => true, wgmfautodetectmobileview => true, wgmfnearby => true, wgmfenablebeta => true, }, browser_tests => true, } mediawiki::wiki{ 'mobile': } mediawiki::settings { 'alwaysmobileskin': wiki => 'mobile', values => { wgmfautodetectmobileview => false, wgmfmobileheader => 'host', wgmobileurltemplate => ""mobile${::mediawiki::multiwiki::base_domain}"", }, } }",0,1,"mediawiki::extension, mediawiki::settings, mediawiki::wiki","CWE-20, CWE-798","{'reason': 'MobileFrontend is an extension that provides a mobile-optimized interface to Wikipedia.', 'related_cwe': 'CWE-20, CWE-798', 'is_misconfiguration_related': 'Yes'}"
350,"class lma_collector::collectd::ceph_mon { lma_collector::collectd::python { ['ceph_pg_mon_status', 'ceph_pool_osd', 'ceph_osd_stats']: config => {}, } }",1,1,"ceph_mon, ceph_osd_stats, ceph_pg_mon_status, ceph_pool_osd, config, lma_collector::collectd::ceph_mon, lma_collector::collectd::python","CWE-732, CWE-772","{'reason': 'Ceph Monitors are used by the Cluster to keep track of the health of the OSDs. This is a system wide value that is used by multiple cluster services.', 'related_cwe': 'CWE-732, CWE-772', 'is_misconfiguration_related': 'Yes'}"
351,"class packages::procmail { case $::operatingsystem { centos: { package { ""procmail"": ensure => latest; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"package {\\\, package {\\\\, package {\\\\\\, package {\\\\\\\\n\\\\n\\n, package {\\\\n\\n\n, package {\\n, package {\\n\\n, package {\\n\n, package {\n",CWE-306,"{'reason': 'This is a clear cut case of CWE-306: Missing Authentication for Critical Control. This is related to the vulnerability CWE-306.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
352,"class mellanox_openstack::snapshot_patch { $libvirt_driver_file = $::mellanox_openstack::params::libvirt_driver_file $compute_service_name = $::mellanox_openstack::params::compute_service_name $sriov_patch_file = ""/tmp/sriov.patch"" file { $sriov_patch_file : source => ""puppet:///modules/mellanox_openstack/sriov.patch"", notify => exec[""apply-snapshot-patch""], } exec { ""apply-snapshot-patch"" : command => ""patch $libvirt_driver_file $sriov_patch_file"", unless => ""grep -i 'hostdev' $libvirt_driver_file | grep -q -i vif"", path => [""/bin"", ""/usr/bin"", ""/usr/sbin"", ""/usr/local/bin"", ""/sbin""], refreshonly => true, notify => service[$compute_service_name] } }",1,1,"command =>, file { $sriov_patch_file, grep -q -i vif, notify =>, notify => service[$compute_service_name], path => [\, refreshonly => true, service[$compute_service_name], unless =>",CWE-22,"{'reason': ""Puppet's exec resource should use the exec function instead of the command parameter, because it does not check the exit code of the command"", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
353,"class role::categorytree { mediawiki::extension { 'categorytree': settings => { wguseajax => true, } } }",0,1,"class role::categorytree { mediawiki::extension { 'categorytree': settings => { wguseajax => true, } } }","CWE-120, CWE-284, CWE-94","{'reason': ""This misconfiguration is related to CWE-120 because the misconfiguration is allowing the wguseajax parameter in the categorytree settings which can be exploited by a cross-site scripting attack, allowing an attacker to execute arbitrary JavaScript code on the user's browser."", 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
354,class tripleo::profile::pacemaker::neutron::plugins::plumgrid { include ::tripleo::profile::base::neutron::plugins::plumgrid },0,1,"class tripleo::profile::pacemaker::neutron::plugins::plumgrid, class tripleo::profile::pacemaker::neutron::plugins::plumgrid { include ::tripleo::profile::base::neutron::plugins::plumgrid }, include ::tripleo::profile::base::neutron::plugins::plumgrid","CWE-117, CWE-119, CWE-129, CWE-134, CWE-136, CWE-144, CWE-202, CWE-307","{'reason': 'Inclusion of \\n class tripleo::profile::pacemaker::neutron::plugins::plumgrid, \\n\\n class tripleo::profile::pacemaker::neutron::plugins::plumgrid { include ::tripleo::profile::base::neutron::plugins::plumgrid }, \\n\\n include ::tripleo::profile::base::neutron::plugins::plumgrid \\n\\n in a file name \\', 'related_cwe': 'CWE-117, CWE-119, CWE-129, CWE-134, CWE-136, CWE-144, CWE-202, CWE-307', 'is_misconfiguration_related': 'No'}"
355,"class monasca::checks::nagios_wrapper( $check_path = '/usr/lib/nagios/plugins:/usr/local/bin/nagios', $temp_file_path = '/dev/shm/', $instances = undef, $host_name = undef, $central_mon = false, ){ $conf_dir = $::monasca::agent::conf_dir if ($central_mon) { monasca::checks::instances::nagios_wrapper <<| nrpe == false |>> } else { monasca::checks::instances::nagios_wrapper <<| host_name == $host_name and nrpe != false |>> } concat[""${conf_dir}/nagios_wrapper.yaml""] ~> service['monasca-agent'] concat { ""${conf_dir}/nagios_wrapper.yaml"": owner => 'root', group => $::monasca::group, mode => '0640', warn => true, require => file[$conf_dir], } concat::fragment { 'nagios_wrapper_header': target => ""${conf_dir}/nagios_wrapper.yaml"", order => '0', content => template('monasca/checks/nagios_wrapper.yaml.erb'), } if($instances){ create_resources('monasca::checks::instances::nagios_wrapper', $instances) } }",0,1,"concat::fragment{'nagios_wrapper_header': target => '${conf_dir}/nagios_wrapper.yaml', order => '0', content => template('monasca/checks/nagios_wrapper.yaml.erb'),}, concat['${conf_dir}/nagios_wrapper.yaml'], concat['${conf_dir}/nagios_wrapper.yaml'] ~> service['monasca-agent'], create_resources('monasca::checks::instances::nagios_wrapper', $instances), file[$conf_dir]}, if($instances){create_resources('monasca::checks::instances::nagios_wrapper', $instances)}, monasca::checks::instances::nagios_wrapper <<| host_name == $host_name and nrpe!= false |>>, monasca::checks::instances::nagios_wrapper <<| nrpe == false |>>, monasca::checks::instances::nagios_wrapper <<| nrpe== false |>>",CWE-276,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
356,"class gnocchi ( $ensure_package = 'present', $debug = undef, $use_syslog = undef, $use_stderr = undef, $log_dir = undef, $log_facility = undef, $database_connection = undef, $purge_config = false, $verbose = undef, ) inherits gnocchi::params { if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } include ::gnocchi::db include ::gnocchi::logging package { 'gnocchi': ensure => $ensure_package, name => $::gnocchi::params::common_package_name, tag => ['openstack', 'gnocchi-package'], } resources { 'gnocchi_config': purge => $purge_config, } }",1,1,"debug = undef, if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') }, include ::gnocchi::db, include ::gnocchi::logging, package { \\'gnocchi\\': ensure => $ensure_package, name => $::gnocchi::params::common_package_name, tag => ['openstack', \\'gnocchi-package\\'], }, resource { \'gnocchi_config\': purge => $purge_config, }, resources { \\\\'gnocchi_config\\\\': purge => $purge_config, }, use_stderr = undef, use_syslog = undef, verbose = undef","CWE-690, CWE-693, CWE-754, CWE-764","{'reason': ""The `verbose` attribute in the script `gnocchi` indicates that the default logging verbosity is being explicitly set to 5. Therefore, the script is intended to perform actions that would indicate a low verbosity level, thus, it's most likely that the `verbose` attribute is being used to enable logging messages with a verbosity level of 5. The `gnocchi` package contains functions to change verbosity level. Therefore, it's likely that `verbose` is related to the CWE. Moreover, the misconfiguration is related to the CWE because the `verbose` attribute is being used in an improper manner. If this attribute is not properly used, it can lead to unexpected behavior, unexpected results, and can even cause denial of service."", 'related_cwe': 'CWE-690, CWE-693, CWE-754, CWE-764', 'is_misconfiguration_related': 'Yes'}"
357,"class ceilometer::db::sync( $extra_params = undef, ) { include ::ceilometer::params package<| tag == 'ceilometer-package' |> ~> exec['ceilometer-dbsync'] exec['ceilometer-dbsync'] ~> service <| tag == 'ceilometer-service' |> ceilometer_config<||> -> exec['ceilometer-dbsync'] ceilometer_config<| title == 'database/connection' |> ~> exec['ceilometer-dbsync'] exec { 'ceilometer-dbsync': command => ""${::ceilometer::params::dbsync_command} ${extra_params}"", path => '/usr/bin', user => $::ceilometer::params::user, refreshonly => true, logoutput => on_failure, } }",0,1,"ceilometer_config<||> -> exec['ceilometer-dbsync'], command => '${::ceilometer::params::dbsync_command} ${extra_params}', exec { 'ceilometer-dbsync': command => '${::ceilometer::params::dbsync_command} ${extra_params}',, logoutput => on_failure,, package<| tag == 'ceilometer-package' |> ~> exec['ceilometer-dbsync'], path => '/usr/bin',, refreshonly => true, refreshonly => true,, user => $::ceilometer::params::user, user => $::ceilometer::params::user,",CWE-937,"{'reason': ""The exec['ceilometer-dbsync'] command could run an arbitrary binary (based on user input), which is susceptible to command injection (CWE-94). User input is not always sanitized and checked against the execution environment. As such, it is possible for an attacker to alter the command line arguments passed to the command, causing arbitrary execution of code. Since this could lead to unintended consequences, the exec['ceilometer-dbsync'] command should sanitize user input."", 'related_cwe': 'CWE-94, CWE-937', 'is_misconfiguration_related': 'Yes'}"
358,"notice('fuel-plugin-influxdb-grafana: influxdb.pp') $data_directory = hiera('lma::influxdb::data_dir') if hiera('lma::influxdb::raft_leader') { $raft_nodes = undef } else { $raft_nodes = hiera('lma::influxdb::raft_nodes') } user { 'influxdb': ensure => present, system => true, shell => '/usr/sbin/nologin', } file { $data_directory: ensure => 'directory', owner => 'influxdb', group => 'influxdb', require => user['influxdb'], } class { 'lma_monitoring_analytics::influxdb': base_directory => $data_directory, hostname => hiera('lma::influxdb::listen_address'), raft_nodes => $raft_nodes, version => '0.11.1-1', require => file[$data_directory], }",1,1,"class { 'lma_monitoring_analytics::influxdb': base_directory => \\\\$data_directory, hostname => hiera('lma::influxdb::listen_address'), raft_nodes => \\\\$raft_nodes, version => '0.11.1-1', require => file[\\\\$data_directory],, class {'lma_monitoring_analytics::influxdb': base_directory => \$data_directory, hostname => hiera('lma::influxdb::listen_address'), raft_nodes => \$raft_nodes, version => '0.11.1-1', require => file[\$data_directory],}, file { \\$data_directory: ensure => 'directory', owner => 'influxdb', group => 'influxdb', require => user['influxdb'], }, if hiera('lma::influxdb::raft_leader') { \\\\\\\\\$raft_nodes = undef } else { \\\\\\\\\$raft_nodes = hiera('lma::influxdb::raft_nodes') }, if hiera('lma::influxdb::raft_leader') { \\\\\\\\\\\\\$raft_nodes = undef } else { \\\\\\\\\\\\\$raft_nodes = hiera('lma::influxdb::raft_nodes') }, if hiera('lma::influxdb::raft_leader') { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$raft_nodes = undef } else { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$raft_nodes = hiera('lma::influxdb::raft_nodes') }, notice('fuel-plugin-influxdb-grafana: influxdb.pp') \$data_directory = hiera('lma::influxdb::data_dir') if hiera('lma::influxdb::raft_leader') { \\$raft_nodes = undef } else { \\$raft_nodes = hiera('lma::influxdb::raft_nodes') } user { 'influxdb': ensure => present, system => true, shell => '/usr/sbin/nologin', } file { \\$data_directory: ensure => 'directory', owner => 'influxdb', group => 'influxdb', require => user['influxdb'], } class { 'lma_monitoring_analytics::influxdb': base_directory => \\$data_directory, hostname => hiera('lma::influxdb::listen_address'), raft_nodes => \\$raft_nodes, version => '0.11.1-1', require => file[\\$data_directory],, version => '0.11.1-1', require => file[\\\\\\\\\\\\\\$data_directory],, version => '0.11.1-1', require => file[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$data_directory],, version => '0.11.1-1', require => file[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$data_directory],","CWE-312, CWE-502","{'reason': 'CWE-312 and CWE-502 are about hardcoded values. In this case, the misconfiguration is about not properly initializing variables and referencing hiera keys, which are all hardcoded values.', 'related_cwe': 'CWE-312, CWE-502', 'is_misconfiguration_related': 'Yes'}"
359,"class vitrage::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/vitrage', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, ) { oslo::log { 'vitrage_config': debug => $debug, use_syslog => $use_syslog, use_stderr => $use_stderr, log_dir => $log_dir, syslog_log_facility => $log_facility, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, } }",1,1,", default_log_levels => $default_log_levels,, instance_format => $instance_format,, instance_uuid_format => $instance_uuid_format,, log_date_format => $log_date_format,, logging_debug_format_suffix => $logging_debug_format_suffix,, logging_exception_prefix => $logging_exception_prefix,, }","CWE-118, CWE-119, CWE-522","{'reason': '1', 'related_cwe': 'CWE-118', 'is_misconfiguration_related': 'Yes'}"
360,"class ssh::keys { include ::config $from_extsync = hiera(""ssh-keys"", {}) if ($from_extsync) { $by_name = merge($::config::extra_user_ssh_keys, $from_extsync) } else { $by_name = $::config::extra_user_ssh_keys } }",1,1,"class ssh::keys {\\\\n include ::config\\\\n $from_extsync = hiera(\\, class ssh::keys {\\\\n include ::config\\\\n $from_extsync = hiera(\\\\, class ssh::keys {\\n include ::config\\n $from_extsync = hiera(\, class ssh::keys {\\n include ::config\\n $from_extsync = hiera(\\, if ($from_extsync) {\\\\n $by_name = merge($::config::extra_user_ssh_keys, $from_extsync)\\\\n}\\\\nelse {\\\\n $by_name = $::config::extra_user_ssh_keys\\\\n}, if ($from_extsync) {\\n $by_name = merge($::config::extra_user_ssh_keys, $from_extsync)\\n}\\\\nelse {\\n $by_name = $::config::extra_user_ssh_keys\\n}, if ($from_extsync) {\\n $by_name = merge($::config::extra_user_ssh_keys, $from_extsync)\\n}\\nelse {\\n $by_name = $::config::extra_user_ssh_keys\\n}, if ($from_extsync) {\n $by_name = merge($::config::extra_user_ssh_keys, $from_extsync)\n}\nelse {\n $by_name = $::config::extra_user_ssh_keys\n}, include ::config\\n","CWE-476: NULL Pointer Dereference, CWE-522: Insufficiently Protected Credentials, CWE-772: Exposure of Sensitive Information Through Data Sanitization","{'reason': 'Please explain in your response why the misconfiguration is related to the CWE.', 'related_cwe': 'CWE-476, CWE-522, CWE-772', 'is_misconfiguration_related': 'Yes'}"
361,"class tripleo::packages ( $enable_install = false, $enable_upgrade = false, ) { if !$enable_install and !$enable_upgrade { case $::osfamily { 'redhat': { package <| |> { provider => 'norpm' } } default: { warning('enable_install option not supported for this distro.') } } } if $enable_upgrade { package <| |> { ensure => 'latest' } case $::osfamily { 'redhat': { $pkg_upgrade_cmd = 'yum -y update' } default: { warning('please specify a package upgrade command for distribution.') } } exec { 'package-upgrade': command => $pkg_upgrade_cmd, path => '/usr/bin', timeout => 0, } exec['package-upgrade'] -> service <| |> } }",0,1,"class tripleo::packages ( $enable_install = false, $enable_upgrade = false, ) { if!$enable_install and!$enable_upgrade { case $::osfamily {'redhat': { package <| |> { provider => 'norpm' } } default: { warning('enable_install option not supported for this distro.') } } } if $enable_upgrade { package <| |> { ensure => 'latest' } case $::osfamily {'redhat': { $pkg_upgrade_cmd = 'yum -y update' } default: { warning('please specify a package upgrade command for distribution.') } } exec { 'package-upgrade': command => $pkg_upgrade_cmd, path => '/usr/bin', timeout => 0, } exec['package-upgrade'] -> service <| |> } }, exec { 'package-upgrade': command => $pkg_upgrade_cmd, path => '/usr/bin', timeout => 0, }, exec {'service-restart': command => $srv_restart_cmd, path => '/usr/bin', timeout => 0, }, exec {'service-upgrade': command => $srv_upgrade_cmd, path => '/usr/bin', timeout => 0, }, exec['package-upgrade'] -> service <| |> }, exec['service-restart'] -> service <| |> }, exec['service-upgrade'] -> service <| |> }, package <| |> { ensure => 'latest' }, service <| |> { require => Package['package-upgrade'] }",CWE-476,"{'reason': 'The script installs software, and is related to the CWE that describes issues related to missing prerequisite software.', 'related_cwe': 'CWE-476', 'is_misconfiguration_related': 'Yes'}"
362,"class users::builder::autologin { include users::builder case $::operatingsystem { darwin: { file { ""/etc/kcpassword"": content => base64decode(secret(""builder_pw_kcpassword_base64"")), owner => root, group => wheel, mode => 600, show_diff => false; } osxutils::defaults { autologinuser: domain => ""/library/preferences/com.apple.loginwindow"", key => 'autologinuser', value => $::users::builder::username; } } ubuntu: { } windows: { include tweaks::pwrshell_options include dirs::etc $builder_username = $config::builder_username registry::value { 'autoadminlogon': key => ""hklm\\software\\microsoft\\windows nt\\currentversion\\winlogon"", data => '1', } registry::value { 'defaultdomainname': key => ""hklm\\software\\microsoft\\windows nt\\currentversion\\winlogon"", data => '.', } registry::value { 'defaultpassword': key => ""hklm\\software\\microsoft\\windows nt\\currentversion\\winlogon"", data => secret(""builder_pw_cleartext""), } registry::value { 'defaultusername': key => ""hklm\\software\\microsoft\\windows nt\\currentversion\\winlogon"", data => ""$config::builder_username"", } registry::value { 'autologoncount': key => ""hklm\\software\\microsoft\\windows nt\\currentversion\\winlogon"", type => dword, data => '100000', } shared::execonce { ""desktop_exp"": command => 'import-module servermanager; add-windowsfeature desktop-experience ', provider => powershell, } file {'c:/programdata/puppetagain/update_logon_count.xml': content => template(""users/update_logon_count.xml.erb""), } shared::execonce { ""update_logon_count"": command =>'""c:\windows\system32\schtasks.exe"" /create /xml ""c:/programdata/puppetagain/update_logon_count.xml"" /tn update_logon_count.xml', require => file['c:/programdata/puppetagain/update_logon_count.xml']; } } default: { fail(""don't know how to set up autologin on $::operatingsystem"") } } }",1,1,"file { \, file {'c:/programdata/puppetagain/update_logon_count.xml': \\\\, file {'c:/programdata/puppetagain/update_logon_count.xml': \\\\\\\\\\\\\\\\\\\\\\, osxutils::defaults { autologinuser: domain => \, registry::value { 'autologoncount': key => \\, shared::execonce { \\, shared::execonce { \\\\, shared::execonce { \\\\\\\\\\\, shared::execonce { \\\\\\\\\\\\\\\\\\\\\\\\\\\, shared::execonce {{'reason': 'this misconfiguration is related to CWE-326 because it is a security misconfiguration. It is a vulnerability that may expose secrets and/or configuration data to unauthorized actors.', 'related_cwe': 'CWE-326', 'is_misconfiguration_related': 'Yes'}"
363,"class role::gadgets2 { require ::role::mediawiki mediawiki::extension { 'gadgets': needs_update => true, branch => 'rl2', } mediawiki::wiki { 'gadgets': priority => $::load_early, } mediawiki::wiki { 'gadgetsclient': } mediawiki::settings { 'gadgets_foreign_repo': values => template('role/gadgets2/foreign_repo.php.erb'), wiki => 'gadgetsclient', } }",1,1,"mediawiki::extension { 'gadgets': needs_update => true, branch => 'rl2', }, mediawiki::settings { 'gadgets_foreign_repo': values => template('role/gadgets2/foreign_repo.php.erb'), wiki => 'gadgetsclient', }, mediawiki::wiki { 'gadgets': priority => $::load_early, }, mediawiki::wiki { 'gadgetsclient': }","CWE-19: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-20: Improper Input Validation, CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-23: Exposure of Sensitive Information to an Unauthorized Actor","{'reason': ""There's a vulnerability in this code."", 'related_cwe': 'CWE-20, CWE-23', 'is_misconfiguration_related': 'Yes'}"
364,"exec { logoutput => 'on_failure' } class { '::mysql::server': } class { '::keystone::db::mysql': password => 'keystone', } class { '::keystone': debug => true, database_connection => 'mysql://keystone:keystone@127.0.0.1/keystone', catalog_type => 'sql', admin_token => 'admin_token', enabled => false, } class { '::keystone::roles::admin': email => 'test@puppetlabs.com', password => 'changeme', } class { '::keystone::endpoint': public_url => ""https://${::fqdn}:5000/"", admin_url => ""https://${::fqdn}:35357/"", } keystone_config { 'ssl/enable': value => true } include ::apache class { '::keystone::wsgi::apache': ssl => true }",1,1,"class { '::keystone':\\n      debug => true,\\n      database_connection => \\, class { '::keystone::db::mysql':\\\\n      password => 'keystone',\\\\n    }\\\\n    class { '\\::mysql::server': }\\\\n, class { '::keystone::endpoint':\\n      public_url => \, class { '\\\\::keystone::endpoint':\\\\n    public_url => \\, exec { 'touch /tmp/foobar':}, exec { logoutput => 'on_failure' }, exec {'/bin/echo \\\\\\\, exec {'/bin/echo \\\\\\\\\\\\\\, include ::apache\n    class { '::keystone::wsgi::apache':\n      ssl => true\n    }, keystone_config {'ssl/enable':\\\\n      value => true\\\\n    }",CWE-259,"{'reason': ""The exec module and the exec resource in Puppet allow remote code execution. The 'logoutput' flag in exec resources allows the execution of code to log when there is an error. This will execute arbitrary code, which can result in the execution of arbitrary code, which can lead to a remote code execution vulnerability if the script can interact with the system."", 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
365,"class cobbler( $server = $ipaddress, $production = 'prod', $domain_name = 'local', $name_server = $ipaddress, $next_server = $ipaddress, $dns_upstream = ['8.8.8.8'], $dns_domain = 'domain.tld', $dns_search = 'domain.tld', $dhcp_start_address = '10.0.0.201', $dhcp_end_address = '10.0.0.254', $dhcp_netmask = '255.255.255.0', $dhcp_gateway = $ipaddress, $dhcp_ipaddress = '127.0.0.1', $cobbler_user = 'cobbler', $cobbler_password = 'cobbler', $pxetimeout = '0' ){ anchor { 'cobbler-begin': } anchor { 'cobbler-end': } anchor<| title == 'cobbler-begin' |> -> class['::cobbler::packages'] -> class['::cobbler::selinux'] -> class['::cobbler::server'] -> anchor<| title == 'cobbler-end' |> class { '::cobbler::packages': } class { '::cobbler::selinux': } class { '::cobbler::iptables': } class { '::cobbler::server': domain_name => $domain_name, production => $production, dns_upstream => $dns_upstream, dns_domain => $dns_domain, dns_search => $dns_search, dhcp_gateway => $dhcp_gateway, } cobbler_digest_user { $cobbler_user: password => $cobbler_password, require => package[$::cobbler::packages::cobbler_package], notify => service[$::cobbler::server::cobbler_service], } }",1,1,"anchor { 'cobbler-begin': }, anchor { 'cobbler-end': }, anchor<| title == 'cobbler-begin' |> -> anchor<| title == 'cobbler-end' |>, anchor<| title == 'cobbler-begin' |> -> class['::cobbler::packages'], anchor<| title == 'cobbler-begin' |> -> class['::cobbler::selinux'], anchor<| title == 'cobbler-begin' |> -> class['::cobbler::server'], anchor<| title == 'cobbler-end' |> -> class['::cobbler::server'], class { '::cobbler::server': domain_name => $domain_name, production => $production, dns_upstream => $dns_upstream, dns_domain => $dns_domain, dns_search => $dns_search, dhcp_gateway => $dhcp_gateway, }, notify => service[$::cobbler::server::cobbler_service], package[$::cobbler::packages::cobbler_package]","CWE-129, CWE-306, CWE-829","{'reason': 'CWE-306 is relevant to the anchor declaration in cobbler. The anchor declaration provides information about the location where the next script should start.', 'related_cwe': 'CWE-306, CWE-129, CWE-829', 'is_misconfiguration_related': 'Yes'}"
366,"class manila::volume::cinder ( $cinder_catalog_info = 'volume:cinder:publicurl', $cinder_ca_certificates_file = undef, $cinder_http_retries = 3, $cinder_api_insecure = false, $cinder_cross_az_attach = true, $cinder_admin_username = 'cinder', $cinder_admin_password = undef, $cinder_admin_tenant_name = 'service', $cinder_admin_auth_url = 'http://localhost:5000/v2.0', ) { manila_config { 'default/cinder_catalog_info': value => $cinder_catalog_info; 'default/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; 'default/cinder_http_retries': value => $cinder_http_retries; 'default/cinder_api_insecure': value => $cinder_api_insecure; 'default/cinder_cross_az_attach': value => $cinder_cross_az_attach; 'default/cinder_admin_username': value => $cinder_admin_username; 'default/cinder_admin_password': value => $cinder_admin_password; 'default/cinder_admin_tenant_name': value => $cinder_admin_tenant_name; 'default/cinder_admin_auth_url': value => $cinder_admin_auth_url; } }",0,1,"value of cinder_admin_auth_url, value of cinder_admin_password, value of cinder_admin_tenant_name, value of cinder_admin_username",CWE-252,"{'reason': ""Reason why the misconfiguration is related to the CWE, i.e. 'The configuration of cinder_admin_* variables in manila::volume::cinder can affect the availability of cinder's API, making it vulnerable to attacks such as Denial of Service. Hence, the misconfiguration is related to CWE-252 - Reuse of Secret Key Material.', 'The use of hard-coded credentials, such as cinder_admin_* values, can expose cinder's API to attacks such as Denial of Service and Credential Leakage. This is why the misconfiguration is related to CWE-252 - Reuse of Secret Key Material."", 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
367,"define zaqar::server_instance( $transport, $enabled = true, ) { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } file { ""/etc/zaqar/${name}.conf"": ensure => file, content => template('zaqar/zaqar.conf.erb'), } include ::zaqar include ::zaqar::params service { ""${::zaqar::params::service_name}@${name}"": ensure => $service_ensure, enable => $enabled, } package['zaqar-common'] ~> service[""${::zaqar::params::service_name}@${name}""] package['zaqar-common'] ~> file[""/etc/zaqar/${name}.conf""] file[""/etc/zaqar/${name}.conf""] ~> service[""${::zaqar::params::service_name}@${name}""] zaqar_config<||> ~> service[""${::zaqar::params::service_name}@${name}""] }",0,1,"ensure => file, content => template('zaqar/zaqar.conf.erb'), \\, file { \, file[, if $enabled { $service_ensure = 'running' } else { $service_ensure ='stopped' }, include ::zaqar, package['zaqar-common'] ~> file[, package['zaqar-common'] ~> service[, service[, zaqar_config<||> ~> service[","CWE-269, CWE-272, CWE-275, CWE-287, CWE-300","{'reason': ""CWE-269 is related to the misconfiguration as the Puppet resource, file, is being used in a conditional statement which would be executed in all situations and the value, if $enabled { $service_ensure = 'running' } else { $service_ensure ='stopped' }, of the resource file will not be able to determine the value for the parameter 'ensure' correctly."", 'related_cwe': 'CWE-269, CWE-272, CWE-275, CWE-287, CWE-300', 'is_misconfiguration_related': 'Yes'}"
368,"class tripleo::profile::pacemaker::memcached ( $bootstrap_node = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } include ::tripleo::profile::base::memcached if $step >= 2 and $pacemaker_master { pacemaker::resource::service { $::memcached::params::service_name : clone_params => 'interleave=true', require => class['::memcached'], } } if $step >= 5 and $pacemaker_master { pacemaker::constraint::base { 'memcached-then-openstack-core-constraint': constraint_type => 'order', first_resource => 'memcached-clone', second_resource => 'openstack-core-clone', first_action => 'start', second_action => 'start', require => [pacemaker::resource::service['memcached'], pacemaker::resource::ocf['openstack-core']], } } }",0,1,"if $step >= 5 and $pacemaker_master { pacemaker::constraint::base {'memcached-then-openstack-core-constraint': constraint_type => 'order', first_resource =>'memcached-clone', second_resource => 'openstack-core-clone', first_action =>'start', second_action =>'start', require => [pacemaker::resource::service['memcached'], pacemaker::resource::ocf['openstack-core']], } }, include ::tripleo::profile::base::memcached","CWE-22, CWE-77","{'reason': 'Explanation here', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes/No'}"
369,"class ironic::drivers::pxe ( $ipxe_enabled = false, $pxe_append_params = $::os_service_default, $pxe_bootfile_name = undef, $pxe_config_template = undef, $tftp_server = $::os_service_default, $tftp_root = '/tftpboot', $images_path = $::os_service_default, $tftp_master_path = '/tftpboot/master_images', $instance_master_path = $::os_service_default, $uefi_pxe_bootfile_name = $::os_service_default, $uefi_pxe_config_template = $::os_service_default, $ipxe_timeout = $::os_service_default, $deploy_kernel = undef, $deploy_ramdisk = undef, $pxe_deploy_timeout = undef, ) { include ::ironic::pxe::common $tftp_root_real = pick($::ironic::pxe::common::tftp_root, $tftp_root) $ipxe_timeout_real = pick($::ironic::pxe::common::ipxe_timeout, $ipxe_timeout) if $ipxe_enabled { $pxe_bootfile_name_real = pick($pxe_bootfile_name, 'undionly.kpxe') $pxe_config_template_real = pick($pxe_config_template, '$pybasedir/drivers/modules/ipxe_config.template') } else { $pxe_bootfile_name_real = pick($pxe_bootfile_name, 'pxelinux.0') $pxe_config_template_real = pick($pxe_config_template, '$pybasedir/drivers/modules/pxe_config.template') } ironic_config { 'pxe/ipxe_enabled': value => $ipxe_enabled; 'pxe/pxe_append_params': value => $pxe_append_params; 'pxe/pxe_bootfile_name': value => $pxe_bootfile_name_real; 'pxe/pxe_config_template': value => $pxe_config_template_real; 'pxe/tftp_server': value => $tftp_server; 'pxe/tftp_root': value => $tftp_root_real; 'pxe/images_path': value => $images_path; 'pxe/tftp_master_path': value => $tftp_master_path; 'pxe/instance_master_path': value => $instance_master_path; 'pxe/uefi_pxe_bootfile_name': value => $uefi_pxe_bootfile_name; 'pxe/uefi_pxe_config_template': value => $uefi_pxe_config_template; 'pxe/ipxe_timeout': value => $ipxe_timeout_real; } if $deploy_kernel { warning('deploy_kernel option does nothing and will be removed soon') } if $deploy_ramdisk { warning('deploy_ramdisk option does nothing and will be removed soon') } if $pxe_deploy_timeout { warning('deploy_ramdisk option does nothing and will be removed soon') } }",1,1,"pxe_bootfile_name = undef, pxe_bootfile_name_real = pick($pxe_bootfile_name, 'pxelinux.0'), pxe_bootfile_name_real = pick($pxe_bootfile_name, 'undionly.kpxe'), pxe_config_template = undef, pxe_config_template_real = pick($pxe_config_template, '$pybasedir/drivers/modules/ipxe_config.template'), pxe_config_template_real = pick($pxe_config_template, '$pybasedir/drivers/modules/pxe_config.template'), warning('deploy_kernel option does nothing and will be removed soon'), warning('deploy_ramdisk option does nothing and will be removed soon')","CWE-1032, CWE-22","{'reason': 'This issue is an instance of CWE-1032, CWE-22.', 'related_cwe': 'CWE-1032, CWE-22', 'is_misconfiguration_related': 'Yes'}"
370,"class swift( $swift_hash_path_suffix = undef, $swift_hash_path_prefix = undef, $package_ensure = 'present', $client_package_ensure = 'present', $max_header_size = '8192', ) { include ::swift::deps include ::swift::params if ($swift_hash_path_prefix == undef and $swift_hash_path_suffix == undef) { fail('you must specify at least swift_hash_path_prefix or swift_hash_path_suffix') } if !defined(package['swift']) { package { 'swift': ensure => $package_ensure, name => $::swift::params::package_name, tag => ['openstack', 'swift-package'], } } class { '::swift::client': ensure => $client_package_ensure; } file { owner => 'swift', group => 'swift', tag => 'swift-file', } file { '/etc/swift': ensure => directory, } user {'swift': ensure => present, require => package['swift'], } file { '/var/lib/swift': ensure => directory, } file { '/var/run/swift': ensure => directory, selinux_ignore_defaults => true, } file { '/etc/swift/swift.conf': ensure => file, } file['/etc/swift/swift.conf'] -> swift_config<||> swift_config { 'swift-hash/swift_hash_path_suffix': value => $swift_hash_path_suffix; 'swift-hash/swift_hash_path_prefix': value => $swift_hash_path_prefix; 'swift-constraints/max_header_size': value => $max_header_size; } }",1,1,"file ['/etc/swift/swift.conf'] -> swift_config<||> swift_config, file { '/etc/swift': ensure => directory,, file { '/etc/swift': ensure => directory, tag =>'swift-file',, file { '/etc/swift/swift.conf': ensure => file,, file { '/var/lib/swift': ensure => directory,, file { '/var/run/swift': ensure => directory, selinux_ignore_defaults => true,, file {'swift': ensure => present, require => package['swift'],, swift_config {'swift-constraints/max_header_size': value => $max_header_size;, swift_config {'swift-hash/swift_hash_path_prefix': value => $swift_hash_path_prefix;, swift_config {'swift-hash/swift_hash_path_suffix': value => $swift_hash_path_suffix;",CWE-284,"{'reason': 'The given code contains a potential denial-of-service (DoS) attack vulnerability due to lack of default rate limiting rules.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
371,class { '::osnailyfacter::netconfig::netconfig' :},1,1,nan,nan,"{'reason': 'The provided misconfiguration is related to the CWE as it has a direct relation to the lack of proper input validation.', 'related_cwe': 'CWE-20, CWE-327, CWE-1295', 'is_misconfiguration_related': 'Yes'}"
372,"$plugin_settings = hiera('fuel-plugin-purestorage-cinder') class { 'plugin_purestorage_cinder::compute' : nova_multipath => $plugin_settings['pure_nova_multipath'], }",0,1,"False'}, True', }, compute' : nova_multipath => $plugin_settings['pure_nova_multipath'], }, nova_multipath => $plugin_settings['pure_nova_multipath'],}, plugin_settings = hiera('fuel-plugin-purestorage-cinder') class, pure_nova_multipath': 'True'}","CWE-798, CWE-807","{'reason': 'this misconfiguration is caused by misinterpretation of hiera configuration variable, and the misconfiguration is related to misinterpreting configuration variables, which can be considered as the misconfiguration related to CWE-798, CWE-807.', 'related_cwe': 'CWE-798, CWE-807', 'is_misconfiguration_related': 'Yes'}"
373,"define packages::yumrepo ($repo_name = $title, $url_path, $gpg_key='', $gpg_key_pkg='') { include config include yum_config $mirror_file = ""/etc/yum.repos.d/$repo_name.mirrors"" $ipaddress = $::ipaddress $data_server = $config::data_server $data_servers = $config::data_servers file { ""/etc/yum.repos.d/$repo_name.repo"": owner => 0, group => 0, mode => 0644, content => template(""packages/yumrepo.erb""), notify => exec['yum-clean-all']; $mirror_file: owner => 0, group => 0, mode => 0644, content => template(""packages/mirrorlist.erb""), notify => exec['yum-clean-all']; } if ($gpg_key) { file { ""/etc/pki/${repo_name}-pubkey.txt"": source => $gpg_key, owner => 0, group => 0, mode => 0644, notify => exec[""install-${repo_name}-repo-pubkey""], show_diff => false; } exec { ""install-${repo_name}-repo-pubkey"": command => ""/bin/rpm --import /etc/pki/${repo_name}-pubkey.txt"", logoutput => on_failure, unless => ""/bin/rpm -q $gpg_key_pkg""; } } }",0,1,"filefile \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file \\\\{\\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\\\\\\\, file \\{\\n \\, file \{\n \, file { \\, file {\\\\\\\n \\\\\\\\\, file {\\\n \\\\, file {\\n \\",CWE-1034,"{'reason': 'the misconfiguration in this file line is not related to the provided CWE, because file permissions are managed at the file level rather than the repository level. File permissions are managed at the repository level in other file lines.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
374,"class midonet::cluster ( $zookeeper_hosts, $cassandra_servers, $cassandra_rep_factor, $keystone_admin_token, $keystone_host, $package_name = undef, $service_name = undef, $service_ensure = undef, $service_enable = undef, $cluster_config_path = undef, $cluster_jvm_config_path = undef, $cluster_host = undef, $cluster_port = undef, $keystone_port = undef, $max_heap_size = undef, $heap_newsize = undef, $is_mem = undef, $is_insights = undef, ) { class { 'midonet::cluster::install': package_name => $package_name, is_mem => $is_mem } contain 'midonet::cluster::install' class { 'midonet::cluster::run': service_name => $service_name, service_ensure => $service_ensure, service_enable => $service_enable, cluster_config_path => $cluster_config_path, cluster_jvm_config_path => $cluster_config_path, cluster_host => $cluster_host, cluster_port => $cluster_port, max_heap_size => $max_heap_size, heap_newsize => $heap_newsize, zookeeper_hosts => $zookeeper_hosts, cassandra_servers => $cassandra_servers, cassandra_rep_factor => $cassandra_rep_factor, keystone_admin_token => $keystone_admin_token, keystone_host => $keystone_host, keystone_port => $keystone_port, is_insights => $is_insights, require => class['midonet::cluster::install'] } contain 'midonet::cluster::install' }",0,1,"class {'midonet::cluster::install': package_name => $package_name, is_mem => $is_mem, class {'midonet::cluster::install': package_name => $package_name, is_mem => $is_mem }, class {'midonet::cluster::install'}, class {'midonet::cluster::run': service_name => $service_name, service_ensure => $service_ensure, service_enable => $service_enable, cluster_config_path => $cluster_config_path, cluster_jvm_config_path => $cluster_config_path, cluster_host => $cluster_host, cluster_port => $cluster_port, max_heap_size => $max_heap_size, heap_newsize => $heap_newsize, zookeeper_hosts => $zookeeper_hosts, cassandra_servers => $cassandra_servers, cassandra_rep_factor => $cassandra_rep_factor, keystone_admin_token => $keystone_admin_token, keystone_host => $keystone_host, keystone_port => $keystone_port, is_insights => $is_insights, require => class['midonet::cluster::install'] } contain'midonet::cluster::install', contain'midonet::cluster::install'",CWE-284,"{'reason': ""The misconfiguration in the provided script can be related to CWE-284, 'Weak Encryption', because the provided script uses a weak encryption algorithm for encryption, such as DES, which has been shown to be vulnerable to a variety of attacks."", 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
375,"class tripleo::noop ( $package = true, $file = true, $service = true, $exec = true, $user = true, $group = true, $cron = true, ) { package <| |> { noop => $package} file <| |> { noop => $file} service <| |> { noop => $service} exec <| |> { noop => $exec} user <| |> { noop => $user} group <| |> { noop => $group} cron <| |> { noop => $cron} }",0,1,"class tripleo::noop, class tripleo::noop ($package = true, $file = true, $service = true, $exec = true, $user = true, $group = true, $cron = true,), cron <| |> { noop => $cron}, exec <| |> { noop => $exec}, file <| |> { noop => $file}, group <| |> { noop => $group}, package <| |> { noop => $package}, service <| |> { noop => $service}, tripleo::noop ($package = true, $file = true, $service = true, $exec = true, $user = true, $group = true, $cron = true,), user <| |> { noop => $user}",CWE-937,"{'reason': ""The misconfiguration is related to a vulnerability that allows administrators with sudo privileges to run commands as any user without providing their password. It is done by removing the requirement of prompting the administrator's password through an incorrect sudo configuration."", 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
376,class { '::openstack_tasks::roles::enable_cinder' :} warning('osnailyfacter/modular/./roles/enable_cinder.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/enable_cinder.pp'),1,1,class { '::openstack_tasks::roles::enable_cinder' :} warning('osnailyfacter/modular/./roles/enable_cinder.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/enable_cinder.pp'),CWE-22,"{'reason': 'Please find attached screenshot from [https://nvd.nist.gov/vuln/detail/CVE-2020-35681]. It mentions that the vulnerability that occurred in openstack is related to cinder and the bugfix release for the misconfiguration should be mitaka (which is the version in which the warning was issued).', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
377,"class glance::backend::rbd( $rbd_store_user = $::os_service_default, $rbd_store_ceph_conf = $::os_service_default, $rbd_store_pool = $::os_service_default, $rbd_store_chunk_size = $::os_service_default, $show_image_direct_url = undef, $package_ensure = 'present', $rados_connect_timeout = $::os_service_default, $multi_store = false, $glare_enabled = false, ) { include ::glance::deps include ::glance::params if $show_image_direct_url { notice('parameter show_image_direct_url is deprecated, use parameter in glance::api') } glance_api_config { 'glance_store/rbd_store_ceph_conf': value => $rbd_store_ceph_conf; 'glance_store/rbd_store_user': value => $rbd_store_user; 'glance_store/rbd_store_pool': value => $rbd_store_pool; 'glance_store/rbd_store_chunk_size': value => $rbd_store_chunk_size; 'glance_store/rados_connect_timeout': value => $rados_connect_timeout; } if $glare_enabled { glance_glare_config { 'glance_store/rbd_store_ceph_conf': value => $rbd_store_ceph_conf; 'glance_store/rbd_store_user': value => $rbd_store_user; 'glance_store/rbd_store_pool': value => $rbd_store_pool; 'glance_store/rbd_store_chunk_size': value => $rbd_store_chunk_size; 'glance_store/rados_connect_timeout': value => $rados_connect_timeout; } } if !$multi_store { glance_api_config { 'glance_store/default_store': value => 'rbd'; } if $glare_enabled { glance_glare_config { 'glance_store/default_store': value => 'rbd'; } } } package { 'python-ceph': ensure => $package_ensure, name => $::glance::params::pyceph_package_name, tag => 'glance-support-package', } }",0,1,"glance_api_config { 'glance_store/default_store': value => 'rbd'; }, glance_api_config { 'glance_store/rbd_store_ceph_conf': value => $rbd_store_ceph_conf; 'glance_store/rbd_store_user': value => $rbd_store_user; 'glance_store/rbd_store_pool': value => $rbd_store_pool; 'glance_store/rbd_store_chunk_size': value => $rbd_store_chunk_size; 'glance_store/rados_connect_timeout': value => $rados_connect_timeout; }, glance_glare_config { 'glance_store/default_store': value => 'rbd'; }, glance_glare_config { 'glance_store/rbd_store_ceph_conf': value => $rbd_store_ceph_conf; 'glance_store/rbd_store_user': value => $rbd_store_user; 'glance_store/rbd_store_pool': value => $rbd_store_pool; 'glance_store/rbd_store_chunk_size': value => $rbd_store_chunk_size; 'glance_store/rados_connect_timeout': value => $rados_connect_timeout; }, if $glare_enabled {, if $show_image_direct_url {, include ::glance::deps, package { 'python-ceph': ensure => $package_ensure, name => $::glance::params::pyceph_package_name, tag => 'glance-support-package', }","CWE-22, CWE-119, CWE-284, CWE-400, CWE-94","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
378,"define bors::instance($basedir, $owner, $group, $repo_owner, $repo, $reviewers, $builders, $buildbot_url, $bors_user, $bors_pass, $test_ref = ""auto"", $master_ref = ""master"", $n_builds = ""5"", $bors_version = ""1.2"", $status_location = null) { bors::install { $title: basedir => $basedir, owner => $owner, group => $group, version => $bors_version; } bors::config { $title: basedir => $basedir, owner => $owner, group => $group, repo_owner => $repo_owner, repo => $repo, reviewers => $reviewers, builders => $builders, buildbot_url => $buildbot_url, test_ref => $test_ref, master_ref => $master_ref, n_builds => $n_builds, bors_user => $bors_user, bors_pass => $bors_pass; } bors::cron { $title: basedir => $basedir, owner => $owner, status_location => $status_location, require => [bors::install[$title], bors::config[$title]]; } if ($status_location != null) { bors::status { $title: owner => $owner, group => $group, repo_owner => $repo_owner, repo => $repo, status_location => $status_location; } } }",1,1,"bors::config { $title: basedir => $basedir, owner => $owner, group => $group, repo_owner => $repo_owner, repo => $repo, reviewers => $reviewers, builders => $builders, buildbot_url => $buildbot_url, test_ref => $test_ref, master_ref => $master_ref, n_builds => $n_builds, bors_user => $bors_user, bors_pass => $bors_pass;}, bors::cron { $title: basedir => $basedir, owner => $owner, status_location => $status_location, require => [bors::install[$title], bors::config[$title]];}, bors::install { $title: basedir => $basedir, owner => $owner, group => $group, version => $bors_version;}, if ($status_location!= null) { bors::status { $title: owner => $owner, group => $group, repo_owner => $repo_owner, repo => $repo, status_location => $status_location; } }","CWE-119, CWE-120, CWE-121","{'reason': 'Reason goes here', 'related_cwe': 'CWE-119, CWE-120, CWE-121', 'is_misconfiguration_related': 'Yes'}"
379,class role::hue { require ::role::hadoop require ::role::hive require ::role::oozie require ::cdh::pig require ::cdh::sqoop require ::cdh::hue },0,1,"require ::cdh::hue, require ::cdh::pig, require ::cdh::sqoop, require ::role::hadoop, require ::role::hive, require ::role::hue, require ::role::oozie",CWE-480,"{'reason': 'The missing require statements in the script can lead to the system being vulnerable to attacks that could exploit the missing configurations. These attacks include, but are not limited to, the following: <1>. [Provide detailed analysis linking the security issue to the provided CWE] <2>. [Provide detailed analysis linking the security issue to the provided CWE]', 'related_cwe': 'CWE-480', 'is_misconfiguration_related': 'Yes'}"
380,"class { 'kafka::server': brokers => { ""${::fqdn}"" => { 'id' => 1, 'port' => 12345 }, 'kafka-node02.domain.org' => { 'id' => 2 }, }, zookeeper_hosts => ['zk-node01:2181', 'zk-node02:2181', 'zk-node03:2181'], }",0,1,"brokers => {, zookeeper_hosts => ['zk-node01:2181', 'zk-node02:2181', 'zk-node03:2181'],",CWE-1021,"{'reason': 'Kafka brokers use default credentials. The default broker credentials may be changed by setting a different password.', 'related_cwe': 'CWE-1021', 'is_misconfiguration_related': 'Yes'}"
381,"class congress::config ( $congress_config = {}, ) { validate_hash($congress_config) create_resources('congress_config', $congress_config) }",0,1,"create_resources('congress_config', $congress_config)","CWE-937: Resource Management Weakness, CWE-938: Resource Utilization Weakness, CWE-939: Resource Consumption Weakness, CWE-940: Resource Exhaustion Weakness, CWE-941: Resource Denial of Service Weakness, CWE-942: Resource Depletion Weakness, CWE-943: Resource Depletion Weakness, CWE-944: Resource Depletion Weakness, CWE-945: Resource Consumption Weakness, CWE-946: Resource Exhaustion Weakness","{'reason': 'Creating an array of resources in the puppet code without validating that the input is a hash can lead to a misconfiguration if there is an element that is not a hash. This might lead to the creation of duplicate resource, causing the configuration to not be applied correctly. This might also lead to the creation of resources with unintended values, causing unexpected behavior in the system. Thus, validating that input is a hash before creating resources is important to avoid misconfiguration in puppet code.', 'related_cwe': 'CWE-937, CWE-938, CWE-939, CWE-940, CWE-941, CWE-942, CWE-943, CWE-944, CWE-945, CWE-946', 'is_misconfiguration_related': 'Yes'}"
382,"class opendaylight::sfc { include opendaylight $management_vip = hiera('management_vip') $odl = $opendaylight::odl_settings $rest_port = $opendaylight::rest_api_port $user = $odl['metadata']['default_credentials']['user'] $password = $odl['metadata']['default_credentials']['password'] if $odl['enable_sfc'] { if $odl['sfc_class']=='ncr' { exec { 'odl_netvirt_coexistence': command => ""/usr/bin/curl -i -u ${user}:${password} \ -h 'content-type: application/json' \ -x put -d '{\""netvirt-providers-config\"":{\""table-offset\"":\""1\""}}' \ http://${management_vip}:${rest_port}/restconf/config/netvirt-providers-config:netvirt-providers-config"", } exec { 'odl_sfc_coexistence': command => ""/usr/bin/curl -i -u ${user}:${password} \ -h 'content-type: application/json' -x put -d \ '{\""sfc-of-renderer-config\"":{\""sfc-of-table-offset\"":\""150\"",\""sfc-of-app-egress-table-offset\"":\""11\""}}' \ http://${management_vip}:${rest_port}/restconf/config/sfc-of-renderer:sfc-of-renderer-config"", } } } }",0,1,"curl, management_vip, odl_netvirt_coexistence, odl_sfc_coexistence, password, rest_port, sfc-of-app-egress-table-offset, sfc-of-renderer-config, table-offset, user","CWE-1151, CWE-1152, CWE-1153, CWE-1154, CWE-1155, CWE-1165","{'reason': 'This is misconfiguration is related to CWE-1153', 'related_cwe': 'CWE-1153', 'is_misconfiguration_related': 'Yes'}"
383,"class onos::service{ $public_eth = $onos::public_eth exec{ path => ""/usr/bin:/usr/sbin:/bin:/sbin"", timeout => 320, logoutput => 'true', } firewall {'221 onos': port => [6633, 6640, 6653, 8181, 8101,9876], proto => 'tcp', action => 'accept', }-> service{ 'onos': ensure => running, enable => true, hasstatus => true, hasrestart => true, }-> exec{ 'sleep 100 to stablize onos': command => 'sleep 100;' }-> exec{ 'restart onos': command => 'service onos restart', }-> exec{ 'sleep 100 again to stablize onos': command => 'sleep 100;' }-> exec{ 'restart onos again': command => 'service onos restart', }-> exec{ 'sleep 60 to stablize onos': command => 'sleep 60;' }-> exec{ 'add onos auto start': command => 'echo ""onos"">>/opt/service', }-> exec{ 'set public port': command => ""/opt/onos/bin/onos \""externalportname-set -n $public_eth\"""" } }",1,1,"class onos::service{ \$public_eth = \$onos::public_eth exec{ path => \, exec{ path => \, exec{ path => \\, exec{'add onos auto start': command => 'echo \, exec{'restart onos again': command =>'service onos restart',}, exec{'restart onos': command =>'service onos restart',}, exec{'sleep 100 again to stablize onos': command =>'sleep 100;',, exec{'sleep 100 to stablize onos': command =>'sleep 100;',, exec{'sleep 60 to stablize onos': command =>'sleep 60;',, service{ 'onos': ensure => running,",CWE-20,"{'reason': 'The sleep command sleeps for the provided amount of time in seconds. In this case the sleep command is used to ensure the system stabilizes after onos is started. However, it is better practice to ensure there is a recovery mechanism for onos when the system fails during execution.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
384,class toplevel::server::aws_manager inherits toplevel::server { include ::security assert { 'aws-manager-high-security': condition => $::security::high; } include nrpe::check::check_free_aws_ips include ::aws_manager },0,1,"assert {\n  'aws-manager-high-security':\n    condition => $::security::high;\n}, class toplevel::base inherits toplevel::base::base, class toplevel::base::base inherits toplevel::base::base::base, class toplevel::base::base::base inherits toplevel::base::base, class toplevel::base::base::base::base inherits toplevel::base::base::base, class toplevel::base::server inherits toplevel::base, class toplevel::server inherits toplevel::base::server, class toplevel::server::aws_manager inherits toplevel::server, include ::aws_manager, include nrpe::check::check_free_aws_ips","CWE-117, CWE-272, CWE-284, CWE-285: Argument Injection","{'reason': 'The misconfiguration is not related to CWE-117. As explained in the `Reason`, the misconfiguration is not related to the CWE. The misconfiguration is not related to CWE-272. As explained in the `Reason`, the misconfiguration is not related to the CWE. The misconfiguration is not related to CWE-284. As explained in the `Reason`, the misconfiguration is not related to the CWE. The misconfiguration is not related to CWE-285. As explained in the `Reason`, the misconfiguration is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
385,"class sahara::keystone::auth( $password, $service_name = 'sahara', $auth_name = 'sahara', $email = 'sahara@localhost', $tenant = 'services', $service_type = 'data-processing', $service_description = 'sahara data processing', $configure_endpoint = true, $region = 'regionone', $public_url = 'http://127.0.0.1:8386/v1.1/%(tenant_id)s', $admin_url = 'http://127.0.0.1:8386/v1.1/%(tenant_id)s', $internal_url = 'http://127.0.0.1:8386/v1.1/%(tenant_id)s', ) { keystone::resource::service_identity { 'sahara': configure_user => true, configure_user_role => true, configure_endpoint => $configure_endpoint, service_type => $service_type, service_description => $service_description, service_name => $service_name, auth_name => $auth_name, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, } }",1,1,"keystone::resource::service_identity {'sahara': admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': auth_name => $auth_name, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': configure_endpoint => $configure_endpoint, service_type => $service_type, service_description => $service_description, service_name => $service_name, auth_name => $auth_name, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': service_name => $service_name, auth_name => $auth_name, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }, keystone::resource::service_identity {'sahara': tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, }","CWE-258, CWE-269","{'reason': 'The misconfiguration is related to the CWE because the provided script creates a misconfigured service identity for sahara by allowing any admin, who has sahara service ID, to get the sahara service tokens and the sahara service secrets by simply knowing the sahara password. As sahara is a cloud management service, this creates a possible vulnerability for attackers.', 'related_cwe': 'CWE-258, CWE-269', 'is_misconfiguration_related': 'Yes'}"
386,"class openstack::img::cirros ( $os_tenant_name = 'admin', $os_username = 'admin', $os_password = 'changeme', $os_auth_url = 'http://127.0.0.1:5000/v2.0/', $disk_format = 'raw', $container_format = 'ovf', $public = 'true', $img_name = 'cirros', $os_name = 'cirros', ) { package { 'cirros-testvm': ensure => ""present"" } -> case $::osfamily { 'redhat': { exec { 'upload-img': command => ""/usr/bin/glance -n ${os_auth_url} -t ${os_tenant_name} -i ${os_username} -k ${os_password} add name=${img_name} is_public=${public} container_format=${container_format} disk_format=${disk_format} distro=${os_name} < /opt/vm/cirros-x86_64-disk.img"", unless => ""/usr/bin/glance -n ${os_auth_url} -t ${os_tenant_name} -i ${os_username} -k ${os_password} index && (/usr/bin/glance -n ${os_auth_url} -t ${os_tenant_name} -i ${os_username} -k ${os_password} index | grep ${img_name})"", } } 'debian': { exec { 'upload-img': command => ""/usr/bin/glance -n ${os_auth_url} -t ${os_tenant_name} -i ${os_username} -k ${os_password} add name=${img_name} is_public=${public} container_format=${container_format} disk_format=${disk_format} distro=${os_name} < /usr/share/cirros-testvm/cirros-x86_64-disk.img"", unless => ""/usr/bin/glance -n ${os_auth_url} -t ${os_tenant_name} -i ${os_username} -k ${os_password} index && (/usr/bin/glance -n ${os_auth_url} -t ${os_tenant_name} -i ${os_username} -k ${os_password} index | grep ${img_name})"", } } } }",0,1,glance,"CWE-20, CWE-78","{'reason': 'The issue with uploading the image using glance in the above puppet script is not related to CWE-20, CWE-78. The vulnerability associated with CWE-20 is a form of injection attack that occurs when a piece of code reads input from the environment to perform its execution, and is susceptible to attack because it cannot validate if the input is actually a part of the environment. On the other hand, the misconfiguration of uploading an image is a configuration error where the wrong image is being uploaded to a system and is available for access. In this case, the misconfiguration of uploading the wrong image to the system is not a form of injection attack but is caused by the incorrect selection of the image. Similarly, CWE-78 is a vulnerability that occurs', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
387,"class ironic::db::postgresql( $password, $dbname = 'ironic', $user = 'ironic', $encoding = undef, $privileges = 'all', ) { class['ironic::db::postgresql'] -> service<| title == 'ironic' |> ::openstacklib::db::postgresql { 'ironic': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['ironic'] ~> exec<| title == 'ironic-dbsync' |> }",0,1,"::openstacklib::db::postgresql { 'ironic': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['ironic'] ~> exec<| title == 'ironic-dbsync' |>, class['ironic::db::postgresql'], class['ironic::db::postgresql'] -> service<| title == 'ironic' |> ::openstacklib::db::postgresql { 'ironic': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['ironic'] ~> exec<| title == 'ironic-dbsync' |>, class['ironic::db::postgresql'] -> service<| title == 'ironic' |> ::openstacklib::db::postgresql { 'ironic': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['ironic'] ~> exec<| title == 'ironic-dbsync' |> ::openstacklib::db::postgresql { 'ironic': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['ironic'] ~> exec<| title == 'ironic-dbsync' |>, dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges,, password_hash => postgresql_password($user, $password),","CWE-327, CWE-787","{'reason': 'Reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
388,"class tripleo::redis_notification ( $haproxy_monitor_ip = '127.0.0.1', ) { file { '/usr/local/bin/redis-notifications.sh' : ensure => file, content => template('tripleo/redis/redis-notifications.sh.erb'), owner => 'root', group => 'root', mode => '0755', } }",0,1,"file { '/usr/local/bin/redis-notifications.sh' : ensure => file, content => template('tripleo/redis/redis-notifications.sh.erb'), owner => 'root', group => 'root', mode => '0755', }","CWE-306, CWE-325, CWE-327, CWE-732","{'reason': 'CWE-306 is a vulnerability that is applicable for this issue.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
389,"class zaqar::messaging::mongodb( $uri, $ssl_keyfile = $::os_service_default, $ssl_certfile = $::os_service_default, $ssl_cert_reqs = $::os_service_default, $ssl_ca_certs = $::os_service_default, $database = $::os_service_default, $max_attempts = $::os_service_default, $max_retry_sleep = $::os_service_default, $max_retry_jitter = $::os_service_default, $max_reconnect_attempts = $::os_service_default, $reconnect_sleep = $::os_service_default, $partitions = $::os_service_default, ) { zaqar_config { 'drivers/message_store': value => 'mongodb'; 'drivers:message_store:mongodb/uri': value => $uri, secret => true; 'drivers:message_store:mongodb/ssl_keyfile': value => $ssl_keyfile; 'drivers:message_store:mongodb/ssl_certfile': value => $ssl_certfile; 'drivers:message_store:mongodb/ssl_cert_reqs': value => $ssl_cert_reqs; 'drivers:message_store:mongodb/ssl_ca_certs': value => $ssl_ca_certs; 'drivers:message_store:mongodb/database': value => $database; 'drivers:message_store:mongodb/max_attempts': value => $max_attempts; 'drivers:message_store:mongodb/max_retry_sleep': value => $max_retry_sleep; 'drivers:message_store:mongodb/max_retry_jitter': value => $max_retry_jitter; 'drivers:message_store:mongodb/max_reconnect_attempts': value => $max_reconnect_attempts; 'drivers:message_store:mongodb/reconnect_sleep': value => $reconnect_sleep; 'drivers:message_store:mongodb/partitions': value => $partitions; } }",0,1,"drifted: true, value => $database;, value => $max_attempts;, value => $max_retry_jitter;, value => $max_retry_sleep;, value => $ssl_ca_certs;, value => $ssl_cert_reqs;, value => $ssl_certfile;, value => $ssl_keyfile;, value => $uri, secret => true;",CWE-319,"{'reason': 'The misconfiguration issue is related to [Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-319', 'is_misconfiguration_related': 'Yes'}"
390,"define nova::network::bridge ( $ip, $netmask = '255.255.255.0' ) { include ::nova::deps case $::osfamily { 'debian': { $context = '/files/etc/network/interfaces' augeas { ""bridge_${name}"": context => $context, changes => [ ""set auto[child::1 = '${name}']/1 ${name}"", ""set iface[. = '${name}'] ${name}"", ""set iface[. = '${name}']/family inet"", ""set iface[. = '${name}']/method static"", ""set iface[. = '${name}']/address ${ip}"", ""set iface[. = '${name}']/netmask ${netmask}"", ""set iface[. = '${name}']/bridge_ports none"", ], notify => exec['networking-refresh'], } } 'redhat' : { } default: { fail('nova::network_bridge currently only supports osfamily debian and redhat') } } }",1,1,"augeas { \, case $::osfamily, include ::nova::deps, set auto[child::1 = '${name}']/1 ${name}, set iface[. = '${name}'] ${name}, set iface[. = '${name}']/address ${ip}, set iface[. = '${name}']/bridge_ports none, set iface[. = '${name}']/family inet, set iface[. = '${name}']/method static, set iface[. = '${name}']/netmask ${netmask}",CWE-295,"{'reason': 'Reasoning for this misconfiguration being related to the provided CWE', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
391,"class runner::tasks::populate_shared_repos($runlevel=3) { include runner runner::task { ""${runlevel}-populate_shared_repos"": content => template(""${module_name}/tasks/populate_shared_repos.erb""); } }",0,1,"class runner::tasks::populate_shared_repos($runlevel=3) {\n include runner\n runner::task {\n \, content => template(${module_name}/tasks/populate_shared_repos.erb);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, content => template(${module_name}/tasks/populate_shared_repos.erb);\\\\\\\\\\\\\\\\\\\\n} }\\\\\\\\\\\\\\\\\\\\n, content => template(${module_name}/tasks/populate_shared_repos.erb);\\\\\\\\n} }\\\\\\\\n, content => template(${module_name}/tasks/populate_shared_repos.erb);\\n} }\\n, include runner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n runner::task {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, include runner\\\\\\\\\\\\\\\\\\\\n runner::task {\\\\\\\\\\\\\\\\\\\\n \\\\\\\\\, include runner\\\\\\\\n runner::task {\\\\\\\\n \\\\, include runner\\\\n runner::task {\\\\n \\, include runner\\n runner::task {\\n \","CWE-20, CWE-22","{'reason': 'This misconfiguration is related to CWE-20. The misconfiguration can be explained by the following: The vulnerability CWE-20 is explained by \\', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
392,"class manila::client ( $package_ensure = 'present' ) { include ::manila::params package { 'python-manilaclient': ensure => $package_ensure, name => $::manila::params::client_package, tag => 'openstack' } }",0,1,"class manila::client ($package_ensure = 'present') { include ::manila::params package { 'python-manilaclient': ensure => $package_ensure, name => $::manila::params::client_package, tag => 'openstack' } }, include ::manila::params, name => $::manila::params::client_package, package {'python-manilaclient': ensure => $package_ensure, name => $::manila::params::client_package, tag => 'openstack'}, tag => 'openstack'",CWE-248,"{'reason': 'The `ensure` parameter in the `package` resource can have four possible values: absent, present, latest, and latest_noarch. `present` is used to ensure the specified package exists. This resource has been configured with the ensure value `present`. This will ensure that the `python-manilaclient` package is present on the system, if it is not already present. This will prevent the misconfiguration.', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
393,"class memcached( $size_mb = 200, $port = 11211, $iface = '0.0.0.0', ) { package { 'memcached': ensure => present, } file { '/etc/memcached.conf': content => template('memcached/memcached.conf.erb'), notify => service['memcached'], } service { 'memcached': ensure => running, enable => true, require => package['memcached'], } }",0,1,"file { \, file { \\, file { \\\\, file { \\\\\\\\, service {'memcached': ensure => running, enable => true, require => package['memcached'], }","CWE-259, CWE-276","{'reason': ""Puppet's file resource does not have the `purge` parameter, so if a previous version of the `file` resource has set this file to a specific size or to `absent`, the existing file will not be deleted. As such, the file will continue to exist after a Puppet run. If a user wants to ensure that the memcached configuration file is always deleted when it is updated, the file resource should include the `purge` parameter. Additionally, the default configuration of memcached in this case would require a larger memory size than the default of `32` MB.\\n\\nThis issue is related to CWE-259 as it could potentially lead to denial of service attacks. However, this issue is not related to CWE"", 'related_cwe': 'CWE-259, CWE-276', 'is_misconfiguration_related': 'No'}"
394,"class ironic::db::sync( $extra_params = undef, ) { include ::ironic::params package<| tag == 'ironic-package' |> ~> exec['ironic-dbsync'] exec['ironic-dbsync'] ~> service <| tag == 'ironic-service' |> ironic_config<||> -> exec['ironic-dbsync'] ironic_config<| title == 'database/connection' |> ~> exec['ironic-dbsync'] exec { 'ironic-dbsync': command => ""${::ironic::params::dbsync_command} ${extra_params}"", path => '/usr/bin', user => 'root', refreshonly => true, logoutput => on_failure, } }",0,1,"exec { 'ironic-dbsync':, logoutput => on_failure, } }],, package<| tag == 'ironic-package' |> ~> exec['ironic-dbsync']",CWE-20,"{'reason': 'The exec service call is missing a user defined value, so a default value is used. This might not be the correct value for the admin user.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
395,"class tripleo::profile::base::swift::proxy ( $step = hiera('step'), $memcache_servers = hiera('memcached_node_ips'), $memcache_port = 11211, ) { if $step >= 4 { $swift_memcache_servers = suffix($memcache_servers, "":${memcache_port}"") include ::swift::proxy include ::swift::proxy::proxy_logging include ::swift::proxy::healthcheck class { '::swift::proxy::cache': memcache_servers => $swift_memcache_servers } include ::swift::proxy::keystone include ::swift::proxy::authtoken include ::swift::proxy::staticweb include ::swift::proxy::ratelimit include ::swift::proxy::catch_errors include ::swift::proxy::tempurl include ::swift::proxy::formpost include ::swift::proxy::bulk } }",0,1,"class {'swift::proxy::bulk':}, class {'swift::proxy::cache':memcache_servers => $swift_memcache_servers}, class {'swift::proxy::catch_errors':}, class {'swift::proxy::formpost':}, class {'swift::proxy::healthcheck':}, class {'swift::proxy::keystone':}, class {'swift::proxy::proxy_logging':}, class {'swift::proxy::ratelimit':}, class {'swift::proxy::staticweb':}, class {'swift::proxy::tempurl':}","CWE-308, CWE-312","{'reason': 'Please explain how the misconfiguration is related to CWE-308. Provide as much detail as possible', 'related_cwe': 'CWE-308', 'is_misconfiguration_related': 'Yes'}"
396,"class ceph::osds($args = {}, $defaults = {}) { create_resources(ceph::osd, $args, $defaults) }",0,1,"class ceph::osds($args = {}, $defaults = {})","CWE-369 - Divide By Zero, CWE-732 - Untrusted Search Path, CWE-758 - Use of Unsafe API","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
397,"define oslo::privsep ( $config, $entrypoint = $name, $user = $::os_service_default, $group = $::os_service_default, $capabilities = $::os_service_default, $helper_command = $::os_service_default, ) { $privsep_options = { ""privsep_${entrypoint}/user"" => { value => $user }, ""privsep_${entrypoint}/group"" => { value => $group }, ""privsep_${entrypoint}/capabilities"" => { value => $capabilities }, ""privsep_${entrypoint}/helper_command"" => { value => $helper_command }, } create_resources($config, $privsep_options) }",0,1,"create_resources($config, $privsep_options) }, define oslo::privsep ( $config, $entrypoint = $name, $user = $::os_service_default, $group = $::os_service_default, $capabilities = $::os_service_default, $helper_command = $::os_service_default, ) { $privsep_options = { \, define oslo::privsep ( $config, $entrypoint = $name, $user = $::os_service_default, $group = $::os_service_default, $capabilities = $::os_service_default, $helper_command = $::os_service_default, ) { $privsep_options = { \\, privsep_options",CWE-20,"{'reason': 'CWE-20 - Improper Input Validation - the script does not check the value of user, group, capabilities and helper_command', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
398,"class slaverebooter { include ::config include dirs::builds include users::builder include slaverebooter::settings include slaverebooter::services include packages::mozilla::python27 $basedir = $slaverebooter::settings::root $python = $packages::mozilla::python27::python $slaveapi = $config::slaverebooter_slaveapi python::virtualenv { ""${basedir}"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""furl==0.3.5"", ""requests==1.2.3"", ""docopt==0.6.1"", ""buildtools==1.0.6"", ""orderedmultidict==0.7.1"", ]; } file { ""${slaverebooter::settings::config}"": require => python::virtualenv[""${basedir}""], owner => ""${users::builder::username}"", group => ""${users::builder::group}"", content => template(""slaverebooter/slaverebooter.ini.erb""); } }",0,1,"file { \\, file { \\\\, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file {python::virtualenv { \","CWE-22, CWE-74, CWE-77, CWE-94","{'reason': 'The file resource in the original defect has an escaped backslash \\\\\\\\ and escaped forward slash \\\\\\\\\\\\\\\\\\\\\\ in the name, which is a common misconfiguration error.', 'related_cwe': 'CWE-22, CWE-74, CWE-77, CWE-94', 'is_misconfiguration_related': 'Yes'}"
399,"define cinder::backend::solidfire( $san_ip, $san_login, $san_password, $volume_backend_name = $name, $volume_driver = 'cinder.volume.drivers.solidfire.solidfiredriver', $sf_emulate_512 = $::os_service_default, $sf_allow_tenant_qos = $::os_service_default, $sf_account_prefix = $::os_service_default, $sf_template_account_name = $::os_service_default, $sf_allow_template_caching = $::os_service_default, $sf_api_port = $::os_service_default, $sf_volume_prefix = $::os_service_default, $sf_svip = $::os_service_default, $sf_enable_volume_mapping = $::os_service_default, $sf_enable_vag = $::os_service_default, $manage_volume_type = false, $extra_options = {}, ) { cinder_config { ""${name}/volume_backend_name"": value => $volume_backend_name; ""${name}/volume_driver"": value => $volume_driver; ""${name}/san_ip"": value => $san_ip; ""${name}/san_login"": value => $san_login; ""${name}/san_password"": value => $san_password, secret => true; ""${name}/sf_emulate_512"": value => $sf_emulate_512; ""${name}/sf_allow_tenant_qos"": value => $sf_allow_tenant_qos; ""${name}/sf_account_prefix"": value => $sf_account_prefix; ""${name}/sf_template_account_name"": value => $sf_template_account_name; ""${name}/sf_allow_template_caching"": value => $sf_allow_template_caching; ""${name}/sf_api_port"": value => $sf_api_port; ""${name}/sf_volume_prefix"": value => $sf_volume_prefix; ""${name}/sf_svip"": value => $sf_svip; ""${name}/sf_enable_volume_mapping"": value => $sf_enable_volume_mapping; ""${name}/sf_enable_vag"": value => $sf_enable_vag; } if $manage_volume_type { cinder_type { $volume_backend_name: ensure => present, properties => [""volume_backend_name=${volume_backend_name}""], } } create_resources('cinder_config', $extra_options) }",1,1,"value => $sf_account_prefix;, value => $sf_allow_template_caching;, value => $sf_api_port;, value => $sf_emulate_512;, value => $sf_enable_vag;, value => $sf_enable_volume_mapping;, value => $sf_svip;, value => $sf_volume_prefix;",CWE-384,"{'reason': 'The configuration parameters used in this Puppet code are not vulnerable to the CWE-384.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
400,"class aws_manager::install { include ::config include dirs::builds include users::buildduty include packages::gcc include packages::make include packages::mercurial include packages::mysql_devel include packages::mozilla::python27 include packages::mozilla::py27_virtualenv include packages::mozilla::py27_mercurial include aws_manager::settings python::virtualenv { ""${aws_manager::settings::root}"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", packages => [ ""fabric==1.8.0"", ""ipy==0.81"", ""mysql-python==1.2.5"", ""sqlalchemy==0.8.3"", ""argparse==1.2.1"", ""boto==2.27.0"", ""ecdsa==0.10"", ""invtool==4.4"", ""iso8601==0.1.10"", ""paramiko==1.12.0"", ""pycrypto==2.6.1"", ""repoze.lru==0.6"", ""requests==2.0.1"", ""simplejson==3.3.1"", ""ssh==1.8.0"", ""wsgiref==0.1.2"", 'docopt==0.6.1', 'netaddr==0.7.12', 'cfn-pyplates==0.4.3', 'pyyaml==3.11', 'dnspython==1.12.0', 'pbr==0.10.7', 'ordereddict==1.1', 'schema==0.3.1', 'redo==1.4', ]; } git::repo { ""cloud-tools-${aws_manager::settings::cloud_tools_dst}"": require => python::virtualenv[""${aws_manager::settings::root}""], repo => ""${config::cloud_tools_git_repo}"", dst_dir => ""${aws_manager::settings::cloud_tools_dst}"", user => ""${users::buildduty::username}""; } exec { 'install-cloud-tools-dist': command => ""${aws_manager::settings::root}/bin/pip install -e ${aws_manager::settings::cloud_tools_dst}"", user => ""${users::buildduty::username}"", require => git::repo[""cloud-tools-${aws_manager::settings::cloud_tools_dst}""]; } file { ""${aws_manager::settings::root}/bin"": ensure => directory, mode => 0755, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}"", require => python::virtualenv[""${aws_manager::settings::root}""]; ""/etc/invtool.conf"": source => ""puppet:///modules/${module_name}/invtool.conf""; ""${aws_manager::settings::cloudtrail_logs_dir}"": ensure => directory, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}""; ""${aws_manager::settings::events_dir}"": ensure => directory, owner => ""${users::buildduty::username}"", group => ""${users::buildduty::group}""; } }",0,1,"class['packages::mozilla::python27'], exec { 'install-cloud-tools-dist':, file { \, include packages::gcc, include packages::make, include packages::mercurial, include packages::mozilla::py27_mercurial, include packages::mozilla::py27_virtualenv, include packages::mozilla::python27, include packages::mysql_devel","CWE-22, CWE-77, CWE-89","{'reason': ""The Puppet script is vulnerable to a privilege escalation attack, because it uses the 'exec' type to install arbitrary packages. The vulnerability can be exploited to inject malicious code into the Python interpreter used to execute the puppet script."", 'related_cwe': 'CWE-77', 'is_misconfiguration_related': 'Yes'}"
401,"class swift::proxy::swauth( $swauth_endpoint = '127.0.0.1', $swauth_super_admin_key = 'swauthkey', $package_ensure = 'present' ) { include ::swift::deps package { 'python-swauth': ensure => $package_ensure, before => package['swift-proxy'], tag => 'swift-package', } concat::fragment { 'swift_proxy_swauth': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/swauth.conf.erb'), order => '160', } }",1,1,"concat::fragment {'swift_proxy_swauth': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/swauth.conf.erb'), order => '160', }, include ::swift::deps, package { 'python-swauth': ensure => $package_ensure, before => package['swift-proxy'], tag =>'swift-package', }",CWE-1030,"{'reason': 'In this case, the misconfiguration has been reported to have exposed information about the users to the public, so the misconfiguration is related to CWE-1030. This issue can allow an attacker to gather information about the account, and is a critical issue.', 'related_cwe': '1030', 'is_misconfiguration_related': 'Yes'}"
402,"class lma_collector::collectd::memcached ( $host, $port = 11211, ) { validate_integer($port) class { 'collectd::plugin::memcached': host => $host, port => $port, } lma_collector::collectd::python { 'collectd_memcached_check': config => { 'host' => ""\""${host}\"""", 'port' => ""\""${port}\"""", }, } }",0,1,"class { 'collectd::plugin::memcached': host => $host, port => $port, }, host' => \, host' => \\, host' => \\\\, lma_collector::collectd::memcached ( $host, $port = 11211, ) { validate_integer($port), lma_collector::collectd::python { 'collectd_memcached_check': config => { 'host' => \, port => \\, port' => \\, port' => \\\, port' => \\\\\\",CWE-754,"{'reason': 'Puppet provides a default value for $port when the variable is not declared in the puppet manifest, which may lead to an information disclosure.', 'related_cwe': 'CWE-754', 'is_misconfiguration_related': 'Yes'}"
403,"class gnocchi::config ( $gnocchi_config = {}, $gnocchi_api_paste_ini = {}, ) { validate_hash($gnocchi_config) validate_hash($gnocchi_api_paste_ini) create_resources('gnocchi_config', $gnocchi_config) create_resources('gnocchi_api_paste_ini', $gnocchi_api_paste_ini) }",0,1,"class gnocchi::config, class gnocchi::config ( $gnocchi_config = {}, $gnocchi_api_paste_ini = {}, ) { validate_hash($gnocchi_config) validate_hash($gnocchi_api_paste_ini) create_resources('gnocchi_config', $gnocchi_config) create_resources('gnocchi_api_paste_ini', $gnocchi_api_paste_ini) }, create_resources, create_resources('gnocchi_api_paste_ini', $gnocchi_api_paste_ini), create_resources('gnocchi_config', $gnocchi_config), gnocchi_api_paste_ini = {}, gnocchi_config, gnocchi_config = {}","CWE-345, CWE-347","{'reason': 'Both the CWE and the misconfiguration describe a failure to properly handle user input.', 'related_cwe': 'CWE-345, CWE-347', 'is_misconfiguration_related': 'Yes'}"
404,"class nginx::ssl { include nginx file { '/etc/ssl/private/rapidssl.pem': source => 'puppet:///modules/nginx/rapidssl.pem', } exec { 'dhparam': command => '/usr/bin/openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048', creates => '/etc/ssl/certs/dhparam.pem' } file { '/etc/nginx/includes': ensure => 'directory', } file { '/etc/nginx/includes/ssl.conf': source => 'puppet:///modules/nginx/ssl.conf', } }",1,1,"class nginx::ssl { include nginx file { '/etc/ssl/private/rapidssl.pem': source => 'puppet:///modules/nginx/rapidssl.pem', } exec { 'dhparam': command => '/usr/bin/openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048', creates => '/etc/ssl/certs/dhparam.pem' } file { '/etc/nginx/includes': ensure => 'directory', } file { '/etc/nginx/includes/ssl.conf': source => 'puppet:///modules/nginx/ssl.conf', } }, exec { 'dhparam': command => '/usr/bin/openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048', creates => '/etc/ssl/certs/dhparam.pem' }, file { '/etc/nginx/includes': ensure => 'directory', }, file { '/etc/nginx/includes/ssl.conf': source => 'puppet:///modules/nginx/ssl.conf', }, file { '/etc/ssl/private/rapidssl.pem': source => 'puppet:///modules/nginx/rapidssl.pem', }",327,"{'reason': 'SSL/TLS certificate has been compromised. It is best practice to rotate certificates on a periodic basis.', 'related_cwe': '327', 'is_misconfiguration_related': 'Yes'}"
405,"class lma_logging_analytics::params { $retention_period = 30 $indexes_prefixes = [] $kibana_dir = '/opt/kibana' $kibana_config = ""${kibana_dir}/config.js"" $apache_htpasswd_file = '/etc/apache2/kibana.htpasswd' $kibana_dashboard_prefix = 'logging, monitoring and alerting - ' $kibana_default_route = join(['/dashboard/elasticsearch/', $kibana_dashboard_prefix, 'logs'], '') $kibana_replicas = 0 }",1,1,class lma_logging_analytics::params { $retention_period = 30,CWE-798,"{'reason': 'This is because the retention period is set too high. This will leave a lot of logs unindexed for a long time. It is important to index logs and search for them easily. This is a security risk because a lot of logs will remain unindexed for a long time. An attacker can take advantage of this vulnerability and steal sensitive data.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
406,"class mellanox_openstack::compute_sriov ( $physnet, $physifc, $mlnx_driver, $network_type, $firewall_driver, $exclude_vf, ) { include nova::params include mellanox_openstack::params $sriov_agent_service = $::mellanox_openstack::params::sriov_agent_service_name $sriov_agent_package = $::mellanox_openstack::params::sriov_agent_package_name $libvirt_service_name = 'libvirtd' $libvirt_package_name = $nova::params::libvirt_package_name $path_to_generate_pci_script = generate (""/bin/bash"", ""-c"", 'echo /etc/fuel/plugins/mellanox-plugin-*/generate_pci_passthrough_whitelist.py | tr -d \'\n \' ') $pci_passthrough_addresses = generate (""/usr/bin/python"", $path_to_generate_pci_script, $exclude_vf, $physnet, $physifc) if ($pci_passthrough_addresses) { nova_config { 'default/pci_passthrough_whitelist': value => check_array_of_hash(""${pci_passthrough_addresses}""), } ~> service { $nova::params::compute_service_name: ensure => running, enable => true, hasstatus => true, hasrestart => true, } } neutron_plugin_ml2 { 'securitygroup/firewall_driver': value => $firewall_driver, } if ( $network_type == 'ethernet' ){ package { $sriov_agent_package: ensure => installed, } sriov_nic_agent_config { 'sriov_nic/physical_device_mappings': value => ""$physnet:$physifc""; 'securitygroup/firewall_driver' : value => ""neutron.agent.firewall.noopfirewalldriver""; } service { $sriov_agent_service: ensure => running, enable => true, hasstatus => true, hasrestart => true, } package[$sriov_agent_package] -> sriov_nic_agent_config<||> ~> service[$sriov_agent_service] } elsif ( $mlnx_driver == 'eth_ipoib' ){ class { 'mellanox_openstack::eswitchd' : physnet => $physnet, physifc => $physifc, } class { 'mellanox_openstack::agent' : physnet => $physnet, physifc => $physifc, } package { $libvirt_package_name : ensure => installed } service { $libvirt_service_name : ensure => running } package[$libvirt_package_name] -> service[$libvirt_service_name] -> class['mellanox_openstack::eswitchd'] ~> class['mellanox_openstack::agent'] } }",1,1,"class {'mellanox_openstack::agent' : physnet => \\\, class {'mellanox_openstack::eswitchd' : physnet => \\, include mellanox_openstack::params, include nova::params, nova_config { 'default/pci_passthrough_whitelist': value => check_array_of_hash(\, nova_config { 'default/pci_passthrough_whitelist': value => check_array_of_hash(\\, package[\\$sriov_agent_package] -> sriov_nic_agent_config<\\|\\|> \\, package[\\\\$libvirt_package_name] -> service[\\\\$libvirt_service_name] -> class[\\\\'mellanox_openstack::eswitchd\\\\'] ~> class[\\\\'mellanox_openstack::agent\\\\'], sriov_nic_agent_config {'sriov_nic/physical_device_mappings': value => \","CWE-116, CWE-119","{'reason': 'Since the misconfiguration involves generating an incorrect value, it is related to CWE-116.', 'related_cwe': 'CWE-116', 'is_misconfiguration_related': 'Yes'}"
407,"class tripleo::profile::base::neutron::midonet ( $admin_password = hiera('admin_password', ''), $bind_address = hiera('neutron::bind_host', ''), $keystone_admin_token = hiera('keystone::admin_token', ''), $neutron_api_node_ips = hiera('neutron_api_node_ips', ''), $neutron_auth_password = hiera('neutron::keystone::authtoken::password', ''), $neutron_auth_tenant = hiera('neutron::keystone::authtoken::project_name', ''), $step = hiera('step'), $vip = hiera('public_virtual_ip'), $zk_on_controller = hiera('enable_zookeeper_on_controller', ''), $zookeeper_client_ip = hiera('neutron::bind_host', ''), $zookeeper_hostnames = hiera('controller_node_names', ''), ) { include ::tripleo::profile::base::neutron include ::tripleo::profile::base::neutron::agents::midonet if $step >= 4 { if zk_on_controller { class {'::tripleo::cluster::zookeeper': zookeeper_server_ips => $neutron_api_node_ips, zookeeper_client_ip => $zookeeper_client_ip, zookeeper_hostnames => split($zookeeper_hostnames, ',') } } if hiera('enable_cassandra_on_controller') { class {'::tripleo::cluster::cassandra': cassandra_servers => $neutron_api_node_ips, cassandra_ip => $bind_address, } } class {'::tripleo::network::midonet::api': zookeeper_servers => $neutron_api_node_ips, vip => $vip, keystone_ip => $vip, keystone_admin_token => $keystone_admin_token, bind_address => $bind_address, admin_password => $admin_password, } class {'::neutron::plugins::midonet': midonet_api_ip => $vip, keystone_tenant => $neutron_auth_tenant, keystone_password => $neutron_auth_password } } }",1,1,"bind_address => $bind_address,, cassandra_ip => $bind_address,, cassandra_servers => $neutron_api_node_ips,, class {'::neutron::plugins::midonet': midonet_api_ip => $vip, keystone_tenant => $neutron_auth_tenant, keystone_password => $neutron_auth_password}, class {'::tripleo::network::midonet::api': zookeeper_servers => $neutron_api_node_ips,, include ::tripleo::profile::base::neutron, keystone_password => $neutron_auth_password,, keystone_tenant => $neutron_auth_tenant,, midonet_api_ip => $vip,",CWE-829,"{'reason': 'The misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
408,"class monasca::influxdb::bootstrap( $influxdb_password = undef, $influxdb_dbuser_ro_password = undef, $influxdb_def_ret_pol_name = 'raw', $influxdb_def_ret_pol_duration = '390d', $influxdb_tmp_ret_pol_name = 'tmp', $influxdb_tmp_ret_pol_duration = '1h', $influxdb_retention_replication = 1, ) { include ::monasca::params $influxdb_dbuser_password = $::monasca::params::api_db_password $script = 'bootstrap-influxdb.sh' $influxdb_host = 'localhost' $influxdb_port = 8086 $influxdb_user = 'root' file { ""/tmp/${script}"": ensure => file, content => template(""monasca/${script}.erb""), mode => '0755', owner => 'root', group => 'root', } package['influxdb'] -> exec { ""/tmp/${script}"": subscribe => file[""/tmp/${script}""], path => '/bin:/sbin:/usr/bin:/usr/sbin:/tmp', cwd => '/tmp', user => 'root', group => 'root', logoutput => true, refreshonly => true, environment => [""influx_admin_password=${influxdb_password}"", ""db_user_password=${influxdb_dbuser_password}"", ""db_read_only_user_password=${influxdb_dbuser_ro_password}""], require => service['influxdb'], } }",1,1,"environment => [, group => 'root',, influxdb_dbuser_password = $::monasca::params::api_db_password, influxdb_dbuser_ro_password = undef, influxdb_host = 'localhost', influxdb_port = 8086, influxdb_user = 'root', mode => '0755',, path => '/bin:/sbin:/usr/bin:/usr/sbin:/tmp',, subscribe => file[","CWE-266, CWE-284, CWE-310, CWE-311","{'reason': ""The use of root as the user for the command being executed represents a privilege escalation issue, with the 'root' account having the power to execute arbitrary commands as the 'root' user."", 'related_cwe': 'CWE-266, CWE-284, CWE-310, CWE-311', 'is_misconfiguration_related': 'Yes'}"
409,"class ceilometer::alarm::evaluator ( $manage_service = undef, $enabled = undef, $evaluation_interval = undef, $evaluation_service = undef, $partition_rpc_topic = undef, $record_history = undef, $coordination_url = undef, ) { warning('class is deprecated and will be removed. use aodh module to deploy alarm evaluator service') }",1,1,"class ceilometer::alarm::evaluator ( $manage_service = undef, $enabled = undef, $evaluation_interval = undef, $evaluation_service = undef, $partition_rpc_topic = undef, $record_history = undef, $coordination_url = undef, ) { warning('class is deprecated and will be removed. use aodh module to deploy alarm evaluator service') }, evaluator( $manage_service = undef, $enabled = undef, $evaluation_interval = undef, $evaluation_service = undef, $partition_rpc_topic = undef, $record_history = undef, $coordination_url = undef, ) { warning('class is deprecated and will be removed. use aodh module to deploy alarm evaluator service') }","CWE-252: Unchecked Return Value, CWE-352: Resource Management, CWE-416: Use After Free, CWE-476: NULL Pointer Dereference, CWE-682: Incorrect Calculation, CWE-693: Inappropriate Encryption Algorithm Selection, CWE-722: Exposed Dangerous Method or Function, CWE-758: Missing Encryption of Sensitive Data, CWE-781: Incorrect Authorization, CWE-783: Incorrect Permission Assignment for Critical Resource","{'reason': 'Misconfiguration is related to CWE-352, CWE-682, CWE-693, CWE-758, CWE-783.', 'related_cwe': 'CWE-352, CWE-682, CWE-693, CWE-758, CWE-783', 'is_misconfiguration_related': 'Yes'}"
410,"class slaveapi::aws ($environment='prod') { include ::config include users::builder include packages::mysql_devel include packages::mozilla::py27_mercurial $user = $users::builder::username $group = $users::builder::group $home = $users::builder::home $basedir = ""${slaveapi::base::root}/${environment}"" $aws_dst = ""${basedir}/aws"" $cloud_tools_dst = ""${aws_dst}/cloud-tools"" $secrets_dst = ""${aws_dst}/secrets"" file { ""${aws_dst}"": ensure => directory, mode => 0755, owner => $user, group => $group; ""${secrets_dst}"": ensure => directory, mode => 0700, owner => $user, group => $group, require => file[$aws_dst]; ""${secrets_dst}/aws-secrets.json"": mode => 0600, owner => $user, group => $group, show_diff => false, content => template(""$module_name/aws-secrets.json.erb""); ""${home}/.boto"": mode => 0600, owner => $user, group => $group, show_diff => false, content => template(""$module_name/dot_boto.erb""); ""${home}/.ssh/aws-ssh-key"": mode => 0600, owner => $user, group => $group, show_diff => false, content => secret(""aws_manager_ssh_key""); } git::repo { ""cloud-tools-${cloud_tools_dst}"": repo => ""${config::cloud_tools_git_repo}"", dst_dir => $cloud_tools_dst, user => $user, require => python::virtualenv[$basedir]; } exec { 'install-cloud-tools-dist': command => ""${slaveapi::base::root}/${environment}/bin/pip install -e ${cloud_tools_dst}"", user => $user, require => git::repo[""cloud-tools-${cloud_tools_dst}""]; } file { ""/etc/cron.d/slaveapi-update-hg-cloud-tools"": ensure => absent; ""/etc/cron.d/slaveapi-update-git-cloud-tools"": content => ""*/5 * * * * ${user} cd ${cloud_tools_dst} && /usr/local/bin/git pull -q\n""; } }",1,1,"file {, include ::config, include ::packages::mozilla::py27_mercurial, include ::packages::mysql_devel, include ::users::builder","CWE-1138, CWE-1148","{'reason': 'CWE-1138 describes how to check the validity of the credentials (aws_manager_ssh_key) of a third-party tool. However, it does not describe how to properly configure these credentials, e.g., which fields should be populated, etc. In this case, the credential fields are not filled in properly, which can lead to unauthorized execution on the server.  This misconfiguration is not related to CWE-1148.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
411,"class openstack_tasks::keystone::workloads_collector_remove { notice('modular: keystone/workloads_collector_remove.pp') $workloads_hash = hiera_hash('workloads_collector', {}) $workloads_username = $workloads_hash['username'] $workloads_tenant = $workloads_hash['tenant'] class { '::osnailyfacter::wait_for_keystone_backends':} class['::osnailyfacter::wait_for_keystone_backends'] -> keystone_user_role <||> class['::osnailyfacter::wait_for_keystone_backends'] -> keystone_user <||> keystone_user_role { ""${workloads_username}@${workloads_tenant}"" : ensure => 'absent', } -> keystone_user { $workloads_username: ensure => 'absent', } }",1,1,"-> keystone_user, -> keystone_user {, -> keystone_user_role, class { '::osnailyfacter::wait_for_keystone_backends':}, ensure => 'absent', keystone_user, keystone_user {, keystone_user_role, keystone_user_role {","CWE-259, CWE-264, CWE-269, CWE-272","{'reason': 'Keystone user \\', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
412,"class web_proxy::environment { if $web_proxy::host != """" { case $operatingsystem { darwin, centos, ubuntu: { shellprofile::file { ""proxy"": ensure => present, content => template(""${module_name}/environment.erb"") } } default: { fail(""${module_name} does not support ${operatingsystem}"") } } } if ($operatingsystem != ""windows"") { include ::dirs::usr::local::bin file { ""proxy_reset_environment"": ensure => present, path => ""/usr/local/bin/proxy_reset_env.sh"", mode => ""0755"", source => ""puppet:///modules/web_proxy/unix_proxy_reset_env.sh"" } } }",1,1,"web_proxy::environment { if $web_proxy::host!= \, web_proxy::environment { if $web_proxy::host!= \\, web_proxy::environment { if $web_proxy::host!= \\\, web_proxy::environment { if $web_proxy::host!= \\\\\\, web_proxy::environment { if $web_proxy::host!= \\\\\\\\\\\\, web_proxy::environment { if $web_proxy::host!= \\\\\\\\\\\\\\\\\\\\\\\\\\\\, web_proxy::environment { if $web_proxy::host!= \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, web_proxy::environment { if $web_proxy::hosteserialization of Untrusted Data,"{'reason': 'The script contains vulnerable template data from the puppet environment. A hacker could potentially insert malicious code into this data, which could lead to remote code execution. The issue is a CWE-502 vulnerability.', 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
413,"class sahara::db::postgresql( $password, $dbname = 'sahara', $user = 'sahara', $encoding = undef, $privileges = 'all', ) { class['sahara::db::postgresql'] -> service<| title == 'sahara' |> ::openstacklib::db::postgresql { 'sahara': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['sahara'] ~> exec<| title == 'sahara-dbmanage' |> }",0,1,class['sahara::db::postgresql'] -> service<| title =='sahara' |>,"CWE-25, CWE-863","{'reason': 'User authentication, user password is not set, password_hash will not be generated. Password_hash is also not verified with the user.', 'related_cwe': 'CWE-25, CWE-863', 'is_misconfiguration_related': 'Yes'}"
414,"class swift::proxy::healthcheck() { include ::swift::deps concat::fragment { 'swift_healthcheck': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/healthcheck.conf.erb'), order => '30', } }",0,1,"class swift::proxy::healthcheck() { include ::swift::deps concat::fragment {'swift_healthcheck': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/healthcheck.conf.erb'), order => '30', } }","CWE-12, CWE-14, CWE-16, CWE-20, CWE-200, CWE-22, CWE-250, CWE-285, CWE-319","{'reason': 'The use of a custom template for the Swift Healthcheck is out of the box, which is not considered good practice. This increases the chance of misconfigurations, as custom configurations are usually more error-prone. Additionally, a custom template for the Swift Healthcheck may also lead to unexpected behavior in the proxy server configuration. Therefore, the use of a custom template for the Swift Healthcheck is not recommended, as it could potentially introduce security issues if not properly configured.', 'related_cwe': 'CWE-285', 'is_misconfiguration_related': 'Yes'}"
415,"class packages::mozilla::hgtool { include users::root case $::operatingsystem { darwin,centos,ubuntu: { file { ""/usr/local/bin/hgtool.py"": source => ""puppet:///modules/packages/hgtool.py"", owner => ""$users::root::username"", group => ""$users::root::group"", mode => 0755; } } windows: { } default: { fail(""don't know where to put hgtool on this platform"") } } }",0,1,"case $::operatingsystem { darwin,centos,ubuntu: { file { \, default: { fail(\, default: { fail(\\\, default: { fail(\\\\\\\\\\, fail(\\\, group => \$users::root::group, mode => 0755;, include users::root, owner => \, windows: { }","CWE-295, CWE-327, CWE-798","{'reason': 'The configuration error here is not related to CWE-327. It is a mistake in the indentation of the code, causing a missing right bracket at the end of the file. Although this is a configuration error, it is not a vulnerability.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
416,"class role::graph { include ::role::jsonconfig mediawiki::extension { 'graph': settings => { wggraphdefaultvegaver => 2, wggraphalloweddomains => { http => [ ""localhost${::port_fragment}"", ""127.0.0.1${::port_fragment}"", ""dev.wiki.local.wmftest.net${::port_fragment}"", 'wmflabs.org', 'vega.github.io', ], https => [ 'mediawiki.org', 'wikibooks.org', 'wikidata.org', 'wikimedia.org', 'wikimediafoundation.org', 'wikinews.org', 'wikipedia.org', 'wikiquote.org', 'wikisource.org', 'wikiversity.org', 'wikivoyage.org', 'wiktionary.org', ], wikirawupload => [ 'upload.wikimedia.org', 'upload.beta.wmflabs.org', ""localhost${::port_fragment}"", ""dev.wiki.local.wmftest.net${::port_fragment}"", ], wikidatasparql => [ 'query.wikidata.org', 'wdqs-test.wmflabs.org', ], geoshape => [ 'maps.wikimedia.org', ], }, }, } }",0,1,"geoshape => ['maps.wikimedia.org', ],, mediawiki::extension { 'graph':, wggraphalloweddomains => { \\, wggraphalloweddomains => {'http' => {, wggraphdefaultvegaver => 2,, wikijsonconfig::jsonconfig { \, wikirawupload => [ 'upload.wikimedia.org', 'upload.beta.wmflabs.org', \",CWE-1022,"{'reason': 'This misconfiguration is related to the CWE as it allows users to perform SQL injection attacks on the Mediawiki application. By defining the allowed IP addresses, a potential attacker can gain access to the system and manipulate the data. This can lead to serious security vulnerabilities and data breaches.', 'related_cwe': 'CWE-1022', 'is_misconfiguration_related': 'Yes'}"
417,"class ceilometer::db::mysql( $password = false, $dbname = 'ceilometer', $user = 'ceilometer', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ) { validate_string($password) ::openstacklib::db::mysql { 'ceilometer': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['ceilometer'] ~> exec<| title == 'ceilometer-dbsync' |> }",1,1,"class ceilometer::db::mysql( $password = false, $dbname = 'ceilometer', $user = 'ceilometer', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ), validate_string($password) ::openstacklib::db::mysql { 'ceilometer': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['ceilometer'] ~> exec<| title == 'ceilometer-dbsync' |>","CWE-287, CWE-311","{'reason': 'password_hash is a highly insecure way to store passwords.\\nIt is susceptible to brute force attacks and should never be used in production.\\nAs such, the given misconfiguration is related to CWE-287.', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
418,"class nova::client( $ensure = 'present' ) { include ::nova::deps package { 'python-novaclient': ensure => $ensure, tag => ['openstack', 'nova-support-package'], } }",0,1,"package { 'python-novaclient': ensure => $ensure, tag => ['openstack', 'nova-support-package'], }","CWE-22, CWE-79, CWE-798","{'reason': ""This issue is related to CWE-22: Improper Control of Generation of Code ('Code Injection'). The vulnerable misconfiguration includes a line of code which can be executed by an attacker using an injection attack. This is known as code injection. A malicious user can inject code into the software using unvalidated input."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
419,"notice('fuel-plugin-lma-collector: configure_afd_filters.pp') $lma = hiera_hash('lma_collector', {}) $node_profiles = hiera_hash('lma::collector::node_profiles') $is_controller = $node_profiles['controller'] $is_mysql_server = $node_profiles['mysql'] $is_rabbitmq = $node_profiles['rabbitmq'] $alarms_definitions = $lma['alarms'] if $alarms_definitions == undef { fail('alarms definitions not found. check files in /etc/hiera/override.') } if $is_controller or $is_rabbitmq or $is_mysql_server { service<| title == 'log_collector' |> { provider => 'pacemaker' } service<| title == 'metric_collector' |> { provider => 'pacemaker' } } class { 'fuel_lma_collector::afds': roles => hiera('roles'), node_cluster_roles => $lma['node_cluster_roles'], service_cluster_roles => $lma['service_cluster_roles'], node_cluster_alarms => $lma['node_cluster_alarms'], service_cluster_alarms => $lma['service_cluster_alarms'], alarms => $alarms_definitions, } if hiera('lma::collector::infrastructure_alerting::server', false) { lma_collector::afd_nagios { 'nodes': ensure => present, hostname => $::hostname, server => hiera('lma::collector::infrastructure_alerting::server'), http_port => hiera('lma::collector::infrastructure_alerting::http_port'), http_path => hiera('lma::collector::infrastructure_alerting::http_path'), user => hiera('lma::collector::infrastructure_alerting::user'), password => hiera('lma::collector::infrastructure_alerting::password'), } }",1,1,"alarms => $alarms_definitions,, class { 'fuel_lma_collector::afds':, node_cluster_alarms => $lma['node_cluster_alarms'],, node_cluster_roles => $lma['node_cluster_roles'],, service<| title == 'log_collector' |> { provider => 'pacemaker' }, service<| title =='metric_collector' |> { provider => 'pacemaker' }, service_cluster_alarms => $lma['service_cluster_alarms'],, service_cluster_roles => $lma['service_cluster_roles'],",CWE-276,"{'reason': 'The AFDs are used to filter LMA alarms from collector nodes and to forward the alarm to the correct monitoring solution. In this script, the alarms definitions for each monitoring solution is defined by the user through a hiera data file. If the hiera data file is missing, the Puppet code fails. As the Puppet code fails, the script becomes unusable. Hence, the script is vulnerable to CWE-276: Use of Uninitialized Resource (or Variable), which causes the script to crash.', 'related_cwe': 'CWE-276', 'is_misconfiguration_related': 'Yes'}"
420,"class cinder::volume::solidfire( $san_ip, $san_login, $san_password, $volume_driver = 'cinder.volume.drivers.solidfire.solidfiredriver', $sf_emulate_512 = true, $sf_allow_tenant_qos = false, $sf_account_prefix = '', $sf_template_account_name = 'openstack-vtemplate', $sf_allow_template_caching = false, $sf_api_port = '443', $extra_options = {}, ) { warning('usage of cinder::volume::solidfire is deprecated, please use cinder::backend::solidfire instead.') cinder::backend::solidfire { 'default': san_ip => $san_ip, san_login => $san_login, san_password => $san_password, volume_driver => $volume_driver, sf_emulate_512 => $sf_emulate_512, sf_allow_tenant_qos => $sf_allow_tenant_qos, sf_account_prefix => $sf_account_prefix, sf_template_account_name => $sf_template_account_name, sf_allow_template_caching => $sf_allow_template_caching, sf_api_port => $sf_api_port, extra_options => $extra_options, } }",1,1,"cinder::backend::solidfire, cinder::backend::solidfire { 'default': san_ip => $san_ip, san_login => $san_login, san_password => $san_password, volume_driver => $volume_driver, sf_emulate_512 => $sf_emulate_512, sf_allow_tenant_qos => $sf_allow_tenant_qos, sf_account_prefix => $sf_account_prefix, sf_template_account_name => $sf_template_account_name, sf_allow_template_caching => $sf_allow_template_caching, sf_api_port => $sf_api_port, extra_options => $extra_options, }, sf_account_prefix, sf_allow_template_caching, sf_allow_tenant_qos, sf_api_port, sf_emulate_512, sf_template_account_name, volume_driver, warning('usage of cinder::volume::solidfire is deprecated, please use cinder::backend::solidfire instead.')",CWE-285,"{'reason': ""The vulnerability that has been identified is related to the misconfiguration CWE-285: Improper Access Control. In the script, the variable sf_account_prefix is set to ''(empty string). This variable is used for authentication and authorization, and since an empty string is set here, an attacker could take advantage of this misconfiguration and gain unauthorized access. Therefore, it is important to ensure that the sf_account_prefix variable is properly set and not empty to prevent attackers from gaining unauthorized access. This misconfiguration is related to CWE-285: Improper Access Control, which deals with authentication and authorization issues in information systems. Specifically, it covers cases where improper access controls lead to security breaches, such as unauthorized users gaining access to resources they should not have."", 'related_cwe': 'CWE-285: Improper Access Control', 'is_misconfiguration_related': 'Yes'}"
421,"class osnailyfacter::ntp::ntp_client { notice('modular: ntp/ntp_client.pp') $management_vrouter_vip = hiera('management_vrouter_vip') $ntp_servers = hiera_array('ntp_servers', [$management_vrouter_vip]) $ntp_server_roles = hiera('ntp_server_roles', ['controller', 'primary-controller']) unless roles_include($ntp_server_roles) { class { '::ntp': servers => $ntp_servers, service_ensure => 'running', service_enable => true, disable_monitor => true, iburst_enable => true, tinker => true, panic => '0', stepout => '5', minpoll => '3', } if $::operatingsystem == 'ubuntu' { include ::ntp::params if is_array($ntp::params::package_name) { $package_name = $ntp::params::package_name[0] } else { $package_name = $ntp::params::package_name } tweaks::ubuntu_service_override { 'ntpd': package_name => $package_name, service_name => $ntp::params::service_name, } } } }",0,1,"class { '::ntp': servers => $ntp_servers,",CWE-347,"{'reason': 'the misconfiguration is related to the CWE, which causes the server to receive the NTP server’s current date and time from the wrong NTP server', 'related_cwe': 'CWE-347', 'is_misconfiguration_related': 'Yes'}"
422,"class nova::db ( $database_db_max_retries = $::os_service_default, $database_connection = $::os_service_default, $slave_connection = $::os_service_default, $api_database_connection = $::os_service_default, $api_slave_connection = $::os_service_default, $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { include ::nova::deps include ::nova::params $database_connection_real = pick($::nova::database_connection, $database_connection) $slave_connection_real = pick($::nova::slave_connection, $slave_connection) $api_database_connection_real = pick($::nova::api_database_connection, $api_database_connection) $api_slave_connection_real = pick($::nova::api_slave_connection, $api_slave_connection) $database_idle_timeout_real = pick($::nova::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::nova::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::nova::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::nova::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::nova::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::nova::database_max_overflow, $database_max_overflow) if !is_service_default($database_connection_real) { validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'nova_config': db_max_retries => $database_db_max_retries, connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, slave_connection => $slave_connection_real, } } if !is_service_default($api_database_connection_real) { validate_re($api_database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') nova_config { 'api_database/connection': value => $api_database_connection_real, secret => true; 'api_database/slave_connection': value => $api_slave_connection_real, secret => true; } } }",1,1,"include ::nova::deps, include ::nova::params, nova_config {\\n database/connection: {\\n value => $database_connection_real,\\n secret => true;\\n }\\n database/slave_connection: {\\n value => $slave_connection_real,\\n secret => true;\\n }\\n}, nova_config {\n api_database/connection: {\n value => $api_database_connection_real,\n secret => true;\n }\n api_database/slave_connection: {\n value => $api_slave_connection_real,\n secret => true;\n }\n}, oslo::db {\\\\n 'nova_config': {\\\\n db_max_retries => $database_db_max_retries,\\\\n connection => $database_connection_real,\\\\n idle_timeout => $database_idle_timeout_real,\\\\n min_pool_size => $database_min_pool_size_real,\\\\n max_pool_size => $database_max_pool_size_real,\\\\n max_retries => $database_max_retries_real,\\\\n retry_interval => $database_retry_interval_real,\\\\n max_overflow => $database_max_overflow_real,\\\\n slave_connection => $slave_connection_real,\\\\n }\\\\n}, oslo::db {\\n 'nova_config': {\\n db_max_retries => $database_db_max_retries,\\n connection => $database_connection_real,\\n idle_timeout => $database_idle_timeout_real,\\n min_pool_size => $database_min_pool_size_real,\\n max_pool_size => $database_max_pool_size_real,\\n max_retries => $database_max_retries_real,\\n retry_interval => $database_retry_interval_real,\\n max_overflow => $database_max_overflow_real,\\n slave_connection => $slave_connection_real,\\n }\\n}","CWE-352, CWE-377, CWE-522","{'reason': 'The default connection string used for the connection database is an admin credential which can be compromised and exploited by an adversary, leading to the potential exploitation of all credentials managed by nova. This is similar to a case where an attacker exploits a secret which contains a list of credentials that can be compromised. CWE-352 and CWE-522 are similar to this misconfiguration, and can lead to a similar security issue. A misconfigured credential is a secret in itself.', 'related_cwe': 'CWE-352, CWE-522', 'is_misconfiguration_related': 'Yes'}"
423,"class sahara::db ( $database_db_max_retries = $::os_service_default, $database_connection = 'mysql+pymysql://sahara:secrete@localhost:3306/sahara', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { $database_connection_real = pick($::sahara::database_connection, $database_connection) $database_idle_timeout_real = pick($::sahara::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::sahara::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::sahara::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::sahara::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::sahara::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::sahara::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '^(mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'sahara_config': db_max_retries => $database_db_max_retries, connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, } }",0,1,"database_connection_real, database_max_overflow, database_max_overflow_real, database_max_pool_size_real, database_max_retries, database_max_retries_real, database_min_pool_size, database_min_pool_size_real, database_retry_interval_real, db_connection","CWE-502, CWE-532","{'reason': ""The 'database_connection' misconfiguration is related to CWE-532, since the database credentials (user name and password) are leaked into the'sahara_config' file."", 'related_cwe': 'CWE-532', 'is_misconfiguration_related': 'Yes'}"
424,"class tripleo::profile::base::cinder::volume ( $cinder_enable_dellsc_backend = false, $cinder_enable_eqlx_backend = false, $cinder_enable_iscsi_backend = true, $cinder_enable_netapp_backend = false, $cinder_enable_nfs_backend = false, $cinder_enable_rbd_backend = false, $cinder_user_enabled_backends = hiera('cinder_user_enabled_backends', undef), $step = hiera('step'), ) { include ::tripleo::profile::base::cinder if $step >= 4 { include ::cinder::volume if $cinder_enable_dellsc_backend { include ::tripleo::profile::base::cinder::volume::dellsc $cinder_dellsc_backend_name = hiera('cinder::backend::dellsc_iscsi::volume_backend_name', 'tripleo_dellsc') } else { $cinder_dellsc_backend_name = undef } if $cinder_enable_eqlx_backend { include ::tripleo::profile::base::cinder::volume::eqlx $cinder_eqlx_backend_name = hiera('cinder::backend::eqlx::volume_backend_name', 'tripleo_eqlx') } else { $cinder_eqlx_backend_name = undef } if $cinder_enable_iscsi_backend { include ::tripleo::profile::base::cinder::volume::iscsi $cinder_iscsi_backend_name = hiera('cinder::backend::iscsi::volume_backend_name', 'tripleo_iscsi') } else { $cinder_iscsi_backend_name = undef } if $cinder_enable_netapp_backend { include ::tripleo::profile::base::cinder::volume::netapp $cinder_netapp_backend_name = hiera('cinder::backend::netapp::volume_backend_name', 'tripleo_netapp') } else { $cinder_netapp_backend_name = undef } if $cinder_enable_nfs_backend { include ::tripleo::profile::base::cinder::volume::nfs $cinder_nfs_backend_name = hiera('cinder::backend::nfs::volume_backend_name', 'tripleo_nfs') } else { $cinder_nfs_backend_name = undef } if $cinder_enable_rbd_backend { include ::tripleo::profile::base::cinder::volume::rbd $cinder_rbd_backend_name = hiera('cinder::backend::rbd::volume_backend_name', 'tripleo_ceph') } else { $cinder_rbd_backend_name = undef } $cinder_enabled_backends = delete_undef_values([$cinder_iscsi_backend_name, $cinder_rbd_backend_name, $cinder_eqlx_backend_name, $cinder_dellsc_backend_name, $cinder_netapp_backend_name, $cinder_nfs_backend_name, $cinder_user_enabled_backends]) class { '::cinder::backends' : enabled_backends => $cinder_enabled_backends, } } }",1,1,"class { '::cinder::backends':, class {'::cinder::backends'}:\n  enabled_backends => $cinder_enabled_backends,\n, if $cinder_enable_eqlx_backend { include ::tripleo::profile::base::cinder::volume::eqlx $cinder_eqlx_backend_name = hiera('cinder::backend::eqlx::volume_backend_name', 'tripleo_eqlx') } else { $cinder_eqlx_backend_name = undef } if $cinder_enable_iscsi_backend { include ::tripleo::profile::base::cinder::volume::iscsi $cinder_iscsi_backend_name = hiera('cinder::backend::iscsi::volume_backend_name', 'tripleo_iscsi') } else { $cinder_iscsi_backend_name = undef } if $cinder_enable_netapp_backend { include ::tripleo::profile::base::cinder::volume::netapp $cinder_netapp_backend_name = hiera('cinder::backend::netapp::volume_backend_name', 'triple, include ::cinder::volume, include ::tripleo::profile::base::cinder::volume::dellsc, include ::tripleo::profile::base::cinder::volume::eqlx, include ::tripleo::profile::base::cinder::volume::iscsi, include ::tripleo::profile::base::cinder::volume::netapp, include ::tripleo::profile::base::cinder::volume::nfs, include ::tripleo::profile::base::cinder::volume::rbd","CWE-269, CWE-274, CWE-275, CWE-276","{'reason': 'The misconfiguration is a failure to sanitize user input, which can lead to the bypassing of proper validation checks. The vulnerable code includes variables that could potentially be assigned user input that is not filtered or sanitized prior to being used.', 'related_cwe': 'CWE-269, CWE-274, CWE-275, CWE-276', 'is_misconfiguration_related': 'Yes'}"
425,include manila_auxiliary,0,1,include manila_auxiliary,CWE-16,"{'reason': 'manila_auxiliary is included within manila::init.pp, which is where the misconfiguration was found.', 'related_cwe': 'CWE-16', 'is_misconfiguration_related': 'Yes'}"
426,"define apache::site( $ensure = present, $priority = 50, $content = undef, $source = undef, ) { include ::apache $title_safe = regsubst($title, '[\w_]', '-', 'g') $dir_ensure = $ensure ? { present => directory, default => absent, } file { ""/etc/apache2/site-confs/${title_safe}"": ensure => $dir_ensure, recurse => true, purge => true, force => true, } file { ""/etc/apache2/site-confs/${title_safe}/00-default.conf"": ensure => $ensure, content => $content, source => $source, owner => 'root', group => 'root', mode => '0444', } apache::conf { $title_safe: ensure => $ensure, conf_type => 'sites', priority => $priority, content => template('apache/site.conf.erb'), } }",0,1,"apache::conf { $title_safe: ensure => $ensure, conf_type =>'sites', priority => $priority, content => template('apache/site.conf.erb'), }, content => $content, source => $source, owner => 'root', group => 'root', mode => '0444', }, file { \, file { \\, file { \\\\, file { \\\\\\\\, include ::apache","CWE-248, CWE-250","{'reason': '1', 'related_cwe': 'CWE-248, CWE-250', 'is_misconfiguration_related': 'Yes'}"
427,"class mediawiki::phpsh { include ::mediawiki include ::php package { 'phpsh': ensure => '1.3.5', provider => 'pip', require => package['php5'], } file { '/etc/profile.d/phpsh.sh': source => 'puppet:///modules/mediawiki/phpsh.sh', mode => '0555', } file { '/etc/phpsh': ensure => directory, } file { '/etc/phpsh/config': ensure => present, source => 'puppet:///modules/mediawiki/phpsh/config' } file { '/etc/phpsh/rc.php': content => template('mediawiki/rc.php.erb'), require => package['phpsh'], } }",1,1,"file { \, file { \\, file { \\\\, file { \\\\\\\\\, include ::mediawiki, include ::php, package { \\, package { \\\\",CWE-248,"{'reason': 'Not related to CWE-248', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
428,"define swift::storage::node( $mnt_base_dir, $zone, $weight = 1, $owner = 'swift', $group = 'swift', $max_connections = 25, $storage_local_net_ip = '127.0.0.1', $manage_ring = true ) { include ::swift::deps validate_re($zone, '^\d+$', 'the zone parameter must be an integer') swift::storage::server { storage_local_net_ip => $storage_local_net_ip, devices => $mnt_base_dir, max_connections => $max_connections, owner => $owner, group => $group, } swift::storage::server { ""60${name}0"": type => 'object', config_file_path => 'object-server.conf', } ring_object_device { ""${storage_local_net_ip}:60${name}0/${name}"": zone => $zone, weight => $weight, } swift::storage::server { ""60${name}1"": type => 'container', config_file_path => 'container-server.conf', } ring_container_device { ""${storage_local_net_ip}:60${name}1/${name}"": zone => $zone, weight => $weight, } swift::storage::server { ""60${name}2"": type => 'account', config_file_path => 'account-server.conf', } ring_account_device { ""${storage_local_net_ip}:60${name}2/${name}"": zone => $zone, weight => $weight, } }",1,1,"ring_account_device {ring_account_device { \\\\\\\\\\\n, ring_container_device { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, ring_container_device { \\\\n, ring_object_device { \\\\\\\\\\\\\\\, ring_object_device { \\n, swift::storage::server { \, swift::storage::server { \\\\\\, validate_re(\\n, validate_re(\n",CWE-1290,"{'reason': ""The `swift::storage::server` type is used to manage the config files for `swift::storage::server`, `swift::storage::container` and `swift::storage::account`.  This is done by defining a node with an array that specifies what type of server configuration file needs to be generated, e.g. \\n\\n```puppet\\n\\n  swift::storage::server { \\n\\n ...\\n\\n    config_file_path => 'container-server.conf',\\n\\n  }\\n\\n```\\n\\nThe `config_file_path` is specified as a node variable within the resource.\\n\\n\\nFor `swift::storage::server`, `swift::storage::container` and `swift::storage::account"", 'related_cwe': 'CWE-1290', 'is_misconfiguration_related': 'Yes'}"
429,"class cleanslate { include dirs::opt include cleanslate::settings include packages::mozilla::python27 file { ""/var/tmp/cleanslate"": ensure => absent; } python::virtualenv { $cleanslate::settings::root: python => $packages::mozilla::python27::python, require => class['packages::mozilla::python27'], packages => [ 'cleanslate==1.2', ]; } }",0,1,"packages => [ 'cleanslate==1.2', ]; }}, {, python => $packages::mozilla::python27::python, require => class['packages::mozilla::python27'], packages => [ 'cleanslate==1.2', ];}, python::virtualenv { $cleanslate::settings::root:, python::virtualenv { $cleanslate::settings::root: python => $packages::mozilla::python27::python, require => class['packages::mozilla::python27'], packages => [ 'cleanslate==1.2', ]; }}, {",CWE-480,"{'reason': 'The packages variable in the cleanslate class is being set to an outdated version of the cleanslate package. This version was vulnerable to arbitrary code execution.', 'related_cwe': 'CWE-480', 'is_misconfiguration_related': 'Yes'}"
430,class { '::openstack_tasks::swift::keystone' :} warning('osnailyfacter/modular/./swift/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./swift/keystone.pp'),1,1,class { '::openstack_tasks::swift::keystone' :} warning('osnailyfacter/modular/./swift/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./swift/keystone.pp'),CWE-693,"{'reason': 'openstack_tasks::swift::keystone class is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./swift/keystone.pp', 'related_cwe': 'CWE-693', 'is_misconfiguration_related': 'Yes'}"
431,"class gnocchi::keystone::auth ( $password, $auth_name = 'gnocchi', $email = 'gnocchi@localhost', $tenant = 'services', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = 'gnocchi', $service_type = 'metric', $region = 'regionone', $public_url = 'http://127.0.0.1:8041', $internal_url = 'http://127.0.0.1:8041', $admin_url = 'http://127.0.0.1:8041', $service_description = 'openstack metric service', ) { keystone::resource::service_identity { 'gnocchi': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $service_name, service_type => $service_type, service_description => $service_description, region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",0,1,"admin_url => $admin_url,, internal_url => $internal_url,, public_url => $public_url,, service_type => $service_type,",CWE-20,"{'reason': 'The script declares keystone::resource::service_identity which is a class for configuring keystone service ids, endpoints and roles for a service. The script declares a class with many optional parameters including configure_user, configure_user_role, and configure_endpoint. In this case the script fails to create the endpoint for the service because of the missing optional parameter. When we add the configure_endpoint parameter and a default value, the script runs successfully without any errors. \\n\\nThe misconfiguration is related to the CWE.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
432,"class ceilometer::db ( $database_db_max_retries = $::os_service_default, $database_connection = 'mysql://ceilometer:ceilometer@localhost/ceilometer', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $sync_db = true, ) { package<| title == 'ceilometer-common' |> -> class['ceilometer::db'] oslo::db { 'ceilometer_config': db_max_retries => $database_db_max_retries, connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, } if $sync_db { include ::ceilometer::db::sync } }",1,1,"database_db_max_retries = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$::os_service_default,, database_idle_timeout = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$::os_service_default,, database_max_overflow = \\$::os_service_default,, database_max_pool_size = \\$::os_service_default,, database_max_retries = \\\\\\\\\\\\$::os_service_default,, database_min_pool_size = \$::os_service_default,, database_min_pool_size = \\$::os_service_default,, database_retry_interval = \\\\$::os_service_default,, sync_db = true,",CWE-287,"{'reason': 'This misconfiguration has been labeled as CWE-287 which relates to improper default value definition. The script has improperly set the default value to the max retries value, which should have been set to the default OS max retry value. This leads to an issue which can be exploited to cause excessive and unnecessary retries which can overload the network.', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
433,"class nrpe::check::check_free_aws_ips { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_free_aws_ips': cfg => ""$plugins_dir/check_free_aws_ips""; } nrpe::plugin { ""check_free_aws_ips"": ; } sudoers::custom { 'check_open_tcp': user => 'nagios', runas => 'buildduty', command => ""/builds/aws_manager/bin/python /builds/aws_manager/cloud-tools/scripts/aws_check_subnets.py -r us-east-1 -r us-west-2 -s test -s try -s build"" } }",0,1,"builds/aws_manager/cloud-tools/scripts/aws_check_subnets.py, include nrpe::settings, nrpe::check { 'check_free_aws_ips': cfg => \, nrpe::plugin {, sudoers::custom { 'check_open_tcp': user => 'nagios', runas => 'buildduty', command => \\",CWE-259,"{'reason': 'check_free_aws_ips script allows users to run python scripts with sensitive commands.', 'related_cwe': '259', 'is_misconfiguration_related': 'Yes'}"
434,"class tripleo::profile::pacemaker::database::redis ( $bootstrap_node = hiera('bootstrap_nodeid'), $enable_load_balancer = hiera('enable_load_balancer', true), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } if $step >= 1 { include ::redis if $pacemaker_master and hiera('stack_action') == 'update' { tripleo::pacemaker::resource_restart_flag { 'redis-master': subscribe => exec[""cp -p ${::redis::config_file_orig} ${::redis::config_file}""] } } } if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf { 'redis': ocf_agent_name => 'heartbeat:redis', master_params => '', meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true', require => class['::redis'], } } }",1,1,"if $pacemaker_master and hiera('stack_action') == 'update' { tripleo::pacemaker::resource_restart_flag {'redis-master': subscribe => exec[, if $step >= 1 { include ::redis, if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf {'redis': ocf_agent_name => 'heartbeat:redis',, include ::redis if $pacemaker_master and hiera('stack_action') == 'update' { tripleo::pacemaker::resource_restart_flag {'redis-master': subscribe => exec[, meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true', require => class['::redis'], } } if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf {'redis': ocf_agent_name => 'heartbeat:redis', master_params => '', meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true',, ocf_agent_name => 'heartbeat:redis', master_params => '', meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true', require => class['::redis'], } } if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf {'redis': ocf_agent_name => 'heartbeat:redis', master_params => '', meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true',, pacemaker::resource::ocf {'redis': ocf_agent_name => 'heartbeat:redis', master_params => '', meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true', require => class['::redis'], } }, require => class['::redis'], } } if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf {'redis': ocf_agent_name => 'heartbeat:redis', master_params => '',, resource_params => 'wait_last_known_master=true', require => class['::redis'], } } } if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf {'redis': ocf_agent_name => 'heartbeat:redis', master_params => '', meta_params => 'notify=true ordered=true interleave=true', resource_params => 'wait_last_known_master=true',",CWE-703,"{'reason': ""The misconfiguration is related to the misconfigured configuration of the tripleo::pacemaker::resource_restart_flag resource, which causes the pacemaker cluster to not be able to restart the redis service in a controlled manner when the stack is updated. This results in an issue that the cluster is not able to restart the service in a controlled manner, which can lead to unintended behaviors and failures in the service. The misconfiguration also relates to the misconfiguration of the tripleo::pacemaker::resource_restart_flag resource's meta_params parameter, which is set to notify=true ordered=true interleave=true. This causes the pacemaker cluster to restart the service in an uncontrolled manner, which can lead to unintended behaviors and failures in the service."", 'related_cwe': 'CWE-703', 'is_misconfiguration_related': 'Yes'}"
435,"class keystone::disable_admin_token_auth { keystone::resource::service_identity<||> -> class['::keystone::disable_admin_token_auth'] ini_subsetting { require => class['keystone::roles::admin'], } if $::keystone::manage_service and $::keystone::enabled { ini_subsetting { notify => exec['restart_keystone'], } } ini_subsetting { 'public_api/admin_token_auth': ensure => absent, path => '/etc/keystone/keystone-paste.ini', section => 'pipeline:public_api', setting => 'pipeline', subsetting => 'admin_token_auth', } ini_subsetting { 'admin_api/admin_token_auth': ensure => absent, path => '/etc/keystone/keystone-paste.ini', section => 'pipeline:admin_api', setting => 'pipeline', subsetting => 'admin_token_auth', } ini_subsetting { 'api_v3/admin_token_auth': ensure => absent, path => '/etc/keystone/keystone-paste.ini', section => 'pipeline:api_v3', setting => 'pipeline', subsetting => 'admin_token_auth', } }",1,1,"ini_subsetting, keystone::resource::service_identity",CWE-384,"{'reason': 'This misconfiguration is related to the CWE because it removes the admin token auth', 'related_cwe': 'CWE-384', 'is_misconfiguration_related': 'Yes'}"
436,"class ceph::profile::params ( $fsid = undef, $release = undef, $authentication_type = undef, $mon_initial_members = undef, $mon_host = undef, $ms_bind_ipv6 = undef, $osd_journal_size = undef, $osd_pool_default_pg_num = undef, $osd_pool_default_pgp_num = undef, $osd_pool_default_size = undef, $osd_pool_default_min_size = undef, $osd_crush_update_on_start = undef, $cluster_network = undef, $public_network = undef, $public_addr = undef, $mon_key = undef, $mon_keyring = undef, $client_keys = {}, $osds = undef, $manage_repo = true, $rgw_name = undef, $rgw_user = undef, $rgw_print_continue = undef, $frontend_type = undef, $rgw_frontends = undef, $osd_max_backfills = undef, $osd_recovery_max_active = undef, $osd_recovery_op_priority = undef, $osd_recovery_max_single_start = undef, $osd_max_scrubs = undef, $osd_op_threads = undef, $rgw_keystone_version = 'v2.0', $rgw_keystone_admin_domain = undef, $rgw_keystone_admin_project = undef, $rgw_keystone_admin_user = undef, $rgw_keystone_admin_password = undef, ) { validate_hash($client_keys) if $authentication_type == 'cephx' and empty($client_keys) { fail(""client_keys must be provided when using authentication_type = 'cephx'"") } }",1,0,"N/A, ceph::profile::params, class ceph::profile::params ( $fsid = undef, $release = undef, $authentication_type = undef, $mon_initial_members = undef, $mon_host = undef, $ms_bind_ipv6 = undef, $osd_journal_size = undef, $osd_pool_default_pg_num = undef, $osd_pool_default_pgp_num = undef, $osd_pool_default_size = undef, $osd_pool_default_min_size = undef, $osd_crush_update_on_start = undef, $cluster_network = undef, $public_network = undef, $public_addr = undef, $mon_key = undef, $mon_keyring = undef, $client_keys = {}, $osds = undef, $manage_repo = true, $rgw_name = undef, $rgw_user = undef, $rgw_print_continue = undef, $frontend_type = undef, $rgw_frontends = undef, $osd_max_backfills = undef, $os, validate_hash($client_keys) if $authentication_type == 'cephx' and empty($client_keys) { fail(\","CWE-312, N/A","{'reason': ""Client keys must be set when authentication_type is set to 'cephx'. This check fails due to a missing client keys argument in the script. If client keys are missing, an attacker can impersonate a legitimate user and make unauthorized API requests to the ceph cluster. Client keys ensure that only legitimate users have access to the cluster."", 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
437,notice('modular: bigswitch compute-network-config') include bcf::params if $bcf::params::openstack::bcf_mode == 'p-only' { include bcf::p_only::compute_network_config },0,1,"include bcf::p_only::compute_network_config, include bcf::params if $bcf::params::openstack::bcf_mode == 'p-only'",CWE-20,"{'reason': 'CWE-20: [Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
438,"class openstack_integration::keystone ( $default_domain = undef, $using_domain_config = false, $token_provider = 'uuid', ) { include ::openstack_integration::config include ::openstack_integration::params if $::openstack_integration::config::ssl { openstack_integration::ssl_key { 'keystone': notify => service['httpd'], require => package['keystone'], } exec['update-ca-certificates'] ~> service['httpd'] } if $token_provider == 'fernet' { $enable_fernet_setup = true } else { $enable_fernet_setup = false } if $::osfamily == 'redhat' { $enable_credential_setup = true } else { $enable_credential_setup = false } class { '::keystone::client': } class { '::keystone::cron::token_flush': } class { '::keystone::db::mysql': password => 'keystone', } class { '::keystone': debug => true, database_connection => 'mysql+pymysql://keystone:keystone@127.0.0.1/keystone', admin_token => 'a_big_secret', enabled => true, service_name => 'httpd', default_domain => $default_domain, using_domain_config => $using_domain_config, enable_ssl => $::openstack_integration::config::ssl, public_bind_host => $::openstack_integration::config::host, admin_bind_host => $::openstack_integration::config::host, manage_policyrcd => true, token_provider => $token_provider, enable_fernet_setup => $enable_fernet_setup, enable_credential_setup => $enable_credential_setup, } include ::apache class { '::keystone::wsgi::apache': bind_host => $::openstack_integration::config::ip_for_url, admin_bind_host => $::openstack_integration::config::ip_for_url, ssl => $::openstack_integration::config::ssl, ssl_key => ""/etc/keystone/ssl/private/${::fqdn}.pem"", ssl_cert => $::openstack_integration::params::cert_path, workers => 2, } if ($::operatingsystem == 'ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) { ensure_resource('file', '/etc/apache2/sites-available/keystone.conf', { 'ensure' => 'absent', }) ensure_resource('file', '/etc/apache2/sites-enabled/keystone.conf', { 'ensure' => 'absent', }) package['keystone'] -> file['/etc/apache2/sites-available/keystone.conf'] -> file['/etc/apache2/sites-enabled/keystone.conf'] ~> anchor['keystone::install::end'] } class { '::keystone::roles::admin': email => 'test@example.tld', password => 'a_big_secret', } class { '::keystone::endpoint': default_domain => $default_domain, public_url => $::openstack_integration::config::keystone_auth_uri, admin_url => $::openstack_integration::config::keystone_admin_uri, } class { '::keystone::disable_admin_token_auth': } class { '::openstack_extras::auth_file': password => 'a_big_secret', project_domain => 'default', user_domain => 'default', auth_url => ""${::openstack_integration::config::keystone_auth_uri}/v3/"", } keystone_role { 'creator': ensure => present, } keystone_role { 'member': ensure => present, } }",1,1,"keystone::db::mysql::, keystone::disable_admin_token_auth::, keystone::endpoint::, keystone::roles::admin::, openstack_extras::auth_file::","CWE-345, CWE-384","{'reason': ""The admin_token in keystone::roles::admin has been configured to a constant value, 'a_big_secret', that is used in the keystone::db::mysql:: class. This constant value does not change between deployments. CWE-345, CWE-384"", 'related_cwe': 'CWE-345, CWE-384', 'is_misconfiguration_related': 'Yes'}"
439,"class cinder::volume::iscsi ( $iscsi_ip_address, $volume_driver = 'cinder.volume.drivers.lvm.lvmvolumedriver', $volume_group = $::os_service_default, $volumes_dir = '/var/lib/cinder/volumes', $iscsi_helper = $::cinder::params::iscsi_helper, $iscsi_protocol = $::os_service_default, $extra_options = {}, ) { include ::cinder::params warning('usage of cinder::volume::iscsi is deprecated, please use cinder::backend::iscsi instead.') cinder::backend::iscsi { 'default': iscsi_ip_address => $iscsi_ip_address, volume_driver => $volume_driver, volume_group => $volume_group, volumes_dir => $volumes_dir, iscsi_helper => $iscsi_helper, iscsi_protocol => $iscsi_protocol, extra_options => $extra_options, } }",1,1,"cinder::backend::iscsi { 'default': iscsi_ip_address => $iscsi_ip_address, volume_driver => $volume_driver, volume_group => $volume_group, volumes_dir => $volumes_dir, iscsi_helper => $iscsi_helper, iscsi_protocol => $iscsi_protocol, extra_options => $extra_options, }, include ::cinder::params, warning('usage of cinder::volume::iscsi is deprecated, please use cinder::backend::iscsi instead.')",CWE-19: Information Exposure Through Discrepancy,"{'reason': 'Explanation', 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
440,"notice('modular: bigswitch common-repo.pp') package { 'python-pip': ensure => 'installed', } exec { 'bsnstacklib': command => 'pip install ""bsnstacklib<2015.2""', path => '/usr/local/bin/:/usr/bin/:/bin', require => package['python-pip'] }",0,1,"notice('modular: bigswitch common-repo.pp') package { 'python-pip': ensure => 'installed', } exec { 'bsnstacklib': command => 'pip install, package { 'python-pip': ensure => 'installed', } exec { 'bsnstacklib': command => 'pip install, path => '/usr/local/bin/:/usr/bin/:/bin', require => package['python-pip']",CWE-20,"{'reason': 'The pip command provided is incorrect. The command should be pip install \\', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
441,"define swift::storage::generic( $manage_service = true, $enabled = true, $package_ensure = 'present', $config_file_name = ""${name}-server.conf"", $service_provider = $::swift::params::service_provider ) { include ::swift::deps include ::swift::params class['swift::storage'] -> swift::storage::generic[$name] swift_config<| |> ~> service[""swift-${name}-server""] swift_config<| |> ~> service[""swift-${name}-auditor""] swift_config<| |> ~> service[""swift-${name}-replicator""] validate_re($name, '^object|container|account$') package { ""swift-${name}"": ensure => $package_ensure, name => getvar(""::swift::params::${name}_package_name""), tag => ['openstack', 'swift-package'], before => service[""swift-${name}-server"", ""swift-${name}-replicator""], } file { ""/etc/swift/${name}-server/"": ensure => directory, owner => 'swift', group => 'swift', tag => 'swift-file', } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } swift::service { ""swift-${name}-server"": os_family_service_name => getvar(""::swift::params::${name}_server_service_name""), service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, subscribe => package[""swift-${name}""], } swift::service { ""swift-${name}-replicator"": os_family_service_name => getvar(""::swift::params::${name}_replicator_service_name""), service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, subscribe => package[""swift-${name}""], } swift::service { ""swift-${name}-auditor"": os_family_service_name => getvar(""::swift::params::${name}_auditor_service_name""), service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, subscribe => package[""swift-${name}""], } }",1,1,"file { \\, file { \\\\\\\\, if $manage_service { \\, if $manage_service { \\\\, package { \, swift::service {\\n\\t\\t\\t\\\, swift::storage::generic( \n\t\t\t$manage_service = true, \n\t\t\t$enabled = true, \n\t\t\t$package_ensure = 'present', \n\t\t\t$config_file_name =, swift_config<\\\\|>\\\\> ~> service[\\\\\\\\\\\\, swift_config<\\|>\\> ~> service[\\\\\\","CWE-119, CWE-16, CWE-20","{'reason': 'Please explain why this misconfiguration is related to the provided CWE and list which CWEs are related to the issue.', 'related_cwe': 'CWE-119, CWE-16, CWE-20', 'is_misconfiguration_related': 'No'}"
442,"class lma_logging_analytics::curator ( $host = 'localhost', $port = '9200', $retention_period = $lma_logging_analytics::params::retention_period, $prefixes = $lma_logging_analytics::params::indexes_prefixes, $package_version = 'latest', ) inherits lma_logging_analytics::params { validate_integer($retention_period) validate_array($prefixes) package { 'python-elasticsearch-curator': ensure => $package_version, } if size($prefixes) > 0 and $retention_period > 0 { $real_retention_period = 1 + $retention_period $regex = join($prefixes, '|') file { '/etc/elasticsearch/curator.yaml': ensure => present, content => template('lma_logging_analytics/curator.yaml.erb'), } file { '/etc/elasticsearch/delete_indices.yaml': ensure => present, content => template('lma_logging_analytics/delete_indices.yaml.erb'), } cron { 'es-curator': ensure => present, command => '/usr/local/bin/curator --config /etc/elasticsearch/curator.yaml /etc/elasticsearch/delete_indices.yaml', minute => '0', hour => '2', month => '*', monthday => '*', } } }",1,1,"cron { 'es-curator':, file { '/etc/elasticsearch/curator.yaml':, file { '/etc/elasticsearch/delete_indices.yaml':","CWE-117, CWE-200","{'reason': 'The cron configuration specifies to delete indices older than one day. This is equivalent to the retention policy in Elasticsearch, which is specified as the retention period (1) + 1 in the misconfigured puppet code. Therefore, the misconfiguration is related to CWE 200.', 'related_cwe': 'CWE-200, CWE-117', 'is_misconfiguration_related': 'Yes'}"
443,"class cinder::volume::nfs ( $nfs_servers = [], $nfs_mount_attempts = $::os_service_default, $nfs_mount_options = $::os_service_default, $nfs_disk_util = $::os_service_default, $nfs_sparsed_volumes = $::os_service_default, $nfs_mount_point_base = $::os_service_default, $nfs_shares_config = '/etc/cinder/shares.conf', $nfs_used_ratio = $::os_service_default, $nfs_oversub_ratio = $::os_service_default, $extra_options = {}, ) { warning('usage of cinder::volume::nfs is deprecated, please use cinder::backend::nfs instead.') cinder::backend::nfs { 'default': nfs_servers => $nfs_servers, nfs_mount_attempts => $nfs_mount_attempts, nfs_mount_options => $nfs_mount_options, nfs_disk_util => $nfs_disk_util, nfs_sparsed_volumes => $nfs_sparsed_volumes, nfs_mount_point_base => $nfs_mount_point_base, nfs_shares_config => $nfs_shares_config, nfs_used_ratio => $nfs_used_ratio, nfs_oversub_ratio => $nfs_oversub_ratio, extra_options => $extra_options, } }",0,1,"cinder::backend::nfs { 'default':\\\\n nfs_mount_point_base => $nfs_mount_point_base,\\\\n, cinder::backend::nfs { 'default':\\n nfs_mount_point_base => $nfs_mount_point_base,\\n, cinder::backend::nfs { 'default':\n nfs_mount_point_base => $nfs_mount_point_base,\n, class cinder::volume::nfs ( $nfs_servers = [], $nfs_mount_attempts = $::os_service_default, $nfs_mount_options = $::os_service_default, $nfs_disk_util = $::os_service_default, $nfs_sparsed_volumes = $::os_service_default, $nfs_mount_point_base = $::os_service_default, $nfs_shares_config = '/etc/cinder/shares.conf', $nfs_used_ratio = $::os_service_default, $nfs_oversub_ratio = $::os_service_default, $extra_options = {}, ) { warning('usage of cinder::volume::nfs is deprecated, please use cinder::backend::nfs instead.')","CWE-24, CWE-25","{'reason': 'the misconfiguration of mounting cinder data volume from an NFS server', 'related_cwe': 'CWE-24, CWE-25', 'is_misconfiguration_related': 'Yes'}"
444,"notice('fuel-plugin-influxdb-grafana: grafana_mysql.pp') $is_mysql_server = roles_include(['standalone-database', 'primary-standalone-database']) if hiera('lma::grafana::mysql::mode') == 'local' { $mysql = hiera_hash('mysql') $db_vip = hiera('database_vip') $db_admin_user = 'root' $db_admin_pass = $mysql['root_password'] $db_port = '3306' $db_options_file = '/root/.my.cnf' $db_file_content = inline_template('[client] user=<%= @db_admin_user %> password=<%= @db_admin_pass %> host=<%= @db_vip %> ') $db_name = hiera('lma::grafana::mysql::dbname') $db_username = hiera('lma::grafana::mysql::username') $db_password = rstrip(hiera('lma::grafana::mysql::password')) file { $db_options_file: ensure => file, content => $db_file_content, replace => false, notify => exec['remove_db_options_file'], } if $is_mysql_server { class { '::mysql::client': package_manage => false, } } mysql::db { $db_name: user => $db_username, password => $db_password, host => '%', require => file[$db_options_file], } exec { 'remove_db_options_file': command => ""/bin/rm -f ${db_options_file}"", refreshonly => true, require => mysql::db[$db_name], } }",1,1,"exec {'remove_db_options_file': command => \, exec {'remove_db_options_file': command => \\, file { $db_options_file: ensure => file, content => $db_file_content, replace => false, notify => exec['remove_db_options_file'], }, if $is_mysql_server { class { '::mysql::client': package_manage => false, } }, mysql::db { $db_name: user => $db_username, password => $db_password, host => '%', require => file[$db_options_file], }","CWE-295, CWE-794, CWE-798, CWE-799","{'reason': 'Not related to CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
445,class { '::openstack_tasks::openstack_network::compute_nova' :} warning('osnailyfacter/modular/./openstack-network/compute-nova.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/compute-nova.pp'),1,1,class { '::openstack_tasks::openstack_network::compute_nova' :} warning('osnailyfacter/modular/./openstack-network/compute-nova.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/compute-nova.pp'),CWE-200,"{'reason': 'The misconfiguration is related to the CWE', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
446,"class funsize_scheduler { include ::config include funsize_scheduler::services include funsize_scheduler::settings include dirs::builds include packages::gcc include packages::libffi include packages::make include packages::mozilla::python27 include users::builder python::virtualenv { ""${funsize_scheduler::settings::root}"": python => ""${packages::mozilla::python27::python}"", require => [ class[""packages::mozilla::python27""], class[""packages::libffi""], ], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""amqp==1.4.6"", ""anyjson==0.3.3"", ""argparse==1.2.1"", ""cffi==1.1.0"", ""cryptography==0.6"", ""enum34==1.0.4"", ""funsize==0.15"", ""jinja2==2.7.1"", ""kombu==3.0.26"", ""markupsafe==0.23"", ""pgpy==0.3.0"", ""pycparser==2.13"", ""pyhawk-with-a-single-extra-commit==0.1.5"", ""pyyaml==3.10"", ""redo==1.4.1"", ""requests==2.4.3"", ""singledispatch==3.4.0.3"", ""six==1.9.0"", ""taskcluster==0.0.16"", ""wsgiref==0.1.2"", ]; } }",1,1,"group => \\, group => \\\\\\\, packages => \\\\, packages => \\\\\\\\\\\\\\\\, python => \, python => \\, python::virtualenv { \, python::virtualenv { \\, user => \, user => \\\\",CWE-732,"{'reason': 'The Puppet code provided allows python::virtualenvs to be declared without specifying any values for required parameters `python`, `user`, `group`, `packages`, and `require`. This can lead to undefined behavior as Puppet will use the default values for these parameters when declared. This can lead to a user that is inadvertently created as the owner of the virtualenv and has access to sensitive resources, which can result in data exposure. Therefore, the Puppet code is misconfigured.', 'related_cwe': 'None', 'is_misconfiguration_related': 'Yes'}"
447,"class packages::mozilla::tooltool { include packages::mozilla::python27 $python = $::packages::mozilla::python27::python $filename = $::operatingsystem ? { windows => ""c:/mozilla-build/tooltool.py"", default => ""/tools/tooltool.py"", } file { $filename: mode => filemode(0755), content => template(""packages/tooltool.py""); } if ($::operatingsystem != ""windows"") { file { ""/builds/tooltool.py"": ensure => ""link"", target => $filename; } } }",1,1,"if ($::operatingsystem!= \, include packages::mozilla::python27, mode=>filemode(0755), target=>\$filename;}, target=>\\$filename;, target=>\\\\\\\\$filename;, template(\\\, template(\\\\\\","CWE-20: Improper Input Validation, CWE-22: Improper Limitation of a Pathname to a Restricted Directory (, CWE-250: Path Traversal, CWE-693: Improper Limitation of a Pathname to a Restricted Directory (","{'reason': 'Reasoning', 'related_cwe': 'CWE-20, CWE-22, CWE-250, CWE-693', 'is_misconfiguration_related': 'Yes'}"
448,"class ceph::conf($args = {}, $defaults = {}) { create_resources(ceph_config, $args, $defaults) }",0,1,"class ceph::conf($args = {}, $defaults = {}), create_resources(ceph_config, $args, $defaults)",CWE-20: Improper Input Validation,"{'reason': 'The issue is caused because the ceph::conf class is not configured to include an argument specifying the value to be passed to the create_resources() function. Without this argument, create_resources() does not know what to create and therefore generates an error. This means that the misconfiguration label is not accurate.', 'related_cwe': 'CWE-20: Improper Input Validation', 'is_misconfiguration_related': 'No'}"
449,"class openstack::ha::haproxy_restart { exec { 'haproxy-restart': command => '/usr/lib/ocf/resource.d/fuel/ns_haproxy reload', environment => ['ocf_root=/usr/lib/ocf'], path => '/usr/bin:/usr/sbin:/bin:/sbin', logoutput => true, provider => 'shell', tries => 10, try_sleep => 10, returns => [0, ''], refreshonly => true, } }",0,1,"class openstack::ha::haproxy_restart {, command => '/usr/lib/ocf/resource.d/fuel/ns_haproxy reload',, exec { 'haproxy-restart':, logoutput => true,, refreshonly => true,, returns => [0, ''],, tries => 10,, try_sleep => 10,, }",CWE-78,"{'reason': ""the command '/usr/lib/ocf/resource.d/fuel/ns_haproxy reload' should be a private command that shouldn't be executed by non-root users.\\n"", 'related_cwe': 'CWE-78', 'is_misconfiguration_related': 'Yes'}"
450,"class ceph::params ( $exec_timeout = 600, $packages = 'ceph', $rgw_socket_path = '/tmp/radosgw.sock', $enable_sig = false, $release = 'jewel', ) { case $::osfamily { 'debian': { $pkg_radosgw = 'radosgw' $user_radosgw = 'www-data' $pkg_fastcgi = 'libapache2-mod-fastcgi' $pkg_nsstools = 'libnss3-tools' $service_provider = 'debian' $pkg_policycoreutils = 'policycoreutils' } 'redhat': { $pkg_radosgw = 'ceph-radosgw' $user_radosgw = 'apache' $pkg_fastcgi = 'mod_fastcgi' $pkg_nsstools = 'nss-tools' $service_provider = 'redhat' $pkg_policycoreutils = 'policycoreutils-python' } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only supports osfamily debian or redhat"") } } }",1,1,class ceph::params,"CWE-257, CWE-798, CWE-799, CWE-835, CWE-839, CWE-840, CWE-841, CWE-842, CWE-843, CWE-844","{'reason': 'No', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
451,"class vmware::ceilometer::compute_vmware( $availability_zone_name, $vc_cluster, $vc_host, $vc_user, $vc_password, $service_name, $target_node = undef, $vc_insecure = true, $vc_ca_file = undef, $datastore_regex = undef, $debug = undef, $identity_uri = undef, $auth_user = undef, $auth_password = undef, $tenant = undef, ) { if $debug { $default_log_levels = 'amqp=debug,amqplib=debug,boto=warn,qpid=warn,sqlalchemy=warn,suds=info,iso8601=warn,requests.packages.urllib3.connectionpool=warn,oslo.vmware=debug' } else { $default_log_levels = 'amqp=warn,amqplib=warn,boto=warn,qpid=warn,sqlalchemy=warn,suds=info,iso8601=warn,requests.packages.urllib3.connectionpool=warn,oslo.vmware=warn' } class { '::vmware::ssl': vc_insecure => $vc_insecure, vc_ca_file => $vc_ca_file, vc_ca_filepath => '/etc/ceilometer/vmware-ca.pem', } $ceilometer_vcenter_ca_filepath = $::vmware::ssl::vcenter_ca_filepath $ceilometer_vcenter_insecure_real = $::vmware::ssl::vcenter_insecure_real ceilometer_config { 'default/default_log_levels': value => $default_log_levels; 'default/hypervisor_inspector': value => 'vmware'; 'default/host': value => ""${availability_zone_name}-${service_name}""; 'vmware/host_ip': value => $vc_host; 'vmware/host_username': value => $vc_user; 'vmware/host_password': value => $vc_password; 'vmware/ca_file': value => $ceilometer_vcenter_ca_filepath; 'vmware/insecure': value => $ceilometer_vcenter_insecure_real; 'keystone_authtoken/admin_user': value => $auth_user; 'keystone_authtoken/admin_password': value => $auth_password; 'keystone_authtoken/admin_tenant_name': value => $tenant; 'keystone_authtoken/identity_uri': value => $identity_uri; } include ::ceilometer::params package { 'ceilometer-polling': ensure => latest, name => $::ceilometer::params::agent_polling_package_name, } service { 'ceilometer-polling': ensure => running, name => $::ceilometer::params::agent_polling_service_name, } ceilometer_config<| |> ~> service['ceilometer-polling'] package['ceilometer-polling'] ~> service['ceilometer-polling'] }",1,1,"ceilometer_config<| |> ~> service['ceilometer-polling'], package { 'ceilometer-polling': ensure => latest, name => $::ceilometer::params::agent_polling_package_name, }, package['ceilometer-polling'] ~> service['ceilometer-polling'], service { 'ceilometer-polling': ensure => running, name => $::ceilometer::params::agent_polling_service_name, }","CWE-77, CWE-778","{'reason': 'There are multiple issues found in this code.\\n\\nThere are multiple issues with the package line. The use of ensure => latest is incorrect, as the latest version of this package is not the most secure.\\n\\nThere are also multiple issues with the service line. The use of ensure => running is incorrect, as the current running state is not the most secure.\\n\\nFinally, the use of Ceilometer Config to apply the configuration is incorrect, as the config should be applied directly through the Ceilometer service, and not through Puppet.', 'related_cwe': 'CWE-77, CWE-778', 'is_misconfiguration_related': 'Yes'}"
452,"case $::osfamily { 'debian': { $ipv6 = false $mistral_enabled = false } 'redhat': { $ipv6 = true $mistral_enabled = false } default: { fail(""unsupported osfamily (${::osfamily})"") } } if ($::operatingsystem == 'ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) { $ssl_enabled = false $trove_enabled = false } else { $ssl_enabled = true $trove_enabled = true } include ::openstack_integration class { '::openstack_integration::config': ipv6 => $ipv6, ssl => $ssl_enabled, } include ::openstack_integration::cacert include ::openstack_integration::memcached include ::openstack_integration::rabbitmq include ::openstack_integration::mysql class { '::openstack_integration::keystone': token_provider => 'fernet', } include ::openstack_integration::glance class { '::openstack_integration::neutron': driver => 'linuxbridge', } include ::openstack_integration::nova if $trove_enabled { include ::openstack_integration::trove } include ::openstack_integration::horizon include ::openstack_integration::heat include ::openstack_integration::sahara include ::openstack_integration::provision class { '::openstack_integration::tempest': trove => $trove_enabled, sahara => true, mistral => $mistral_enabled, horizon => true, heat => true, }",1,1,"if $trove_enabled { include ::openstack_integration::trove }, include ::openstack_integration::glance, include ::openstack_integration::heat, include ::openstack_integration::horizon, include ::openstack_integration::keystone, include ::openstack_integration::memcached, include ::openstack_integration::mysql, include ::openstack_integration::neutron, include ::openstack_integration::nova, include ::openstack_integration::rabbitmq",CWE-918,"{'reason': 'The vulnerability is caused by the code having multiple ways to load the `trove` module. The vulnerability does not appear in the code because the variable `$trove_enabled` is being used to determine if the `trove` module should be included. If the value of `$trove_enabled` is `false`, the `trove` module will not be included. However, if the value of `$trove_enabled` is `true`, the `trove` module will be included. The value of `$trove_enabled` is set by the code based on the operating system being used. If the operating system being used is `ubuntu`, the value of `$trove_enabled` will be set to `false`. If the operating system', 'related_cwe': 'CWE-918', 'is_misconfiguration_related': 'Yes'}"
453,"class ironic::config ( $ironic_config = {}, ) { validate_hash($ironic_config) create_resources('ironic_config', $ironic_config) }",0,1,"create_resources('ironic_config', $ironic_config), validate_hash($ironic_config)",CWE-295,"{'reason': 'The Puppet validate_hash() function is used to validate the user-defined input arguments (e.g. $ironic_config in the provided script) for certain Puppet resources. The validate_hash() function will raise an error and fail the Puppet run if the user-defined arguments are of the wrong type or contain invalid values.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
454,"class hardware::ipmitool { anchor { 'hardware::ipmitool::begin': ; 'hardware::ipmitool::end': ; } anchor['hardware::ipmitool::begin'] -> class { 'packages::openipmi': ; } -> anchor['hardware::ipmitool::end'] if ($kernel == ""linux"") { anchor['hardware::ipmitool::begin'] -> kernelmodule { ""ipmi_devintf"": ; } -> anchor['hardware::ipmitool::end'] } }",0,1,"class hardware::ipmitool { anchor { 'hardware::ipmitool::begin': ; 'hardware::ipmitool::end': ; } anchor['hardware::ipmitool::begin'] -> class { 'packages::openipmi': ; } -> anchor['hardware::ipmitool::end'] if ($kernel ==, if ($kernel ==",CWE-732,"{'reason': 'The CWE misconfiguration label \\', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
455,"class midonet::repository ( $is_mem = false, $midonet_version = '5.2', $midonet_stage = 'stable', $openstack_release = 'mitaka', $mem_version = '5.2', $mem_username = undef, $mem_password = undef ) { case $::osfamily { 'debian': { class { 'midonet::repository::ubuntu': is_mem => $is_mem, midonet_version => $midonet_version, midonet_stage => $midonet_stage, openstack_release => $openstack_release, mem_version => $mem_version, mem_username => $mem_username, mem_password => $mem_password } } 'redhat': { class { 'midonet::repository::centos': is_mem => $is_mem, midonet_version => $midonet_version, midonet_stage => $midonet_stage, openstack_release => $openstack_release, mem_version => $mem_version, mem_username => $mem_username, mem_password => $mem_password } } default: { fail('operating system not supported by this module') } } }",0,1,"class {'midonet::repository::ubuntu': is_mem => $is_mem, midonet_version => $midonet_version, midonet_stage => $midonet_stage, openstack_release => $openstack_release, mem_version => $mem_version, mem_username => $mem_username, mem_password => $mem_password }, mem_password => $mem_password }, mem_username => $mem_username, mem_password => $mem_password }, midonet_version => $midonet_version, midonet_stage => $midonet_stage, openstack_release => $openstack_release, mem_version => $mem_version, mem_username => $mem_username, mem_password => $mem_password }, openstack_release => $openstack_release, mem_version => $mem_version, mem_username => $mem_username, mem_password => $mem_password }","CWE-347, CWE-349, CWE-352, CWE-89","{'reason': 'Since there is no validation of the mem_username and mem_password parameters, there is a risk that a potential attacker could exploit the Midonet puppet module to gain access to the system.', 'related_cwe': 'CWE-347, CWE-349, CWE-352, CWE-89', 'is_misconfiguration_related': 'Yes'}"
456,"class foo { file { '/tmp/foo' : ensure => present, } } node gar { } define baz { } host { 'cow' : }",0,1,"class foo {, define baz { }, file { \'/tmp/foo\' : ensure => present, }, host { 'cow' : }, node gar { }, }","CWE-119, CWE-22, CWE-23","{'reason': 'CWE-119: A code has the wrong permissions for the file or folder where it lives, allowing other people to make changes or see the source code.', 'related_cwe': 'CWE-119, CWE-22, CWE-23', 'is_misconfiguration_related': 'Yes'}"
457,"class tripleo::profile::base::nova::compute::ironic ( $step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::nova::compute include ::nova::compute::ironic include ::nova::network::neutron } }",0,1,"include ::nova::compute::ironic;, include ::nova::compute::ironic; include ::nova::network::neutron;, include ::nova::network::neutron;, include ::tripleo::profile::base::nova::compute;, include \u003a\u003a::tripleo::profile::base::nova::compute::ironic\u003b",CWE-494,"{'reason': 'No additional vulnerabilities identified.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
458,class { '::osnailyfacter::rabbitmq::rabbitmq' :},1,1,class { '::osnailyfacter::rabbitmq::rabbitmq':},"CWE-269, CWE-270, CWE-271, CWE-272, CWE-273, CWE-274, CWE-275","{'reason': 'Misconfiguration is related to the CVE because...', 'related_cwe': 'CWE-269, CWE-270, CWE-271, CWE-272, CWE-273, CWE-274, CWE-275', 'is_misconfiguration_related': 'Yes'}"
459,"class mariadb::monitor_disk( $is_critical = true, $contact_group = 'dba', $pct_warning = 10, $pct_critical = 5, ) { nrpe::monitor_service { 'mariadb_disk_space': description => 'mariadb disk space', nrpe_command => ""/usr/lib/nagios/plugins/check_disk \ -w ${pct_warning}% -c ${pct_critical}% -l -e --exclude-type=tracefs"", critical => $is_critical, contact_group => $contact_group, } }",0,1,"class mariadb::monitor_disk( $is_critical = true, $contact_group = 'dba', $pct_warning = 10, $pct_critical = 5, ), critical => $is_critical, contact_group => $contact_group, }, nrpe::monitor_service {'mariadb_disk_space': description =>'mariadb disk space', nrpe_command =>",CWE-259,"{'reason': ""mariadb::monitor_disk( $is_critical = true, $contact_group = 'dba', $pct_warning = 10, $pct_critical = 5, ), critical => $is_critical, contact_group => $contact_group, }, nrpe::monitor_service {'mariadb_disk_space': description =>'mariadb disk space', nrpe_command =>"", 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
460,class { '::openstack_tasks::ceilometer::radosgw_user' :} warning('osnailyfacter/modular/./ceilometer/radosgw_user.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/radosgw_user.pp'),1,1,class { '::openstack_tasks::ceilometer::radosgw_user' :} warning('osnailyfacter/modular/./ceilometer/radosgw_user.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/radosgw_user.pp'),CWE-250,"{'reason': 'The script was deprecated in the Mitaka version of OpenStack, which is the reason for the error, and in the newton release of OpenStack, it was removed completely. It is not related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
461,"class fw::windows_settings { shared::execonce { ""allowping"": command =>'""c:\windows\system32\netsh.exe"" firewall set icmpsetting 8' } shared::execonce { ""allowrdp"": command =>'""c:\windows\system32\netsh.exe"" advfirewall firewall set rule group=""remote desktop"" new enable=yes' } }",1,1,"cc:\\\\\\\\\\\\\\\\\\\\\\\\\\windows\\\\\\\\system32\\\\\\\\netsh.exe \\\\\\\\\\\\, c:\\\\\\\windows\\\\system32\\\\netsh.exe \\\\, command => \\, command => \\\\, command => \\\\\\\\, shared::execonce { \, shared::execonce { \\, shared::execonce { \\\\, shared::execonce { \\\\\\\\","CWE-284, CWE-384, CWE-397","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
462,"class keystone::db::mysql( $password, $dbname = 'keystone', $user = 'keystone', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ) { include ::keystone::deps validate_string($password) ::openstacklib::db::mysql { 'keystone': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } anchor['keystone::db::begin'] ~> class['keystone::db::mysql'] ~> anchor['keystone::db::end'] }",1,1,"class keystone::db::mysql( $password, $dbname = 'keystone', $user = 'keystone', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ), include ::keystone::deps, mysql_password($password), validate_string($password)","CWE-285, CWE-312, CWE-319","{'reason': ""password parameter was not validated before being passed to the MySQL driver's password_hash method"", 'related_cwe': 'CWE-285, CWE-312, CWE-319', 'is_misconfiguration_related': 'Yes'}"
463,class { '::openstack_tasks::roles::controller' :} warning('osnailyfacter/modular/./roles/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/controller.pp'),1,1,class {'::openstack_tasks::roles::controller' :} warning('osnailyfacter/modular/./roles/controller.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/controller.pp'),CWE-732,"{'reason': 'CWE-732', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
464,"class neutron::agents::vpnaas ( $package_ensure = present, $enabled = true, $manage_service = true, $vpn_device_driver = 'neutron.services.vpn.device_drivers.ipsec.openswandriver', $interface_driver = 'neutron.agent.linux.interface.ovsinterfacedriver', $external_network_bridge = $::os_service_default, $ipsec_status_check_interval = $::os_service_default, $purge_config = false, ) { include ::neutron::deps include ::neutron::params case $vpn_device_driver { /\.openswan/: { package['openswan'] -> package<| title == 'neutron-vpnaas-agent' |> package { 'openswan': ensure => present, name => $::neutron::params::openswan_package, tag => ['neutron-support-package', 'openstack'], } } /\.libreswan/: { if($::osfamily != 'redhat') { fail(""libreswan is not supported on osfamily ${::osfamily}"") } else { package['libreswan'] -> package<| title == 'neutron-vpnaas-agent' |> package { 'libreswan': ensure => present, name => $::neutron::params::libreswan_package, tag => ['neutron-support-package', 'openstack'], } } } default: { fail(""unsupported vpn_device_driver ${vpn_device_driver}"") } } resources { 'neutron_vpnaas_agent_config': purge => $purge_config, } neutron_vpnaas_agent_config { 'vpnagent/vpn_device_driver': value => $vpn_device_driver; 'ipsec/ipsec_status_check_interval': value => $ipsec_status_check_interval; 'default/interface_driver': value => $interface_driver; } if ! is_service_default ($external_network_bridge) { warning('parameter external_network_bridge is deprecated') } neutron_vpnaas_agent_config { 'default/external_network_bridge': value => $external_network_bridge; } if $::neutron::params::vpnaas_agent_package { ensure_resource( 'package', 'neutron-vpnaas-agent', { 'ensure' => $package_ensure, 'name' => $::neutron::params::vpnaas_agent_package, 'tag' => ['openstack', 'neutron-package'], }) } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'neutron-vpnaas-service': ensure => $service_ensure, name => $::neutron::params::vpnaas_agent_service, enable => $enabled, tag => 'neutron-service', } }",1,1,"vpn_device_driver= \, vpn_device_driver= \\, vpn_device_driver= \\\\, vpn_device_driver= \\\\\\\\, vpn_device_driver= \\\\\\\\\\\\\\\\, vpn_device_driver= \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, vpn_device_driver{'reason': ""1) The value of vpn_device_driver can be set to one of 'neutron.services.vpn.device_drivers.ipsec.openswandriver' or 'neutron.services.vpn.device_drivers.ipsec.libreswandriver' according to the user's system configuration. 2) The value of vpn_device_driver cannot be used to determine whether openswan or libreswan is installed. 3) The value of vpn_device_driver has no impact on the actual driver configuration, only on the installation of openswan or libreswan."", 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
465,"class contrail::compute::hugepages { if $contrail::compute_dpdk_enabled { kernel_parameter { provider => 'grub2', } if $contrail::hugepages_size == 2 { $max_map_count=$contrail::hugepages_number * 2 sysctl::value { 'vm.max_map_count': value => ""${max_map_count} "", } -> sysctl::value { 'vm.nr_hugepages': value => ""${contrail::hugepages_number} "", } kernel_parameter { 'hugepagesz': ensure => absent, } kernel_parameter { 'hugepages': ensure => absent, } } elsif $contrail::hugepages_size == 1024 { kernel_parameter { 'hugepagesz': ensure => present, value => ""${contrail::hugepages_size}m"", } -> kernel_parameter { 'hugepages': ensure => present, value => $contrail::hugepages_size, } exec { 'temporary_add_hugepages': path => ['/sbin', '/usr/bin'], command => 'sysctl -w vm.nr_hugepages=256', onlyif => 'test ! -d /sys/kernel/mm/hugepages/hugepages-1048576kb', } exec { 'reboot_require': path => ['/bin', '/usr/bin'], command => 'touch /tmp/contrail-reboot-require', onlyif => 'test ! -d /sys/kernel/mm/hugepages/hugepages-1048576kb', } } file { '/hugepages': ensure => 'directory', group => 'kvm', } -> mount { '/hugepages': ensure => 'mounted', fstype => 'hugetlbfs', device => 'hugetlbfs', options => 'mode=775,gid=kvm', atboot => true, } -> file_line { 'hugepages_mountpoint': path => '/etc/libvirt/qemu.conf', match => ' line => 'hugetlbfs_mount = ""/hugepages""', } ~> service { 'qemu-kvm': ensure => running, enable => true, } ~> service { $contrail::libvirt_name: ensure => running, enable => true, } } }",1,1,"if $contrail::compute_dpdk_enabled { kernel_parameter { provider => 'grub2', } if $contrail::hugepages_size == 2 { $max_map_count=$contrail::hugepages_number * 2 sysctl::value { 'vm.max_map_count': value =>, if $contrail::hugepages_size == 2 { $max_map_count=$contrail::hugepages_number * 2 sysctl::value { 'vm.max_map_count': value =>",CWE-384,"{'reason': ""The 'grub2' provider used is for the Linux command line, not a kernel. The misconfiguration should be using the provider: 'kernel'. As long as the provider is correct, then the provided script is compliant to the CWE"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
466,"class openstack::ha::sahara ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = undef, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, } openstack::ha::haproxy_service { 'sahara': order => '150', listen_port => 8386, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'sahara-api', haproxy_config_options => { 'option' => 'http-buffer-request', 'timeout' => 'http-request 10s', 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, } }",1,1,"openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, }, openstack::ha::haproxy_service {'sahara': order => '150', listen_port => 8386, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service =>'sahara-api', haproxy_config_options => { 'option' => 'http-buffer-request', 'timeout' => 'http-request 10s', 'http-request' =>'set-header x-forwarded-proto https if { ssl_fc }', }, }","CWE-242, CWE-243, CWE-250, CWE-251, CWE-252, CWE-254, CWE-259, CWE-264, CWE-275, CWE-276","{'reason': 'Misconfiguration: [Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-264', 'is_misconfiguration_related': 'Yes'}"
467,"case $::osfamily { 'debian': { $ipv6 = false $gnocchi_enabled = false } 'redhat': { $ipv6 = true $gnocchi_enabled = true } default: { fail(""unsupported osfamily (${::osfamily})"") } } if ($::operatingsystem == 'ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) { $ssl_enabled = false } else { $ssl_enabled = true } include ::openstack_integration class { '::openstack_integration::config': ssl => $ssl_enabled, ipv6 => $ipv6, } include ::openstack_integration::cacert include ::openstack_integration::memcached include ::openstack_integration::rabbitmq include ::openstack_integration::mysql include ::openstack_integration::keystone class { '::openstack_integration::glance': backend => 'rbd', } include ::openstack_integration::neutron class { '::openstack_integration::nova': libvirt_rbd => true, } class { '::openstack_integration::cinder': backend => 'rbd', } include ::openstack_integration::ceilometer include ::openstack_integration::aodh include ::openstack_integration::gnocchi include ::openstack_integration::ceph include ::openstack_integration::provision class { '::openstack_integration::tempest': cinder => true, gnocchi => $gnocchi_enabled, ceilometer => true, aodh => true, }",1,1,"if ($::operatingsystem == 'ubuntu') and (versioncmp($::operatingsystemmajrelease, '16') >= 0) { $ssl_enabled = false } else { $ssl_enabled = true }, include ::openstack_integration::cacert, include ::openstack_integration::ceilometer, include ::openstack_integration::cinder, include ::openstack_integration::memcached, include ::openstack_integration::mysql, include ::openstack_integration::neutron, include ::openstack_integration::provision, include ::openstack_integration::rabbitmq, include ::openstack_integration::tempest",CWE-937,"{'reason': 'This is an example of a misconfiguration related to CWE-937. The script fails to check for the presence of the cinder, ceilometer, and gnocchi services before attempting to configure them. This leads to failures when executing the script on systems that do not have these services installed.', 'related_cwe': 'CWE-937: Use of Uninitialized Variable', 'is_misconfiguration_related': 'Yes'}"
468,"class osnailyfacter::ceph_nova_compute ( $rbd_secret_uuid = 'a5d0dd94-57c4-ae55-ffe0-7e3732a24455', $user = 'compute', $compute_pool = 'compute', $secret_xml = '/root/.secret_attrs.xml', $libvirt_images_type = 'rbd', ) { include ::nova::params service { $::nova::params::compute_service_name: } nova_config { 'libvirt/images_type': value => $libvirt_images_type; 'libvirt/inject_key': value => false; 'libvirt/inject_partition': value => '-2'; 'libvirt/images_rbd_pool': value => $compute_pool; 'libvirt/rbd_secret_uuid': value => $rbd_secret_uuid; 'libvirt/rbd_user': value => $user; } file { $secret_xml: content => template('osnailyfacter/ceph_secret.erb') } if ($::operatingsystem == 'ubuntu') and ($::operatingsystemrelease =~ /^16/) { $libvirt_service_name = 'libvirt-bin' } else { $libvirt_service_name = $::nova::params::libvirt_service_name } ensure_resource('service', 'libvirt', { ensure => 'running', name => $libvirt_service_name, }) exec {'set ceph rbd secret for nova': command => ""virsh secret-define --file ${secret_xml} && \ virsh secret-set-value --secret ${rbd_secret_uuid} \ --base64 $(ceph auth get-key client.${user})"", path => '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', unless => ""virsh secret-list | fgrep -qw ${rbd_secret_uuid}"", } nova_config<||> ~> service[$::nova::params::compute_service_name] file[$secret_xml] -> service['libvirt'] -> exec['set ceph rbd secret for nova'] }",0,1,"ensure_resource('service', 'libvirt', { ensure => 'running', name => $libvirt_service_name, }), if ($::operatingsystem == 'ubuntu') and ($::operatingsystemrelease =~ /^16/) { $libvirt_service_name = 'libvirt-bin' } else { $libvirt_service_name = $::nova::params::libvirt_service_name }, nova_config { 'libvirt/images_rbd_pool': value => $compute_pool;, nova_config { 'libvirt/images_type': value => $libvirt_images_type;, nova_config { 'libvirt/inject_key': value => false;, nova_config { 'libvirt/inject_partition': value => '-2';, nova_config { 'libvirt/rbd_secret_uuid': value => $rbd_secret_uuid;, nova_config { 'libvirt/rbd_user': value => $user;, nova_config<||> ~> service[$::nova::params::compute_service_name], service['libvirt'] -> exec['set ceph rbd secret for nova']","CWE-22, CWE-23, CWE-26, CWE-27, CWE-28, CWE-29, CWE-30, CWE-31, CWE-32, CWE-33","{'reason': 'The misconfiguration is related to the CWE, since it is injecting a new RBD secret with the UUID value into a Libvirt system in order to enable Nova to boot from Ceph. This has the potential to expose private data or lead to a man-in-the-middle attack. The misconfiguration is related to CWE-26, CWE-27, and CWE-29.', 'related_cwe': '26, 27, 29', 'is_misconfiguration_related': 'Yes'}"
469,"class crm( $dir, $site_name, $drupal_db, $civicrm_db, $db_user, $db_pass, ) { $repo = 'wikimedia/fundraising/crm' $base_url = ""http://${::crm::site_name}${::port_fragment}/"" include ::php include ::postfix include ::crm::apache include ::crm::civicrm include ::crm::tools include ::activemq git::clone { $repo: directory => $dir, } php::composer::install { 'crm-composer': directory => $dir, require => git::clone[$repo], } service::gitupdate { 'crm': dir => $dir, type => 'php', update => true, } package { 'ganglia-monitor': } class { 'crm::drupal': drupal_settings => { 'environment_indicator_enabled' => 1, 'environment_indicator_text' => 'development', 'environment_indicator_position' => 'left', 'environment_indicator_color' => ' 'amazon_audit_log_search_past_days' => 7, 'amazon_audit_recon_completed_dir' => '/var/spool/audit/amazon/completed', 'amazon_audit_recon_files_dir' => '/var/spool/audit/amazon/incoming/', 'amazon_audit_working_log_dir' => '/tmp/amazon_audit/', 'astropay_audit_log_search_past_days' => 7, 'astropay_audit_recon_completed_dir' => '/var/spool/audit/astropay/completed', 'astropay_audit_recon_files_dir' => '/var/spool/audit/astropay/incoming/', 'astropay_audit_working_log_dir' => '/tmp/astropay_audit/', 'banner_history_queue' => '/queue/banner-history', 'donationqueue_url' => ""tcp://${::activemq::hostname}:${::activemq::port}"", 'fredge_payments_antifraud_queue' => '/queue/payments-antifraud', 'fredge_payments_init_queue' => '/queue/payments-init', 'queue2civicrm_batch' => 5, 'queue2civicrm_batch_time' => 90, 'queue2civicrm_gateways_to_monitor' => 'adyen,amazon,astropay,globalcollect,paypal', 'queue2civicrm_gmetric_dmax' => 360, 'queue2civicrm_gmetric_tmax' => 60, 'queue2civicrm_subscription' => '/queue/donations', 'queue2civicrm_url' => ""tcp://${::activemq::hostname}:${::activemq::port}"", 'recurring_globalcollect_batch' => 1, 'recurring_globalcollect_batch_max' => 100, 'recurring_globalcollect_failure_retry_rate' => 1, 'recurring_globalcollect_failures_before_cancellation' => 3, 'recurring_globalcollect_run_missed_days' => 7, 'recurring_subscription' => '/queue/donations_recurring', 'refund_batch' => 0, 'refund_batch_time' => 90, 'refund_queue' => '/queue/refund', 'thank_you_days' => 14, 'thank_you_batch' => 100, 'unsubscribe_queue' => '/queue/unsubscribe', }, require => php::composer::install['crm-composer'], } }",1,1,"class { 'crm::drupal':, drupal_settings => {, include ::activemq, include ::crm::apache, include ::crm::civicrm, include ::crm::tools, include ::php, package { 'ganglia-monitor':, php::composer::install['crm-composer'], service::gitupdate { 'crm':","CWE-501, CWE-502","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
470,"class lma_collector::collectd::ceph_osd { lma_collector::collectd::python { 'ceph_osd_perf': config => { 'adminsocket' => '""/var/run/ceph/ceph-*.asok""', }, } }",0,0,lma_collector::collectd::python { 'ceph_osd_perf': config => { 'adminsocket' => ',"CWE-19, CWE-20, CWE-77, CWE-79","{'reason': 'CWE-19, CWE-20, CWE-77, CWE-79: CWE-77: 77: CWE-79: 79: CWE-20: 20: CWE-19: 19:', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
471,"class packages::mozilla::osslsigncode { case $::operatingsystem { centos: { realize(packages::yumrepo['osslsigncode']) package { ""osslsigncode"": ensure => ""1.7.1-1.el6""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"1.7.1-1, 1.7.1-1.el6\\\, 1.el6\, ensure => \\, fail(\, fail(\\, package \\, package \\\\, package { \, realize(packages::yumrepo['osslsigncode'])","CWE-732, CWE-798","{'reason': 'the misconfiguration is related to the CWE due to ensure in package declaration', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
472,"class magnum( $package_ensure = 'present', $notification_driver = $::os_service_default, $rpc_backend = 'rabbit', $rabbit_host = $::os_service_default, $rabbit_hosts = $::os_service_default, $rabbit_port = $::os_service_default, $rabbit_userid = $::os_service_default, $rabbit_virtual_host = $::os_service_default, $rabbit_password = $::os_service_default, $rabbit_use_ssl = $::os_service_default, $kombu_ssl_ca_certs = $::os_service_default, $kombu_ssl_certfile = $::os_service_default, $kombu_ssl_keyfile = $::os_service_default, $kombu_ssl_version = $::os_service_default, $purge_config = false, ) { include ::magnum::params include ::magnum::logging include ::magnum::policy include ::magnum::db package { 'magnum-common': ensure => $package_ensure, name => $::magnum::params::common_package, tag => ['openstack', 'magnum-package'], } resources { 'magnum_config': purge => $purge_config, } if $rpc_backend == 'rabbit' { if ! $rabbit_password { fail('please specify a rabbit_password parameter.') } oslo::messaging::rabbit { 'magnum_config': rabbit_userid => $rabbit_userid, rabbit_password => $rabbit_password, rabbit_virtual_host => $rabbit_virtual_host, rabbit_host => $rabbit_host, rabbit_port => $rabbit_port, rabbit_hosts => $rabbit_hosts, rabbit_use_ssl => $rabbit_use_ssl, kombu_ssl_version => $kombu_ssl_version, kombu_ssl_keyfile => $kombu_ssl_keyfile, kombu_ssl_certfile => $kombu_ssl_certfile, kombu_ssl_ca_certs => $kombu_ssl_ca_certs, } } else { magnum_config { 'default/rpc_backend': value => $rpc_backend } } oslo::messaging::notifications { 'magnum_config': driver => $notification_driver } }",1,1,"if! $rabbit_password { fail('please specify a rabbit_password parameter.') }, magnum_config { 'default/rpc_backend': value => $rpc_backend }, oslo::messaging::notifications {'magnum_config': driver => $notification_driver }, oslo::messaging::rabbit {'magnum_config': rabbit_password => $rabbit_password, rabbit_host => $rabbit_host, rabbit_port => $rabbit_port, rabbit_hosts => $rabbit_hosts, rabbit_use_ssl => $rabbit_use_ssl, kombu_ssl_version => $kombu_ssl_version, kombu_ssl_keyfile => $kombu_ssl_keyfile, kombu_ssl_certfile => $kombu_ssl_certfile, kombu_ssl_ca_certs => $kombu_ssl_ca_certs, }","CWE-259, CWE-284","{'reason': 'No direct correlation is found between the misconfiguration and the vulnerability. The misconfiguration relates to a different issue in Puppet that causes it to be invalid.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
473,"class neutron::db::sync( $extra_params = '--config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugin.ini', ) { include ::neutron::deps include ::neutron::params exec { 'neutron-db-sync': command => ""neutron-db-manage ${extra_params} upgrade heads"", path => '/usr/bin', refreshonly => true, logoutput => on_failure, subscribe => [ anchor['neutron::install::end'], anchor['neutron::config::end'], anchor['neutron::dbsync::begin'] ], notify => anchor['neutron::dbsync::end'], } }",1,1,"command =>, include ::neutron::deps include ::neutron::params, logoutput =>, notify =>, subscribe =>","CWE-18, CWE-19, CWE-20, CWE-93","{'reason': 'The misconfiguration is not related to CWE-18. The issue is related to CWE-19, CWE-20, and CWE-93. CWE-93 is an issue in this script that can be exploited if an adversary has access to a file in the system. CWE-19 and CWE-20 are the issue in the command value that are exploitable if an adversary has access to the file.', 'related_cwe': 'CWE-19, CWE-20, CWE-93', 'is_misconfiguration_related': 'No'}"
474,"stage { 'first': } -> stage['main'] -> stage { 'last': } $load_first = 0 $load_early = 5 $load_normal = 10 $load_later = 15 $load_last = 20 exec { logoutput => on_failure, timeout => 900, path => [ '/bin', '/sbin', '/usr/bin', '/usr/local/bin', '/usr/sbin' ], } service { ensure => running, enable => true, } package { ensure => present, } file { backup => false, } hiera_include('classes')",1,1,"exec { logoutput => on_failure, timeout => 900, path => [ \'/bin\', \'/sbin\', \'/usr/bin\', \'/usr/local/bin\', \'/usr/sbin\' ], }, file { backup => false, }, hiera_include('classes'), package { ensure => present, }, service { ensure => running, enable => true, }, stage { \'first\': } -> stage['main']","CWE-327, CWE-329, CWE-362, CWE-862","{'reason': 'This issue is related to the provided CWE because...', 'related_cwe': 'CWE-327, CWE-329, CWE-362, CWE-862', 'is_misconfiguration_related': 'Yes'}"
475,class { '::openstack_tasks::openstack_controller::keystone' :} warning('osnailyfacter/modular/./openstack-controller/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-controller/keystone.pp'),1,1,"class { '::openstack_tasks::openstack_controller::keystone' :}, warning('osnailyfacter/modular/./openstack-controller/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-controller/keystone.pp')",CWE-22,"{'reason': 'The warning message indicates a deprecated function which will be removed in the next release. Hence, this misconfiguration is related to the CWE.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
476,"class profile::mwelasticsearch { include ::nginx file { '/etc/nginx/sites/es.translatewiki.net': source => 'puppet:///modules/profile/es.translatewiki.net', require => package['nginx'], notify => service['nginx'], } class { 'elasticsearch': manage_repo => true, repo_version => '2.x', java_install => true, version => '2.3.4', } elasticsearch::instance { 'es-01': config => { 'network.host' => '::1', 'index.max_result_window' => '20000', }, init_defaults => { 'es_heap_size' => '12g', }, } elasticsearch::plugin { 'mobz/elasticsearch-head/latest': instances => 'es-01', } elasticsearch::plugin { 'org.wikimedia.search/extra/2.3.4': instances => 'es-01', } }",1,1,"class { 'elasticsearch':, elasticsearch::instance { 'es-01':, elasticsearch::plugin { 'org.wikimedia.search/extra/2.3.4':, file { '/etc/nginx/sites/es.translatewiki.net':, include ::nginx, java_install => true,, package['nginx'],\n      notify => service['nginx'],\n      }, require => package['nginx'],","CWE-248, CWE-249, CWE-256","{'reason': 'Description of how the misconfiguration is related to the CWE (use a descriptive, clear, and direct sentence)', 'related_cwe': 'CWE number related to the issue', 'is_misconfiguration_related': 'Yes'}"
477,"class role::pageassessments { mediawiki::extension { 'pageassessments': needs_update => true, } }",0,1,"class role::pageassessments { mediawiki::extension { 'pageassessments': needs_update => true, } }, mediawiki::extension { 'pageassessments': needs_update => true, }","CWE-120, CWE-252, CWE-259","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-120, CWE-252, CWE-259', 'is_misconfiguration_related': 'Yes'}"
478,"define lma_collector::logs::openstack ( $service_match = '.+', ) { include lma_collector::params include lma_collector::service::log include lma_collector::logs::openstack_decoder_splitter heka::input::logstreamer { $title: config_dir => $lma_collector::params::log_config_dir, log_directory => ""/var/log/${title}"", decoder => 'openstack', splitter => 'openstack', file_match => ""(?p<service>${service_match})\\.log\\.?(?p<seq>\\d*)$"", differentiator => ""['${title}', '_', 'service']"", priority => '[""^seq""]', require => class['lma_collector::logs::openstack_decoder_splitter'], notify => class['lma_collector::service::log'], } }",1,1,"file_match => \, file_match => \\, file_match => \\\, file_match => \\\\\\\, file_match => \\\\\\\\\\\\\\\\\\\, file_match => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file_matchservice_match = \'.+\',\n    }, {\n        \, splitter => 'openstack',\\n    file_match => \\",CWE-772,"{'reason': 'Please describe the reasoning here.', 'related_cwe': 'CWE-772', 'is_misconfiguration_related': 'Yes'}"
479,"class osnailyfacter::vmware::cinder_vmware { notice('modular: vmware/cinder_vmware.pp') $cinder_hash = hiera_hash('cinder', {}) if roles_include(['cinder-vmware']) { $debug = pick($cinder_hash['debug'], hiera('debug', true)) $volumes = get_cinder_vmware_data($cinder_hash['instances'], $debug) create_resources(vmware::cinder::vmdk, $volumes) } }",0,1,", class osnailyfacter::vmware::cinder_vmware {, create_resources(vmware::cinder::vmdk, $volumes), get_cinder_vmware_data($cinder_hash['instances'], $debug), if roles_include(['cinder-vmware']) {, }",CWE-306,"{'reason': 'The misconfiguration is caused by the creation of resources without proper data validation, which can lead to the creation of resources with invalid attributes. This issue can lead to the exploitation of the underlying application code and should be investigated.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
480,class { '::osnailyfacter::ceph::mon' :} class { '::osnailyfacter::upgrade::ceph_service' :},1,1,"class {'::osnailyfacter::ceph::mon' :}, class {'::osnailyfacter::upgrade::ceph_service' :}","CWE-20, CWE-362, CWE-502, CWE-77, CWE-772","{'reason': ""The two class statements being called are not part of the same code module. When two statements are not part of the same code module, this can cause an execution error. For instance, if a class is defined in an 'a.class.pp' file and a different class is defined in a 'b.class.pp' file, but then in a third file, a.pp, the classes are both declared using class {'::a::class' :}, class {'::b::class' :}, and a.pp also includes a::class.pp, which declares the first class, but not b.class.pp, which declares the second class. Since there are no conditional expressions or conditionals that could trigger execution of b.class, the a::class will never"", 'related_cwe': 'CWE-362, CWE-502, CWE-772', 'is_misconfiguration_related': 'Yes'}"
481,"class influxdb::configure ( $hostname = '', $auth_enabled = undef, $config_file = undef, $data_dir = undef, $meta_dir = undef, $wal_dir = undef, $hh_dir = undef, $snapshot = undef, $disable_anonymous_stats = true, $http_log_enabled = false, ) { ini_setting { ensure => present, path => $config_file, } ini_setting { 'admin_bind_address': section => 'admin', setting => 'bind-address', value => ""\""${hostname}:8083\"""", } ini_setting { 'http_auth_enabled': section => 'http', setting => 'auth-enabled', value => $auth_enabled, } ini_setting { 'http_log': section => 'http', setting => 'log-enabled', value => bool2str($http_log_enabled), } ini_setting { 'http_bind_address': section => 'http', setting => 'bind-address', value => ""\""${hostname}:8086\"""", } ini_setting { 'data_dir': section => 'data', setting => 'dir', value => ""\""${data_dir}\"""", } ini_setting { 'wal_dir': section => 'data', setting => 'wal-dir', value => ""\""${wal_dir}\"""", } ini_setting { 'hh_dir': section => 'hinted-handoff', setting => 'dir', value => ""\""${hh_dir}\"""", } ini_setting { 'meta_bind_address': section => 'meta', setting => 'bind-address', value => ""\""${hostname}:8088\"""", } ini_setting { 'meta_http_bind_address': section => 'meta', setting => 'http-bind-address', value => ""\""${hostname}:8091\"""", } ini_setting { 'meta_dir': section => 'meta', setting => 'dir', value => ""\""${meta_dir}\"""", } ini_setting { 'snapshot': section => 'snapshot', setting => 'enabled', value => $snapshot, } ini_setting { 'reporting-disabled': setting => 'reporting-disabled', value => bool2str($disable_anonymous_stats), } }",1,0,"class influxdb::configure, ini_setting {'admin_bind_address': section =>'admin', setting => 'bind-address', value => \, ini_setting {'admin_bind_address': section =>'admin', setting => 'bind-address', value => \\, ini_setting {'http_bind_address': section =>'http', setting => 'bind-address', value => \\, ini_setting {'http_log_enabled': section =>'http', setting => 'log-enabled', value => bool2str($http_log_enabled), }, ini_setting {'meta_bind_address': section =>'meta', setting => 'bind-address', value => \\, ini_setting {'meta_bind_address': section =>'meta', setting => 'bind-address', value => \\\\\\\\, ini_setting {'meta_http_bind_address': section =>'meta', setting => 'http-bind-address', value => \\, ini_setting {'meta_http_bind_address': section =>'meta', setting => 'http-bind-address', value => \\\\, ini_setting {'reporting-disabled': setting =>'reporting-disabled', value => bool2str($disable_anonymous_stats), }","CWE-16 - Improper Transaction of User-Initiated State Changes, CWE-78 - Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-835 - Incorrect Function Call Inside Appropriate Locale","{'reason': 'This vulnerability is relevant for users that want to protect the influxdb server by binding to 127.0.0.1 for the admin and http servers, instead of to all network interfaces. This is important when the influxdb server is running in an internet-facing environment. Without this protection, anyone can access the influxdb admin console or influxdb HTTP API endpoint.\\n\\nThis vulnerability has been previously described by [CWE-16](https://cwe.mitre.org/data/definitions/16.html) and [CWE-78](https://cwe.mitre.org/data/definitions/78.html).', 'related_cwe': 'CWE-16', 'is_misconfiguration_related': 'Yes'}"
482,"class barbican::api::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/barbican', $log_file = '/var/log/barbican/api.log', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, ) { oslo::log { 'barbican_config': debug => $debug, use_syslog => $use_syslog, use_stderr => $use_stderr, log_dir => $log_dir, syslog_log_facility => $log_facility, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_uuid_format => $instance_uuid_format, instance_format => $instance_format, } }",0,1,"log_date_format => $log_date_format, instance_uuid_format => $instance_uuid_format, instance_format => $instance_format, }],, logging_default_format_string => $logging_default_format_string,",CWE-778,"{'reason': 'This misconfiguration, if it were implemented, would have exposed the logs to the wrong format, which could have exposed user information. While the default settings would prevent any exposure, there could have been a misconfiguration issue where the format was changed.', 'related_cwe': 'CWE-778', 'is_misconfiguration_related': 'Yes'}"
483,"class zaqar::server( $manage_service = true, $enabled = true, ) { include ::zaqar include ::zaqar::params if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } if $manage_service { service { $::zaqar::params::service_name: ensure => $service_ensure, enable => $enabled, } zaqar_config<||> ~> service[$::zaqar::params::service_name] } }",0,1,"if $enabled {, if $manage_service {, include ::zaqar, include ::zaqar::params, service { $::zaqar::params::service_name: ensure => $service_ensure, enable => $enabled, }, zaqar_config<||> ~> service[$::zaqar::params::service_name]",CWE-295,"{'reason': ""No security implications were found with regards to the misconfiguration, since both the Puppet script and the LLM were found to have a correct logic flow. The Puppet script's conditional checks are all correct and do not expose a potential security issue. Therefore, the misconfiguration is not related to the CWE."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
484,"define pacemaker::property ( $property, $value = undef, $node = undef, $force = false, $ensure = present, $tries = 1, $try_sleep = 10, ) { if $property == undef { fail('must provide property') } if ($ensure == 'present') and $value == undef { fail('when present, must provide value') } if $node { if $ensure == absent { exec { ""removing node-property ${property} on ${node}"": command => ""/usr/sbin/pcs property unset --node ${node} ${property}"", onlyif => ""/usr/sbin/pcs property show | grep ${property}= | grep ${node}"", require => [exec['wait-for-settle'], class['::pacemaker::corosync']], tries => $tries, try_sleep => $try_sleep, } } else { if $force { $cmd = ""/usr/sbin/pcs property set --force --node ${node} ${property}=${value}"" } else { $cmd = ""/usr/sbin/pcs property set --node ${node} ${property}=${value}"" } exec { ""creating node-property ${property} on ${node}"": command => $cmd, unless => ""/usr/sbin/pcs property show ${property} | grep \""${property}=${value}\"" | grep ${node}"", require => [exec['wait-for-settle'], class['::pacemaker::corosync']], tries => $tries, try_sleep => $try_sleep, } } } else { if $ensure == absent { exec { ""removing cluster-wide property ${property}"": command => ""/usr/sbin/pcs property unset ${property}"", onlyif => ""/usr/sbin/pcs property show | grep ${property}: "", require => [exec['wait-for-settle'], class['::pacemaker::corosync']], tries => $tries, try_sleep => $try_sleep, } } else { if $force { $cmd = ""/usr/sbin/pcs property set --force ${property}=${value}"" } else { $cmd = ""/usr/sbin/pcs property set ${property}=${value}"" } exec { ""creating cluster-wide property ${property}"": command => $cmd, unless => ""/usr/sbin/pcs property show ${property} | grep \""${property} *[:=] *${value}\"""", require => [exec['wait-for-settle'], class['::pacemaker::corosync']], tries => $tries, try_sleep => $try_sleep, } } } }",1,1,"$cmd =, define pacemaker::property ( $property, $value = undef, $node = undef, $force = false, $ensure = present, $tries = 1, $try_sleep = 10, ), if $ensure == absent { exec {, if $force { $cmd =",CWE-502: Deserialization of Untrusted Data,"{'reason': 'Deserialization of Untrusted Data may allow attackers to execute arbitrary code on vulnerable systems.', 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
485,class { '::openstack_tasks::openstack_cinder::openstack_cinder' :} warning('osnailyfacter/modular/./openstack-cinder/openstack-cinder.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-cinder/openstack-cinder.pp'),0,1,"class { '::openstack_tasks::openstack_cinder::openstack_cinder' :}, warning('osnailyfacter/modular/./openstack-cinder/openstack-cinder.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-cinder/openstack-cinder.pp')","CWE-20, CWE-22","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
486,"class contrail::provision::db { exec { provider => 'shell', path => '/usr/bin:/bin:/sbin', } file { '/etc/contrail/vnc_api_lib.ini': content => template('contrail/vnc_api_lib.ini.erb') } notify {'waiting for contrail api':} -> exec {'wait_for_api': command => ""bash -c 'if ! [[ $(curl -s -o /dev/null -w \""%{http_code}\"" http://${contrail::contrail_mgmt_vip}:8082) =~ ^(200|401)$ ]];\ then exit 1; fi'"", tries => 10, try_sleep => 10, } -> exec { 'prov_database_node': command => ""python /opt/contrail/utils/provision_database_node.py \ --api_server_ip ${contrail::contrail_mgmt_vip} --api_server_port 8082 \ --oper add --host_name ${::fqdn} --host_ip ${contrail::address} \ --admin_user '${contrail::neutron_user}' --admin_tenant_name '${contrail::service_tenant}' --admin_password '${contrail::service_token}' \ && touch /opt/contrail/prov_database_node-done"", creates => '/opt/contrail/prov_database_node-done', } }",1,1,"creates => '/opt/contrail/prov_database_node-done', } }, exec { 'prov_database_node': command =>, exec {'prov_database_node': command =>, notify {'waiting for contrail api':} -> exec {'wait_for_api':",CWE-601,"{'reason': 'The misconfiguration is related to the CWE. The misconfiguration is the reason for this. The script fails to terminate. The creates attribute in the exec provider should be used to verify the script terminates. The create should have a value that does not exist prior to the script. The create ensures the script terminates. The script will never terminate if the create does not exist. The script will never terminate if the create exists.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
487,"class python::virtualenv::prerequisites { include python::virtualenv::settings anchor { 'python::virtualenv::prerequisites::begin': ; 'python::virtualenv::prerequisites::end': ; } anchor['python::virtualenv::prerequisites::begin'] -> python::misc_python_file { ""virtualenv.py"": ; } -> anchor['python::virtualenv::prerequisites::end'] anchor['python::virtualenv::prerequisites::begin'] -> python::misc_python_file { ""pip-${python::virtualenv::settings::pip_version}.tar.gz"": ; } -> anchor['python::virtualenv::prerequisites::end'] anchor['python::virtualenv::prerequisites::begin'] -> python::misc_python_file { ""distribute-0.6.24.tar.gz"": ; } -> anchor['python::virtualenv::prerequisites::end'] }",1,1,"distribute-0.6.24.tar.gz, pip-${python::virtualenv::settings::pip_version}.tar.gz, python::misc_python_file, python::virtualenv, python::virtualenv::prerequisites, python::virtualenv::prerequisites::begin, python::virtualenv::prerequisites::end, python::virtualenv::settings, python::virtualenv::settings::pip_version, virtualenv.py",CWE-259,"{'reason': 'The vulnerability is not related to this misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
488,"class midonet::params { $midonet_repo_baseurl = 'builds.midonet.org' $midonet_key_url = ""https://${midonet_repo_baseurl}/midorepo.key"" $midonet_faraday_package = 'tfm-rubygem-faraday' $midonet_multipart_post_package = 'tfm-rubygem-multipart-post' $foreman_releases_repo_url = 'http://yum.theforeman.org/releases/latest/el7/$basearch' $foreman_releases_repo_gpgkey = 'https://yum.theforeman.org/releases/latest/rpm-gpg-key-foreman' $mem_package = 'midonet-manager' $mem_install_path = '/var/www/html/midonet-manager' $mem_agent_config_api_namespace = 'conf' $mem_api_token = false $mem_api_version = '5.0' $mem_poll_enabled = true $mem_login_animation_enabled = true $mem_config_file = ""${mem_install_path}/config/client.js"" $mem_api_namespace = 'midonet-api' $mem_trace_namespace = 'trace' $mem_analytics_namespace = 'analytics' $mem_proxy_preserve_host = true $mem_apache_port = '80' $mem_apache_servername = $::ipaddress $mem_apache_docroot = '/var/www/html' $gem_bin_path = '/usr/bin/gem' }",1,1,"midonet::params { $mem_agent_config_api_namespace = 'conf', midonet::params { $mem_analytics_namespace = 'analytics', midonet::params { $mem_api_token = false, midonet::params { $mem_api_version = '5.0', midonet::params { $mem_config_file =, midonet::params { $mem_config_file = \, midonet::params { $mem_login_animation_enabled = true, midonet::params { $mem_poll_enabled = true, midonet::params { $mem_trace_namespace = 'trace'",CWE-120,"{'reason': 'The misconfiguration is related to CWE-120: Use of Hard-coded Credentials. Midonet-params, the module responsible for configuring the parameters for the Midonet manager module midonet, is vulnerable to CWE-120, as several parameters within this module are hard-coded. This vulnerability could be exploited by a potential threat actor to gain unauthorized access to the Midonet manager. The following parameters are impacted: $mem_agent_config_api_namespace, $mem_analytics_namespace, $mem_api_token, $mem_api_version, $mem_config_file, $mem_login_animation_enabled, $mem_poll_enabled, $mem_trace_namespace.', 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
489,"class vmware::controller ( $vcenter_settings = undef, $vcenter_host_ip = '10.10.10.10', $vcenter_user = 'user', $vcenter_password = 'password', $vlan_interface = undef, $vncproxy_host = undef, $vncproxy_protocol = 'http', $vncproxy_port = '6080', $vncproxy_path = '/vnc_auto.html', $use_quantum = false, ) { include ::nova::params $vncproxy_base_url = ""${vncproxy_protocol}://${vncproxy_host}:${vncproxy_port}${vncproxy_path}"" $computes_hash = parse_vcenter_settings($vcenter_settings) if ! defined(class['nova']) { exec { 'post-nova_config': command => '/bin/echo ""nova config has changed""', refreshonly => true, } exec { 'networking-refresh': command => '/sbin/ifdown -a ; /sbin/ifup -a', refreshonly => true, } package { 'nova-common': ensure => 'installed', name => 'binutils', } } $libvirt_type = hiera('libvirt_type', 'qemu') tweaks::ubuntu_service_override { 'nova-compute': package_name => ""nova-compute-${libvirt_type}"", } package { 'nova-compute': ensure => 'present', name => $::nova::params::compute_package_name, } service { 'nova-compute': ensure => 'stopped', name => $::nova::params::compute_service_name, enable => false, } create_resources(vmware::compute::ha, $computes_hash) package['nova-compute']-> service['nova-compute']-> vmware::compute::ha<||>-> class { '::vmware::network': use_quantum => $use_quantum, } nova_config { 'default/enabled_apis': value => 'ec2,osapi_compute,metadata'; 'vnc/novncproxy_base_url': value => $vncproxy_base_url; } -> service['nova-compute'] package { 'cirros-testvmware': ensure => present, } package { 'python-suds': ensure => present, } }",1,1,"exec { 'post-nova_config':, if! defined(class['nova']) { exec { 'networking-refresh': command => '/sbin/ifdown -a ; /sbin/ifup -a', refreshonly => true, }, if! defined(class['nova']) { exec { 'post-nova_config':, if! defined(class['nova']) { package { 'nova-common': ensure => 'installed', name => 'binutils', } }, nova_config { 'default/enabled_apis': value => 'ec2,osapi_compute,metadata';, package { 'cirros-testvmware': ensure => present, }, package { 'nova-compute': ensure => 'present', name => $::nova::params::compute_package_name, }, package { 'python-suds': ensure => present, }, service { 'nova-compute': ensure =>'stopped', name => $::nova::params::compute_service_name, enable => false, }, tweaks::ubuntu_service_override { 'nova-compute': package_name => \","CWE-613, CWE-732","{'reason': ""The configuration value 'vnc/novncproxy_base_url' is set incorrectly. Its value 'http://10.10.10.10:6080/vnc_auto.html' has been deprecated in recent versions of nova. This can cause authentication and authorization problems when trying to connect to vnc_auto.html."", 'related_cwe': 'CWE-613', 'is_misconfiguration_related': 'Yes'}"
490,"class plugin_zabbix::monitoring::keystone_mon { include plugin_zabbix::params if defined_in_state(class['keystone']) { plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app openstack keystone"": host => $plugin_zabbix::params::host_name, template => 'template app openstack keystone', api => $plugin_zabbix::monitoring::api_hash, } plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app openstack keystone api check"": host => $plugin_zabbix::params::host_name, template => 'template app openstack keystone api check', api => $plugin_zabbix::monitoring::api_hash, } plugin_zabbix::agent::userparameter { 'keystone.api.status': command => ""/etc/zabbix/scripts/check_api.py keystone http ${::internal_address} 5000""; 'keystone.service.api.status': command => ""/etc/zabbix/scripts/check_api.py keystone_service http ${::internal_address} 5000""; } } }",1,1,"class plugin_zabbix::monitoring::keystone_mon, if defined_in_state(class['keystone']), if defined_in_state(class['keystone']) { plugin_zabbix_template_link, include plugin_zabbix::params",CWE-200,"{'reason': '[The script includes an argument that is not a string, which is considered a common mistake when developing web applications. ]', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
491,"class packstack::netns ( $warning = 'kernel package with netns support has been installed.' ) { if $::netns_support != true { exec { 'netns_dependecy_install': path => '/usr/bin/', command => 'yum update -y kernel iputils iproute', timeout => 900, } notify { 'packstack_info': message => $warning, require => exec['netns_dependecy_install'], } } }",1,1,"class packstack::netns ( $warning = 'kernel package with netns support has been installed.' ) { if $::netns_support!= true { exec { 'netns_dependecy_install': path => '/usr/bin/', command => 'yum update -y kernel iputils iproute', timeout => 900, } notify { 'packstack_info': message => $warning, require => exec['netns_dependecy_install'], } } }, exec { 'netns_dependecy_install': path => '/usr/bin/', command => 'yum update -y kernel iputils iproute', timeout => 900, }, notify { 'packstack_info': message => $warning, require => exec['netns_dependecy_install'], }",CWE-22,"{'reason': 'Not enough context or documentation, no evidence of a security vulnerability', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
492,"class openstack_integration::rabbitmq { include ::openstack_integration::params include ::openstack_integration::config if $::openstack_integration::config::ssl { file { '/etc/rabbitmq/ssl/private': ensure => directory, owner => 'root', mode => '0755', selinux_ignore_defaults => true, before => file[""/etc/rabbitmq/ssl/private/${::fqdn}.pem""], } openstack_integration::ssl_key { 'rabbitmq': key_path => ""/etc/rabbitmq/ssl/private/${::fqdn}.pem"", require => file['/etc/rabbitmq/ssl/private'], notify => service['rabbitmq-server'], } class { '::rabbitmq': package_provider => $::package_provider, delete_guest_user => true, ssl => true, ssl_only => true, ssl_cacert => $::openstack_integration::params::ca_bundle_cert_path, ssl_cert => $::openstack_integration::params::cert_path, ssl_key => ""/etc/rabbitmq/ssl/private/${::fqdn}.pem"", environment_variables => $::openstack_integration::config::rabbit_env, repos_ensure => false, } } else { class { '::rabbitmq': package_provider => $::package_provider, delete_guest_user => true, environment_variables => $::openstack_integration::config::rabbit_env, repos_ensure => false, } } rabbitmq_vhost { '/': provider => 'rabbitmqctl', require => class['::rabbitmq'], } }",1,1,"file { '/etc/rabbitmq/ssl/private': ensure => directory, owner => 'root', mode => '0755', selinux_ignore_defaults => true, before => file[, rabbitmq_vhost { '/': provider => 'rabbitmqctl', require => class['::rabbitmq'], }","CWE-306: Missing Authentication for Critical Function, CWE-532: Incorrect Permission Assignment for Critical Resource","{'reason': 'This is a sample reason for a related misconfiguration.', 'related_cwe': 'CWE-1, CWE-2, CWE-3', 'is_misconfiguration_related': 'Yes'}"
493,"class virtual_accelerator::config inherits virtual_accelerator { $advanced_params = $virtual_accelerator::advanced_params file { '/etc/init/cpu-cgroup.conf': owner => 'root', group => 'root', mode => 0644, source => 'puppet:///modules/virtual_accelerator/cpu-cgroup.conf', } -> service { 'cpu-cgroup': ensure => 'running', } $fp_conf_file = ""/usr/local/etc/fast-path.env"" $hugepages_dir = ""/dev/hugepages"" exec { 'copy_template': command => ""cp /usr/local/etc/fast-path.env.tmpl ${fp_conf_file}"", } -> exec { 'set_hugepages_dir': command => ""config_va.sh hugepages_dir ${hugepages_dir}"", path => '/usr/local/bin/', } if $advanced_params == true { $custom_conf_file = $virtual_accelerator::va_conf_file if $custom_conf_file != '' and $custom_conf_file != undef { exec {'remove_old_conf': command => ""rm ${fp_conf_file}"", require => exec['set_fp_mem'], } -> file {""${fp_conf_file}"": ensure => file, content => $custom_conf_file, } } else { $vm_mem = $virtual_accelerator::vm_mem $fp_mem = $virtual_accelerator::fp_mem exec { 'set_vm_mem': command => ""config_va.sh vm_memory ${vm_mem}"", path => '/usr/local/bin/', } -> exec { 'set_fp_mem': command => ""config_va.sh fp_memory ${fp_mem}"", path => '/usr/local/bin/', } } $license_file = $virtual_accelerator::va_license_file if $license_file != '' and $license_file != undef { file {""/usr/local/etc/6wind_va.lic"": ensure => file, content => $license_file, } } } }",0,1,"ensure => 'running',, file { '/etc/init/cpu-cgroup.conf':, file { \, group => 'root',, if $advanced_params == true {, mode => 0644,, owner => 'root',, source => 'puppet:///modules/virtual_accelerator/cpu-cgroup.conf', } -> service { 'cpu-cgroup':",CWE-601,"{'reason': 'Puppet configuration of cpu-cgroup can be used to configure and run CPU cgroups.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
494,"class openstack_integration::sahara { include ::openstack_integration::config include ::openstack_integration::params rabbitmq_user { 'sahara': admin => true, password => 'an_even_bigger_secret', provider => 'rabbitmqctl', require => class['::rabbitmq'], } rabbitmq_user_permissions { 'sahara@/': configure_permission => '.*', write_permission => '.*', read_permission => '.*', provider => 'rabbitmqctl', require => class['::rabbitmq'], } class { '::sahara::db::mysql': password => 'sahara', } class { '::sahara::keystone::auth': public_url => ""http://${::openstack_integration::config::ip_for_url}:8386/v1.1/%(tenant_id)s"", internal_url => ""http://${::openstack_integration::config::ip_for_url}:8386/v1.1/%(tenant_id)s"", admin_url => ""http://${::openstack_integration::config::ip_for_url}:8386/v1.1/%(tenant_id)s"", password => 'a_big_secret', } class { '::sahara': host => $::openstack_integration::config::host, database_connection => 'mysql+pymysql://sahara:sahara@127.0.0.1/sahara?charset=utf8', rabbit_userid => 'sahara', rabbit_password => 'an_even_bigger_secret', rabbit_host => $::openstack_integration::config::ip_for_url, rabbit_port => $::openstack_integration::config::rabbit_port, rabbit_use_ssl => $::openstack_integration::config::ssl, rpc_backend => 'rabbit', admin_password => 'a_big_secret', admin_user => 'sahara', admin_tenant_name => 'services', debug => true, auth_uri => ""${::openstack_integration::config::keystone_admin_uri}/v2.0"", identity_uri => $::openstack_integration::config::keystone_admin_uri, memcached_servers => $::openstack_integration::config::memcached_servers, } class { '::sahara::service::api': api_workers => 2, } class { '::sahara::service::engine': } class { '::sahara::client': } class { '::sahara::notify': enable_notifications => true, } if $::osfamily == 'redhat' { sahara_node_group_template { 'master': ensure => present, plugin => 'vanilla', plugin_version => '2.7.1', flavor => 'm1.micro', node_processes => [ 'namenode', 'resourcemanager' ], } sahara_node_group_template { 'worker': ensure => present, plugin => 'vanilla', plugin_version => '2.7.1', flavor => 'm1.micro', node_processes => [ 'datanode', 'nodemanager' ], } sahara_cluster_template { 'cluster': ensure => present, node_groups => [ 'master:1', 'worker:2' ] } nova_flavor<||> -> sahara_node_group_template<||> class['::sahara::keystone::auth'] -> sahara_node_group_template<||> class['::openstack_extras::auth_file'] -> sahara_node_group_template<||> } }",1,1,"admin_password =>'a_big_secret',, include ::openstack_integration::params, password =>'a_big_secret',, password =>'an_even_bigger_secret',, password =>'sahara',, rabbit_password =>'an_even_bigger_secret',, rabbit_userid =>'sahara',",CWE-798: Use of Insufficiently Random Values,"{'reason': ""There is insufficient entropy used when generating passwords in sahara. When sahara's `rabbit_password` is used in a salt function, there is insufficient entropy in the resulting password."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
495,"class osnailyfacter::hosts::hosts { notice('modular: hosts/hosts.pp') $hosts_file = '/etc/hosts' $network_metadata = hiera_hash('network_metadata') $messaging_prefix = hiera('node_name_prefix_for_messaging') $host_resources = network_metadata_to_hosts($network_metadata) $messaging_host_resources = network_metadata_to_hosts($network_metadata, 'mgmt/messaging', $messaging_prefix) $host_hash = merge($host_resources, $messaging_host_resources) $deleted_nodes = hiera('deleted_nodes', []) $deleted_messaging_nodes = prefix($deleted_nodes, $messaging_prefix) host { target => $hosts_file } create_resources(host, $host_hash) if !empty($deleted_nodes) { ensure_resource(host, unique(concat($deleted_nodes, $deleted_messaging_nodes)), {ensure => absent}) } }",1,1,"create_resources(host, $host_hash), ensure_resource(host, unique(concat($deleted_nodes, $deleted_messaging_nodes)), {ensure => absent}), hiera('deleted_nodes', []), hiera('node_name_prefix_for_messaging'), hiera_hash('network_metadata'), if!empty($deleted_nodes) {, network_metadata_to_hosts($network_metadata), network_metadata_to_hosts($network_metadata,'mgmt/messaging', $messaging_prefix), prefix($deleted_nodes, $messaging_prefix)",CWE-532,"{'reason': 'This misconfiguration is related to the CWE since it involves deleting hosts that have been hiera_hashed. The correct approach should be to ensure the deleted_nodes hiera_hash contains the correct nodes and their prefixes and ensure they are properly defined before the hosts are deleted.\\n\\nAlso, the deleted_nodes hiera_hash should not be hiera_hashed on the hosts node.\\n\\nThe related_cwe for this misconfiguration would be 532.', 'related_cwe': 'CWE-532', 'is_misconfiguration_related': 'Yes'}"
496,"class base { class one { file { ""/tmp/fqparent1"": ensure => file } } } class two::three inherits base::one { file { ""/tmp/fqparent2"": ensure => file } } include two::three",1,1,"\, class base { class one {, class two::three inherits base::one {, ensure => file \\, ensure => file \\\\, file { \, file { \\, include two::three",CWE-284,"{'reason': '', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
497,"define oslo::messaging::notifications( $driver = $::os_service_default, $transport_url = $::os_service_default, $topics = $::os_service_default, ) { if !is_service_default($driver) { $driver_orig = join(any2array($driver), ',') } else { $driver_orig = $driver } if !is_service_default($topics) { $topics_orig = join(any2array($topics), ',') } else { $topics_orig = $topics } $notification_options = { 'oslo_messaging_notifications/driver' => { value => $driver_orig }, 'oslo_messaging_notifications/transport_url' => { value => $transport_url }, 'oslo_messaging_notifications/topics' => { value => $topics_orig }, } create_resources($name, $notification_options) }",0,1,"create_resources($name, $notification_options) } } }, define oslo::messaging::notifications( $driver = $::os_service_default, $transport_url = $::os_service_default, $topics = $::os_service_default, ) { if!is_service_default($driver) { $driver_orig = join(any2array($driver), ',') } else { $driver_orig = $driver } if!is_service_default($topics) { $topics_orig = join(any2array($topics), ',') } else { $topics_orig = $topics } $notification_options = { 'oslo_messaging_notifications/driver' => { value => $driver_orig }, 'oslo_messaging_notifications/transport_url' => { value => $transport_url }, 'oslo_messaging_notifications/topics' => { value => $topics_orig }, } create_resources($name, $notification_options) }, driver = $::os_service_default, \, if!is_service_default($driver) { $driver_orig = join(any2array($driver), ',') } else { $driver_orig = $driver } if!is_service_default($topics) { $topics_orig = join(any2array($topics), ',') } else { $topics_orig = $topics }, if!is_service_default($topics) { $topics_orig = join(any2array($topics), ',') } else { $topics_orig = $topics }, notification_options = { 'oslo_messaging_notifications/driver' => { value => $driver_orig }, \\, notification_options = { 'oslo_messaging_notifications/topics' => { value => $topics_orig }, \\\\\\\\\, notification_options = { 'oslo_messaging_notifications/transport_url' => { value => $transport_url }, \\\\, topics = $::os_service_default, \\, transport_url = $::os_service_default, \\",CWE-287,"{'reason': 'The given script is vulnerable to CWE-287 as it uses unsafe string functions and ignores string truncation and length limits.', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
498,"class trove::config ( $trove_config = {}, $trove_taskmanager_config = {}, $trove_conductor_config = {}, $trove_guestagent_config = {}, $trove_api_paste_ini = {}, ) { include ::trove::deps validate_hash($trove_config) validate_hash($trove_taskmanager_config) validate_hash($trove_conductor_config) validate_hash($trove_guestagent_config) validate_hash($trove_api_paste_ini) create_resources('trove_config', $trove_config) create_resources('trove_taskmanager_config', $trove_taskmanager_config) create_resources('trove_conductor_config', $trove_conductor_config) create_resources('trove_guestagent_config', $trove_guestagent_config) create_resources('trove_api_paste_ini', $trove_api_paste_ini) }",0,1,"create_resources('trove_api_paste_ini', $trove_api_paste_ini), create_resources('trove_conductor_config', $trove_conductor_config), create_resources('trove_config', $trove_config), create_resources('trove_guestagent_config', $trove_guestagent_config), create_resources('trove_taskmanager_config', $trove_taskmanager_config), include ::trove::deps, validate_hash($trove_api_paste_ini), validate_hash($trove_conductor_config), validate_hash($trove_config), validate_hash($trove_guestagent_config)",CWE-732 - Incorrect Permission Assignment for Critical Resource,"{'reason': ""Trove guestagent_config allows for users to create new users with a specific role.  By specifying a role and username for the new user, the guestagent will automatically create this user.  The misconfiguration is related to the CWE due to the fact that if we create a user with a specific role, we would be able to gain access to the guestagent with this role.\\n\\nFor example, the following would allow a user to create another user with a specific role:\\n\\n    trove::guestagent_config {\\n        'create-user': {\\n            'name': 'username',\\n            'role': 'admin'\\n        }\\n    }\\n\\nThis user would then be able to gain admin access and"", 'related_cwe': 'CWE-732 - Incorrect Permission Assignment for Critical Resource', 'is_misconfiguration_related': 'Yes'}"
499,"$data_dir = '/etc/hiera' $data = [ 'override/common', 'class/%{calling_class}', 'module/%{calling_module}', 'nodes', 'networks', 'astute', 'common', ] $astute_data_file = '/etc/fuel/astute.yaml' $hiera_main_config = '/etc/hiera.yaml' $hiera_puppet_config = '/etc/puppet/hiera.yaml' $hiera_data_file = ""${data_dir}/astute.yaml"" file { owner => 'root', group => 'root', } hiera_config { 'master_hiera_yaml': ensure => 'present', path => $hiera_main_config, data_dir => $data_dir, backends => ['yaml'], hierarchy_bottom => $data, logger => 'noop', merge_behavior => 'deeper', } file { 'hiera_data_dir' : ensure => 'directory', path => $data_dir, mode => '0750', } file { 'hiera_data_astute' : ensure => 'symlink', path => $hiera_data_file, target => $astute_data_file, } file { 'hiera_puppet_config' : ensure => 'symlink', path => $hiera_puppet_config, target => $hiera_main_config, } hiera_config['master_hiera_yaml'] -> file['hiera_puppet_config']",1,1,file['hiera_puppet_config'] -> hiera_config['master_hiera_yaml'],CWE-257,"{'reason': ""hiera_config['master_hiera_yaml'] and file['hiera_puppet_config'] should be merged in order to correctly link and share data, in this case, they are not merged."", 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
500,"class gnocchi::statsd ( $resource_id, $user_id, $project_id, $flush_delay, $archive_policy_name = undef, $manage_service = true, $enabled = true, $package_ensure = 'present', ) inherits gnocchi::params { gnocchi_config<||> ~> service['gnocchi-statsd'] package['gnocchi-statsd'] -> service['gnocchi-statsd'] package { 'gnocchi-statsd': ensure => $package_ensure, name => $::gnocchi::params::statsd_package_name, tag => ['openstack', 'gnocchi-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'gnocchi-statsd': ensure => $service_ensure, name => $::gnocchi::params::statsd_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => ['gnocchi-service', 'gnocchi-db-sync-service'], } gnocchi_config { 'statsd/resource_id' : value => $resource_id; 'statsd/user_id' : value => $user_id; 'statsd/project_id' : value => $project_id; 'statsd/archive_policy_name' : value => $archive_policy_name; 'statsd/flush_delay' : value => $flush_delay; } }",1,1,"gnocchi_config {'statsd/resource_id' : value => $resource_id;'statsd/user_id' : value => $user_id;'statsd/project_id' : value => $project_id;'statsd/archive_policy_name' : value => $archive_policy_name;'statsd/flush_delay' : value => $flush_delay; }, if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure ='stopped' } }, package { 'gnocchi-statsd': ensure => $package_ensure, name => $::gnocchi::params::statsd_package_name, tag => ['openstack', 'gnocchi-package'], }","CWE-120, CWE-20, CWE-22","{'reason': 'The Gnocchi Config resource_id, user_id, project_id, archive_policy_name, and flush_delay are all required fields that must be defined in order for the Gnocchi StatsD service to be successfully deployed. Additionally, if these fields are not defined, the StatsD service may not work as expected. Therefore, this misconfiguration is related to CWE-120.', 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
501,"class role::analytics { include ::apt include ::role::hadoop include ::role::hive include ::role::oozie include ::role::hue include ::role::spark include ::cdh::mahout include ::cdh::pig include ::cdh::sqoop file { '/etc/apt/preferences.d/cdh5': source => 'puppet:///modules/role/analytics/cdh5.apt-pin', owner => 'root', group => 'root', mode => '0444', before => package['zookeeper'], } }",0,1,"file { '/etc/apt/preferences.d/cdh5': source => 'puppet:///modules/role/analytics/cdh5.apt-pin', owner => 'root', group => 'root', mode => '0444', before => package['zookeeper'], }, include ::cdh::mahout, include ::cdh::pig, include ::cdh::sqoop, include ::cdh::zeppelin, include ::hbase::cdh5, include ::role::hbase, include ::role::hive, include ::role::oozie, include ::role::spark","CWE-20, CWE-22","{'reason': 'The `file` resource in the `role::analytics` class configures the APT preferences to use CDH5 repositories. This could allow attackers to add repositories, which are not authenticated or signed, and introduce malicious packages to a server. Therefore, this configuration is related to `CWE-20` and `CWE-22`.', 'related_cwe': 'CWE-20,CWE-22', 'is_misconfiguration_related': 'Yes'}"
502,"class one { @file { ""/tmp/colltest1"": content => ""one"" } @file { ""/tmp/colltest2"": content => ""two"" } } class two { file <| content == ""one"" |> } include one, two",0,1,"class one { @file { \, class one { \\\\, class two { \\, class two { file <| content == \, content => \, content => \\\\\\, file <| content == \\, include one, two\\, include one, two\\\\\\\\, two\\","CWE-915, CWE-916, CWE-918","{'reason': ""CWE-915 is related to this misconfiguration as Puppet users cannot use the pipe character ('|') for the glob in the filter expression. As a result, users can unintentionally be subject to CWE-916. Additionally, when using the pipe character ('|') for the glob in the filter expression, Puppet users are unable to use conditional statements such as if and else. Therefore, users cannot take different actions when a condition is or is not met. This is in contrast to other programming languages which utilize an if and else statement, which is why it is classified under CWE-918."", 'related_cwe': 'CWE-915, CWE-916, CWE-918', 'is_misconfiguration_related': 'Yes'}"
503,class tweaks::filesystem { if ($::virtual =~ /xen/) { case $::operatingsystem { centos: { sysctl::value { 'vm.dirty_writeback_centisecs': value => 6000; 'vm.dirty_expire_centisecs': value => 6000; 'vm.dirty_ratio': value => 40; 'vm.dirty_background_ratio': value => 1; } } } } },1,1,class tweaks::filesystem { if ($::virtual =~ /xen/) { case $::operatingsystem { centos: { sysctl::value { 'vm.dirty_writeback_centisecs': value => 6000; 'vm.dirty_expire_centisecs': value => 6000; 'vm.dirty_ratio': value => 40; 'vm.dirty_background_ratio': value => 1; } } } } },CWE-384,"{'reason': 'Please explain why this misconfiguration is related to the provided CWE. (Provide the detailed reasoning explaining why the misconfiguration is related to the CWE)', 'related_cwe': 'Please provide the related CWE(s) to the misconfiguration. (CWE number(s) related to the issue)', 'is_misconfiguration_related': 'Yes'}"
504,class { '::openstack_tasks::roles::cinder' :} warning('osnailyfacter/modular/./roles/cinder.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/cinder.pp'),1,1,class { '::openstack_tasks::roles::cinder' :} warning('osnailyfacter/modular/./roles/cinder.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/cinder.pp'),CWE-732: Incorrect Permission Assignment for Critical Resource,"{'reason': 'Reasoning', 'related_cwe': 'CWE #s', 'is_misconfiguration_related': 'Yes'}"
505,"define tripleo::firewall::rule ( $port = undef, $dport = undef, $sport = undef, $proto = 'tcp', $action = 'accept', $state = ['new'], $source = '0.0.0.0/0', $iniface = undef, $chain = 'input', $destination = undef, $extras = {}, ) { $basic = { 'port' => $port, 'dport' => $dport, 'sport' => $sport, 'proto' => $proto, 'action' => $action, 'state' => $state, 'source' => $source, 'iniface' => $iniface, 'chain' => $chain, 'destination' => $destination, } $rule = merge($basic, $extras) validate_hash($rule) create_resources('firewall', { ""${title}"" => $rule }) }",0,1,"create_resources('firewall', {, iniface = undef, 'chain = 'input', 'destination = undef, 'extras = {}, ) {",CWE-20,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
506,"define contrail::tor_agent ( $ovs_port, $ovs_protocol, $tor_device_name, $tor_vendor_name, $tor_mgmt_ip, $tor_tun_ip, $contrail_dev_ip = $::contrail::address, $tsn_vip_ip = $::contrail::address, $tor_id = $name, $contrail_discovery_server = $::contrail::contrail_private_vip, ) { file{""/etc/contrail/contrail-tor-agent-${name}.conf"": content => template('contrail/contrail-tor-agent.conf.erb') } file{""/etc/contrail/supervisord_vrouter_files/contrail-tor-agent-${name}.ini"": content => template('contrail/contrail-tor-agent.ini.erb') } if $ovs_protocol == 'pssl' { exec { ""generate_tor-${name}_cert"": provider => 'shell', path => '/usr/bin:/bin:/sbin', cwd => '/etc/contrail/', command => ""ovs-pki req+sign tor-${name}"", creates => ""/etc/contrail/tor-${name}-cert.pem"", require => exec['generate_ca_cert'], } } }",0,1,"pki_keytype': 'pssl_key',\n, command => \, exec {'remove_tor-${name}_cert': provider =>'shell', path => '/usr/bin:/bin:/sbin', cwd => '/etc/contrail/', command => 'ovs-pki req+sign tor-${name}', creates => '/etc/contrail/tor-${name}-cert.pem', requires => Class['contrail::tor_agent'], file{'/etc/contrail/supervisord_vrouter_files/contrail-tor-agent-${name}.ini': content => template('contrail/contrail-tor-agent.ini.erb')}, file{'/etc/contrail/supervisord_vrouter_files/contrail-tor-agent-${name}.ini':\\\\\\\\\\\\n\\\\\\\\\\\\n, file{'/etc/contrail/tor-${name}-ca.pem':\\\\\\\\n\\\\\\\\n, file{'/etc/contrail/tor-${name}-cert.pem':\\\\n\\\\n, file{'/etc/contrail/tor-${name}-key.pem':\\n\\n, if $ovs_protocol == 'pssl'\n{, requires => Class['contrail::tor_agent']",CWE-257,"{'reason': 'Misconfigurations are not considered a vulnerability or weakness. A misconfiguration occurs when someone makes a mistake, rather than a weakness. The code provided is not vulnerable to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
507,"class motd::base { include motd::settings include concat::setup $group = $::operatingsystem ? { darwin => wheel, default => root } concat { $motd::settings::motd_file: owner => root, group => $group, mode => filemode(0644); } concat::fragment { base-motd: target => $motd::settings::motd_file, content => ""unauthorized access prohibited\n"" } }",1,1,"class motd::base { include motd::settings include concat::setup $group = $::operatingsystem? { darwin => wheel, default => root } concat { $motd::settings::motd_file: owner => root, group => $group, mode => filemode(0644); } concat::fragment { base-motd: target => $motd::settings::motd_file, content => \\, concat { $motd::settings::motd_file: owner => root, group => $group, mode => filemode(0644); }, concat::fragment { base-motd: target => $motd::settings::motd_file, content => \, concat::fragment { base-motd: target => $motd::settings::motd_file, content => \\, concat::fragment { base-motd: target => $motd::settings::motd_file, content => \\\\, include concat::setup",CWE-778,"{'reason': ""The code line is using'motd::settings' as a variable and passing it to a variable 'target' as its value. This is vulnerable to CWE-778."", 'related_cwe': 'CWE-778', 'is_misconfiguration_related': 'Yes'}"
508,"class role::eventbus { require ::kafka require ::eventlogging require ::eventschemas include ::changeprop mediawiki::extension { 'eventbus': priority => $::load_early, settings => { wgeventserviceurl => 'http://localhost:8085/v1/events', }, } $outputs = [ 'kafka:///localhost:9092?async=false&topic=datacenter1.{meta[topic]}', 'file:///vagrant/logs/eventbus.log', ] eventlogging::service { 'eventbus': port => 8085, schemas_path => ""${::eventschemas::path}/jsonschema"", topic_config => ""${::eventschemas::path}/config/eventbus-topics.yaml"", outputs => $outputs, } }",0,1,"class role::eventbus { require ::kafka, eventlogging::service { 'eventbus': port => 8085, schemas_path =>, file:///vagrant/logs/eventbus.log, kafka:///localhost:9092?async=false&topic=datacenter1.{meta[topic]}, mediawiki::extension { 'eventbus': priority => $::load_early, settings => { wgeventserviceurl => 'http://localhost:8085/v1/events', }, }, outputs => $outputs, topic_config =>, }",CWE-248,"{'reason': 'CWE-248 (Leaking Sensitive Information via Application Logs) is related to the misconfiguration, because it contains sensitive information such as API keys and credentials that should not be leaked in application logs.', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
509,"class nova::cron::archive_deleted_rows ( $minute = 1, $hour = 0, $monthday = '*', $month = '*', $weekday = '*', $max_rows = '100', $user = 'nova', $destination = '/var/log/nova/nova-rowsflush.log' ) { include ::nova::deps cron { 'nova-manage db archive_deleted_rows': command => ""nova-manage db archive_deleted_rows --max_rows ${max_rows} >>${destination} 2>&1"", environment => 'path=/bin:/usr/bin:/usr/sbin shell=/bin/sh', user => $user, minute => $minute, hour => $hour, monthday => $monthday, month => $month, weekday => $weekday, require => anchor['nova::dbsync::end'] } }",1,1,"anchor['nova::dbsync::end'], environment => 'path=/bin:/usr/bin:/usr/sbin shell=/bin/sh', include ::nova::deps, month => $month, monthday => $monthday, require => anchor['nova::dbsync::end'], user => $user, weekday => $weekday",CWE-426,"{'reason': ""Cron job misconfiguration in the nova-manage db archive_deleted_rows command. It's a potential CWE-426 vulnerability due to using incorrect arguments in the nova-manage db archive_deleted_rows command. Also, it might expose private information such as the username (user = 'nova') and the log file destination (/var/log/nova/nova-rowsflush.log) to external users."", 'related_cwe': 'CWE-426', 'is_misconfiguration_related': 'Yes'}"
510,"class neutron::db::mysql ( $password, $dbname = 'neutron', $user = 'neutron', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ) { include ::neutron::deps validate_string($password) ::openstacklib::db::mysql { 'neutron': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } anchor['neutron::db::begin'] ~> class['neutron::db::mysql'] ~> anchor['neutron::db::end'] }",1,1,"allowed_hosts => $allowed_hosts,, collate => $collate,, password_hash => mysql_password($password),, user => $user,","CWE-259, CWE-522, CWE-787, CWE-798","{'reason': 'The use of a hard-coded password, `password_hash => mysql_password($password),`, may not meet the security requirements of a secure password.', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
511,"class pkgbuilder { include config case $operatingsystem { ubuntu: { include packages::cowbuilder include packages::debian_keyring file { ""/etc/pbuilderrc"": content => template(""${module_name}/pbuilderrc.erb""); ""/root/pbuilderrc"": ensure => absent; ""/usr/local/bin/puppetagain-build-deb"": source => ""puppet:///modules/${module_name}/puppetagain-build-deb"", mode => 0755; } pkgbuilder::base_cow { 'precise-i386': ; 'precise-amd64': ; 'trusty-i386': ; 'trusty-amd64': ; } } centos: { include packages::mock $users = join($config::admin_users, "","") exec { 'mock-group': require => class['packages::mock'], command => ""/bin/sed -i -e '/^mock:/s/^\(mock:[^:]*:[^:]*:\).*/\1$users/' /etc/group""; } file { ""/etc/mock"": ensure => directory, recurse => true, force => true, purge => true, source => ""puppet:///modules/${module_name}/mock-config""; } } default: { fail(""pkgbuilder is not spuported on $operatingsystem"") } } }",0,1,"class pkgbuilder { include config case $operatingsystem { ubuntu: { include packages::cowbuilder include packages::debian_keyring file { \, class pkgbuilder { include config case $operatingsystem { ubuntu: { include packages::cowbuilder include packages::debian_keyring file { \\, class pkgbuilder { include config case $operatingsystem { ubuntu: { include packages::cowbuilder include packages::debian_keyring file { \\\\\\, class pkgbuilder { include config case $operatingsystem { ubuntu: { include packages::cowbuilder include packages::debian_keyring file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file { \, file { \\, file { \\\\, file { \\\\\\\\\\\\\\\\, file {{'reason': ""When you look at the source of this code, it is very clear that the author has forgotten to use a trailing slash in the 'file' resource. This type of vulnerability could allow an attacker to bypass file restrictions on the system and access unauthorized resources. Additionally, it is a violation of the CWE standard to create a new directory in the same command, as this should be done in a separate command. Therefore, this misconfiguration is related to CWE-20."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
512,"class lma_collector::collectd::libvirt ( $connection = $lma_collector::params::libvirt_connection, $refresh_interval = 60, ) inherits lma_collector::params { validate_string($connection) class { 'collectd::plugin::libvirt': connection => $connection, hostname_format => 'uuid', refresh_interval => $refresh_interval, } }",0,1,"class { 'collectd::plugin::libvirt':, class { 'collectd::plugin::libvirt': connection => $connection, hostname_format => 'uuid', refresh_interval => $refresh_interval, }, refresh_interval => $refresh_interval, }, validate_string($connection)","CWE-120, CWE-125, CWE-807","{'reason': 'The provided script and misconfiguration have the potential to result in a CWE-807 vulnerability, which is the failure of a service to verify assertions about the data it handles before trusting it.', 'related_cwe': 'CWE-807', 'is_misconfiguration_related': 'Yes'}"
513,"class {{cookiecutter.project_name}}::db::sync( $extra_params = undef, ) { exec { '{{cookiecutter.project_name}}-db-sync': command => ""{{cookiecutter.project_name}}-manage db_sync ${extra_params}"", path => '/usr/bin', user => '{{cookiecutter.project_name}}', refreshonly => true, subscribe => [package['{{cookiecutter.project_name}}'], {{cookiecutter.project_name|capitalize}}_config['database/connection']], } exec['{{cookiecutter.project_name}}-manage db_sync'] ~> service<| title == '{{cookiecutter.project_name}}' |> }",1,1,"command => \, exec { '{{cookiecutter.project_name}}-db-sync':, exec['{{cookiecutter.project_name}}-manage db_sync'] ~> service<| title == '{{cookiecutter.project_name}}' |>, package['{{cookiecutter.project_name}}'],, refreshonly => true,, service<| title == '{{cookiecutter.project_name}}' |>, subscribe => [package['{{cookiecutter.project_name}}'], {{cookiecutter.project_name|capitalize}}_config['database/connection']],",CWE-22,"{'reason': 'The misconfiguration label is related to a more broad category of misconfiguration. This broad category includes all misconfigurations related to command execution. As such, we have chosen the most accurate and specific misconfiguration label in our model, CWE-22.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
514,"class cassandra( $logdir, $max_heap, $new_size ) { file { '/usr/local/share/datastax-pubkey.asc': source => 'puppet:///modules/cassandra/datastax-pubkey.asc', owner => 'root', group => 'root', before => file['/etc/apt/sources.list.d/datastax.sources.list'], notify => exec['add_datastax_apt_key'], } exec { 'add_datastax_apt_key': command => '/usr/bin/apt-key add /usr/local/share/datastax-pubkey.asc', before => file['/etc/apt/sources.list.d/datastax.sources.list'], refreshonly => true, } file { '/etc/apt/sources.list.d/datastax.sources.list': source => 'puppet:///modules/cassandra/datastax.sources.list', owner => 'root', group => 'root', notify => exec['apt-get update'], } file { '/etc/cassandra/cassandra-env.sh': content => template('cassandra/cassandra-env.sh.erb'), owner => 'root', group => 'root', require => package['cassandra'], notify => service['cassandra'], } file { '/etc/cassandra/cassandra.yaml': source => 'puppet:///modules/cassandra/cassandra.yaml', owner => 'root', group => 'root', require => package['cassandra'], notify => service['cassandra'], } file { '/etc/cassandra/logback.xml': content => template('cassandra/logback.xml.erb'), owner => 'root', group => 'root', require => package['cassandra'], notify => service['cassandra'], } file { $logdir: ensure => directory, mode => '0777', require => package['cassandra'], } require_package('openjdk-7-jre-headless') package { 'cassandra': ensure => latest, require => [ package['openjdk-7-jre-headless'], ], } service { 'cassandra': ensure => running, enable => true, require => [ file[ '/etc/cassandra/cassandra-env.sh', '/etc/cassandra/logback.xml', '/etc/cassandra/cassandra.yaml', $logdir ], ], } }",1,1,"file { $logdir: ensure => directory, mode => '0777', require => package['cassandra'], }, file { '/etc/cassandra/cassandra-env.sh': content => template('cassandra/cassandra-env.sh.erb'), owner => 'root', group => 'root', require => package['cassandra'], notify => service['cassandra'], }, file { '/etc/cassandra/cassandra.yaml': source => 'puppet:///modules/cassandra/cassandra.yaml', owner => 'root', group => 'root', require => package['cassandra'], notify => service['cassandra'], }, file { '/etc/cassandra/logback.xml': content => template('cassandra/logback.xml.erb'), owner => 'root', group => 'root', require => package['cassandra'], notify => service['cassandra'], }, service { 'cassandra': ensure => running, enable => true, require => [ file[ '/etc/cassandra/cassandra-env.sh', '/etc/cassandra/logback.xml', '/etc/cassandra/cassandra.yaml', $logdir ], ], }",CWE-732,"{'reason': ""The script is setting up Cassandra (Cassandra being a database) and configuring it. In this case, since the file mode is set to '0777', which is equivalent to the octal value 511, which means everyone has read/write/execute permissions on the file. This could allow an attacker to read sensitive information such as credentials for the Cassandra database. This is related to the following CWE, CWE-732."", 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
515,"class one { file { ""/tmp/multipleclassone"": content => ""one"" } } class one { file { ""/tmp/multipleclasstwo"": content => ""two"" } } include one",1,1,"class one { file { \, content => \, include one",CWE-22,"{'reason': 'The misconfiguration is due to the double definition of class one, which makes the script vulnerable to double definition of the content value.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
516,"define varnish::config( $source = undef, $content = undef, $order = 60, ) { include ::varnish $i = sprintf('%02d', $order) $path = ""${::varnish::confd}/${i}-${title}.vcl"" file { $path: source => $source, content => $content, mode => '0644', notify => service['varnish'], } file_line { ""${::varnish::conf}:${title}"": line => ""include \""${path}\"";"", path => $::varnish::conf, match => ""${::varnish::confd}/[0-9]+-${title}.vcl"", require => file[$path], notify => exec['varnish_sort_confd'], } }",1,1,"content => $content, exec['varnish_sort_confd'], file { $path: source => $source, content => $content, mode => '0644', notify => service['varnish'], }, file_line {, include ::varnish, order = 60, varnish::config( $source = undef, $content = undef, $order = 60, ) {",CWE-1024,"{'reason': 'In this case, there is no check for the existence of the provided $content value. If it is not present, the service will be stopped. This is a CWE-1024 vulnerability.', 'related_cwe': 'CWE-1024', 'is_misconfiguration_related': 'Yes'}"
517,"class mistral::cors ( $allowed_origin = $::os_service_default, $allow_credentials = $::os_service_default, $expose_headers = $::os_service_default, $max_age = $::os_service_default, $allow_methods = $::os_service_default, $allow_headers = $::os_service_default, ) { oslo::cors { 'mistral_config': allowed_origin => $allowed_origin, allow_credentials => $allow_credentials, expose_headers => $expose_headers, max_age => $max_age, allow_methods => $allow_methods, allow_headers => $allow_headers, } }",0,1,"allow_credentials => $allow_credentials,, allow_headers => $allow_headers,, allow_methods => $allow_methods,, allowed_origin => $allowed_origin,, expose_headers => $expose_headers,, max_age => $max_age,, oslo::cors {'mistral_config':, }",CWE-1031,"{'reason': ""This misconfiguration is related to the provided CWE because the'mistral_config' oslo::cors section of the script allows user input for multiple fields that control CORS settings and expose additional headers, methods, origins, and credentials."", 'related_cwe': 'CWE-1031', 'is_misconfiguration_related': 'Yes'}"
518,"class wikimetrics::web::apache($ensure = 'present') { class['::wikimetrics'] -> class['::wikimetrics::web::apache'] $config_directory = $::wikimetrics::config_directory $public_directory = $::wikimetrics::public_directory $site = 'wikimetrics' $docroot = ""${::wikimetrics::path}/wikimetrics"" $server_name = $::wikimetrics::server_name $server_port = $::wikimetrics::server_port $server_aliases = $::wikimetrics::server_aliases $ssl_redirect = $::wikimetrics::ssl_redirect include ::apache include ::apache::mod::wsgi include ::apache::mod::rewrite include ::apache::mod::headers include ::apache::mod::expires file { ""/etc/apache2/sites-available/${site}"": ensure => $ensure, content => template('wikimetrics/wikimetrics.vhost.erb'), require => class['::apache::mod::wsgi'], } if ($ensure == 'absent') { exec { ""apache_disable_${site}"": command => ""/usr/sbin/a2dissite -qf ${site}"", onlyif => ""/usr/bin/test -l /etc/apache2/sites-enabled/${site}"", notify => service['apache2'], require => package['apache2'], before => file[""/etc/apache2/sites-available/${site}""], } } else { exec { ""apache_enable_${site}"": command => ""/usr/sbin/a2ensite -qf ${site}"", unless => ""/usr/bin/test -l /etc/apache2/sites-enabled/${site}"", notify => service['apache2'], require => package['apache2'], subscribe => [ file[""/etc/apache2/sites-available/${site}""], file[""${config_directory}/web_config.yaml""], file[""${config_directory}/queue_config.yaml""], file[""${config_directory}/db_config.yaml""], ], } } }",1,1,"apache_disable_${site}, apache_enable_${site}, class wikimetrics::web::apache(\$ensure = 'present') {class['::wikimetrics'] -> class['::wikimetrics::web::apache'], exec { \, exec { \\, if (\\$ensure == 'absent') { exec { \, subscribe => [ file[\, subscribe => [ file[\\\, unless => \",CWE-772,"{'reason': 'The misconfiguration could be linked to a race condition in which a misconfigured site gets enabled before a valid site gets disabled.', 'related_cwe': 'CWE-772', 'is_misconfiguration_related': 'Yes'}"
519,"class shellprofile::settings { $profile_d = $::operatingsystem ? { windows => 'c:/windows/profile.d', default => '/etc/profile.d', } $profile_puppet_d = $::operatingsystem ? { windows => 'c:/windows/profile.puppet.d', default => '/etc/profile.puppet.d', } }",0,1,"class shellprofile::settings { $profile_d = $::operatingsystem? { windows => 'c:/windows/profile.d', default => '/etc/profile.d', } $profile_puppet_d = $::operatingsystem? { windows => 'c:/windows/profile.puppet.d', default => '/etc/profile.puppet.d', } }",CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"{'reason': 'The misconfiguration is related to CWE-78 because it is vulnerable to OS Command Injection. It is possible that an attacker could inject malicious commands into a shell script that is run using the profile.d mechanism. For example, the attacker could insert a command to download a file to the server using the curl utility, or run a command to list the contents of a directory. This could potentially allow the attacker to execute arbitrary code on the server with the privileges of the user that runs the shell script.', 'related_cwe': 'CWE-78', 'is_misconfiguration_related': 'Yes'}"
520,"define swift::ringbuilder::create( $part_power = 18, $replicas = 3, $min_part_hours = 24, $user = 'swift' ) { include ::swift::deps validate_re($name, '^object|container|account$') exec { ""create_${name}"": command => ""swift-ring-builder /etc/swift/${name}.builder create ${part_power} ${replicas} ${min_part_hours}"", path => ['/usr/bin'], user => $user, creates => ""/etc/swift/${name}.builder"", before => anchor['swift::config::end'], } }",0,1,"before => anchor['swift::config::end'],, command => \, command => \\, create_${name}:, creates => \, exec {\\, include ::swift::deps \\, path => \\\\, user => $user,\n, validate_re($name, '^object|container|account$') \\\\","CWE-20, CWE-306","{'reason': 'The validation of the name of the swift ringbuilder object must contain a maximum of 24 characters. It should be in the format of either object, container or account and be in lower case. This misconfiguration violates the principle of least privilege as it permits the validation of name which has the maximum allowed number of characters. It allows a mischievous actor to compromise the least privilege rule and inject a name that has more than 24 characters.', 'related_cwe': 'CWE-20, CWE-306', 'is_misconfiguration_related': 'Yes'}"
521,"class arcanist( $deploy_dir, ){ include ::php git::clone { 'libphutil': directory => ""${deploy_dir}/libphutil"", remote => 'https://secure.phabricator.com/diffusion/phu/libphutil.git', } git::clone { 'arcanist': directory => ""${deploy_dir}/arcanist"", remote => 'https://secure.phabricator.com/diffusion/arc/arcanist.git', } env::profile_script { 'add arcanist bin to path': content => ""export path=\$path:${deploy_dir}/arcanist/bin"", } service::gitupdate { 'libphutil': dir => ""${deploy_dir}/libphutil"", } service::gitupdate { 'arcanist': dir => ""${deploy_dir}/arcanist"", } }",1,1,"class arcanist( $deploy_dir, ){, env::profile_script { 'add arcanist bin to path':, git::clone { 'arcanist':, git::clone { 'libphutil':, service::gitupdate { 'arcanist':, service::gitupdate { 'libphutil':","CWE-275, CWE-276","{'reason': 'In this case, the CWEs 275 and 276 are relevant, as we have a service responsible for updating git submodules of the repositories, but we need to ensure that the service is only able to write in locations that it controls, in order to avoid the possibility of write access to unintended files, as described in CWE-275. Additionally, we need to ensure that the service is run with restricted permissions and privileges, as described in CWE-276. Both of these vulnerabilities are avoidable with careful configuration and management of services in Puppet, and could lead to serious security issues if left unaddressed.', 'related_cwe': 'CWE-275, CWE-276', 'is_misconfiguration_related': 'Yes'}"
522,"notice('fuel-plugin-elasticsearch-kibana: kibana_index_configuration.pp') $vip = hiera('lma::elasticsearch::vip') $es_port = hiera('lma::elasticsearch::rest_port') $kibana_index = hiera('lma::elasticsearch::kibana_index') haproxy_backend_status { 'elasticsearch': name => hiera('lma::elasticsearch::es_haproxy_service'), socket => '/var/lib/haproxy/stats', } lma_logging_analytics::es_template { 'kibana4': host => $vip, port => $es_port, index_template => $kibana_index, require => haproxy_backend_status['elasticsearch'], } class { 'lma_logging_analytics::kibana_dashboards': host => $vip, port => $es_port, index => $kibana_index, require => lma_logging_analytics::es_template['kibana4'], }",0,1,"index => $kibana_index, index_template => $kibana_index, name => hiera('lma::elasticsearch::vip'), port => $es_port, require => lma_logging_analytics::es_template['kibana4']",CWE-502: Deserialization of Untrusted Data,"{'reason': 'CWE-502: Deserialization of Untrusted Data', 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
523,"class packages::ia32libs { case $::operatingsystem { ubuntu: { case $::hardwaremodel { ""x86_64"": { package { ""ia32-libs"": ensure => latest; } } } } centos: { case $::hardwaremodel { ""x86_64"": { package { ""libstdc++.i686"": ensure => latest; ""zlib.i686"": ensure => latest; } } } } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"case $::operatingsystem { \\, class packages::ia32libs { case $::operatingsystem { \\, class packages::ia32libs { case $::operatingsystem { ubuntu: { case $::hardwaremodel { \, package { \, package { \\, package { \\\\","CWE-502, CWE-601","{'reason': 'Reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
524,class toplevel::server::buildmaster inherits toplevel::server { include security include nrpe::base include users::builder include dirs::builds::buildbot include packages::gcc include packages::make include packages::mercurial include packages::mysql_devel include packages::mozilla::git include packages::mozilla::python27 include packages::mozilla::py27_virtualenv include packages::mozilla::py27_mercurial include packages::patch assert { 'buildmaster-high-security': condition => $::security::high; } },0,1,"assert { 'buildmaster-high-security': condition => $::security::high; }, class toplevel::server::buildmaster inherits toplevel::server, include dirs::builds::buildbot, include nrpe::base, include packages::gcc, include packages::make, include packages::mercurial, include packages::mysql_devel, include security, include users::builder","CWE-259, CWE-732","{'reason': 'assert statement is misconfigured. It can be triggered as a side effect of running some other unrelated script that inherits from toplevel::server::buildmaster class. The trigger itself would be independent of the assertion statement in this case. The CWE is related to a vulnerability where a misconfigured assertion statement can be triggered as a side effect of running another script.', 'related_cwe': 'CWE-259, CWE-732', 'is_misconfiguration_related': 'Yes'}"
525,"define buildslave::install::version($active=false, $ensure=""present"") { $version = $title $virtualenv_path = $::operatingsystem ? { windows => ""c:\\mozilla-build\\buildbot-$version"", default => ""/tools/buildbot-$version"", } anchor { ""buildslave::install::version::${version}::begin"": ; ""buildslave::install::version::${version}::end"": ; } case $version { ""0.8.4-pre-moz2"", ""0.8.4-pre-moz3"", ""0.8.4-pre-moz4"", ""0.8.4-pre-moz5"", ""0.8.4-pre-moz6"": { include packages::mozilla::python27 $py_require = class['packages::mozilla::python27'] $packages = [ ""zope.interface==3.6.1"", ""buildbot-slave==$version"", ""buildbot==$version"", ""twisted==10.2.0"", ""simplejson==2.1.3"" ] } default: { fail(""unrecognized buildbot version $version"") } } case $ensure { present: { anchor[""buildslave::install::version::${version}::begin""] -> python::virtualenv { ""$virtualenv_path"": python => $::packages::mozilla::python27::python, require => $py_require, packages => $packages; } -> anchor[""buildslave::install::version::${version}::end""] if ($active) { case $::operatingsystem { windows: { file { ""c:/mozilla-build/bbpath.bat"": content => ""set buildbot_path=$virtualenv_path""; } windows_path { ""$virtualenv_path"": ensure => present; } } default: { anchor[""buildslave::install::version::${version}::begin""] -> file { ""/tools/buildbot"": ensure => ""link"", target => ""$virtualenv_path""; } -> anchor[""buildslave::install::version::${version}::end""] } } } } absent: { python::virtualenv { ""$virtualenv_path"": python => $::packages::mozilla::python27::python, packages => $packages, ensure => absent; } } } }",0,1,"buildslave::install::version, packages, packages => $packages, packages::mozilla::python27, python => $::packages::mozilla::python27::python, python::virtualenv, python::virtualenv { \, virtualenv","CWE-120, CWE-22, CWE-89","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
526,"class dirs::builds::logs { include dirs::builds include users::root include shared case $::operatingsystem { windows: { file { ""c:/builds/logs"": ensure => directory; } } default: { file { ""/builds/logs"" : ensure => directory, owner => ""root"", group => ""$users::root::group"", mode => 0755; } } } }",0,1,"ensure => directory;, file { \, file { \\, group => \\, group => \\\\, include shared, mode => 0755;, owner => \, owner => \\",CWE-250,"{'reason': 'Please explain why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
527,"class role::eventlogging { include ::role::geshi include ::apache::mod::proxy include ::apache::mod::proxy_http include ::apache::mod::headers apache::def { 'eldevserver': } include ::eventlogging::devserver mediawiki::extension { 'eventlogging': priority => $::load_early, settings => { wgeventloggingbaseuri => '//localhost:8080/event.gif', } } }",0,1,"apache::def { 'eldevserver': }, include ::apache::mod::headers, include ::apache::mod::proxy, include ::apache::mod::proxy_http, include ::eventlogging::devserver, include ::role::geshi, mediawiki::extension { 'eventlogging':, wgeventloggingbaseuri => '//localhost:8080/event.gif',","CWE-284, CWE-312","{'reason': 'Apache Proxy Configuration is misconfigured. See below.', 'related_cwe': 'CWE-284, CWE-312', 'is_misconfiguration_related': 'Yes'}"
528,"class lma_collector::logs::rabbitmq { include lma_collector::params include lma_collector::service::log $config_dir = $lma_collector::params::log_config_dir $lua_modules_dir = $lma_collector::params::lua_modules_dir heka::decoder::sandbox { 'rabbitmq': config_dir => $config_dir, filename => ""${lma_collector::params::plugins_dir}/decoders/rabbitmq.lua"" , module_directory => $lua_modules_dir, notify => class['lma_collector::service::log'], } heka::splitter::regex { 'rabbitmq': config_dir => $config_dir, delimiter => '\n\n(=[^=]+====)', delimiter_eol => false, notify => class['lma_collector::service::log'], } heka::input::logstreamer { 'rabbitmq': config_dir => $config_dir, decoder => 'rabbitmq', splitter => 'rabbitmq', log_directory => '/var/log/rabbitmq', file_match => 'rabbit@(?p<node>.+)\.log$', differentiator => '[""rabbitmq."", ""node""]', require => [heka::decoder::sandbox['rabbitmq'], heka::splitter::regex['rabbitmq']], notify => class['lma_collector::service::log'], } }",0,1,"config_dir => $config_dir,, file_match => 'rabbit@(?p<node>.+)\.log$',, file_match => 'rabbit@(?p<node>.+)\\.log$',, file_match => 'rabbit@(?p<node>.+)\\\\.log$',, file_match => 'rabbit@(?p<node>.+)\\\\\\\\.log$',, heka::input::logstreamer { 'rabbitmq':, heka::splitter::regex { 'rabbitmq':, log_directory => '/var/log/rabbitmq',","CWE-117 Improper Output Neutralization for Logs, CWE-20 Improper Input Validation, CWE-22 Uncontrolled Format String","{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
529,class { '::openstack_tasks::swift::storage' :} class { '::openstack_tasks::swift::proxy' :} class ceilometer {} include ceilometer class memcached {} include memcached warning('osnailyfacter/modular/swift/swift.pp is deprecated in mitaka and will be removed in newton. see new storage.pp and proxy.pp tasks')warning('osnailyfacter/modular/./swift/swift.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./swift/swift.pp'),1,1,"include ceilometer, include memcached, warning('osnailyfacter/modular/./swift/swift.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./swift/swift.pp'), warning('osnailyfacter/modular/swift/swift.pp is deprecated in mitaka and will be removed in newton. see new storage.pp and proxy.pp tasks')",CWE-117,"{'reason': ""These two warnings are the only misconfiguration found, and they don't seem to be related to a CWE."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
530,"define env::profile_script( $ensure = present, $priority = 50, $content = undef, $source = undef, ) { include ::env if $priority !~ /^\d?\d$/ { fail('""priority"" must be between 0 - 99') } if $ensure !~ /^(present|absent)$/ { fail('""ensure"" must be ""present"" or ""absent""') } $safe_name = regsubst($title, '[\w_]', '-', 'g') $script_file = sprintf('%02d-%s', $priority, $safe_name) file { ""/etc/profile.d/${script_file}.sh"": ensure => $ensure, content => $content, source => $source, } }",1,1,"content => $content,, ensure => $ensure,, file { \, if $ensure!~ /^(present|absent)$/ {, if $priority!~ /[^0-9]/ && $priority < 99 && $priority > 0 {, if $priority!~ /^\\d?\\d$/ {, include ::env, source => $source,, }","CWE-20, CWE-248, CWE-250, CWE-252","{'reason': 'The vulnerability in this line occurs when the ensure argument is passed without the present or absent string.', 'related_cwe': 'CWE-20,CWE-248,CWE-250,CWE-252', 'is_misconfiguration_related': 'Yes'}"
531,"class openstack_integration::aodh { include ::openstack_integration::config include ::openstack_integration::params rabbitmq_user { 'aodh': admin => true, password => 'an_even_bigger_secret', provider => 'rabbitmqctl', require => class['::rabbitmq'], } rabbitmq_user_permissions { 'aodh@/': configure_permission => '.*', write_permission => '.*', read_permission => '.*', provider => 'rabbitmqctl', require => class['::rabbitmq'], } rabbitmq_user_permissions['aodh@/'] -> service<| tag == 'aodh-service' |> if $::openstack_integration::config::ssl { openstack_integration::ssl_key { 'aodh': notify => service['httpd'], require => package['aodh'], } exec['update-ca-certificates'] ~> service['httpd'] } if $::osfamily == 'redhat' { $gnocchi_url = ""${::openstack_integration::config::ip_for_url}:8041"" } else { $gnocchi_url = undef } class { '::aodh': rabbit_userid => 'aodh', rabbit_password => 'an_even_bigger_secret', rabbit_port => $::openstack_integration::config::rabbit_port, rabbit_use_ssl => $::openstack_integration::config::ssl, debug => true, rabbit_host => $::openstack_integration::config::ip_for_url, database_connection => 'mysql+pymysql://aodh:aodh@127.0.0.1/aodh?charset=utf8', gnocchi_url => $gnocchi_url, } class { '::aodh::db::mysql': password => 'aodh', } class { '::aodh::keystone::auth': public_url => ""${::openstack_integration::config::base_url}:8042"", internal_url => ""${::openstack_integration::config::base_url}:8042"", admin_url => ""${::openstack_integration::config::base_url}:8042"", password => 'a_big_secret', } class { '::aodh::keystone::authtoken': password => 'a_big_secret', user_domain_name => 'default', project_domain_name => 'default', auth_url => $::openstack_integration::config::keystone_admin_uri, auth_uri => $::openstack_integration::config::keystone_auth_uri, memcached_servers => $::openstack_integration::config::memcached_servers, } class { '::aodh::api': enabled => true, service_name => 'httpd', } include ::apache class { '::aodh::wsgi::apache': bind_host => $::openstack_integration::config::ip_for_url, ssl => $::openstack_integration::config::ssl, ssl_key => ""/etc/aodh/ssl/private/${::fqdn}.pem"", ssl_cert => $::openstack_integration::params::cert_path, workers => 2, } class { '::aodh::auth': auth_url => ""${::openstack_integration::config::keystone_auth_uri}/v2.0"", auth_password => 'a_big_secret', } class { '::aodh::client': } class { '::aodh::notifier': } class { '::aodh::listener': } class { '::aodh::evaluator': } class { '::aodh::db::sync': } }",1,1,"a_big_secret',, auth_password => 'a_big_secret', password => 'aodh',, rabbit_userid => 'aodh',, rabbitmq_user_permissions['aodh@/'] -> service<| tag == 'aodh-service' |>","CWE-259, CWE-345","{'reason': ""This configuration error is related to CWE-259. Aodh's keystone::authtoken configuration is set to `auth_password` of `a_big_secret`. This token is leaked in the `auth_url`, `auth_uri`, and `memcached_servers` configuration, which is also visible. Aodh's keystone::auth configuration has the `password` set to `a_big_secret` and its value is accessible to the public. Aodh's keystone::authtoken and keystone::auth configurations are responsible for authenticating Aodh to the Keystone server. In this case, `auth_url` and `auth_uri` leak Aodh's access token value. If the token is used for sensitive operations"", 'related_cwe': 'CWE-259, CWE-345', 'is_misconfiguration_related': 'Yes'}"
532,"define oslo::db( $sqlite_db = $::os_service_default, $sqlite_synchronous = $::os_service_default, $backend = $::os_service_default, $connection = $::os_service_default, $slave_connection = $::os_service_default, $mysql_sql_mode = $::os_service_default, $idle_timeout = $::os_service_default, $min_pool_size = $::os_service_default, $max_pool_size = $::os_service_default, $max_retries = $::os_service_default, $retry_interval = $::os_service_default, $max_overflow = $::os_service_default, $connection_debug = $::os_service_default, $connection_trace = $::os_service_default, $pool_timeout = $::os_service_default, $use_db_reconnect = $::os_service_default, $db_retry_interval = $::os_service_default, $db_inc_retry_interval = $::os_service_default, $db_max_retry_interval = $::os_service_default, $db_max_retries = $::os_service_default, $use_tpool = $::os_service_default, ){ include ::oslo::params if !is_service_default($connection) { validate_re($connection, '^(sqlite|mysql(\+pymysql)?|postgresql|mongodb):\/\/(\s+:\s+@\s+\/\s+)?') case $connection { /^mysql(\+pymysql)?:\/\//: { require '::mysql::bindings' require '::mysql::bindings::python' if $connection =~ /^mysql\+pymysql/ { $backend_package = $::oslo::params::pymysql_package_name } else { $backend_package = false } } /^postgresql:\/\//: { $backend_package = false require '::postgresql::lib::python' } /^mongodb:\/\//: { $backend_package = $::oslo::params::pymongo_package_name } /^sqlite:\/\//: { $backend_package = $::oslo::params::sqlite_package_name } default: { fail('unsupported backend configured') } } if $backend_package and !defined(package[$backend_package]) { package { 'db_backend_package': ensure => present, name => $backend_package, tag => 'openstack', } } } $database_options = { 'database/sqlite_db' => { value => $sqlite_db }, 'database/sqlite_synchronous' => { value => $sqlite_synchronous }, 'database/backend' => { value => $backend }, 'database/connection' => { value => $connection, secret => true }, 'database/slave_connection' => { value => $slave_connection, secret => true }, 'database/mysql_sql_mode' => { value => $mysql_sql_mode }, 'database/idle_timeout' => { value => $idle_timeout }, 'database/min_pool_size' => { value => $min_pool_size }, 'database/max_pool_size' => { value => $max_pool_size }, 'database/max_retries' => { value => $max_retries }, 'database/retry_interval' => { value => $retry_interval }, 'database/max_overflow' => { value => $max_overflow }, 'database/connection_debug' => { value => $connection_debug }, 'database/connection_trace' => { value => $connection_trace }, 'database/pool_timeout' => { value => $pool_timeout }, 'database/use_db_reconnect' => { value => $use_db_reconnect }, 'database/db_retry_interval' => { value => $db_retry_interval }, 'database/db_inc_retry_interval' => { value => $db_inc_retry_interval }, 'database/db_max_retry_interval' => { value => $db_max_retry_interval }, 'database/db_max_retries' => { value => $db_max_retries }, 'database/use_tpool' => { value => $use_tpool }, } create_resources($name, $database_options) }",1,1,", connection_debug = $::os_service_default,, connection_debug = $::os_service_default, 'database/connection_debug' => { value => $connection_debug },, db_inc_retry_interval = $::os_service_default,, db_inc_retry_interval = $::os_service_default, 'database/db_inc_retry_interval' => { value => $db_inc_retry_interval },, db_max_retries = $::os_service_default, 'database/db_max_retries' => { value => $db_max_retries },, use_db_reconnect = $::os_service_default,, use_db_reconnect = $::os_service_default, 'database/use_db_reconnect' => { value => $use_db_reconnect },, use_tpool = $::os_service_default, 'database/use_tpool' => { value => $use_tpool },",0,"{'reason': 'The misconfiguration is related to CWE-352, CWE-754', 'related_cwe': '352 754', 'is_misconfiguration_related': 'Yes'}"
533,"class cdh::spark( $master_host = undef, $worker_cores = undef, $worker_memory = undef, $worker_instances = undef, $daemon_memory = undef, $dynamic_allocation_enabled = true, $dynamic_allocation_executor_idle_timeout = '60s', $dynamic_allocation_cached_executor_idle_timeout = '3600s', ) { class['cdh::hadoop'] -> class['cdh::spark'] $standalone_enabled = $master_host ? { undef => false, default => true, } if $standalone_enabled and $dynamic_allocation_enabled { fail('spark dynamic resource allocation is only available in yarn mode.') } package { ['spark-core', 'spark-python']: ensure => 'installed', } $config_directory = ""/etc/spark/conf.${cdh::hadoop::cluster_name}"" file { $config_directory: ensure => 'directory', require => package['spark-core'], } cdh::alternative { 'spark-conf': link => '/etc/spark/conf', path => $config_directory, } if !$standalone_enabled or $master_host == $::fqdn { cdh::hadoop::directory { '/user/spark': owner => 'spark', group => 'spark', mode => '0755', require => package['spark-core'], } cdh::hadoop::directory { '/user/spark/share': owner => 'spark', group => 'spark', mode => '0755', require => cdh::hadoop::directory['/user/spark'], } cdh::hadoop::directory { '/user/spark/share/lib': owner => 'spark', group => 'spark', mode => '0755', require => cdh::hadoop::directory['/user/spark/share'], } cdh::hadoop::directory { ['/user/spark/applicationhistory']: owner => 'spark', group => 'spark', mode => '1777', require => cdh::hadoop::directory['/user/spark'], } } $namenode_address = $::cdh::hadoop::ha_enabled ? { true => $cdh::hadoop::nameservice_id, default => $cdh::hadoop::primary_namenode_host, } if !$standalone_enabled { $spark_jar_hdfs_path = ""hdfs://${namenode_address}/user/spark/share/lib/spark-assembly.jar"" exec { 'spark_assembly_jar_install': command => ""/usr/bin/hdfs dfs -put -f /usr/lib/spark/lib/spark-assembly.jar ${spark_jar_hdfs_path}"", unless => '/usr/bin/hdfs dfs -ls /user/spark/share/lib/spark-assembly.jar | grep -q /user/spark/share/lib/spark-assembly.jar', user => 'spark', require => cdh::hadoop::directory['/user/spark/share/lib'], before => [ file[""${config_directory}/spark-env.sh""], file[""${config_directory}/spark-defaults.conf""] ], } } file { ""${config_directory}/spark-env.sh"": content => template('cdh/spark/spark-env.sh.erb'), } file { ""${config_directory}/spark-defaults.conf"": content => template('cdh/spark/spark-defaults.conf.erb'), } file { ""${config_directory}/log4j.properties"": source => 'puppet:///modules/cdh/spark/log4j.properties', } $hive_site_symlink_ensure = defined(class['cdh::hive']) ? { true => 'link', default => 'absent' } file { ""${config_directory}/hive-site.xml"": ensure => $hive_site_symlink_ensure, target => ""${::cdh::hive::config_directory}/hive-site.xml"", } }",1,1,"file { $config_directory: ensure => 'directory', require => package['spark-core'], }, package { ['spark-core','spark-python']: ensure => 'installed', }",CWE-327,"{'reason': 'The reason for the misconfiguration is [Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
534,"class swift::xfs { include ::swift::deps $packages = ['xfsprogs', 'parted'] ensure_packages($packages) }",1,1,"class swift::xfs, ensure_packages, include ::swift::deps, packages = ['xfsprogs', 'parted']",CWE-306,"{'reason': 'Include the correct packages for the swift::xfs class.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
535,"define sudoers::customfile($content) { include sudoers if $::operatingsystem != 'windows' { concat::fragment { ""10-$title"": target => ""/etc/sudoers"", content => $content; } } }",1,1,"concat::fragment { \, concat::fragment { \\, content => \\\, content => \\\\\\\\\\, content => \\\\\\\\\\\, include sudoers if \\\, target => \\, target => \\\\",CWE-22,"{'reason': 'Reasoning', 'related_cwe': 'CWE number(s)', 'is_misconfiguration_related': 'Yes/No'}"
536,"class cluster::vrouter_ocf ( $other_networks = false, ) { $service_name = 'p_vrouter' $primitive_type = 'ns_vrouter' $complex_type = 'clone' $complex_metadata = { 'interleave' => true, } $metadata = { 'migration-threshold' => '3', 'failure-timeout' => '120', } $parameters = { 'ns' => 'vrouter', 'other_networks' => ""${other_networks}"", } $operations = { 'monitor' => { 'interval' => '30', 'timeout' => '60' }, 'start' => { 'interval' => '0', 'timeout' => '30' }, 'stop' => { 'interval' => '0', 'timeout' => '60' }, } service { $service_name : ensure => 'running', enable => true, hasstatus => true, hasrestart => true, provider => 'pacemaker', } pacemaker::service { $service_name : primitive_type => $primitive_type, parameters => $parameters, metadata => $metadata, operations => $operations, complex_metadata => $complex_metadata, complex_type => $complex_type, prefix => false, } }",1,1,"class cluster::vrouter_ocf ( $other_networks = false, ), class cluster::vrouter_ocf ( $other_networks = false, ) {, complex_type => $complex_type,, pacemaker::service { $service_name : primitive_type => $primitive_type,, parameters => $parameters,, prefix => false, }, service { $service_name : ensure => 'running', enable => true, hasstatus => true, hasrestart => true, provider => 'pacemaker', }",CWE-352,"{'reason': ""The 'interleave' option specified in the metadata variable is used to control which of a cluster's primary and secondary nodes that resources are allocated to. Setting this to true indicates that the allocation can happen on any node that is not failed. In this case, the 'ns_vrouter' primitive will allocate resources based on availability of the vrouter service, which means that there is no guarantee that resources will be allocated to the node that the cluster member is currently on."", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
537,"class osnailyfacter::dnsmasq ( $external_dns, $master_ip, $management_vrouter_vip, ) { $package_name = $osfamily ? { /(redhat|centos)/ => 'dnsmasq', /(debian|ubuntu)/ => 'dnsmasq-base', default => 'dnsmasq', } ensure_packages($package_name) validate_array($external_dns) file { '/etc/dnsmasq.d': ensure => directory, } file { '/etc/resolv.dnsmasq.conf': ensure => present, content => template('osnailyfacter/resolv.dnsmasq.conf.erb'), } -> file { '/etc/dnsmasq.d/dns.conf': ensure => present, content => template('osnailyfacter/dnsmasq.conf.erb'), } }",1,1,"dnsmasq, dnsmasq.conf.erb, template('osnailyfacter/dnsmasq.conf.erb'), template('osnailyfacter/resolv.dnsmasq.conf.erb')","CWE-78, CWE-79","{'reason': ""The 'template' function is used in the template('osnailyfacter/dnsmasq.conf.erb') and template('osnailyfacter/resolv.dnsmasq.conf.erb') files. The 'template' function is a built-in function in puppet that allows us to insert a template within a string. The 'dnsmasq.conf.erb' and'resolv.dnsmasq.conf.erb' templates are used to insert a template within a string. This is a template injection vulnerability, which could allow an attacker to execute arbitrary code on the target machine."", 'related_cwe': 'CWE-78, CWE-79', 'is_misconfiguration_related': 'Yes'}"
538,class env { },0,1,"class env {, file { '/etc/shadow':, file { '/tmp/pass.txt':, include stdlib","CWE-122, CWE-20, CWE-22","{'reason': ""File '/etc/shadow' is created with incorrect permissions, CWE-22 is applicable"", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
539,"class osnailyfacter::atop ( $service_enabled = true, $service_state = $service_enabled ? { false => 'stopped', default => 'running' }, $interval = '20', $logpath = '/var/log/atop', $rotate = '7', $custom_acct_file = undef, ) { case $::osfamily { 'debian': { $conf_file = '/etc/default/atop' $acct_package = 'acct' } 'redhat': { $conf_file = '/etc/sysconfig/atop' $acct_package = 'psacct' } default: { fail(""unsupported platform: ${::osfamily}/${::operatingsystem}"") } } $atop_retention = '/etc/cron.daily/atop_retention' $atop_retention_ensure = $service_enabled ? { false => 'absent', default => 'file' } file { ensure => file, owner => 'root', group => 'root', mode => '0600' } if $custom_acct_file { validate_absolute_path($custom_acct_file) $acct_file_dir = dirname($custom_acct_file) file { $acct_file_dir: ensure => directory, } -> file { $custom_acct_file: } ~> exec { 'turns process accounting on': path => ['/sbin', '/usr/sbin'], command => ""accton ${custom_acct_file}"", refreshonly => true, } package[$acct_package] -> exec['turns process accounting on'] -> service['atop'] } package { ['atop', $acct_package]: ensure => 'installed', } -> file { $conf_file: mode => '0644', content => template('osnailyfacter/atop.erb'), } ~> service { 'atop': ensure => $service_state, enable => $service_enabled, } -> file { $atop_retention: ensure => $atop_retention_ensure, mode => '0755', content => template('osnailyfacter/atop_retention.erb'), } if $service_enabled { exec { 'initialize atop_current': command => $atop_retention, refreshonly => true, subscribe => file[$atop_retention], } } }",1,1,"$atop_retention_ensure = $service_enabled? { false => 'absent', default => 'file' }, exec { 'initialize atop_current': command => $atop_retention, refreshonly => true, subscribe => file[$atop_retention], } } ->, if $custom_acct_file { validate_absolute_path($custom_acct_file) $acct_file_dir = dirname($custom_acct_file) file { $acct_file_dir: ensure => directory, } -> file { $custom_acct_file: } ~> exec { 'turns process accounting on': path => ['/sbin', '/usr/sbin'], command =>, if $service_enabled { exec { 'initialize atop_current': command => $atop_retention, refreshonly => true, subscribe => file[$atop_retention], } }, package[$acct_package] -> exec['turns process accounting on'] -> service['atop'], service['atop'] -> file { $atop_retention:}","CWE-119, CWE-259","{'reason': 'It is vulnerable to injection attacks.', 'related_cwe': 'CWE-119, CWE-259', 'is_misconfiguration_related': 'Yes'}"
540,"class ironic::keystone::auth ( $password, $auth_name = 'ironic', $email = 'ironic@localhost', $tenant = 'services', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = 'ironic', $service_type = 'baremetal', $service_description = 'ironic bare metal provisioning service', $region = 'regionone', $public_url = 'http://127.0.0.1:6385', $admin_url = 'http://127.0.0.1:6385', $internal_url = 'http://127.0.0.1:6385', ) { if $configure_user_role { keystone_user_role[""${auth_name}@${tenant}""] ~> service <| name == 'ironic-server' |> } keystone_endpoint[""${region}/${service_name}::${service_type}""] ~> service <| name == 'ironic-server' |> keystone::resource::service_identity { 'ironic': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $service_name, service_type => $service_type, auth_name => $auth_name, service_description => $service_description, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",1,1,"admin_url => $admin_url,, email => $email,, if $configure_user_role { keystone_user_role[\, internal_url => $internal_url,, keystone_endpoint[\\, password => $password,, public_url => $public_url,, service_name => $service_name,, service_type => $service_type,, tenant => $tenant,","CWE-269, CWE-284, CWE-285, CWE-326, CWE-798","{'reason': 'Password, email, internal_url, keystone_endpoint[\\, keystone_user_role[\\\\, public_url, and admin_url are all used to provide different parameters for user and project information in keystone.', 'related_cwe': 'CWE-269, CWE-284, CWE-285, CWE-326, CWE-798', 'is_misconfiguration_related': 'Yes'}"
541,"@file { ""/tmp/collection"": content => ""whatever"" } file<| |> { mode => 0600 }",1,1,file <| |> { mode => 0600 },CWE-259,"{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
542,"define lma_infra_alerting::nagios::check_ssh( $hostgroups = [], $contact_group = $lma_infra_alerting::params::nagios_contactgroup, $custom_var_address = undef, ){ include lma_infra_alerting::params $prefix = $lma_infra_alerting::params::nagios_config_filename_prefix if $custom_var_address { $var_name = upcase($custom_var_address) $check_command = ""check_ssh_${title}"" $command = { ""check_ssh_${title}"" => { properties => { command_line => ""${nagios::params::nagios_plugin_dir}/check_ssh '\$_host${var_name}\$'"", } } } create_resources(nagios::command, $command, {'prefix' => $prefix}) } else { $check_command = $lma_infra_alerting::params::nagios_cmd_check_ssh } $service_check = { ""ssh ${title} network"" => { properties => { hostgroup_name => $hostgroups, check_command => $check_command, contact_groups => $contact_group, } } } $default_services = { prefix => $prefix, defaults => { 'use' => $lma_infra_alerting::params::nagios_generic_service_template, }, } create_resources(nagios::service, $service_check, $default_services) }",0,1,"$check_command = $lma_infra_alerting::params::nagios_cmd_check_ssh, '$check_command' => { \\, defaults = { \\\\, defaults = { \\\\\\\, define lma_infra_alerting::nagios::check_ssh, if $custom_var_address { $var_name = upcase($custom_var_address), include lma_infra_alerting::params, services = { \, services = { \\, services = { \\\\",CWE-1031,"{'reason': 'This misconfiguration is related to the provided CWE because of [Insert explanation]', 'related_cwe': 'CWE-1031', 'is_misconfiguration_related': 'Yes'}"
543,"class { '::cinder': database_connection => 'mysql://cinder:secret_block_password@openstack-controller.example.com/cinder', } class { '::cinder::api': keystone_password => 'cinder_pw', keystone_user => 'cinder', enabled => false, manage_service => false, } class { '::cinder::scheduler': enabled => false, manage_service => false, }",1,1,"database_connection =>'mysql://cinder:secret_block_password@openstack-controller.example.com/cinder', enabled => false, keystone_password => 'cinder_pw', keystone_user => 'cinder', manage_service => false",CWE-312,"{'reason': 'Explanation on why the misconfiguration is related to the CWE', 'related_cwe': 'CWE Number', 'is_misconfiguration_related': 'Yes'}"
544,"file { [""/tmp/arraytrailingcomma1"",""/tmp/arraytrailingcomma2"", ]: content => ""tmp"" }",1,1,file { [,CWE-754,"{'reason': 'This misconfiguration could be an error when appending data to an array. An extra comma on an array would be considered a syntax error in Puppet and could cause Puppet to fail.\\n\\nhttps://puppet.com/docs/puppet/6.27/lang_arrays.html#array-initialization\\n\\nhttps://puppet.com/docs/puppet/6.27/lang_syntax.html#bracketed-arrays\\n\\nhttps://puppet.com/docs/puppet/6.27/lang_data_types.html#array-syntax', 'related_cwe': 'CWE-754', 'is_misconfiguration_related': 'Yes'}"
545,"class opendaylight::service { include opendaylight::ha::haproxy $management_vip = hiera('management_vip') $odl = $opendaylight::odl_settings $user = $odl['metadata']['default_credentials']['user'] $password = $odl['metadata']['default_credentials']['password'] $rest_port = $opendaylight::rest_api_port if $odl['enable_bgpvpn'] { $odl_up_testing_site = ""ovsdb:1"" } else { $odl_up_testing_site = ""netvirt:1"" } if roles_include(['primary-controller']) { exec { 'wait-until-odl-ready': command => join([ ""curl -o /dev/null --fail --silent --head -u ${user}:${password}"", ""http://${management_vip}:${rest_port}/restconf/operational/network-topology:network-topology/topology/${odl_up_testing_site}"" ], ' '), path => '/bin:/usr/bin', tries => 60, try_sleep => 20, require => class['opendaylight::ha::haproxy'], } } }",1,1,"class opendaylight::service { include opendaylight::ha::haproxy, if roles_include(['primary-controller']) { exec { 'wait-until-odl-ready': command => join([, include opendaylight::ha::haproxy","CWE-257: Use of Hard-coded, Security-Sensitive Data, CWE-259: Other Information Disclosure, CWE-306: Missing Authentication for Critical Function","{'reason': 'The vulnerability is related to the use of hard-coded security sensitive data in the script. Specifically, the use of hiera() function to obtain the management_vip, user, and password values.', 'related_cwe': 'CWE-257: Use of Hard-coded, Security-Sensitive Data, CWE-259: Other Information Disclosure, CWE-306: Missing Authentication for Critical Function', 'is_misconfiguration_related': 'Yes'}"
546,"class cinder::client( $package_ensure = 'present' ) { include ::cinder::params package { 'python-cinderclient': ensure => $package_ensure, name => $::cinder::params::client_package, tag => 'openstack', } }",1,1,"package { 'python-cinderclient': ensure => $package_ensure, name => $::cinder::params::client_package, tag => 'openstack', }","CWE-22, CWE-306, CWE-798","{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
547,"define swift::storage::mount( $device, $mnt_base_dir = '/srv/node', $loopback = false, $fstype = 'xfs' ) { include ::swift::deps if($loopback){ $options = 'noatime,nodiratime,nobarrier,loop' } else { $options = 'noatime,nodiratime,nobarrier' } if($fstype == 'xfs'){ $fsoptions = 'logbufs=8' } else { $fsoptions = 'user_xattr' } file { ""${mnt_base_dir}/${name}"": ensure => directory, owner => 'swift', group => 'swift', require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } mount { ""${mnt_base_dir}/${name}"": ensure => present, device => $device, fstype => $fstype, options => ""${options},${fsoptions}"", require => file[""${mnt_base_dir}/${name}""], } exec { ""mount_${name}"": command => ""mount ${mnt_base_dir}/${name}"", path => ['/bin'], require => mount[""${mnt_base_dir}/${name}""], unless => ""grep ${mnt_base_dir}/${name} /etc/mtab"", logoutput => true, before => anchor['swift::config::end'], } exec { ""fix_mount_permissions_${name}"": command => ""chown -r swift:swift ${mnt_base_dir}/${name}"", path => ['/usr/sbin', '/bin'], subscribe => exec[""mount_${name}""], refreshonly => true, before => anchor['swift::config::end'], } if (str2bool($::selinux) == true) { exec { ""restorecon_mount_${name}"": command => ""restorecon ${mnt_base_dir}/${name}"", path => ['/usr/sbin', '/sbin'], subscribe => exec[""mount_${name}""], before => [exec[""fix_mount_permissions_${name}""],anchor['swift::config::end']], refreshonly => true, } } }",1,1,"if($::selinux) {... }, include ::swift::deps, mount {","CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer, CWE-20: Improper Input Validation, CWE-829: Using One-way Hash to Encrypt Data","{'reason': 'A possible security vulnerability exists in the script. When creating the file ${mnt_base_dir}/${name}, the anchor service swift::config::begin is used. If that is called within an if block, it may be possible for unauthorized parties to execute the script, allowing them to access and modify the configuration of the service. Since the script includes the swift::deps service, any additional services that are defined in the swift::deps class may also be impacted. Using the swift::config::begin anchor for this file definition can be considered a misconfiguration.', 'related_cwe': 'CWE-119, CWE-20, CWE-829', 'is_misconfiguration_related': 'Yes'}"
548,"class keystone::db::sync( $extra_params = undef, $keystone_user = $::keystone::params::keystone_user, ) inherits keystone::params { include ::keystone::deps exec { 'keystone-manage db_sync': command => ""keystone-manage ${extra_params} db_sync"", path => '/usr/bin', user => $keystone_user, refreshonly => true, subscribe => [ anchor['keystone::install::end'], anchor['keystone::config::end'], anchor['keystone::dbsync::begin'] ], notify => anchor['keystone::dbsync::end'], tag => 'keystone-exec', } }",0,1,"class keystone::db::sync($extra_params = undef, $keystone_user = $::keystone::params::keystone_user,), command => \, include ::keystone::deps,, keystone-manage $extra_params db_sync, notify => anchor['keystone::dbsync::end'],, path => '/usr/bin',, refreshonly => true,, subscribe => [anchor['keystone::install::end'], anchor['keystone::config::end'], anchor['keystone::dbsync::begin']],, tag => 'keystone-exec',, user => $keystone_user,","CWE-248, CWE-306, CWE-327, CWE-494","{'reason': 'The puppet script contains a hard-coded user, which is one of the causes of CWE-327. This makes the script vulnerable to credential theft, which is related to CWE-306. This script also runs an action using the user, which could be used to gain privileges, related to CWE-248.', 'related_cwe': 'CWE-248, CWE-306, CWE-327', 'is_misconfiguration_related': 'Yes'}"
549,class puppet { include packages::puppet include puppet::config include puppet::motd include puppet::cleanup },0,1,"include packages::puppet, include puppet::cleanup, include puppet::config, include puppet::motd",CWE-117,"{'reason': 'Explanation', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
550,"class tripleo::profile::base::nova::vncproxy ( $step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::nova include ::nova::vncproxy } }",0,1,"class tripleo::profile::base::nova::vncproxy ( $step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::nova include ::nova::vncproxy } }","CWE-479, CWE-772, CWE-773, CWE-774, CWE-776, CWE-779","{'reason': 'The misconfiguration is related to CWE-773, which is a CWE about authentication bypass.', 'related_cwe': 'CWE-773', 'is_misconfiguration_related': 'Yes'}"
551,"notice('fuel-plugin-influxdb-grafana: configure_default_route.pp') $fuel_version = 0 + hiera('fuel_version') if $fuel_version < 9.0 { $network_scheme = hiera_hash('network_scheme', {}) $management_vrouter_vip = hiera('management_vrouter_vip') $management_role = 'management' $fw_admin_role = 'fw-admin' if ( $::l23_os =~ /(?i:centos6)/ and $::kernelmajversion == '3.10' ) { $ovs_datapath_package_name = 'kmod-openvswitch-lt' } $use_ovs_dkms_datapath_module = $::l23_os ? { /(?i:redhat7|centos7)/ => false, default => true } class { 'l23network' : use_ovs => hiera('use_ovs', false), use_ovs_dkms_datapath_module => $use_ovs_dkms_datapath_module, ovs_datapath_package_name => $ovs_datapath_package_name, } $new_network_scheme = configure_default_route($network_scheme, $management_vrouter_vip, $fw_admin_role, $management_role ) notice ($new_network_scheme) if !empty($new_network_scheme) { prepare_network_config($new_network_scheme) $sdn = generate_network_config() notify {'sdn': message => $sdn } } }",1,1,"configure_default_route($network_scheme, $management_vrouter_vip, $fw_admin_role, $management_role), l23network{'ovs_datapath_package_name': 'kmod-openvswitch-lt'}::, l23network{'use_ovs': true}::, l23network{'use_ovs_dkms_datapath_module': false}::, prepare_network_config($new_network_scheme), sdn{'configure_default_route.pp': $sdn}","CWE-311, CWE-89","{'reason': 'CWE-311 is a flaw in the data validation function. The user input is not properly validated and this could allow a remote attacker to modify a field in the Puppet code, allowing them to execute arbitrary code.', 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
552,"class aodh::evaluator ( $manage_service = true, $enabled = true, $package_ensure = 'present', $coordination_url = undef, ) { include ::aodh::params aodh_config<||> ~> service['aodh-evaluator'] if $coordination_url { aodh_config { 'coordination/backend_url' : value => $coordination_url; } } package[$::aodh::params::evaluator_package_name] -> service['aodh-evaluator'] ensure_resource( 'package', [$::aodh::params::evaluator_package_name], { ensure => $package_ensure, tag => ['openstack', 'aodh-package'] } ) if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } package['aodh'] -> service['aodh-evaluator'] service { 'aodh-evaluator': ensure => $service_ensure, name => $::aodh::params::evaluator_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => ['aodh-service','aodh-db-sync-service'] } }",0,1,"ensure_resource( 'package', [$::aodh::params::evaluator_package_name], { ensure => $package_ensure, tag => ['openstack', 'aodh-package'] } ) if $manage_service {, include ::aodh::params, include::aodh::params, package[$::aodh::params::evaluator_package_name] -> service['aodh-evaluator'], package['aodh'], package['aodh'] -> service['aodh-evaluator'], service { 'aodh-evaluator':",CWE-93,"{'reason': 'The script enables or disables AODH evaluator, which is responsible for processing the notifications that are being forwarded from notification agents.', 'related_cwe': 'CWE-93', 'is_misconfiguration_related': 'Yes'}"
553,"class packstack::nova::conductor () { class { '::nova::conductor': enabled => true, workers => hiera('config_service_workers'), } }",0,1,"enabled => true,, workers => hiera('config_service_workers'),","CWE-312, CWE-345","{'reason': ""A vulnerability exists where the enabled attribute in the ::nova::conductor class is true, this could lead to services being enabled. The worker attribute should also be validated to ensure it has been properly configured. If the workers attribute has been left as hiera('config_service_workers'), then the number of workers could be set to an incorrect value, resulting in less than the optimal number of workers. Additionally, the number of workers could also be set to a value that is too large, resulting in unnecessary resource usage. The enabled attribute is set to true, so it may be possible to manually disable the service. However, it's not clear how to check if it is enabled or disabled. Furthermore, it is not clear whether any other services are affected"", 'related_cwe': 'CWE-312, CWE-345', 'is_misconfiguration_related': 'Yes'}"
554,"class neutron::agents::bigswitch ( $package_ensure = 'present', $lldp_enabled = true, $agent_enabled = false, ) { include ::neutron::deps if($::osfamily != 'redhat') { fail(""unsupported osfamily ${::osfamily}"") } ensure_packages('python-networking-bigswitch', { ensure => $package_ensure, tag => 'openstack', } ) package { 'bigswitch-lldp': ensure => $package_ensure, name => $::neutron::params::bigswitch_lldp_package, tag => ['neutron-support-package', 'openstack'], } package { 'bigswitch-agent': ensure => $package_ensure, name => $::neutron::params::bigswitch_agent_package, tag => ['neutron-support-package', 'openstack'], } if $lldp_enabled { $lldp_service_ensure = 'running' } else { $lldp_service_ensure = 'stopped' } if $agent_enabled { $agent_service_ensure = 'running' } else { $agent_service_ensure = 'stopped' } service { 'bigswitch-lldp': ensure => $lldp_service_ensure, name => $::neutron::params::bigswitch_lldp_service, enable => $lldp_enabled, tag => 'neutron-service', } service { 'bigswitch-agent': ensure => $agent_service_ensure, name => $::neutron::params::bigswitch_agent_service, enable => $agent_enabled, tag => 'neutron-service', } }",0,1,"if $agent_enabled { $agent_service_ensure = 'running' } else { $agent_service_ensure ='stopped' }, if $lldp_enabled { $lldp_service_ensure = 'running' } else { $lldp_service_ensure ='stopped' }, include ::neutron::deps if($::osfamily!='redhat') { fail(, package { 'bigswitch-agent': ensure => $package_ensure, name => $::neutron::params::bigswitch_agent_package, tag => ['neutron-support-package', 'openstack'], }, package { 'bigswitch-lldp': ensure => $package_ensure, name => $::neutron::params::bigswitch_lldp_package, tag => ['neutron-support-package', 'openstack'], }, service { 'bigswitch-agent': ensure => $agent_service_ensure, name => $::neutron::params::bigswitch_agent_service, enable => $agent_enabled, tag => 'neutron-service', }, service { 'bigswitch-lldp': ensure => $lldp_service_ensure, name => $::neutron::params::bigswitch_lldp_service, enable => $lldp_enabled, tag => 'neutron-service', }","CWE-20, CWE-275","{'reason': ""Puppet fails to determine if the OS is a supported distribution (Ubuntu, RHEL, CentOS). If it's not a supported OS, the module throws an error and exits. This means that the Puppet user is not able to implement support for other Linux distributions that may be used in their environment. This can result in a security misconfiguration if a supported distribution is in fact used in the environment. If the OS is unsupported, Puppet will fail. If the OS is supported, then the agent is properly configured."", 'related_cwe': 'CWE-20: CWE-275', 'is_misconfiguration_related': 'Yes'}"
555,"class contenttranslation::cxserver( $dir, $port, $proxy, $log, $allow_cors, $parsoid, $apertium, $yandex, $yandex_key, $secure, $ssl_key, $cert, $workers, ) { require ::npm git::clone { 'mediawiki/services/cxserver/deploy': directory => $dir, owner => $::share_owner, group => $::share_group, } file { ""${dir}/src/config.js"": content => template('contenttranslation/cxserver.config.js.erb'), require => git::clone['mediawiki/services/cxserver/deploy'], } file { '/etc/init/cxserver.conf': content => template('contenttranslation/cxserver.conf.erb'), } service { 'cxserver': ensure => running, provider => 'upstart', subscribe => [ file['/etc/init/cxserver.conf'], file[""${dir}/src/config.js""], ], } }",0,1,"class contenttranslation::cxserver( $dir, $port, $proxy, $log, $allow_cors, $parsoid, $apertium, $yandex, $yandex_key, $secure, $ssl_key, $cert, $workers, ) {, file { '${dir}/src/config.js': content => template('contenttranslation/cxserver.config.js.erb'), require => git::clone['mediawiki/services/cxserver/deploy'], }, file { '/etc/init/cxserver.conf': content => template('contenttranslation/cxserver.conf.erb'), }, git::clone {'mediawiki/services/cxserver/deploy': directory => $dir, owner => $::share_owner, group => $::share_group, }, require ::npm, service { 'cxserver': ensure => running, provider => 'upstart', subscribe => [ file['/etc/init/cxserver.conf'], file[\, service { 'cxserver': ensure => running, provider => 'upstart', subscribe => [ file['/etc/init/cxserver.conf'], file[\\","CWE-120, CWE-200, CWE-275, CWE-276, CWE-312, CWE-352, CWE-601, CWE-732","{'reason': 'CWE-275 - CWE-276 - This file does not have sufficient ownership and/or permission permissions, and could be read or modified by non-privileged users.', 'related_cwe': 'CWE-275 - CWE-276', 'is_misconfiguration_related': 'Yes'}"
556,"class role::ores { include ::role::betafeatures mediawiki::extension { 'ores': needs_update => true, settings => { wgoresbaseurl => 'https://ores.wikimedia.org/', wgoreswikiid => 'testwiki', wgoresmodels => 'damaging', }, } mediawiki::maintenance { 'check ores model versions': command => '/usr/local/bin/mwscript extensions/ores/maintenance/checkmodelversions.php --wiki=wiki', unless => '/usr/bin/mysql -e ""select * from ores_model"" wiki | /bin/grep -q ""damaging""', require => mediawiki::extension['ores'] } }",1,1,"command => '/usr/local/bin/mwscript extensions/ores/maintenance/checkmodelversions.php --wiki=wiki', unless => '/usr/bin/mysql -e \\, mediawiki::extension { 'ores': needs_update => true, settings => { wgoresbaseurl => 'https://ores.wikimedia.org/', wgoreswikiid => 'testwiki', wgoresmodels => 'damaging', }, }, mediawiki::maintenance { 'check ores model versions': command => '/usr/local/bin/mwscript extensions/ores/maintenance/checkmodelversions.php --wiki=wiki', unless => '/usr/bin/mysql -e \, unless => '/usr/bin/mysql -e \, unless => '/usr/bin/mysql -e \\, unless => '/usr/bin/mysql -e \\\\, unless => '/usr/bin/mysql -e \\\\\\\\\, unless => '/usr/bin/mysql -e \\\\\\\\\\\\\\\\\\\\, unless => '/usr/bin/mysql -e \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, unless => '/usr/bin/mysql -e{'reason': 'This vulnerability can be exploited by an attacker with knowledge of the script and access to the affected system.', 'related_cwe': 'CWE-285, CWE-352', 'is_misconfiguration_related': 'Yes'}"
557,include ::mistral,0,1,include ::mistral,CWE-93,"{'reason': 'CWE-93 is the misconfiguration label for this vulnerability. The vulnerability allows attackers to manipulate code execution outside of a controlled environment.', 'related_cwe': 'CWE-93', 'is_misconfiguration_related': 'Yes'}"
558,"class barbican::quota ( $quota_secrets = $::os_service_default, $quota_orders = $::os_service_default, $quota_containers = $::os_service_default, $quota_consumers = $::os_service_default, $quota_cas = $::os_service_default, ) { barbican_config { 'quotas/quota_secrets': value => $quota_secrets; 'quotas/quota_orders': value => $quota_orders; 'quotas/quota_containers': value => $quota_containers; 'quotas/quota_consumers': value => $quota_consumers; 'quotas/quota_cas': value => $quota_cas; } }",0,1,"barbican_config { 'quotas/quota_cas': value => $quota_cas; }, barbican_config { 'quotas/quota_consumers': value => $quota_consumers;, barbican_config { 'quotas/quota_containers': value => $quota_containers;, barbican_config { 'quotas/quota_orders': value => $quota_orders;, barbican_config { 'quotas/quota_secrets': value => $quota_secrets;",CWE-352,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
559,"class ironic::params { include ::openstacklib::defaults $dbsync_command = 'ironic-dbsync --config-file /etc/ironic/ironic.conf' $inspector_dbsync_command = 'ironic-inspector-dbsync --config-file /etc/ironic-inspector/inspector.conf upgrade' case $::osfamily { 'redhat': { $common_package_name = 'openstack-ironic-common' $lib_package_name = 'python-ironic-lib' $api_package = 'openstack-ironic-api' $api_service = 'openstack-ironic-api' $conductor_package = 'openstack-ironic-conductor' $conductor_service = 'openstack-ironic-conductor' $client_package = 'python-ironicclient' $inspector_package = 'openstack-ironic-inspector' $inspector_service = 'openstack-ironic-inspector' $inspector_dnsmasq_service = 'openstack-ironic-inspector-dnsmasq' $ipxe_rom_dir = '/usr/share/ipxe' $ironic_wsgi_script_path = '/var/www/cgi-bin/ironic' $ironic_wsgi_script_source = '/usr/lib/python2.7/site-packages/ironic/api/app.wsgi' $tftpd_package = 'tftp-server' $ipxe_package = 'ipxe-bootimgs' $syslinux_package = 'syslinux-extlinux' $syslinux_path = '/usr/share/syslinux' $syslinux_files = ['pxelinux.0', 'chain.c32'] } 'debian': { $common_package_name = 'ironic-common' $lib_package_name = 'python-ironic-lib' $api_service = 'ironic-api' $api_package = 'ironic-api' $conductor_service = 'ironic-conductor' $conductor_package = 'ironic-conductor' $client_package = 'python-ironicclient' $inspector_package = 'ironic-inspector' $inspector_service = 'ironic-inspector' $inspector_dnsmasq_service = 'ironic-inspector-dnsmasq' $ipxe_rom_dir = '/usr/lib/ipxe' $ironic_wsgi_script_path = '/usr/lib/cgi-bin/ironic' $ironic_wsgi_script_source = '/usr/lib/python2.7/dist-packages/ironic/api/app.wsgi' $tftpd_package = 'tftpd' $ipxe_package = 'ipxe' $syslinux_package = 'syslinux-common' $syslinux_path = '/usr/lib/syslinux' $syslinux_files = ['pxelinux.0', 'chain.c32', 'libcom32.c32', 'libutil.c32'] } default: { fail(""unsupported osfamily ${::osfamily}"") } } }",1,1,"line 12, $common_package_name = 'openstack-ironic-common', line 20, $api_service = 'openstack-ironic-api', line 24, $inspector_dnsmasq_service = 'openstack-ironic-inspector-dnsmasq', line 28, $conductor_package = 'openstack-ironic-conductor', line 30, $client_package = 'python-ironicclient', line 34, $inspector_package = 'openstack-ironic-inspector', line 37, $inspector_service = 'openstack-ironic-inspector', line 38, $conductor_service = 'openstack-ironic-conductor'","CWE-22, CWE-89","{'reason': 'This misconfiguration is related to the provided CWE.', 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
560,"define tripleo::certmonger::haproxy ( $service_pem, $service_certificate, $service_key, $hostname, $postsave_cmd, $principal = undef, ){ certmonger_certificate { ""${title}-cert"": hostname => $hostname, certfile => $service_certificate, keyfile => $service_key, postsave_cmd => $postsave_cmd, principal => $principal, } concat { $service_pem : ensure => present, mode => '0640', owner => 'haproxy', group => 'haproxy', } concat::fragment { ""${title}-cert-fragment"": target => $service_pem, source => $service_certificate, order => '01', require => certmonger_certificate[""${title}-cert""], } concat::fragment { ""${title}-key-fragment"": target => $service_pem, source => $service_key, order => 10, require => certmonger_certificate[""${title}-cert""], } }",0,1,"concat { $service_pem : ensure => present, mode => '0640', owner => 'haproxy', group => 'haproxy', } concat::fragment {, concat::fragment {, define tripleo::certmonger::haproxy ( $service_pem, $service_certificate, $service_key, $hostname, $postsave_cmd, $principal = undef, ){ certmonger_certificate { \, require => certmonger_certificate[, }, } \\, }, } \\\\, }, } concat::fragment {",CWE-22,"{'reason': 'The script defines a define block called tripleo::certmonger::haproxy, with a single attribute (postsave_cmd). This define has a concat object that defines a file $service_pem with contents from the concatenated service certificate and key. The problem is that this is not the only place where this file is used in the script. It is also used in a concat fragment that is used in the script itself. If one of the concat objects that use the $service_pem variable is removed, it would fail to render the file because there would be no fragment to call upon.\\n\\nIn a typical scenario where the script is used to deploy an application, there would be no need to use the $service_pem variable in', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
561,"class glance::db::sync( $extra_params = '--config-file /etc/glance/glance-registry.conf', ) { include ::glance::deps include ::glance::params exec { 'glance-manage db_sync': command => ""glance-manage ${extra_params} db_sync"", path => '/usr/bin', user => 'glance', refreshonly => true, logoutput => on_failure, subscribe => [ anchor['glance::install::end'], anchor['glance::config::end'], anchor['glance::dbsync::begin'] ], notify => anchor['glance::dbsync::end'], } }",0,1,"anchor['glance::dbsync::begin'], anchor['glance::dbsync::end'], glance-manage ${extra_params} db_sync, notify => anchor['glance::dbsync::end'], path => '/usr/bin',, refreshonly => true,, subscribe => [ anchor['glance::config::end'], subscribe => [ anchor['glance::dbsync::begin'], subscribe => [ anchor['glance::dbsync::end'], subscribe => [ anchor['glance::install::end']","CWE-20, CWE-200","{'reason': ""The script is a custom one-off example for the Glance module. It's a simple call to the glance-manage database sync command. The command will not have any issues running, but may cause a small performance degradation when running in an infrastructure as code scenario. There is no direct relationship to any of the CWEs provided. This issue would fall under the broad category of 'unwanted behavior' due to the performance implications. There could be potential for a high severity impact to the service as the sync command would need to be rerun. This would cause an outage. There is not a specific high severity security issue directly tied to this defect. This would instead be classified as a defect."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
562,"class slave_secrets($ensure=present, $slave_type) { include dirs::etc if ($slave_trustlevel == '') { fail(""no slave_trustlevel is set for this host; add that to your node definition"") } if ($existing_slave_trustlevel != '' and $existing_slave_trustlevel != $slave_trustlevel) { fail(""this host used to have trust level ${existing_slave_trustlevel}, and cannot be changed to ${slave_trustlevel} without a reimage"") } $trustlevel_file = $::operatingsystem ? { windows => 'c:/etc/slave-trustlevel', default => '/etc/slave-trustlevel', } file { $trustlevel_file: content => $slave_trustlevel, replace => false, mode => filemode(0500), require => class[dirs::etc], } case $ensure { present: { class { 'slave_secrets::ssh_keys': slave_type => $slave_type; } } absent: { } } class { 'slave_secrets::relengapi_token': ensure => $ensure; } if ($slave_type == 'build') { class { 'slave_secrets::google_api_key': ensure => $ensure; 'slave_secrets::google_oauth_api_key': ensure => $ensure; 'slave_secrets::ceph_config': ensure => $ensure; 'slave_secrets::mozilla_geoloc_api_keys': ensure => $ensure; 'slave_secrets::crash_stats_api_token': ensure => $ensure; 'slave_secrets::adjust_sdk_token': ensure => $ensure; } } else { class { 'slave_secrets::google_api_key': ensure => absent; 'slave_secrets::google_oauth_api_key': ensure => absent; 'slave_secrets::ceph_config': ensure => absent; 'slave_secrets::mozilla_geoloc_api_keys': ensure => absent; 'slave_secrets::crash_stats_api_token': ensure => absent; 'slave_secrets::adjust_sdk_token': ensure => absent; } } }",1,1,"case $ensure { present: { class {'slave_secrets::ssh_keys': slave_type => $slave_type; } }, class {'slave_secrets::google_api_key': ensure => $ensure;'slave_secrets::google_oauth_api_key': ensure => $ensure;'slave_secrets::ceph_config': ensure => $ensure;'slave_secrets::mozilla_geoloc_api_keys': ensure => $ensure;'slave_secrets::crash_stats_api_token': ensure => $ensure;'slave_secrets::adjust_sdk_token': ensure => $ensure; }, class {'slave_secrets::google_api_key': ensure => absent;'slave_secrets::google_oauth_api_key': ensure => absent;'slave_secrets::ceph_config': ensure => absent;'slave_secrets::mozilla_geoloc_api_keys': ensure => absent;'slave_secrets::crash_stats_api_token': ensure => absent;'slave_secrets::adjust_sdk_token': ensure => absent; }, file { $trustlevel_file: content => $slave_trustlevel, replace => false, mode => filemode(0500), require => class[dirs::etc], }, if ($existing_slave_trustlevel!= '' and $existing_slave_trustlevel!= $slave_trustlevel), if ($slave_trustlevel == ''), if ($slave_type == 'build'){, if ($slave_type!= 'build'){, include dirs::etc",CWE-532,"{'reason': 'This is an example result. Please ignore and replace with your actual result.', 'related_cwe': 'CWE-123', 'is_misconfiguration_related': 'Yes'}"
563,"class murano::config ( $murano_config = {}, $murano_cfapi_config = {}, $murano_paste_config = {}, $murano_cfapi_paste_config = {} ) { validate_hash($murano_config) validate_hash($murano_cfapi_config) validate_hash($murano_paste_config) validate_hash($murano_cfapi_paste_config) create_resources('murano_config', $murano_config) create_resources('murano_cfapi_config', $murano_cfapi_config) create_resources('murano_paste_ini_config', $murano_paste_config) create_resources('murano_cfapi_paste_ini_config', $murano_cfapi_paste_config) }",0,1,"create_resources('murano_cfapi_config', $murano_cfapi_config), create_resources('murano_cfapi_paste_ini_config', $murano_cfapi_paste_config), create_resources('murano_config', $murano_config), create_resources('murano_paste_ini_config', $murano_paste_config), murano::config ( $murano_config = {}, $murano_cfapi_config = {}, $murano_paste_config = {}, $murano_cfapi_paste_config = {} ) {, validate_hash($murano_cfapi_config), validate_hash($murano_cfapi_paste_config), validate_hash($murano_config), validate_hash($murano_paste_config)","CWE-601, CWE-602, CWE-603","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-601, CWE-602, CWE-603', 'is_misconfiguration_related': 'Yes'}"
564,"define oslo::concurrency( $disable_process_locking = $::os_service_default, $lock_path = $::os_service_default, ) { $concurrency_options = { 'oslo_concurrency/disable_process_locking' => { value => $disable_process_locking }, 'oslo_concurrency/lock_path' => { value => $lock_path } } create_resources($name, $concurrency_options) }",1,1,"create_resources($name, $concurrency_options), define oslo::concurrency( $disable_process_locking = $::os_service_default, $lock_path = $::os_service_default, ) { $concurrency_options = { 'oslo_concurrency/disable_process_locking' => { value => $disable_process_locking }, 'oslo_concurrency/lock_path' => { value => $lock_path } } create_resources($name, $concurrency_options) }",CWE-295,"{'reason': ""This script's misconfiguration is not related to the CWE provided"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
565,"class glance::api::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/glance', $log_file = '/var/log/glance/api.log', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { include ::glance::deps $use_syslog_real = pick($::glance::api::use_syslog,$use_syslog) $use_stderr_real = pick($::glance::api::use_stderr,$use_stderr) $log_facility_real = pick($::glance::api::log_facility,$log_facility) $log_dir_real = pick($::glance::api::log_dir,$log_dir) $log_file_real = pick($::glance::api::log_file,$log_file) $debug_real = pick($::glance::api::debug,$debug) if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } oslo::log { 'glance_api_config': debug => $debug_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real, log_dir => $log_dir_real, log_file => $log_file_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, } }",0,1,"debug_real = pick($::glance::api::debug,$debug), include ::glance::deps, log_facility_real = pick($::glance::api::log_facility,$log_facility), log_file_real = pick($::glance::api::log_file,$log_file), oslo::log { 'glance_api_config': debug => $debug_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real, log_dir => $log_dir_real, log_file => $log_file_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, }, use_syslog_real = pick($::glance::api::use_syslog,$use_syslog), verbose = undef, ), warning('verbose is deprecated, has no effect and will be removed after newton cycle.')",CWE-20,"{'reason': 'Debug is a configuration that should be reviewed. This variable should be kept at its default unless there is a very specific reason for changing it. For example, if the server is experiencing too many requests to be processed, debug will result in many logs being generated and the server may be more vulnerable. \\n\\n\\nThe following variables also have a default value and do not need to be changed unless required for a particular reason. The server could experience issues if these are modified by an administrator.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
566,"class osnailyfacter::mysql_access ( $ensure = 'present', $db_user = 'root', $db_password = '', $db_host = 'localhost', ) { $default_file_path = ""${::root_home}/.my.cnf"" $host_file_path = ""${::root_home}/.my.${db_host}.cnf"" file { ""${db_host}-mysql-access"": ensure => $ensure, path => $host_file_path, owner => 'root', group => 'root', mode => '0640', content => template('osnailyfacter/mysql.access.cnf.erb') } if $ensure == 'present' { file <| title == $default_file_path |> { ensure => 'symlink', content => undef, path => $default_file_path, target => $host_file_path, } file[""${db_host}-mysql-access""] -> file <| path == $default_file_path |> } }",1,1,"file <| path == $default_file_path |> { target => $host_file_path, } file[, file <| path == $default_file_path |> { target => $host_file_path, }} file[, file <| title == $default_file_path |> { ensure =>'symlink', content => undef, path => $default_file_path, target => $host_file_path, } file[, if $ensure == 'present' { file <| title == $default_file_path |> { ensure =>'symlink', content => undef, path => $default_file_path, target => $host_file_path, } file[",CWE-754,"{'reason': 'A file parameter in the class declaration, \\$default_file_path, was not sanitized to avoid an escape attack. The target of the symlink file will match the contents of the file. This may not be desirable when the target of the file is user input.', 'related_cwe': 'CWE-755', 'is_misconfiguration_related': 'Yes'}"
567,"define role::oauth::consumer ( $consumer_key, $secret_key, $callback_url, $is_prefix = true, $description = $title, $wiki = '*', $grants = ['authonly'], $restrictions = {'ipaddresses' => ['0.0.0.0/0','::/0']}, $user = 'admin', $owner_only = false, $access_token = undef, $access_secret = undef, ) { include ::role::oauth $grants_json = ordered_json($grants) $restrictions_json = ordered_json($restrictions) mysql::sql { ""register oauth ${title}"": sql => template('role/oauth/register.sql.erb'), unless => template('role/oauth/check.sql.erb'), require => [ mediawiki::extension['oauth'], exec['update_all_databases'], ] } if $owner_only { mysql::sql { ""authorize oauth ${title}"": sql => template('role/oauth/authorize.sql.erb'), unless => template('role/oauth/check-auth.sql.erb'), require => mysql::sql[""register oauth ${title}""], } } }",1,1,"if $owner_only { mysql::sql { \, if $owner_only { mysql::sql { \\, include ::role::oauth \\, require => [ mediawiki::extension['oauth'], exec['update_all_databases'], ] \\, require => [ mediawiki::extension['oauth'], exec['update_all_databases'], ] \\\\, require => [ mediawiki::extension['oauth'], exec['update_all_databases'], ] \\\\\\\\, sql => template('role/oauth/check.sql.erb'), unless => template('role/oauth/check-auth.sql.erb'), require => mysql::sql[\, sql => template('role/oauth/register.sql.erb'), unless => template('role/oauth/check.sql.erb'), require => [ mediawiki::extension['oauth'], exec['update_all_databases'], ] \\\\",CWE-522,"{'reason': 'The provided CWE is a weak point for the script in that it does not allow for proper verification of the credentials.\\n\\nIn order to improve this, we need to introduce a new type of parameter which is called an argument. An argument is a piece of data which can be passed into a function. This data is typically used to specify what should be done within the function. We call this type of parameter an argument because it is passed into the function and tells it what to do.\\n\\nBy introducing this new type of parameter, we are able to verify that the credentials are correct. However, we also need to ensure that the correct type of argument is used when calling the function. For example, when calling a function that requires a user', 'related_cwe': 'CWE-522', 'is_misconfiguration_related': 'Yes'}"
568,"class rally::settings ( $project_domain = $::os_service_default, $resource_deletion_timeout = $::os_service_default, $resource_management_workers = $::os_service_default, $user_domain = $::os_service_default, $openstack_client_http_timeout = undef, ) { include ::rally::settings::cinder include ::rally::settings::ec2 include ::rally::settings::glance include ::rally::settings::heat include ::rally::settings::ironic include ::rally::settings::manila include ::rally::settings::murano include ::rally::settings::nova include ::rally::settings::sahara include ::rally::settings::swift include ::rally::settings::tempest rally_config { 'cleanup/resource_deletion_timeout': value => $resource_deletion_timeout; 'users_context/project_domain': value => $project_domain; 'users_context/resource_management_workers': value => $resource_management_workers; 'users_context/user_domain': value => $user_domain; } }",1,1,"include ::rally::settings::cinder, include ::rally::settings::glance, include ::rally::settings::heat, include ::rally::settings::ironic, include ::rally::settings::manila, include ::rally::settings::murano, include ::rally::settings::nova, include ::rally::settings::sahara, include ::rally::settings::swift, include ::rally::settings::tempest",CWE-117,"{'reason': 'Rally uses the Keystone endpoint to authenticate, authorize and make RPC calls to various OpenStack services. By allowing anyone to authenticate using Rally, one may gain access to the other Rally services.\\n\\nhttps://docs.openstack.org/rally/latest/user-auth.html\\n\\nAs such, this misconfiguration is related to CWE-117, Improper Authentication.\\n\\nReference: https://cwe.mitre.org/data/definitions/117.html\\n\\n', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
569,"class keystone::federation::mellon ( $methods, $idp_name, $protocol_name, $admin_port = false, $main_port = true, $module_plugin = 'keystone.auth.plugins.mapped.mapped', $template_order = 331, $package_ensure = present, ) { include ::apache include ::keystone::deps include ::keystone::params if $template_order <= 330 or $template_order >= 999 { fail('the template order should be greater than 330 and less than 999.') } if ('external' in $methods ) { fail('the external method should be dropped to avoid any interference with some apache + mellon sp setups, where a remote_user env variable is always set, even as an empty value.') } if !('saml2' in $methods ) { fail('methods should contain saml2 as one of the auth methods.') }else{ if ($module_plugin != 'keystone.auth.plugins.mapped.mapped') { fail('the plugin for saml and mellon should be keystone.auth.plugins.mapped.mapped') } } validate_bool($admin_port) validate_bool($main_port) if( !$admin_port and !$main_port){ fail('no virtualhost port to configure, please choose at least one.') } keystone_config { 'auth/methods': value => join(any2array($methods),','); 'auth/saml2': value => $module_plugin; } ensure_packages([$::keystone::params::mellon_package_name], { ensure => $package_ensure, tag => 'keystone-support-package', }) if $admin_port { concat::fragment { 'configure_mellon_on_port_35357': target => ""${keystone::wsgi::apache::priority}-keystone_wsgi_admin.conf"", content => template('keystone/mellon.conf.erb'), order => $template_order, } } if $main_port { concat::fragment { 'configure_mellon_on_port_5000': target => ""${keystone::wsgi::apache::priority}-keystone_wsgi_main.conf"", content => template('keystone/mellon.conf.erb'), order => $template_order, } } }",1,1,"concat::fragment { 'configure_mellon_on_port_35357':, content => template('keystone/mellon.conf.erb'),, if $admin_port, if $main_port, if 'external' in $methods, if!('saml2' in $methods ), if(!$admin_port and!$main_port), order => $template_order, validate_bool($admin_port)",CWE-255,"{'reason': ""The failure due to using the external method might result in the user's identity to be authenticated using a remote_user variable. If the administrator wants to use the SAML method in the configuration of the Keystone Identity Management System, the user should remove the external method and add the SAML method. The provided CWE explains that the failure might result in the user's identity to be authenticated using a remote_user variable. This can result in the administrator's ability to set the identity of the user, which is not allowed. Therefore, the failure due to using the external method is related to the provided CWE.\\n"", 'related_cwe': 'CWE-255', 'is_misconfiguration_related': 'Yes'}"
570,"class gnocchi::storage::ceph( $ceph_username, $ceph_keyring = $::os_service_default, $ceph_secret = $::os_service_default, $ceph_pool = 'gnocchi', $ceph_conffile = '/etc/ceph/ceph.conf', $manage_cradox = true, ) inherits gnocchi::params { if (is_service_default($ceph_keyring) and is_service_default($ceph_secret)) or (! $ceph_keyring and ! $ceph_secret) { fail('you need to specify either gnocchi::storage::ceph::ceph_keyring or gnocchi::storage::ceph::ceph_secret.') } gnocchi_config { 'storage/driver': value => 'ceph'; 'storage/ceph_username': value => $ceph_username; 'storage/ceph_keyring': value => $ceph_keyring; 'storage/ceph_secret': value => $ceph_secret; 'storage/ceph_pool': value => $ceph_pool; 'storage/ceph_conffile': value => $ceph_conffile; } if $manage_cradox { if $::gnocchi::params::common_package_name { ensure_packages('python-cradox', { 'ensure' => 'present', 'name' => $::gnocchi::params::cradox_package_name, 'tag' => ['openstack','gnocchi-package'], }) } } }",0,1,gnocchi_config {'storage/driver': value => 'ceph';'storage/ceph_username': value => $ceph_username;'storage/ceph_keyring': value => $ceph_keyring;'storage/ceph_secret': value => $ceph_secret;'storage/ceph_pool': value => $ceph_pool;'storage/ceph_conffile': value => $ceph_conffile; },CWE-259,"{'reason': 'The misconfiguration is related to CWE-259.', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
571,"class lma_collector ( $tags = {}, ) { include lma_collector::params include lma_collector::service::log include lma_collector::service::metric validate_hash($tags) $plugins_dir = $lma_collector::params::plugins_dir $lua_modules_dir = $lma_collector::params::lua_modules_dir file { $lua_modules_dir: ensure => directory, source => 'puppet:///modules/lma_collector/plugins/common', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], } file { ""${lua_modules_dir}/extra_fields.lua"": ensure => present, content => template('lma_collector/extra_fields.lua.erb'), require => file[$lua_modules_dir], notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], } file { $plugins_dir: ensure => directory, } file { ""${plugins_dir}/decoders"": ensure => directory, source => 'puppet:///modules/lma_collector/plugins/decoders', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] } file { ""${plugins_dir}/filters"": ensure => directory, source => 'puppet:///modules/lma_collector/plugins/filters', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] } file { ""${plugins_dir}/encoders"": ensure => directory, source => 'puppet:///modules/lma_collector/plugins/encoders', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] } file { ""${plugins_dir}/outputs"": ensure => directory, source => 'puppet:///modules/lma_collector/plugins/outputs', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] } if size($lma_collector::params::additional_packages) > 0 { package { $lma_collector::params::additional_packages: ensure => present, } } }",1,1,"class lma_collector ( $tags = {}, ) {, file { $lua_modules_dir: ensure => directory, source => 'puppet:///modules/lma_collector/plugins/common', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], }, file { $plugins_dir: ensure => directory, }, file { ${lua_modules_dir}/extra_fields.lua: ensure => present, content => template('lma_collector/extra_fields.lua.erb'), require => file[$lua_modules_dir], notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], }, file { ${plugins_dir}/decoders: ensure => directory, source => 'puppet:///modules/lma_collector/plugins/decoders', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] }, file { ${plugins_dir}/encoders: ensure => directory, source => 'puppet:///modules/lma_collector/plugins/encoders', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] }, file { ${plugins_dir}/filters: ensure => directory, source => 'puppet:///modules/lma_collector/plugins/filters', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] }, file { ${plugins_dir}/outputs: ensure => directory, source => 'puppet:///modules/lma_collector/plugins/outputs', recurse => remote, notify => [class['lma_collector::service::metric'], class['lma_collector::service::log']], require => file[$plugins_dir] }, if size($lma_collector::params::additional_packages) > 0 {, include lma_collector::params",CWE-1130,"{'reason': 'For the misconfiguration CWE-1130 is the most relevant one and it is related to the misconfiguration.', 'related_cwe': 'CWE-1130', 'is_misconfiguration_related': 'Yes'}"
572,"class cdh::hadoop::namenode { class['cdh::hadoop'] -> class['cdh::hadoop::namenode'] package { 'hadoop-hdfs-namenode': ensure => installed } file { ""${::cdh::hadoop::config_directory}/hosts.exclude"": ensure => 'present', require => package['hadoop-hdfs-namenode'], } file { $::cdh::hadoop::dfs_name_dir: ensure => 'directory', owner => 'hdfs', group => 'hdfs', mode => '0700', require => package['hadoop-hdfs-namenode'], } exec { 'hadoop-namenode-format': command => '/usr/bin/hdfs namenode -format', creates => ""${::cdh::hadoop::dfs_name_dir_main}/current/version"", user => 'hdfs', require => file[$::cdh::hadoop::dfs_name_dir], } service { 'hadoop-hdfs-namenode': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, alias => 'namenode', require => [file[""${::cdh::hadoop::config_directory}/hosts.exclude""], exec['hadoop-namenode-format']], } }",0,1,"class cdh::hadoop::namenode { class['cdh::hadoop'] -> class['cdh::hadoop::namenode']\\\\n }, class['cdh::hadoop'] -> class['cdh::hadoop::namenode'], exec { 'hadoop-namenode-format':\\\\\\\\\\n command => '/usr/bin/hdfs namenode -format',\\\\\\\\\\n creates => ${::cdh::hadoop::dfs_name_dir_main}/current/version,\\\\\\\\\\n user => 'hdfs',\\\\\\\\\\n require => file[${::cdh::hadoop::dfs_name_dir}],\\\\\\\\\\n }, exec { 'hadoop-namenode-format':\\\\n command => '/usr/bin/hdfs namenode -format',\\\\n creates => ${::cdh::hadoop::dfs_name_dir_main}/current/version,\\\\n user => 'hdfs',\\\\n require => file[${::cdh::hadoop::dfs_name_dir}],\\\\n }, file { $::cdh::hadoop::dfs_name_dir:\\n ensure => 'directory',\\\\n owner => 'hdfs',\\\\n group => 'hdfs',\\\\n mode => '0700',\\\\n require => package['hadoop-hdfs-namenode'],\\\\n }, file { $::cdh::hadoop::dfs_name_dir:\n ensure => 'directory',\n owner => 'hdfs',\n group => 'hdfs',\n mode => '0700',\n require => package['hadoop-hdfs-namenode'],\n }, file { ${::cdh::hadoop::config_directory}/hosts.exclude:\\\\n ensure => 'present',\\\\n require => package['hadoop-hdfs-namenode'],\\\\n }, file { ${::cdh::hadoop::config_directory}/hosts.exclude:\\n ensure => 'present',\\n require => package['hadoop-hdfs-namenode'],\\n }, package { 'hadoop-hdfs-namenode':\\\\n ensure => installed\\\\n }, service { 'hadoop-hdfs-namenode':\\n ensure => 'running',\\n enable => true,\\n hasstatus => true,\\n hasrestart => true,\\n alias => 'namenode',\\n require => [file[\",CWE-306: Missing Authentication for Critical Function,"{'reason': 'No authentication method is being used by the puppet script, exposing the namenode to a threat of misconfigured or unauthenticated users.', 'related_cwe': 'CWE-306: Missing Authentication for Critical Function', 'is_misconfiguration_related': 'Yes'}"
573,"node ""mm-ub-1204-32-temp.qa.scl3.mozilla.com"" { include toplevel::slave::qa::mozmill_ci } node ""qa-deploystudio1.qa.scl3.mozilla.com"" { include toplevel::slave::qa::mozmill_ci } node ""db1.qa.scl3.mozilla.com"" { include toplevel::server } node ""puppetmaster1.qa.scl3.mozilla.com"" { include toplevel::server::puppetmaster } node ""mm-ci-staging.qa.scl3.mozilla.com"" { $aspects = [ ""staging"" ] include toplevel::server::mozmill_ci } node /^mm-osx-\d+\.qa\.scl3\.mozilla\.com$/ { $aspects = [ ""staging"" ] include toplevel::slave::qa::mozmill_ci } node /^mm-ub-\d+-\d+\.qa\.scl3\.mozilla\.com$/ { $aspects = [ ""staging"" ] include toplevel::slave::qa::mozmill_ci } node /^mm-win-\w+-\d+\.qa\.scl3\.mozilla\.com$/ { $aspects = [ ""staging"" ] include toplevel::slave::qa::mozmill_ci } node ""mm-ci-master.qa.scl3.mozilla.com"" { include toplevel::server::mozmill_ci } node /^mm-osx-\d+-\d\.qa\.scl3\.mozilla\.com$/ { include toplevel::slave::qa::mozmill_ci } node /^mm-ub-\d+-\d+-\d+\.qa\.scl3\.mozilla\.com$/ { include toplevel::slave::qa::mozmill_ci } node /^mm-win-\w+-\d+-\d+\.qa\.scl3\.mozilla\.com$/ { include toplevel::slave::qa::mozmill_ci } node ""tps-ci-production.qa.scl3.mozilla.com"" { include toplevel::server::tps_ci } node /^tps-osx-\d+-\d\.qa\.scl3\.mozilla\.com$/ { include toplevel::slave::qa::tps_ci } node /^tps-ub-\d+-\d+-\d+\.qa\.scl3\.mozilla\.com$/ { include toplevel::slave::qa::tps_ci } node /^tps-win-\w+-\d+-\d+\.qa\.scl3\.mozilla\.com$/ { include toplevel::slave::qa::tps_ci }",1,1,"node \, node \\, node \\\\, node \\\\\\\\, node \\\\\\\\\, node \\\\\\\\\\, node \\d+\\.qa\\.scl3\\.mozilla\\.com\\",CWE-252,"{'reason': 'The script matches nodes based on the hostnames. The misconfiguration allows for hostnames of arbitrary length. When creating or modifying nodes, the hostnames should be validated. If a hostname is allowed to have arbitrary length, the misconfiguration is related to CWE-252: Unprotected API, which allows for hostsnames that are much longer than what was intended.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
574,class { '::openstack_tasks::ironic::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server warning('osnailyfacter/modular/./ironic/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/db.pp'),0,1,"class mysql::config {} include mysql::config, class mysql::server {} include mysql::server, include mysql::config, include mysql::server, warning('osnailyfacter/modular/./ironic/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/db.pp')",CWE-345,"{'reason': 'CWE-345 describes insecure use of uninitialized variables. In the Puppet script, the warning() function is called by the mysql::config class (Line 5) which contains an uninitialized variable. The warning() function also uses uninitialized variables in Line 6, 7 and 8. As such, the misconfiguration is related to CWE-345.', 'related_cwe': 'CWE-345', 'is_misconfiguration_related': 'Yes'}"
575,"class nova::compute::xenserver( $xenapi_connection_url, $xenapi_connection_username, $xenapi_connection_password, $compute_driver = 'xenapi.xenapidriver', $xenapi_inject_image = undef, ) { include ::nova::deps if $xenapi_inject_image != undef { warning('the xenapi_inject_image parameter is deprecated and has no effect.') } nova_config { 'default/compute_driver': value => $compute_driver; 'default/xenapi_connection_url': value => $xenapi_connection_url; 'default/xenapi_connection_username': value => $xenapi_connection_username; 'default/xenapi_connection_password': value => $xenapi_connection_password; } ensure_packages(['python-pip']) package { 'xenapi': ensure => present, provider => pip, tag => ['openstack', 'nova-support-package'], } package['python-pip'] -> package['xenapi'] }",1,1,"nova_config { 'default/compute_driver': value => $compute_driver;, nova_config { 'default/xenapi_connection_password': value => $xenapi_connection_password;, nova_config { 'default/xenapi_connection_url': value => $xenapi_connection_url;, nova_config { 'default/xenapi_connection_username': value => $xenapi_connection_username;",CWE-522,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
576,"class octavia::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/octavia', $log_file = '/var/log/octavia/octavia.log', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, ) { oslo::log { 'octavia_config': debug => $debug, use_syslog => $use_syslog, use_stderr => $use_stderr, log_dir => $log_dir, log_file => $log_file, syslog_log_facility => $log_facility, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, } }",0,1,"debug = $::os_service_default,, log_config_append = $::os_service_default,, log_facility = $::os_service_default,, log_file = '/var/log/octavia/octavia.log',, logging_context_format_string = $::os_service_default,, logging_debug_format_suffix = $::os_service_default,, logging_default_format_string = $::os_service_default,, logging_exception_prefix = $::os_service_default,, use_stderr = $::os_service_default,, use_syslog = $::os_service_default,",CWE-22,"{'reason': 'Not applicable', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
577,class { '::openstack_tasks::roles::mongo' :} warning('osnailyfacter/modular/./roles/mongo.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/mongo.pp'),1,1,class { '::openstack_tasks::roles::mongo' :} warning('osnailyfacter/modular/./roles/mongo.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/mongo.pp'),CWE-259,"{'reason': 'The misconfiguration is related to the CWE.', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
578,"class openstack::clocksync ($ntp_servers = undef, $config_template = undef) { if !$ntp_servers { $one_shot_ntp_server = 'pool.ntp.org' } else { $one_shot_ntp_server = $ntp_servers[0] } class { 'ntp': servers => $ntp_servers, config_template => $config_template, disable_monitor => true, iburst_enable => true, udlc => !check_ntp($one_shot_ntp_server), tinker => true, panic => 0, stepout => 5, minpoll => 3, maxpoll => 9, } exec['clocksync'] -> service <| title == 'ntp' |> package {'ntpdate': ensure => present} exec {'clocksync': unless => ""pidof ntpd"", require => package['ntpdate'], command => ""bash -c 'for i in {1..10}; do ntpdate -p 4 -t 0.2 -ub $one_shot_ntp_server && break; sleep 1; done'"", path => ['/usr/bin', '/usr/sbin', '/sbin', '/bin'], } }",1,1,"bash -c 'for i in {1..10}; do ntpdate -p 4 -t 0.2 -ub $one_shot_ntp_server && break; sleep 1; done', command =>, ntpdate -p 4 -t 0.2 -ub $one_shot_ntp_server && break, package{'ntpdate': ensure => present}, path =>","CWE-119, CWE-352, CWE-502, CWE-79","{'reason': 'The misconfiguration is related to CWE-352 because the ntpdate command is being used to synchronize the system clock. If this command is not executed periodically, the system clock may not be accurate or may drift over time, which can lead to security vulnerabilities and incorrect time stamps. The ntpdate command is a valid tool for synchronizing the system clock, but it should be executed frequently and with caution to prevent security issues.', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
579,"class plugin_zabbix::monitoring::rabbitmq_mon { include plugin_zabbix::params $service_name = 'rabbitmq-server' if defined_in_state(class['rabbitmq']) { plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app openstack rabbitmq"": host => $plugin_zabbix::params::host_name, template => 'template app openstack ha rabbitmq', api => $plugin_zabbix::monitoring::api_hash, } exec { 'enable rabbitmq management plugin': command => 'rabbitmq-plugins enable rabbitmq_management', path => ['/usr/sbin', '/usr/bin', '/sbin', '/bin' ], unless => 'rabbitmq-plugins list -m -e rabbitmq_management | grep -q rabbitmq_management', environment => 'home=/root', notify => service['rabbitmq-server'], } service { 'rabbitmq-server': ensure => 'running', name => ""p_${service_name}"", enable => true, provider => 'pacemaker', } firewall {'992 rabbitmq management': port => '15672', proto => 'tcp', action => 'accept', } plugin_zabbix::agent::userparameter { 'rabbitmq.queue.items': command => '/etc/zabbix/scripts/check_rabbit.py queues-items'; 'rabbitmq.queues.without.consumers': command => '/etc/zabbix/scripts/check_rabbit.py queues-without-consumers'; 'rabbitmq.missing.nodes': command => '/etc/zabbix/scripts/check_rabbit.py missing-nodes'; 'rabbitmq.unmirror.queues': command => '/etc/zabbix/scripts/check_rabbit.py unmirror-queues'; 'rabbitmq.missing.queues': command => '/etc/zabbix/scripts/check_rabbit.py missing-queues'; } } }",0,1,"firewall {'992 rabbitmq management':\\\\n port => '15672',\\\\n proto => 'tcp',\\\\n action => 'accept',\\\\n}, firewall {'992 rabbitmq management':\\n port => '15672',\\n proto => 'tcp',\\n action => 'accept',\\n}, include plugin_zabbix::params\n $service_name = 'rabbitmq-server', service { 'rabbitmq-serverservice { 'rabbitmq-server':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n ensure => 'running',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n name =>, service { 'rabbitmq-server':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n ensure => 'running',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n name =>, service { 'rabbitmq-server':\\\\\\\\\\\\\\\\n ensure => 'running',\\\\\\\\\\\\\\\\n name =>, service { 'rabbitmq-server':\\\\\\\\n ensure => 'running',\\\\\\\\n name =>, service { 'rabbitmq-server':\\\\n ensure => 'running',\\\\n name =>","CWE-502:Deserialization of Untrusted Data, CWE-732:Incorrect Permission Assignment for Critical Resource","{'reason': 'This misconfiguration is related to CVE-2021-44228, a vulnerability in Apache Log4j that allows an attacker to inject untrusted data into the serialization format, triggering an injection attack.', 'related_cwe': 'CWE-732, CWE-502, CWE-1026, CWE-1008, CWE-119, CWE-119', 'is_misconfiguration_related': 'Yes'}"
580,"class neutron::plugins::ml2::cisco::nexus ( $nexus_config, $managed_physical_network, $vlan_name_prefix = 'q-', $svi_round_robin = false, $provider_vlan_name_prefix = 'p-', $persistent_switch_config = false, $switch_heartbeat_time = 0, $switch_replay_count = $::os_service_default, $provider_vlan_auto_create = true, $provider_vlan_auto_trunk = true, $vxlan_global_config = true, $host_key_checks = false ) { include ::neutron::deps include ::neutron::plugins::ml2::cisco if ! is_service_default($switch_replay_count) { warning('the switch_replay_count parameter is obsolete. the nexus driver will always attempt replay on reconnect, if enabled.') } neutron_plugin_ml2 { 'ml2_cisco/managed_physical_network' : value => $managed_physical_network; 'ml2_cisco/vlan_name_prefix' : value => $vlan_name_prefix; 'ml2_cisco/svi_round_robin' : value => $svi_round_robin; 'ml2_cisco/provider_vlan_name_prefix' : value => $provider_vlan_name_prefix; 'ml2_cisco/persistent_switch_config' : value => $persistent_switch_config; 'ml2_cisco/switch_heartbeat_time' : value => $switch_heartbeat_time; 'ml2_cisco/switch_replay_count' : value => $switch_replay_count; 'ml2_cisco/provider_vlan_auto_create' : value => $provider_vlan_auto_create; 'ml2_cisco/provider_vlan_auto_trunk' : value => $provider_vlan_auto_trunk; 'ml2_cisco/vxlan_global_config' : value => $vxlan_global_config; 'ml2_cisco/host_key_checks' : value => $host_key_checks; } create_resources(neutron::plugins::ml2::cisco::nexus_switch, $nexus_config) create_resources(neutron::plugins::ml2::cisco::nexus_creds, $nexus_config) }",1,1,"class neutron::plugins::ml2::cisco::nexus ( $nexus_config, $managed_physical_network, create_resources(neutron::plugins::ml2::cisco::nexus_creds, $nexus_config), if! is_service_default($switch_replay_count) { warning('the switch_replay_count parameter is obsolete. the nexus driver will always attempt replay on reconnect, if enabled.') }","CWE-17, CWE-19, CWE-22","{'reason': ""Class neutron::plugins::ml2::cisco::nexus ( $nexus_config, $managed_physical_network, $vlan_name_prefix = 'q-', $svi_round_robin = false, $provider_vlan_name_prefix = 'p-', $persistent_switch_config = false, $switch_heartbeat_time = 0, $switch_replay_count = $::os_service_default, $provider_vlan_auto_create = true, $provider_vlan_auto_trunk = true, $vxlan_global_config = true, $host_key_checks = false ) {\\n include ::neutron::deps\\n include ::neutron::plugins::ml2::cisco\\n if! is_service_default($switch_replay_count) {\\n warning('the switch_re"", 'related_cwe': 'CWE-17, CWE-19, CWE-22', 'is_misconfiguration_related': 'Yes'}"
581,"class packages::mozilla::git { anchor { 'packages::mozilla::git::begin': ; 'packages::mozilla::git::end': ; } case $::operatingsystem { centos: { anchor['packages::mozilla::git::begin'] -> package { ""mozilla-git"": ensure => '2.4.1-3.el6'; } -> anchor['packages::mozilla::git::end'] } darwin: { anchor['packages::mozilla::git::begin'] -> packages::pkgdmg { git: version => ""1.7.9.4-1""; } -> anchor['packages::mozilla::git::end'] } windows: { file { ""c:/installersource/puppetagain.pub.build.mozilla.org/exes/git-1.9.2-preview20140411.exe"": ensure => file, source => ""puppet:///repos/exes/git-1.9.2-preview20140411.exe"", require => class[""dirs::installersource::puppetagain_pub_build_mozilla_org::exes""]; } exec { ""git-1.9.2-preview20140411.exe"": command => ""c:\\installersource\\puppetagain.pub.build.mozilla.org\\exes\\git-1.9.2-preview20140411.exe /verysilent /dir=c:\\mozilla-build\\git"", creates => ""c:\\mozilla-build\\git\\unins000.exe"", require => file[""c:/installersource/puppetagain.pub.build.mozilla.org/exes/git-1.9.2-preview20140411.exe""], } } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"cc:\\\\\\\\\\\\\\\\installersource\\\\\\\\\\\\\\\\puppetagain.pub.build.mozilla.org\\\\\\\\\\\\\\\\exes\\\\\\\\\\\\\\\\git-1.9.2-preview20140411.exe, c:\\\\installersource\\\\puppetagain.pub.build.mozilla.org\\\\exes\\\\git-1.9.2-preview20140411.exe, c:\\installersource\\puppetagain.pub.build.mozilla.org\\exes\\git-1.9.2-preview20140411.exe, file { \, file { \\, file { \\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package {","CWE-1320, CWE-22","{'reason': 'The vulnerability is based on injection via shell commands.', 'related_cwe': 'CWE-1320, CWE-22', 'is_misconfiguration_related': 'Yes'}"
582,"class mellanox_openstack::params { $eswitchd_package = 'eswitchd' $filters_dir = '/etc/nova/rootwrap.d' $filters_file = ""${filters_dir}/network.filters"" $mlnx_agent_conf = '/etc/neutron/plugins/mlnx/mlnx_conf.ini' case $::osfamily { 'redhat': { $neutron_mlnx_packages = ['openstack-neutron-mellanox'] $agent_service = 'neutron-mlnx-agent' $compute_service_name = 'openstack-nova-compute' $openvswitch_mgmt_service = 'openvswitch' $libvirt_driver_file = '/usr/lib/python2.6/site-packages/nova/virt/libvirt/driver.py' } 'debian': { $neutron_mlnx_packages_compute = ['neutron-plugin-mlnx','neutron-plugin-mlnx-agent', 'python-networking-mlnx'] $neutron_mlnx_packages_controller = ['python-networking-mlnx'] $agent_service = ['neutron-plugin-mlnx-agent'] $sriov_agent_service_name = 'neutron-plugin-sriov-agent' $sriov_agent_package_name = 'neutron-plugin-sriov-agent' $compute_service_name = 'nova-compute' $openvswitch_mgmt_service = 'openvswitch-switch' $libvirt_driver_file = '/usr/lib/python2.7/dist-packages/nova/virt/libvirt/driver.py' $mlnx_agent_init_file = '/etc/init/neutron-plugin-mlnx-agent.conf' } } }",1,1,class mellanox_openstack::params { $eswitchd_package = 'eswitchd' $filters_dir = '/etc/nova/rootwrap.d' $filters_file =,CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': 'The filters file location can be used to control which filter scripts get executed when Nova or Neutron calls Rootwrap to execute the network filtering scripts. Since the rootwrap script location is provided by the user in the nova.conf file, any change to the network.filters location (which is controlled by the Mellanox operator) can potentially allow a malicious user to alter the filter scripts and therefore the network filtering rules. This could potentially allow the user to modify network filtering rules, allowing them to bypass network controls like security groups. However, the filter scripts are called by both Neutron and Nova. The filtering rules are only used when a port is being created or updated. This means that while a malicious user could manipulate the filter scripts, they would not be', 'related_cwe': ""CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"", 'is_misconfiguration_related': 'Yes'}"
583,"class mistral::client( $package_ensure = 'present' ) { include ::mistral::params package { 'python-mistralclient': ensure => $package_ensure, name => $::mistral::params::client_package, tag => ['openstack', 'mistral-package'], } }",1,1,"class mistral::client( $package_ensure = 'present' ) {\\ninclude ::mistral::params\\npackage {\\n'mistral': ensure => $::mistral::params::client_package,\\n}\\\\n}, class mistral::client( $package_ensure = 'present' ) {\\ninclude ::mistral::params\\npackage {\\n'mistral': ensure => $::mistral::params::client_package,\\n}\\n}, class mistral::client( $package_ensure = 'present' ) {\ninclude ::mistral::params\npackage {\n'mistral': ensure => $::mistral::params::client_package,\n}\n}\n, class mistral::client( $package_ensure = 'present' ) {include ::mistral::params\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\npackage {'mistral': ensure => $::mistral::params::client_package,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, class mistral::client( $package_ensure = 'present' ) {include ::mistral::params\\\\\\\\\\\\\\\\npackage {'mistral': ensure => $::mistral::params::client_package,\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\n}, class mistral::client( $package_ensure = 'present' ) {include ::mistral::params\\\\\\\\npackage {'mistral': ensure => $::mistral::params::client_package,\\\\\\\\n}\\\\\\\\n}, class mistral::client( $package_ensure = 'present' ) {include ::mistral::params\\\\npackage {'mistral': ensure => $::mistral::params::client_package,\\\\n}\\\\\\\\n}, class mistral::client( $package_ensure = 'present' ) {include ::mistral::params\\\\npackage {\\\\n'mistral': ensure => $::mistral::params::client_package,\\\\n}\\\\n}, class mistral::client( $package_ensure = 'present' ) {include ::mistral::params\\npackage {'mistral': ensure => $::mistral::params::client_package,\\n}\\\\n}",CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': 'The package name should not contain any relative directory path to allow the package installer to choose the path for installation. The use of relative path to identify the package name may result in unexpected behavior when the relative path is incorrect. If this misconfiguration is not fixed, it can cause the package to be installed into an unexpected location, or the package may not be installed at all because the installer cannot find the package in the specified location.', 'related_cwe': ""CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"", 'is_misconfiguration_related': 'Yes'}"
584,"define neutron::plugins::ml2::cisco::nexus_switch( $username, $password, $ip_address, $ssh_port, $servers, $switchname = $title, $nve_src_intf = $::os_service_default, $physnet = $::os_service_default ) { include ::neutron::deps $section = ""ml2_mech_cisco_nexus:${ip_address}"" neutron_plugin_ml2 { ""${section}/username"": value => $username; ""${section}/password"": value => $password; ""${section}/ssh_port"": value => $ssh_port; ""${section}/nve_src_intf"": value => $nve_src_intf; ""${section}/physnet"": value => $physnet; } $server_defaults = { 'switch_ip_address' => $ip_address } create_resources(neutron::plugins::ml2::cisco::nexus_switch_server, $servers, $server_defaults) }",0,1,"create_resources(neutron::plugins::ml2::cisco::nexus_switch_server, $servers, $server_defaults)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\t}\\\\\\\\\\\\n}\\\\\\\\n}, create_resources(neutron::plugins::ml2::cisco::nexus_switch_server, $servers, $server_defaults)\\\\\\\\n\\\\t}\\\\n}, create_resources(neutron::plugins::ml2::cisco::nexus_switch_server, $servers, $server_defaults)\\n  }, neutron::plugins::ml2::cisco::nexus_switch( $username, $password, $ip_address, $ssh_port, $servers, $switchname = $title, $nve_src_intf = $::os_service_default, $physnet = $::os_service_default ) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  include ::neutron::deps\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  $section = \\\\, neutron::plugins::ml2::cisco::nexus_switch( $username, $password, $ip_address, $ssh_port, $servers, $switchname = $title, $nve_src_intf = $::os_service_default, $physnet = $::os_service_default ) {\\\\\\n  include ::neutron::deps\\\\\\n  $section = \\, neutron::plugins::ml2::cisco::nexus_switch( $username, $password, $ip_address, $ssh_port, $servers, $switchname = $title, $nve_src_intf = $::os_service_default, $physnet = $::os_service_default ) {\\\\n  include ::neutron::deps\\n  $section = \\, neutron::plugins::ml2::cisco::nexus_switch( $username, $password, $ip_address, $ssh_port, $servers, $switchname = $title, $nve_src_intf = $::os_service_default, $physnet = $::os_service_default ) {\n  include ::neutron::deps\n  $section = \, neutron_plugin_ml2 {, neutron_plugin_ml2 {\\\\\\\\\\\\n, neutron_plugin_ml2 {\\\\n","CWE-284, CWE-285, CWE-286, CWE-287, CWE-288, CWE-289, CWE-290, CWE-291, CWE-292, CWE-295","{'reason': 'The misconfiguration is due to using a variable as an argument which is not used within the function definition. This introduces unnecessary redundancy as the default value for the argument is not necessary. This could lead to the potential issue of not defining the argument in the future which could cause unexpected results', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
585,"class cinder::policy ( $policies = {}, $policy_path = '/etc/cinder/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'cinder_config': policy_file => $policy_path } }",1,1,"create_resources('openstacklib::policy::base', $policies), oslo::policy { 'cinder_config': policy_file => $policy_path }, validate_hash($policies)",CWE-400,"{'reason': 'The misconfiguration is related to the provided CWE because it allows arbitrary code execution.', 'related_cwe': 'CWE-400', 'is_misconfiguration_related': 'Yes'}"
586,"class lma_collector::collectd::http_check ( $urls, $expected_codes = {}, $timeout = 1, $max_retries = 3, $pacemaker_master_resource = undef, ) { validate_hash($urls) validate_hash($expected_codes) validate_integer($timeout) validate_integer($max_retries) $urls_keys = suffix(prefix(keys($urls), '""'), '""') $urls_values = suffix(prefix(values($urls), '""'), '""') $real_urls= hash(flatten(zip($urls_keys, $urls_values))) if ! empty($expected_codes) { $expected_codes_keys = suffix(prefix(keys($expected_codes), '""'), '""') $expected_codes_values = suffix(prefix(values($expected_codes), '""'), '""') $real_expected_codes= hash(flatten(zip($expected_codes_keys, $expected_codes_values))) } else { $real_expected_codes= {} } $config = { 'url' => $real_urls, 'expectedcode' => $real_expected_codes, 'timeout' => ""\""${timeout}\"""", 'maxretries' => ""\""${max_retries}\"""", } if $pacemaker_master_resource { $real_config = merge($config, {'dependsonresource' => ""\""${pacemaker_master_resource}\""""}) } else { $real_config = $config } lma_collector::collectd::python { 'http_check': config => $real_config, } }",0,1,"class lma_collector::collectd::http_check (\\n\\turls, \\n\\texpected_codes = {}, \\n\\ttimeout = 1, \\n\\tmax_retries = 3, \\n\\tpacemaker_master_resource = undef,\\n\\t) {, class lma_collector::collectd::http_check (\n\turls, \n\texpected_codes = {}, \n\ttimeout = 1, \n\tmax_retries = 3, \n\tpacemaker_master_resource = undef,\n\t) {, else {, if \\$pacemaker_master_resource {, if \\\\$pacemaker_master_resource {, if! empty(\$expected_codes) {, validate_hash($expected_codes), validate_hash($urls), validate_integer($max_retries), validate_integer($timeout)",CWE-1191: Validation of Array and Table Constraints,"{'reason': 'Please describe the detailed reasoning why the misconfiguration is related to the provided CWE.', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
587,"class neutron::client ( $package_ensure = present ) { include ::neutron::deps include ::neutron::params package { 'python-neutronclient': ensure => $package_ensure, name => $::neutron::params::client_package, tag => ['neutron-support-package', 'openstack'], } }",1,1,"class neutron::client ( $package_ensure = present ) { include ::neutron::deps include ::neutron::params package { 'python-neutronclient': ensure => $package_ensure, name => $::neutron::params::client_package, tag => ['neutron-support-package', 'openstack'], } }, ensure => $package_ensure, name => $::neutron::params::client_package, include ::neutron::deps, include ::neutron::params, package { 'python-neutronclient': ensure => $package_ensure, name => $::neutron::params::client_package, tag => ['neutron-support-package', 'openstack'], } }",CWE-248,"{'reason': 'CWE-248 is related to improper input validation, which is related to the use of the include statement in puppet.', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
588,"class mozpool::settings { $root = ""/opt/mozpool"" $config_ini = ""${root}/config.ini"" if (has_aspect(""staging"")) { $mozpool_version = ""4.2.1"" } else { $mozpool_version = ""4.2.1"" } $db_database = secret(""mozpool_db_database"") $db_username = secret(""mozpool_db_username"") $db_password = secret(""mozpool_db_password"") $db_hostname = secret(""mozpool_db_hostname"") }",0,1,"db_database = secret(\\\\, db_database = secret(\\\\\\\\\\, db_hostname = secret(\\\\\\, db_hostname = secret(\\\\\\\\\\, db_password = secret(\\, db_password = secret(\\\, db_username = secret(\, db_username = secret(\\\\\\\, mozpool_version = \, root = \",CWE-257,"{'reason': 'Please provide detailed reasoning', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
589,class { '::osnailyfacter::provision::build_image': },0,1,class { '::osnailyfacter::provision::build_image': },"CWE-1021, CWE-1022, CWE-1023, CWE-1024, CWE-1025, CWE-1026, CWE-1027, CWE-1028, CWE-1029, CWE-1030","{'reason': ""This misconfiguration can be remediated by adding an 'insecure' attribute with a value of 'false' to the relevant class definition. This will instruct puppet to run 'facter --no-color' to check the facts before provisioning a node. For more information on how to use facter's `--insecure` parameter, please refer to the [facter documentation](https://facter.theforeman.org/docs/1.10/user_guide/fact_overview.html#insecure)."", 'related_cwe': 'CWE-1030, CWE-1028, CWE-1023, CWE-1024, CWE-1025', 'is_misconfiguration_related': 'Yes'}"
590,"class aodh::db ( $database_db_max_retries = $::os_service_default, $database_connection = 'sqlite:////var/lib/aodh/aodh.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { $database_connection_real = pick($::aodh::database_connection, $database_connection) $database_idle_timeout_real = pick($::aodh::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::aodh::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::aodh::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::aodh::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::aodh::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::aodh::database_max_overflow, $database_max_overflow) oslo::db { 'aodh_config': db_max_retries => $database_db_max_retries, connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, } }",0,1,"class aodh::db, connection => $database_connection_real, db_max_retries => $database_db_max_retries, idle_timeout => $database_idle_timeout_real, max_overflow => $database_max_overflow_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, min_pool_size => $database_min_pool_size_real, oslo::db, retry_interval => $database_retry_interval_real",CWE-1199,"{'reason': 'Connection and idle timeout parameters are not properly configured. The misconfiguration is related to CWE-1199.', 'related_cwe': 'CWE-1199', 'is_misconfiguration_related': 'Yes'}"
591,"notice('fuel-plugin-nsx-t: compute_vmware_nova_config.pp') include ::nova::params $neutron_config = hiera_hash('neutron_config') $neutron_metadata_proxy_secret = $neutron_config['metadata']['metadata_proxy_shared_secret'] $management_vip = hiera('management_vip') $service_endpoint = hiera('service_endpoint', $management_vip) $ssl_hash = hiera_hash('use_ssl', {}) $neutron_username = pick($neutron_config['keystone']['admin_user'], 'neutron') $neutron_password = $neutron_config['keystone']['admin_password'] $neutron_tenant_name = pick($neutron_config['keystone']['admin_tenant'], 'services') $region = hiera('region', 'regionone') $admin_identity_protocol = get_ssl_property($ssl_hash, {}, 'keystone', 'admin', 'protocol', 'http') $admin_identity_address = get_ssl_property($ssl_hash, {}, 'keystone', 'admin', 'hostname', [$service_endpoint, $management_vip]) $neutron_internal_protocol = get_ssl_property($ssl_hash, {}, 'neutron', 'internal', 'protocol', 'http') $neutron_endpoint = get_ssl_property($ssl_hash, {}, 'neutron', 'internal', 'hostname', [hiera('neutron_endpoint', ''), $management_vip]) $auth_api_version = 'v3' $admin_identity_uri = ""${admin_identity_protocol}://${admin_identity_address}:35357"" $neutron_auth_url = ""${admin_identity_uri}/${auth_api_version}"" $neutron_url = ""${neutron_internal_protocol}://${neutron_endpoint}:9696"" class {'nova::network::neutron': neutron_password => $neutron_password, neutron_project_name => $neutron_tenant_name, neutron_region_name => $region, neutron_username => $neutron_username, neutron_auth_url => $neutron_auth_url, neutron_url => $neutron_url, neutron_ovs_bridge => '', } nova_config { 'neutron/service_metadata_proxy': value => 'true'; 'neutron/metadata_proxy_shared_secret': value => $neutron_metadata_proxy_secret; } service { 'nova-compute': ensure => running, name => $::nova::params::compute_service_name, enable => true, hasstatus => true, hasrestart => true, } class['nova::network::neutron'] ~> service['nova-compute'] nova_config<| |> ~> service['nova-compute']",0,1,"class {'nova::network::neutron': neutron_password => $neutron_password, neutron_project_name => $neutron_tenant_name, neutron_region_name => $region, neutron_username => $neutron_username, neutron_auth_url => $neutron_auth_url, neutron_url => $neutron_url, neutron_ovs_bridge => '', }, class['nova::network::neutron'] ~> nova_config<| |>, class['nova::network::neutron'] ~> nova_config<| |> ~> service['nova-compute'], class['nova::network::neutron'] ~> service['nova-compute'], nova_config { 'neutron/service_metadata_proxy': value => 'true'; 'neutron/metadata_proxy_shared_secret': value => $neutron_metadata_proxy_secret; }, nova_config<| |> ~> service['nova-compute'], service { 'nova-compute': ensure => running, name => $::nova::params::compute_service_name, enable => true, hasstatus => true, hasrestart => true, }, service['nova-compute'] ~> nova_config<| |>, service['nova-compute'] ~> nova_config<| |> ~> service['nova-compute']",CWE-285,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
592,"class ironic::db ( $database_connection = 'sqlite:////var/lib/ironic/ovs.sqlite', $database_idle_timeout = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { $database_connection_real = pick($::ironic::database_connection, $database_connection) $database_idle_timeout_real = pick($::ironic::database_idle_timeout, $database_idle_timeout) $database_max_retries_real = pick($::ironic::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::ironic::database_retry_interval, $database_retry_interval) $database_min_pool_size_real = pick($::ironic::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::ironic::database_max_pool_size, $database_max_pool_size) $database_max_overflow_real = pick($::ironic::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'ironic_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, db_max_retries => $database_db_max_retries, } }",0,1,irrelevant,"CWE-1023, CWE-1024, CWE-1025, CWE-1026, CWE-1027, CWE-1028, CWE-1029, CWE-1030, CWE-1031, CWE-1032","{'reason': 'The connection string for the database connection can be used by a malicious user to access the database.', 'related_cwe': 'CWE-1023', 'is_misconfiguration_related': 'Yes'}"
593,"define mediawiki::user( $password, $username = $title, $email = undef, $wiki = $::mediawiki::db_name, $groups = [], ) { include ::mediawiki $canonical_username = inline_template('<%= @username[0].capitalize + @username[1..-1] %>') mediawiki::maintenance { ""mediawiki_user_${canonical_username}_${wiki}"": command => ""/usr/local/bin/mwscript createandpromote.php \ --wiki='${wiki}' '${canonical_username}' '${password}'"", unless => ""/usr/local/bin/mwscript createandpromote.php \ --wiki='${wiki}' '${canonical_username}' 2>&1 | \ /bin/grep -pq '^ require => [ mediawiki::wiki[$::mediawiki::wiki_name], env::var['mw_install_path'], ], } if ! empty($groups) { $comma_groups = join($groups, ',') $comma_groups_sql = join($groups, ""', '"") $group_count = size($groups) $sql_unless = "" select count(*) from user_groups join user on ug_user = user_id where user_name = '${canonical_username}' and ug_group in ('${$comma_groups_sql}');"" mediawiki::maintenance { ""mediawiki_user_${canonical_username}_${wiki}_${comma_groups}"": command => ""/usr/local/bin/mwscript createandpromote.php --wiki='${wiki}' \ --custom-groups '${comma_groups}' \ --force '${canonical_username}'"", unless => ""/bin/echo \""${sql_unless}\"" | \ /usr/local/bin/mwscript sql.php --wikidb='${wiki}' | \ /bin/grep -q '=> ${group_count}'"", require => [ mediawiki::maintenance[""mediawiki_user_${canonical_username}_${wiki}""], ] } } if $email { mediawiki::maintenance { ""mediawiki_user_${canonical_username}_${wiki}_email"": command => ""/usr/local/bin/mwscript resetuseremail.php --wiki='${wiki}' \ '${canonical_username}' '${email}' --no-reset-password"", refreshonly => true, subscribe => mediawiki::maintenance[""mediawiki_user_${canonical_username}_${wiki}""], } } }",1,1,"define mediawiki::user( $password, $username = $title, $email = undef, $wiki = $::mediawiki::db_name, $groups = [], ) {\r\n, if $email {\\r\\n        mediawiki::maintenance { \, if $email {\\r\\n        mediawiki::maintenance { \\, if! empty($groups) { $comma_groups = join($groups, ',') $comma_groups_sql = join($groups,, mediawiki::maintenance { \, mediawiki::maintenance { \\","CWE-306: Missing Authentication for Critical Function, CWE-502: DES Encryption Weakness","{'reason': 'The provided misconfiguration is related to the CWE because the mediawiki::user class allows anyone to reset a user email, which can expose the email address to unauthorized users.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
594,"class nova::vncproxy( $enabled = true, $manage_service = true, $vncproxy_protocol = 'http', $host = '0.0.0.0', $port = '6080', $vncproxy_path = '/vnc_auto.html', $ensure_package = 'present' ) { include ::nova::deps include ::nova::params nova_config { 'vnc/novncproxy_host': value => $host; 'vnc/novncproxy_port': value => $port; } include ::nova::vncproxy::common nova::generic_service { 'vncproxy': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::vncproxy_package_name, service_name => $::nova::params::vncproxy_service_name, ensure_package => $ensure_package, } }",1,1,"include ::nova::deps, include ::nova::params, include ::nova::vncproxy::common, nova::generic_service { 'vncproxy': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::vncproxy_package_name, service_name => $::nova::params::vncproxy_service_name, ensure_package => $ensure_package, } }, nova::vncproxy( $enabled = true, $manage_service = true, $vncproxy_protocol = 'http', $host = '0.0.0.0', $port = '6080', $vncproxy_path = '/vnc_auto.html', $ensure_package = 'present' ) {",CWE-327,"{'reason': 'A configuration for unauthenticated access to the VNCproxy application (i.e., a web based VNC client) is provided. This allows an attacker to connect to a VNCproxy endpoint and launch a VNC client using an unauthenticated browser. Without authentication, attackers could potentially steal credentials stored within a running VNC client, allowing them to take control of a VM, and launch commands as the logged in user. While the misconfiguration is not explicitly specified, this misconfiguration would contribute to `CWE-327: Unauthenticated Cryptographic Access Control`.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
595,class { '::openstack_tasks::openstack_network::common_config' :} warning('osnailyfacter/modular/./openstack-network/common-config.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/common-config.pp'),1,1,"class {'::openstack_tasks::openstack_network::common_config':}, warning('osnailyfacter/modular/./openstack-network/common-config.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/common-config.pp')",CWE-22,"{'reason': 'This Puppet resource declaration is an example of a class definition referencing another class definition.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
596,"class tripleo::profile::base::nova::compute::libvirt ( $step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::nova::compute $rbd_ephemeral_storage = hiera('nova::compute::rbd::ephemeral_storage', false) $rbd_persistent_storage = hiera('rbd_persistent_storage', false) if $rbd_ephemeral_storage or $rbd_persistent_storage { $client_keys = hiera('ceph::profile::params::client_keys') $client_user = join(['client.', hiera('nova::compute::rbd::libvirt_rbd_user')]) class { '::nova::compute::rbd': libvirt_rbd_secret_key => $client_keys[$client_user]['secret'], } } if str2bool(hiera('nova::use_ipv6', false)) { $vncserver_listen = '::0' } else { $vncserver_listen = '0.0.0.0' } if $rbd_ephemeral_storage { class { '::nova::compute::libvirt': libvirt_disk_cachemodes => ['network=writeback'], libvirt_hw_disk_discard => 'unmap', vncserver_listen => $vncserver_listen, } } else { class { '::nova::compute::libvirt' : vncserver_listen => $vncserver_listen, } } } }",0,1,"class { '::nova::compute::libvirt' : vncserver_listen => $vncserver_listen, }, libvirt_disk_cachemodes => ['network=writeback'], libvirt_hw_disk_discard => 'unmap', vncserver_listen => $vncserver_listen, }, nova::compute::rbd::libvirt_rbd_user => $client_user, libvirt_rbd_secret_key => $client_keys[$client_user]['secret'], }",CWE-257,"{'reason': ""The script checks to ensure that the vncserver_listen parameter value is either ::0 or 0.0.0.0, based on the Nova server's use of IPv6. The script then uses these values to ensure that the VNC server only listens on the specified interfaces.\\n\\nThe Nova server then leverages the vncserver_listen parameter value to ensure that the VNC server only listens on the specified interfaces.\\n\\nThe vncserver_listen parameter value is critical to ensuring the security and availability of the Nova server."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
597,"class cluster ( $internal_address = '127.0.0.1', $quorum_members = ['localhost'], $quorum_members_ids = undef, $unicast_addresses = ['127.0.0.1'], $cluster_recheck_interval = '190s', ) { case $::osfamily { 'debian' : { $packages = ['crmsh', 'pcs'] } 'redhat' : { $packages = ['crmsh'] } default: {} } if defined(stage['corosync_setup']) { class { 'openstack::corosync': bind_address => $internal_address, stage => 'corosync_setup', quorum_members => $quorum_members, quorum_members_ids => $quorum_members_ids, unicast_addresses => $unicast_addresses, packages => $packages, cluster_recheck_interval => $cluster_recheck_interval, } } else { class { 'openstack::corosync': bind_address => $internal_address, quorum_members => $quorum_members, quorum_members_ids => $quorum_members_ids, unicast_addresses => $unicast_addresses, packages => $packages, cluster_recheck_interval => $cluster_recheck_interval, } } file<| title == '/etc/corosync/corosync.conf' |> -> service['corosync'] file { 'ocf-fuel-path': ensure => directory, path =>'/usr/lib/ocf/resource.d/fuel', recurse => true, owner => 'root', group => 'root', } package['corosync'] -> file['ocf-fuel-path'] package<| title == 'pacemaker' |> -> file['ocf-fuel-path'] }",1,1,if defined(stage['corosync_setup']) {,"CWE-284, CWE-285, CWE-300, CWE-311, CWE-312, CWE-320, CWE-331, CWE-333, CWE-335, CWE-336","{'reason': 'Please provide reasoning as to how the misconfiguration is related to CWE-284, CWE-285, CWE-300, CWE-311, CWE-312, CWE-320, CWE-331, CWE-333, CWE-335, CWE-336.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
598,class { '::openstack_tasks::glance::glance' :} warning('osnailyfacter/modular/./glance/glance.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./glance/glance.pp'),1,1,class { '::openstack_tasks::glance::glance' :} warning('osnailyfacter/modular/./glance/glance.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./glance/glance.pp'),CWE-352,"{'reason': 'CWE-352: Incorrect default privileges', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
599,"class smarthost::setup { include users::root include ::config file { ""/etc/postfix/main.cf"": mode => 0644, ensure => present, content => template(""smarthost/main.cf.erb""), require => class[""smarthost::install""], notify => class[""smarthost::daemon""]; ""/etc/aliases"": content => template(""smarthost/aliases.erb""), owner => root, group => $users::root::group, require => class['smarthost::install'], notify => exec['newaliases']; } exec { 'newaliases': command => ""/usr/bin/newaliases"", refreshonly => true; } }",0,1,"command => \, content => template(, exec { 'newaliases', file {, include ::config, include users::root, notify => class[\, owner => root, group => \$users::root::group,, refreshonly => true;",CWE-20,"{'reason': 'Command injection may be exploited due to user input (content) being placed in an unsafe manner into an execution command.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
600,"class cdh::hadoop::namenode { class['cdh::hadoop'] -> class['cdh::hadoop::namenode'] package { 'hadoop-hdfs-namenode': ensure => 'installed', } if ($::cdh::hadoop::ha_enabled and $::cdh::hadoop::zookeeper_hosts) { if !defined(package['zoookeeper']) { package { 'zookeeper': ensure => 'installed' } } package { 'hadoop-hdfs-zkfc': ensure => 'installed', } } exec { 'touch hosts.exclude': command => ""/usr/bin/touch ${::cdh::hadoop::config_directory}/hosts.exclude"", unless => ""/usr/bin/test -f ${::cdh::hadoop::config_directory}/hosts.exclude"", require => package['hadoop-hdfs-namenode'], } file { $::cdh::hadoop::dfs_name_dir: ensure => 'directory', owner => 'hdfs', group => 'hdfs', mode => '0700', require => package['hadoop-hdfs-namenode'], } exec { 'hadoop-namenode-format': command => '/usr/bin/hdfs namenode -format -noninteractive', creates => ""${::cdh::hadoop::dfs_name_dir_main}/current/version"", user => 'hdfs', require => [file[$::cdh::hadoop::dfs_name_dir], exec['touch hosts.exclude']], } service { 'hadoop-hdfs-namenode': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, alias => 'namenode', require => exec['hadoop-namenode-format'], } if ($::cdh::hadoop::ha_enabled and $::cdh::hadoop::zookeeper_hosts) { $zookeeper_hosts = $::cdh::hadoop::zookeeper_hosts $zookeeper_hosts_string = inline_template( '<%= array(@zookeeper_hosts).join("","") %>' ) exec { 'hadoop-hdfs-zkfc-init': command => '/bin/echo n | /usr/bin/hdfs zkfc -formatzk', user => 'hdfs', require => [ service['hadoop-hdfs-namenode'], package['zookeeper'], ], unless => ""/usr/lib/zookeeper/bin/zkcli.sh \ -server ${zookeeper_hosts_string} \ stat /hadoop-ha/${::cdh::hadoop::cluster_name} 2>&1 \ | /bin/grep -q ctime"", } service { 'hadoop-hdfs-zkfc': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, require => [ exec['hadoop-hdfs-zkfc-init'], service['hadoop-hdfs-namenode'], ], } } }",1,1,if ($::cdh::hadoop::ha_enabled and $::cdh::hadoop::zookeeper_hosts),CWE-732,"{'reason': 'The if-statement is evaluating the condition for the availability of zookeeper in the environment. A possible issue that can arise in this case is that the if-statement will cause the script to fail and the puppet run will be terminated. In the case where a condition in the script is not being met, it should return an error or exit code, alerting administrators that the misconfiguration exists. The script will then continue to run without the issue being fixed. This is a significant issue because it can lead to failure of the application. This misconfiguration is related to CWE-732.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
601,"class apache::mod::proxy_fcgi { if versioncmp($::lsbdistrelease, '13.10') >= 0 { apache::mod_conf { 'proxy_fcgi': } apache::conf { 'fcgi_headers': source => 'puppet:///modules/apache/conf/fcgi_headers.conf', priority => 0, } } }",0,1,"if versioncmp($::lsbdistrelease, '13.10') >= 0",CWE-77,"{'reason': ""The if block can be used to make conditional statements. In the provided example, it's used to conditionally apply a proxy_fcgi module. The reason the misconfiguration is related to CWE-77 is because the if block can be used for a potential misconfiguration."", 'related_cwe': 'CWE-77', 'is_misconfiguration_related': 'Yes'}"
602,"define mediawiki::skin( $ensure = present, $wiki = undef, $skin = $title, $default = false, $branch = undef, $settings = {}, $composer = false, ) { include ::mediawiki $mwbranch = $branch ? { undef => $::mediawiki::branch, default => $branch, } $skin_dir = ""${mediawiki::dir}/skins/${skin}"" $skin_repo = ""mediawiki/skins/${skin}"" if ! defined(git::clone[$skin_repo]) { git::clone { $skin_repo: directory => $skin_dir, branch => $mwbranch, require => git::clone['mediawiki/core'], } } mediawiki::settings { $title: ensure => $ensure, wiki => $wiki, header => template('mediawiki/skin.php.erb'), values => $settings, require => git::clone[$skin_repo], } if $composer { php::composer::install{ $skin_dir: require => git::clone[$skin_repo], } php::composer::install[$skin_dir] ~> mediawiki::settings[$title] } }",1,1,"git::clone, include ::mediawiki, mediawiki::settings, php::composer::install",CWE-732 - Incorrect Permission Assignment for Critical Resource,"{'reason': 'The mediawiki::skin resource, which is used to manage skins on MediaWiki installations, has a git::clone resource included within its require statement. This resource, which has the purpose of cloning a remote repository to the target system, has a vulnerability to the CVE-2019-17566 vulnerability, which is described in CWE-732.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
603,"class tripleo::profile::pacemaker::apache ( $bootstrap_node = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } if $step >= 5 and $pacemaker_master { include ::apache::params pacemaker::resource::service { $::apache::params::service_name: clone_params => 'interleave=true', verify_on_create => true, } pacemaker::constraint::base { 'openstack-core-then-httpd-constraint': constraint_type => 'order', first_resource => 'openstack-core-clone', second_resource => ""${::apache::params::service_name}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::apache::params::service_name], pacemaker::resource::ocf['openstack-core']], } } }",0,1,"include ::apache::params, pacemaker::constraint::base { 'openstack-core-then-httpd-constraint': constraint_type => 'order', first_resource => 'openstack-core-clone', second_resource =>, pacemaker::resource::service { $::apache::params::service_name: clone_params => 'interleave=true', verify_on_create => true, }, require => [pacemaker::resource::service[$::apache::params::service_name], pacemaker::resource::ocf['openstack-core']], }",CWE-798,"{'reason': 'A misconfiguration is a deviation from a standard rule or established practice. Therefore, this case is not related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
604,"class cdh::hadoop::defaults { $cluster_name = 'cdh' $journalnode_hosts = undef $dfs_journalnode_edits_dir = undef $datanode_mounts = undef $dfs_data_path = 'hdfs/dn' $zookeeper_hosts = undef $yarn_local_path = 'yarn/local' $yarn_logs_path = 'yarn/logs' $dfs_block_size = 67108864 $enable_jmxremote = true $webhdfs_enabled = false $httpfs_enabled = true $mapreduce_system_dir = undef $io_file_buffer_size = undef $mapreduce_map_tasks_maximum = undef $mapreduce_reduce_tasks_maximum = undef $mapreduce_job_reuse_jvm_num_tasks = undef $mapreduce_reduce_shuffle_parallelcopies = undef $mapreduce_map_memory_mb = undef $mapreduce_reduce_memory_mb = undef $mapreduce_task_io_sort_mb = undef $mapreduce_task_io_sort_factor = undef $mapreduce_map_java_opts = undef $mapreduce_reduce_java_opts = undef $yarn_app_mapreduce_am_resource_mb = undef $yarn_app_mapreduce_am_command_opts = undef $yarn_app_mapreduce_am_job_client_port_range = undef $mapreduce_shuffle_port = undef $mapreduce_intermediate_compression = false $mapreduce_intermediate_compression_codec = 'org.apache.hadoop.io.compress.defaultcodec' $mapreduce_output_compression = false $mapreduce_output_compression_codec = 'org.apache.hadoop.io.compress.defaultcodec' $mapreduce_output_compression_type = 'record' $yarn_nodemanager_resource_memory_mb = undef $yarn_nodemanager_resource_cpu_vcores = max($::processorcount - 1, 1 + 0) $yarn_scheduler_minimum_allocation_mb = undef $yarn_scheduler_maximum_allocation_mb = undef $yarn_scheduler_minimum_allocation_vcores = undef $yarn_scheduler_maximum_allocation_vcores = undef $yarn_log_aggregation_retain_seconds = 7776000 $yarn_log_aggregation_retain_check_interval_seconds = 86400 $fair_scheduler_template = 'cdh/hadoop/fair-scheduler.xml.erb' $yarn_site_extra_properties = undef $hadoop_heapsize = undef $hadoop_namenode_opts = undef $yarn_heapsize = undef $dfs_datanode_hdfs_blocks_metadata_enabled = undef $ganglia_hosts = undef $net_topology_script_template = undef $gelf_logging_enabled = false $gelf_logging_host = 'localhost' $gelf_logging_port = 12201 $namenode_jmxremote_port = 9980 $datanode_jmxremote_port = 9981 $resourcemanager_jmxremote_port = 9983 $nodemanager_jmxremote_port = 9984 $proxyserver_jmxremote_port = 9985 }",1,1,class cdh::hadoop::defaults { $journalnode_hosts = undef,CWE-250,"{'reason': 'The misconfiguration of variable \\', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
605,"class nova::compute::neutron ( $libvirt_vif_driver = 'nova.virt.libvirt.vif.libvirtgenericvifdriver', $force_snat_range = '0.0.0.0/0', ) { include ::nova::deps if $libvirt_vif_driver == 'nova.virt.libvirt.vif.libvirtopenvswitchdriver' { fail('nova.virt.libvirt.vif.libvirtopenvswitchdriver as vif_driver is removed from icehouse') } nova_config { 'libvirt/vif_driver': value => $libvirt_vif_driver; } if $libvirt_vif_driver == 'nova.virt.libvirt.vif.libvirtgenericvifdriver' and $force_snat_range { $force_snat_range_array = split($force_snat_range, '/') if is_ip_address($force_snat_range_array[0]) and is_integer($force_snat_range_array[1]) { nova_config { 'default/force_snat_range': value => $force_snat_range; } } else { fail('force_snat_range should be ipv4 or ipv6 cidr notation') } } else { nova_config { 'default/force_snat_range': ensure => absent; } } }",1,1,"fail('force_snat_range should be ipv4 or ipv6 cidr notation'), fail('nova.virt.libvirt.vif.libvirtopenvswitchdriver as vif_driver is removed from icehouse'), include ::nova::deps, nova_config { 'default/force_snat_range': ensure => absent; }, nova_config { 'default/force_snat_range': value => $force_snat_range; }, nova_config { 'libvirt/vif_driver': value => $libvirt_vif_driver; }","CWE-252, CWE-259, CWE-476, CWE-502","{'reason': ""The script is trying to ensure that `nova_config` is configured with the proper vif_driver in order to prevent the system from using an outdated vif_driver. The script also checks that the provided value for `force_snat_range` is a valid IP address with a slash mark, `/`, and a length, which are separated by a slash, i.e. `0.0.0.0/24`. This misconfiguration, if not caught, can allow an attacker to manipulate the `nova_config` and lead to an open connection, or even worse, a vulnerability leading to an unauthorized access to the system's resources. As such, this misconfiguration is related to CWE-502."", 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
606,"class designate::backend::bind9 ( $rndc_host = '127.0.0.1', $rndc_port = '953', $rndc_config_file = '/etc/rndc.conf', $rndc_key_file = '/etc/rndc.key' ) { include ::designate include ::dns designate_config { 'backend:bind9/rndc_host' : value => $rndc_host; 'backend:bind9/rndc_port' : value => $rndc_port; 'backend:bind9/rndc_config_file' : value => $rndc_config_file; 'backend:bind9/rndc_key_file' : value => $rndc_key_file; } concat::fragment { 'dns allow-new-zones': target => $::dns::optionspath, content => 'allow-new-zones yes;', order => '20', } }",1,1,"concat::fragment { 'dns allow-new-zones': target => $::dns::optionspath, content => 'allow-new-zones yes;', order => '20', }, dns_options {, include ::dns",CWE-250,"{'reason': 'The allow-new-zones parameter specifies whether zone files can be included by other servers, which can lead to unexpected configurations on the server, if it is not properly secured. When this parameter is set to `yes`, zone files can be modified and new zones can be loaded, which could cause the system to become insecure. If the server is configured to allow new zones, it can potentially be tricked into accepting zone information from untrusted sources. This parameter should be set to `no` or `false`, otherwise, it should be properly configured with proper authentication credentials.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
607,"class nova::compute::ironic ( $max_concurrent_builds = $::os_service_default, $admin_username = undef, $admin_password = undef, $admin_url = undef, $admin_tenant_name = undef, $api_endpoint = undef, $admin_user = undef, $admin_passwd = undef, $compute_driver = 'ironic.ironicdriver' ) { include ::nova::deps if $admin_user { warning('the admin_user parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } if $admin_passwd { warning('the admin_passwd parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } if $admin_username { warning('the admin_username parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } if $admin_password { warning('the admin_password parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } if $admin_url { warning('the admin_url parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } if $admin_tenant_name { warning('the admin_tenant_name parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } if $api_endpoint { warning('the api_endpoint parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') } include ::nova::ironic::common nova_config { 'default/compute_driver': value => $compute_driver; 'default/max_concurrent_builds': value => $max_concurrent_builds; } }",0,1,"if $admin_passwd { warning('the admin_passwd parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, if $admin_password { warning('the admin_password parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, if $admin_tenant_name { warning('the admin_tenant_name parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, if $admin_url { warning('the admin_url parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, if $admin_user { warning('the admin_user parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, if $admin_username { warning('the admin_username parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, if $api_endpoint { warning('the api_endpoint parameter in class nova::compute::ironic is deprecated, use class nova::ironic::common instead.') }, nova_config { 'default/compute_driver': value => $compute_driver; 'default/max_concurrent_builds': value => $max_concurrent_builds; }",CWE-22,"{'reason': 'The warning message that the parameters are deprecated and the deprecation date for these parameters is 2021-12-21 as specified in the official documentation.\\n\\nThe default values for these parameters are set to their default value and do not result in an attack vector, nor do they result in any further misconfigurations.', 'related_cwe': 'CWE-119;CWE-22', 'is_misconfiguration_related': 'Yes'}"
608,"class nova::conductor( $enabled = true, $manage_service = true, $ensure_package = 'present', $workers = undef, $use_local = undef, ) { if $use_local { warning('use_local parameter is deprecated, has no effect and will be dropped in a future release.') } include ::nova::deps include ::nova::db include ::nova::params nova::generic_service { 'conductor': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::conductor_package_name, service_name => $::nova::params::conductor_service_name, ensure_package => $ensure_package, } if $workers { nova_config { 'conductor/workers': value => $workers; } } }",1,1,"class nova::conductor($enabled = true, $manage_service = true, $ensure_package = 'present', $workers = undef, $use_local = undef, ) {, if $workers {, nova::conductor($enabled = true, $manage_service = true, $ensure_package = 'present', $workers = undef, $use_local = undef, ) {, nova::generic_service { 'conductor': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::conductor_package_name, service_name => $::nova::params::conductor_service_name, ensure_package => $ensure_package, }, nova_config { 'conductor/workers':, value => $workers;, }","CWE-829, CWE-835","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
609,class { '::osnailyfacter::vmware::vcenter' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,"class { '::osnailyfacter::upgrade::restart_services' :, class { '::osnailyfacter::vmware::vcenter' :, class { ':osnailyfacter::upgrade::restart_services' :, class { ':osnailyfacter::vmware::vcenter' :, class { 'osnailyfacter::upgrade::restart_services' :, class { 'osnailyfacter::vmware::vcenter' :, class {'::osnailyfacter::upgrade::restart_services' :, class {'::osnailyfacter::vmware::vcenter' :",CWE-117,"{'reason': 'CWE-117', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
610,"define npm::install( $directory, ) { require ::npm exec { ""${title}_npm_install"": command => '/usr/bin/npm install --no-bin-links', cwd => $directory, user => 'vagrant', environment => [ ""npm_config_cache=${::npm::cache_dir}"", 'npm_config_global=false', 'link=g++', 'home=/home/vagrant', ], creates => ""${directory}/node_modules"", logoutput => true, } }",1,1,"command => '/usr/bin/npm install --no-bin-links',, creates => \, creates => \\\\, environment => [ \\, environment => [ \\\\, environment => [ \\\\\\\\\\\\\, environment => [ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, environmentlogoutput => true,}, user => 'vagrant',",CWE-117,"{'reason': 'The vulnerable code does not appear to be related to the misconfiguration.\\n\\nPuppet code can have a variety of issues with misconfigured code. However, in this case the vulnerable code has no direct connection to the misconfigured code.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
611,"define l23network::l3::defaultroute ( $gateway = $name, $metric = undef, ){ $exec_name = ""default route of ${name} metric ${metric}"" case $::l23_os { /(?i)ubuntu/: { exec { $exec_name : path => '/bin:/usr/bin:/sbin:/usr/sbin', command => ""ip route replace default via ${gateway}"", unless => ""netstat -r | grep -q 'default.*${gateway}'"", } } /(?i:redhat|centos|oraclelinux)/: { cfg <| name == $gateway |> if ! defined(cfg[$gateway]) { cfg { $gateway: file => '/etc/sysconfig/network', key => 'gateway', value => $gateway, } -> exec { $exec_name : path => '/bin:/usr/bin:/sbin:/usr/sbin', command => ""ip route replace default via ${gateway} || true"", unless => ""netstat -r | grep -q 'default.*${gateway}'"", } } } default: { fail(""unsupported os: ${::l23_os}/${::operatingsystem}"") } } }",1,1,"cfg { $gateway: file => \, command => \, command => \\, default: {\r\n  fail(\, file => \, key => \\, netstat -r | grep -q \, path => \, value => \\, via ${gateway} || true\\",CWE-1165,"{'reason': 'The misconfiguration found, \\n \\n cfg { $gateway: file => \\, command => \\, command => \\\\, default: {\\r\\n  fail(\\, file => \\, key => \\\\, netstat -r | grep -q \\, path => \\, value => \\\\, via ${gateway} || true\\\\, \\n \\nis a vulnerability because it sets the default route of $name via ${gateway}. The vulnerability is not remediated because of the \\', 'related_cwe': 'CWE-1165, CWE-916, CWE-129, CWE-119, CWE-120, CWE-121, CWE-127, CWE-129, CWE-125, CWE-1165, CWE-919', 'is_misconfiguration_related': 'Yes'}"
612,"class puppetmaster::data { include puppetmaster::settings include packages::createrepo include packages::debmirror include packages::hardlink $minute = fqdn_rand(29)+1 $minuteplus = $minute + 30 $minutes = ""${minute},${minuteplus}"" if ($puppetmaster::settings::is_distinguished) { file { ""/usr/local/sbin/puppetmaster-fixperms"": mode => ""0755"", content => template(""${module_name}/puppetmaster-fixperms.erb""); ""/etc/cron.d/puppetmaster-fixperms"": content => ""*/30 * * * * root /usr/local/sbin/puppetmaster-fixperms\n""; ""/etc/cron.d/puppetmaster-sync"": ensure => absent; } motd { ""puppetmaster-sync"": content => ""** this is the distinguished master; other masters copy /data from here.\n""; } } else { file { ""/usr/local/sbin/puppetmaster-sync"": mode => ""0755"", content => template(""${module_name}/puppetmaster-sync.erb""); ""/etc/cron.d/puppetmaster-sync"": content => ""${minutes} * * * * root /usr/local/sbin/puppetmaster-sync\n""; ""/etc/cron.d/puppetmaster-fixperms"": ensure => absent; } motd { ""puppetmaster-sync"": content => ""** this master copies its /data from ${puppetmaster::settings::distinguished_master} at ${minute} past the half-hour\n** run puppetmaster-sync to synchronize this host now.\n""; } } file { ""/etc/debmirror.conf"": require => class['packages::debmirror'], content => ""1;""; ""/etc/debmirror-gpg"": ensure => directory, mode => 0600; ""/etc/debmirror-gpg/40976eaf437d05b5.gpg"": source => ""puppet:///modules/${module_name}/40976eaf437d05b5.gpg""; } exec { ""debmirror-get-key"": command => ""/usr/bin/gpg --no-default-keyring --keyring /etc/debmirror-gpg/trustedkeys.gpg --import /etc/debmirror-gpg/40976eaf437d05b5.gpg"", environment => [ 'gnupghome=/etc/debmirror-gpg' ], creates => ""/etc/debmirror-gpg/trustedkeys.gpg"", require => file[""/etc/debmirror-gpg/40976eaf437d05b5.gpg""]; } $crontab = ""/etc/cron.d/puppetmaster-upstream-rsync"" $script = ""/etc/puppet/puppetmaster-upstream-rsync.sh"" if ($puppetmaster::settings::is_distinguished and $puppetmaster::settings::upstream_rsync_source != """") { $upstream_minute = ($minute + 15) file { $crontab: content => ""${upstream_minute} * * * * root ${script}\n""; $script: mode => ""0755"", content => template(""${module_name}/puppetmaster-upstream-rsync.sh.erb""); } } else { file { [ $crontab, $script ]: ensure => absent; } } }",1,1,"class puppetmaster::data { include puppetmaster::settings include packages::createrepo include packages::debmirror include packages::hardlink $minute = fqdn_rand(29)+1 $minuteplus = $minute + 30 $minutes = \\, exec { \, file { /etc/debmirror.conf: \\, file { \, file { \\, file { \\\, file { \\\\, if ($puppetmaster::settings::is_distinguished \\\, if ($puppetmaster::settings::is_distinguished \\\\, if ($puppetmaster::settings::is_distinguished and \\",CWE-732,"{'reason': ""Puppetmaster's scripts use the \\u0022fqdn_rand\\u0022 function to generate a random number. The first line of the script is \\u0022$fqdn_rand\\u0022, which is set to 29. \\nIn order to avoid race conditions, the \\u0022fqdn_rand\\u0022 function is called again in the second line and used to set another variable. Since the first and second lines of the script share a dependency, the result is always the same. By increasing the difference between the two \\u0022fqdn_rand\\u0022 calls, the difference in time between the two \\u0022fqdn_rand\\u0022 calls will increase. However, the difference in"", 'related_cwe': 'CWE-732: \\u003Ca href\\u003D\\u0022https://cwe.mitre.org/data/definitions/732.html\\u0022\\u003ECWE-732: \\', 'is_misconfiguration_related': 'Yes'}"
613,"class packstack::heat () { create_resources(packstack::firewall, hiera('firewall_heat_rules', {})) class { '::heat::api': workers => hiera('config_service_workers'), } $keystone_admin = hiera('config_keystone_admin_username') $heat_cfg_ctrl_host = hiera('config_keystone_host_url') class { '::heat::engine': heat_metadata_server_url => ""http://${heat_cfg_ctrl_host}:8000"", heat_waitcondition_server_url => ""http://${heat_cfg_ctrl_host}:8000/v1/waitcondition"", heat_watch_server_url => ""http://${heat_cfg_ctrl_host}:8003"", auth_encryption_key => hiera('config_heat_auth_enc_key'), num_engine_workers => hiera('config_service_workers'), } class { '::heat::keystone::domain': domain_name => hiera('config_heat_domain'), domain_admin => hiera('config_heat_domain_admin'), domain_password => hiera('config_heat_domain_password'), } }",0,1,"admin_token => \\\\, auth_encryption_key => \\, auth_encryption_key => \\\\\\, domain_admin => \\, domain_name => \\, domain_password => \\\\, heat_metadata_server_url => \, heat_waitcondition_server_url => \\, heat_watch_server_url => \\, num_engine_workers => \\\\","CWE-312, CWE-319, CWE-347, CWE-384","{'reason': ""The password and admin_token variables for the heat keystone::keystone::domain class are defined as a double backslash ('\\\\\\\\') and contain no valid password value. Because the password and admin_token variables are never passed to a Puppet provider, no action is being taken during code execution to generate the password. When the Puppet provider is run, it will fail due to the lack of a valid password value. The issue is related to CWE-384, CWE-347, and CWE-312.\\n\\n\\n\\n\\n"", 'related_cwe': 'CWE-384, CWE-347, CWE-312', 'is_misconfiguration_related': 'Yes'}"
614,"class cinder::db::sync( $extra_params = undef, ) { include ::cinder::params package <| tag == 'cinder-package' |> ~> exec['cinder-manage db_sync'] exec['cinder-manage db_sync'] ~> service <| tag == 'cinder-service' |> cinder_config <||> ~> exec['cinder-manage db_sync'] cinder_config <| title == 'database/connection' |> ~> exec['cinder-manage db_sync'] exec { 'cinder-manage db_sync': command => ""cinder-manage ${extra_params} db sync"", path => '/usr/bin', user => 'cinder', refreshonly => true, logoutput => 'on_failure', } }",0,1,"cinder_config <| title == 'database/connection' |> ~> exec['cinder-manage db_sync'], cinder_config <||> ~> exec['cinder-manage db_sync'], include ::cinder::params","CWE-117, CWE-122","{'reason': 'The vulnerability can be related to CWE 117: Improper Restriction of Write-Access and CWE 122: Session Fixation', 'related_cwe': 'CWE-117, CWE-122', 'is_misconfiguration_related': 'Yes'}"
615,"class shared::execonce::base { case $::operatingsystem { windows: { include dirs::programdata::puppetagain $semaphore_dir = ""c:/programdata/puppetagain/semaphores"" file { $semaphore_dir: ensure => directory; } } default: { $semaphore_dir = ""/var/lib/puppet"" } } }",0,1,"file { $semaphore_dir: ensure => directory; }, include dirs::programdata::puppetagain","CWE-1130, CWE-252","{'reason': 'This misconfiguration is related to the provided CWE because it will allow anyone to create files on any directory specified in the manifest. While the provided example is just the root directory, there could be other directories included that are not intended for public use.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
616,"class disableservices::displaymanager { case $::operatingsystem { ubuntu: { file { ""/etc/x11/default-display-manager"": ensure => absent, force => true; } } windows, darwin, centos: { } default: { fail(""cant disable dm on $::operatingsystem"") } } }",1,1,"file { \, force => true;, }",CWE-248,"{'reason': 'Reasoning behind why misconfiguration is not related to CWE is...', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
617,class keystone::deps { anchor { 'keystone::install::begin': } -> package<| tag == 'keystone-package'|> ~> anchor { 'keystone::install::end': } -> anchor { 'keystone::config::begin': } -> keystone_config<||> ~> anchor { 'keystone::config::end': } -> anchor { 'keystone::db::begin': } -> anchor { 'keystone::db::end': } ~> anchor { 'keystone::dbsync::begin': } -> anchor { 'keystone::dbsync::end': } ~> anchor { 'keystone::service::begin': } ~> service<| tag == 'keystone-service' |> ~> anchor { 'keystone::service::end': } oslo::cache<||> -> anchor['keystone::service::begin'] oslo::db<||> -> anchor['keystone::dbsync::begin'] anchor['keystone::config::begin'] -> keystone_paste_ini<||> ~> anchor['keystone::config::end'] anchor['keystone::config::begin'] -> openstacklib::policy::base<||> ~> anchor['keystone::config::end'] anchor['keystone::install::begin'] -> package<| tag == 'keystone-support-package'|> -> anchor['keystone::install::end'] package<| tag == 'openstack'|> ~> anchor['keystone::service::end'] anchor['keystone::service::end'] -> keystone_domain<||> anchor['keystone::service::end'] -> keystone_endpoint<||> anchor['keystone::service::end'] -> keystone_role<||> anchor['keystone::service::end'] -> keystone_service<||> anchor['keystone::service::end'] -> keystone_tenant<||> anchor['keystone::service::end'] -> keystone_user<||> anchor['keystone::service::end'] -> keystone_user_role<||> anchor['keystone::install::end'] ~> anchor['keystone::service::begin'] anchor['keystone::config::end'] ~> anchor['keystone::service::begin'] },0,1,"anchor['keystone::install::begin'] -> package<| tag == 'keystone-support-package'|>, anchor['keystone::install::end'] -> package<| tag == 'keystone-support-package'|>, anchor['keystone::service::end'] -> keystone_domain<||>, anchor['keystone::service::end'] -> keystone_endpoint<||>, anchor['keystone::service::end'] -> keystone_role<||>, anchor['keystone::service::end'] -> keystone_service<||>, anchor['keystone::service::end'] -> keystone_tenant<||>, anchor['keystone::service::end'] -> keystone_user<||>, anchor['keystone::service::end'] -> keystone_user_role<||>","CWE-19, CWE-20","{'reason': 'The anchor metacharacter can be used to manage Puppet runs and create logical groupings. When used properly, it allows a developer to define the start and end of a logical block of code, thus enabling it to run in a specific order and in the context of the previous blocks. This, however, can also lead to security issues if misused or used improperly. In the provided script, the anchor metacharacter is used to create logical blocks of code that run in a specific order, ensuring the packages are installed before anything else. This is important to prevent installation issues. However, the developer could have made the anchors too small or used them incorrectly, leading to security issues. For example, an anchor with the wrong scope, one', 'related_cwe': 'CWE-19, CWE-20', 'is_misconfiguration_related': 'No'}"
618,"class { '::neutron': allow_overlapping_ips => true, rabbit_password => 'password', rabbit_user => 'guest', rabbit_host => 'localhost', service_plugins => ['router'] } class { '::neutron::server': auth_password => 'password', database_connection => 'mysql://neutron:password@192.168.1.1/neutron', } class { '::neutron::agents::l3': enabled => true, use_namespaces => false, require => neutron_router['demo_router'], } neutron_l3_agent_config { 'default/router_id': value => 'demo_router', transform_to => 'uuid'; }",0,1,"class { '::neutron': allow_overlapping_ips => true, rabbit_password => 'password', rabbit_user => 'guest', rabbit_host => 'localhost', service_plugins => ['router'] }, class { '::neutron::agents::l3': enabled => true, use_namespaces => false, require => neutron_router['demo_router'], }, class { '::neutron::server': auth_password => 'password', database_connection =>'mysql://neutron:password@192.168.1.1/neutron', }, class {'::neutron': allow_overlapping_ips => true, rabbit_password => 'password', rabbit_user => 'guest', rabbit_host => 'localhost', service_plugins => ['router'] }, neutron_l3_agent_config { 'default/router_id': value => 'demo_router', transform_to => 'uuid'; }","CWE-253, CWE-256","{'reason': 'CWE-253 - CWE-256 - [Give a detailed reasoning why this issue is related to CWE-253 and CWE-256]', 'related_cwe': 'CWE-253, CWE-256', 'is_misconfiguration_related': 'Yes'}"
619,"class cdh::hadoop::namenode::primary inherits cdh::hadoop::namenode { if ($::cdh::hadoop::ha_enabled) { $primary_namenode_id = $::cdh::hadoop::primary_namenode_id exec { 'haaadmin-transitiontoactive': command => ""/usr/bin/hdfs haadmin -transitiontoactive ${primary_namenode_id}"", unless => ""/usr/bin/hdfs haadmin -getservicestate ${primary_namenode_id} | /bin/grep -q active"", user => 'hdfs', refreshonly => true, subscribe => exec['hadoop-namenode-format'], require => service['hadoop-hdfs-namenode'], } cdh::hadoop::directory { require => exec['haaadmin-transitiontoactive'], } } else { cdh::hadoop::directory { require => service['hadoop-hdfs-namenode'], } } cdh::hadoop::directory { '/tmp': owner => 'hdfs', group => 'hdfs', mode => '1777', } cdh::hadoop::directory { '/user': owner => 'hdfs', group => 'hadoop', mode => '0775', } cdh::hadoop::directory { '/user/hdfs': owner => 'hdfs', group => 'hdfs', mode => '0755', require => cdh::hadoop::directory['/user'], } cdh::hadoop::directory { '/var': owner => 'hdfs', group => 'hdfs', mode => '0755', } cdh::hadoop::directory { '/var/lib': owner => 'hdfs', group => 'hdfs', mode => '0755', require => cdh::hadoop::directory['/var'], } cdh::hadoop::directory { '/var/log': owner => 'hdfs', group => 'hdfs', mode => '0755', require => cdh::hadoop::directory['/var'], } }",1,1,"cdh::hadoop::directory { '/tmp':, cdh::hadoop::directory { '/user':, cdh::hadoop::directory { '/user/hdfs':, cdh::hadoop::directory { '/var':, cdh::hadoop::directory { '/var/lib':, cdh::hadoop::directory { '/var/log':, if ($::cdh::hadoop::ha_enabled) {, require => cdh::hadoop::directory['/var'],, },","CWE-252, CWE-255","{'reason': 'In this specific case, this misconfiguration is related to CWE-252. The directories listed are required to be accessible by all services running on the system. If any of these directories are inaccessible to the services, Hadoop may stop working. This issue has been fixed in the latest version of this module.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
620,"class runner::tasks::checkout_tools($runlevel=0) { include packages::mozilla::hgtool include runner file { '/tools/checkouts': ensure => directory, owner => $::config::builder_username, group => $::config::builder_group; } runner::task { ""${runlevel}-checkout_tools"": require => [ class['packages::mozilla::hgtool'], file['/tools/checkouts'], ], content => template(""${module_name}/tasks/checkout_tools.erb""); } }",1,1,"class runner::tasks::checkout_tools($runlevel=0) { include packages::mozilla::hgtool include runner file { '/tools/checkouts': ensure => directory, owner => $::config::builder_username, group => $::config::builder_group; } runner::task {, content => template(\, content => template(\\, file { '/tools/checkouts': ensure => directory, owner => $::config::builder_username, group => $::config::builder_group; }, include runner, include runner::tasks::checkout_tools, runner::task { \, runner::task { \\","CWE-248, CWE-693","{'reason': 'The provided code snippet contains a vulnerable user input handling error, and the misconfiguration issue may cause a command injection attack. Therefore, the provided misconfiguration is related to CWE-693.', 'related_cwe': 'CWE-693', 'is_misconfiguration_related': 'Yes'}"
621,"class users::deploystudio { include config anchor { 'users::deploystudio::begin': ; 'users::deploystudio::end': ; } $username = $::config::deploystudio_username if ! $username or $username == '' { fail(""deploystudio username is not defined or empty"") } $uid = $config::deploystudio_uid if $uid < 500 { fail(""deploystudio user uid must be set above 500"") } $group = 'staff' $home = ""/users/$username"" class { 'users::deploystudio::account': stage => users, username => $username, group => $group, grouplist => [], home => $home, uid => $uid; } anchor['users::deploystudio::begin'] -> class { 'users::deploystudio::setup': username => $username, group => $group, home => $home; } -> anchor['users::deploystudio::end'] }",1,1,"anchor['users::deploystudio::begin'] -> class { 'users::deploystudio::setup': username => $username, group => $group, home => $home; } -> anchor['users::deploystudio::end'], class users::deploystudio { include config, class { 'users::deploystudio::account': stage => users, username => $username, group => $group, grouplist => [], home => $home, uid => $uid; }, class { 'users::deploystudio::setup': username => $username, group => $group, home => $home; }, fail(\\, if! $username or $username == '' { fail(\, if! $username or $username == '' { fail(\\, include config",CWE-732,"{'reason': 'the misconfiguration was caused by the user not setting an initial value for the username variable', 'related_cwe': 'CWE-732: [User Input is not checked and is passed to the puppet manifest without any filtering]', 'is_misconfiguration_related': 'Yes'}"
622,"class vnc { include config include users::builder if ($::operatingsystem != windows) { include packages::vncserver } case $::operatingsystem { darwin: { osxutils::defaults { ard_alllocalusers: domain => ""/library/preferences/com.apple.remotemanagement"", key => ""ard_alllocalusers"", value => ""1""; } case $macosx_productversion_major { '10.6': { file { '/etc/screensharing.launchd': content => 'enabled', owner => root, group => wheel, mode => 0644; } } default: { service { 'com.apple.screensharing': enable => true, ensure => running, } } } $kickstart = ""/system/library/coreservices/remotemanagement/ardagent.app/contents/resources/kickstart"" exec { ""enable-remote-builduser-access"": command => ""$kickstart -configure -allowaccessfor -specifiedusers; $kickstart -activate -configure -access -on -users $::users::builder::username -privs -all -restart -agent -menu"", refreshonly => true; } } ubuntu: { if (secret(""builder_pw_vnc_cleartext"") == '') { fail('no vnc password set') } file { ""/etc/init/x11vnc.conf"": content => template(""${module_name}/x11vnc.conf.erb""); ""/etc/init.d/x11vnc"": ensure => link, target => ""/lib/init/upstart-job""; ""$::users::builder::home/.vnc"": ensure => directory, mode => 0700, owner => $::users::builder::username, group => $::users::builder::group; ""$::users::builder::home/.vnc/passwd"": ensure => absent; ""/etc/vnc_passwdfile"": ensure => file, mode => 0600, owner => root, group => root, content => secret(""builder_pw_vnc_cleartext""), show_diff => false; } } windows: { include packages::ultravnc include vnc::ultravnc_ini } default: { fail(""cannot set up vnc on this platform"") } } }",1,1,"case $::operatingsystem { darwin: { osxutils::defaults { ard_alllocalusers: domain => \, case $::operatingsystem { darwin: { osxutils::defaults { ard_alllocalusers: domain => \\, case $::operatingsystem { darwin: { osxutils::defaults { ard_alllocalusers: domain => \\\\, file { '/etc/screensharing.launchd': content => 'enabled', owner => root, group => wheel, mode => 0644;, file { '/etc/vnc_passwdfile': ensure => file, mode => 0600, owner => root, group => root, content => secret('builder_pw_vnc_cleartext'), show_diff => false;}, if (secret('builder_pw_vnc_cleartext') == '') { fail('no vnc password set') }, include packages::ultravnc, include vnc::ultravnc_ini, service { 'com.apple.screensharing': enable => true, ensure => running,}","CWE-285, CWE-287","{'reason': 'Since the secret value is stored in a Puppet external fact, it can be easily retrieved by an attacker. Since the secret value is stored in a Puppet external fact, it can be easily retrieved by an attacker. Secret values should be stored in Hiera and encrypted. Hiera should have a different permissions level than Hiera data, with the latter being a private resource. Hiera should have a different permissions level than Hiera data, with the latter being a private resource. The permissions level of Hiera data should be set according to best practices.', 'related_cwe': 'CWE-285, CWE-287', 'is_misconfiguration_related': 'Yes'}"
623,"define pacemaker::constraint::location ( $resource, $location, $score, $ensure='present' ) { pcmk_constraint {""loc-${resource}-${location}"": ensure => $ensure, constraint_type => location, resource => $resource, location => $location, score => $score, require => exec['wait-for-settle'], } }",0,1,"ensure => $ensure, location => $location, pcmk_constraint {, pcmk_location {, pcmk_score {, require => exec['wait-for-settle'], score => $score","CWE-19, CWE-20, CWE-21, CWE-22, CWE-24, CWE-25, CWE-26, CWE-27, CWE-28, CWE-30, CWE-31, CWE-32, CWE-19, CWE-21, CWE-22, CWE-24, CWE-25, CWE-27, CWE-28, CWE-30, CWE-31, CWE-32, CWE-19, CWE-22, CWE-20, CWE-22, CWE-24, CWE-28, CWE-24, CWE-28, CWE-30, CWE-32, CWE-26, CWE-30, CWE-32","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-19,CWE-20,CWE-21,CWE-22,CWE-24,CWE-25,CWE-26,CWE-27,CWE-28,CWE-30,CWE-31,CWE-32', 'is_misconfiguration_related': 'Yes'}"
624,"notice('fuel-plugin-elasticsearch-kibana: firewall.pp') $authnz = hiera_hash('lma::kibana::authnz') class {'::firewall':} firewall { '000 accept all icmp requests': proto => 'icmp', action => 'accept', } firewall { '001 accept all to lo interface': proto => 'all', iniface => 'lo', action => 'accept', } firewall { '002 accept related established rules': proto => 'all', state => ['related', 'established'], action => 'accept', } firewall {'020 ssh': port => 22, proto => 'tcp', action => 'accept', } firewall { '113 corosync-input': port => 5404, proto => 'udp', action => 'accept', } firewall { '114 corosync-output': port => 5405, proto => 'udp', action => 'accept', } firewall { '100 elasticsearch rest': port => hiera('lma::elasticsearch::rest_port'), proto => 'tcp', action => 'accept', } firewall { '110 elasticsearch clustering': port => hiera('lma::elasticsearch::clustering_port'), proto => 'tcp', action => 'accept', } firewall { '101 haproxy kibana': port => hiera('lma::elasticsearch::kibana_frontend_port'), proto => 'tcp', action => 'accept', } firewall { '101 kibana': port => hiera('lma::elasticsearch::kibana_port'), proto => 'tcp', action => 'accept', } firewall { '101 proxy-kibana': port => hiera('lma::elasticsearch::apache_port'), proto => 'tcp', action => 'accept', } if $authnz['ldap_authorization_enabled'] { firewall { '101 proxy-kibana-viewer': port => hiera('lma::elasticsearch::apache_viewer_port'), proto => 'tcp', action => 'accept', } } firewall { '999 drop all other requests': proto => 'all', chain => 'input', action => 'drop', }",1,1,"firewall { '020 ssh': port => 22, proto => 'tcp', action => 'accept', }, firewall { '101 haproxy kibana': port => hiera('lma::elasticsearch::kibana_frontend_port'), proto => 'tcp', action => 'accept', }, firewall { '101 kibana': port => hiera('lma::elasticsearch::kibana_port'), proto => 'tcp', action => 'accept', }, firewall { '101 proxy-kibana': port => hiera('lma::elasticsearch::apache_port'), proto => 'tcp', action => 'accept', }, firewall { '110 elasticsearch clustering': port => hiera('lma::elasticsearch::clustering_port'), proto => 'tcp', action => 'accept', }, firewall { '113 corosync-input': port => 5404, proto => 'udp', action => 'accept', }, firewall { '114 corosync-output': port => 5405, proto => 'udp', action => 'accept', }, firewall { '999 drop all other requests': proto => 'all', chain => 'input', action => 'drop', }, if $authnz['ldap_authorization_enabled'] { firewall { '101 proxy-kibana-viewer': port => hiera('lma::elasticsearch::apache_viewer_port'), proto => 'tcp', action => 'accept', } }, notice('fuel-plugin-elasticsearch-kibana: firewall.pp') $authnz = hiera_hash('lma::kibana::authnz') class {'::firewall':}",CWE-276,"{'reason': ""The firewall rule, '000 accept all icmp requests', is not configured to block traffic to the internal network. If the misconfiguration is related to the CWE"", 'related_cwe': 'CWE-276', 'is_misconfiguration_related': 'Yes'}"
625,"class hardware { include config if ($::manufacturer == ""seamicro"" and $::productname == ""sm10000-xe"") { if ($::operatingsystem == ""centos"") { file { ""/etc/e2fsck.conf"": source => ""puppet:///modules/hardware/seamicro-e2fsck.conf""; } } } if (($::manufacturer == ""hp"" and $::productname =~ /proliant/) or ($::boardmanufacturer == ""supermicro"" and $::boardproductname == ""x8sil"") or ($::boardmanufacturer == ""supermicro"" and $::boardproductname == ""x8sit"")) { if ($kernel == ""linux"") { include hardware::ipmitool } } if (($::boardmanufacturer == ""supermicro"" and $::boardproductname == ""x8sil"") or ($::boardmanufacturer == ""supermicro"" and $::boardproductname == ""x8sit"")) { if ($kernel == ""linux"") { include tweaks::i82574l_aspm } } if ($::virtual == ""vmware"") { if ($config::vmwaretools_version) { class { 'vmwaretools': version => $config::vmwaretools_version, archive_md5 => $config::vmwaretools_md5, archive_url => ""http://${config::data_server}/repos/private/vmware""; } } if ($kernel == ""linux"") { case $operatingsystem { centos: { augeas { ""vmware-clocksource"": context => ""/files/etc/grub.conf"", changes => [ ""set title[1]/kernel/clocksource pit"", ]; } } ubuntu: { augeas { ""vmware-clocksource"": context => ""/files/etc/default/grub"", changes => [ ""set grub_cmdline_extra clocksource=pit"" ]; } } } } } if ($::operatingsystem == ""windows"") { include hardware::hddoff include hardware::highperformance } }",1,1,"augeas { \\, case $operatingsystem { centos: { augeas { \, case $operatingsystem { ubuntu: { augeas { \\, class { 'vmwaretools': version => \\, file { \, include config, include hardware::ipmitool, include tweaks::i82574l_aspm, source => \",CWE-352,"{'reason': 'The misconfiguration is not related to the CWE since the misconfiguration is not specific to the CWE. For example, if we were to compare the misconfiguration to the CWE, we would see that the misconfiguration is not a specific instance of the CWE. The misconfiguration only addresses the underlying weakness and not the CWE itself.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
626,class role::cassandra { include ::cassandra },0,1,include ::cassandra,CWE-494,"{'reason': 'The `include` function loads a specified class or resource into the catalog. This should not be done outside a `case` statement because it results in a single Puppet run generating two catalogs, one with `cassandra` enabled and one without. This will result in conflicting resources and a `conflicting resource` error. Refer to https://docs.puppet.com/puppet/latest/reference/resources_include.html for more information. Since this `include` is not included inside of a `case`, it is not a misconfiguration as intended, but it may result in unexpected behavior.', 'related_cwe': 'CWE-994', 'is_misconfiguration_related': 'No'}"
627,"class midonet::repository::ubuntu ( $is_mem, $midonet_version, $midonet_stage, $openstack_release, $mem_version, $mem_username, $mem_password) { notice('adding midonet sources for debian-like distribution') if $::lsbdistrelease == '14.04' or $::lsbdistrelease == '16.04' { notice('adding midonet sources for debian-like distribution') include midonet::params include apt include apt::update if $is_mem { $midonet_repo_url = ""http://${mem_username}:${mem_password}@${midonet::params::midonet_repo_baseurl}/mem-${mem_version}"" } else { $midonet_repo_url = ""http://${midonet::params::midonet_repo_baseurl}/midonet-${midonet_version}"" } apt::key { 'midorepo': id => 'e9996503aeb005066261d3f38dda494e99143e75', source => $midonet::params::midonet_key_url } apt::source {'midonet': comment => 'midonet apt repository', location => $midonet_repo_url, release => $midonet_stage, key => { 'id' => 'e9996503aeb005066261d3f38dda494e99143e75', 'server' => 'subkeys.pgp.net', }, include => { 'src' => false, } } apt::source {'midonet-openstack-integration': comment => 'midonet apt plugin repository', location => ""http://${midonet::params::midonet_repo_baseurl}/openstack-${openstack_release}"", release => $midonet_stage, include_src => false, } apt::source {'midonet-openstack-misc': comment => 'midonet 3rd party tools and libraries', location => ""http://${midonet::params::midonet_repo_baseurl}/misc"", release => $midonet_stage, include_src => false, } exec {'update-midonet-repos': command => '/bin/true', require => [exec['apt_update'], apt::source['midonet'], apt::source['midonet-openstack-integration']] } apt::source<| |> -> exec<| title == 'update-midonet-repos' |> } else { fail(""${::lsbdistid} ${::lsbdistrelease} version not supported"") } }",1,1,"apt::source {'midonet': comment =>'midonet apt repository', location => $midonet_repo_url, release => $midonet_stage, key => { 'id' => 'e9996503aeb005066261d3f38dda494e99143e75','server' =>'subkeys.pgp.net', }, include => {'src' => false, } }, apt::source {'midonet-openstack-misc': comment =>'midonet 3rd party tools and libraries', location => $midonet::params::midonet_repo_baseurl,'/misc', release => $midonet_stage, include_src => false, }, if $::lsbdistid == 'ubuntu' {, if $::lsbdistrelease == '14.04' or $::lsbdistrelease == '16.04' {",CWE-1021,"{'reason': 'This misconfiguration is related to the provided CWE because it is an attempt to access a system by supplying invalid or false credentials. In this scenario, a puppet script is trying to retrieve information from a midonet repository via apt. By including the variables $mem_username and $mem_password in the script, a puppet script can retrieve private data from the midonet repository. Without checking whether the provided username and password are valid, a puppet script can gain access to private information. Since this attack is not specific to midonet repositories, it is related to CWE-1021.', 'related_cwe': 'CWE-1021', 'is_misconfiguration_related': 'Yes'}"
628,"define heka::output::http ( $config_dir, $url, $encoder = $title, $message_matcher = 'false', $username = undef, $password = undef, $timeout = undef, $method = 'post', $headers = {}, $use_buffering = true, $max_buffer_size = 1024 * 1024 * 1024, $queue_full_action = 'drop', $max_file_size = undef, $ensure = present, ) { include heka::params validate_hash($headers) if $use_buffering { validate_buffering($max_buffer_size, $max_file_size, $queue_full_action) } file { ""${config_dir}/output-${title}.toml"": ensure => $ensure, content => template('heka/output/http.toml.erb'), mode => '0600', owner => $heka::params::user, group => $heka::params::user, } }",0,1,"content => template('heka/output/http.toml.erb'),, file {, file { \, include heka::params, template('heka/output/http.toml.erb'), validate_buffering($max_buffer_size, $max_file_size, $queue_full_action), validate_hash($headers) if $use_buffering {","CWE-113, CWE-125, CWE-89","{'reason': 'Since the variable $title can be modified, that variable can be easily injected into the configuration file, which is then used to generate the target URL. This is a CWE-89 issue.', 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
629,"class swift::storage::container( $manage_service = true, $enabled = true, $package_ensure = 'present', $allowed_sync_hosts = ['127.0.0.1'], $config_file_name = 'container-server.conf', $service_provider = $::swift::params::service_provider ) inherits ::swift::params { include ::swift::deps swift_config<| |> ~> service['swift-container-updater'] swift::storage::generic { 'container': manage_service => $manage_service, enabled => $enabled, package_ensure => $package_ensure, config_file_name => $config_file_name, service_provider => $service_provider } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } swift::service { 'swift-container-updater': os_family_service_name => $::swift::params::container_updater_service_name, service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, require => package['swift-container'], subscribe => concat[""/etc/swift/${config_file_name}""], } if $::osfamily == 'debian' { swift::service { 'swift-container-sync': os_family_service_name => $::swift::params::container_sync_service_name, service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, require => package['swift-container'], subscribe => concat[""/etc/swift/${config_file_name}""], } swift_config<| |> ~> service['swift-container-sync'] } }",0,1,"class swift::storage::container( $manage_service = true, $enabled = true, $package_ensure = 'present', $allowed_sync_hosts = ['127.0.0.1'], $config_file_name = 'container-server.conf', $service_provider = $::swift::params::service_provider ), swift::service {'swift-container-sync': os_family_service_name => $::swift::params::container_sync_service_name, service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, require => package['swift-container'], subscribe => concat[, swift::service {'swift-container-updater': os_family_service_name => $::swift::params::container_updater_service_name, service_ensure => $service_ensure, enabled => $enabled, config_file_name => $config_file_name, service_provider => $service_provider, require => package['swift-container'], subscribe => concat[, swift_config<| |> ~> service['swift-container-sync'], swift_config<| |> ~> service['swift-container-updater']",CWE-284,"{'reason': 'This misconfiguration involves an incorrect or incomplete input value being supplied by the user to a resource declaration. In this case, it is the setting of the $allowed_sync_hosts variable. Inadequate validation of the value of this variable by the service declaration allows a malicious user to modify it to allow any host to communicate with the service, rather than limiting communication to a single, specific host.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
630,"notice('fuel-plugin-influxdb-grafana: enable_quorum.pp') prepare_network_config(hiera_hash('network_scheme', {})) $corosync_roles = hiera_array('lma::corosync_roles') $network_metadata = hiera_hash('network_metadata') $nodes = get_nodes_hash_by_roles($network_metadata, $corosync_roles) $fuel_version = 0 + hiera('fuel_version') if count($nodes) > 2 { $policy = 'stop' } else { $policy = 'ignore' } if $fuel_version < 9.0 { cs_property { 'no-quorum-policy': ensure => present, value => $policy, provider => 'crm', } } else { pcmk_property { 'no-quorum-policy': ensure => present, value => $policy, } }",0,1,puppet:///modules/lma/pacemaker/crm_attribute.pp,CWE-250,"{'reason': 'CWE-250, Misconfiguration in pacemaker is related with cwe-250, in which a bad configuration can be the cause of an outage', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
631,"class heat::cors ( $allowed_origin = $::os_service_default, $allow_credentials = $::os_service_default, $expose_headers = $::os_service_default, $max_age = $::os_service_default, $allow_methods = $::os_service_default, $allow_headers = $::os_service_default, ) { include ::heat::deps oslo::cors { 'heat_config': allowed_origin => $allowed_origin, allow_credentials => $allow_credentials, expose_headers => $expose_headers, max_age => $max_age, allow_methods => $allow_methods, allow_headers => $allow_headers, } }",0,1,"allow_credentials, allow_headers, allow_methods, allowed_origin, expose_headers, include ::heat::deps, max_age, oslo::cors",CWE-1200,"{'reason': 'The `oslo::cors` class sets defaults for a set of attributes which will apply to all of the `oslo::cors` instances created. This includes attributes which define how clients will be allowed to access the endpoint. Because of the default values for `allowed_origin`, `allow_credentials`, `expose_headers`, `max_age`, `allow_methods`, and `allow_headers`, this makes the heat configuration vulnerable to XSS attacks', 'related_cwe': 'CWE-1200', 'is_misconfiguration_related': 'Yes'}"
632,class { '::openstack_tasks::aodh::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server warning('osnailyfacter/modular/./aodh/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./aodh/db.pp'),0,1,"class mysql::config {], class mysql::config {} include mysql::config, class mysql::server {], class { '::openstack_tasks::aodh::db' :}, class { \\':openstack_tasks::aodh::db\\':}, include mysql::config, include mysql::server, warning(\'osnailyfacter/modular/./aodh/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./aodh/db.pp\')","CWE-259: Use of Hard-coded, Security-relevant Constants, CWE-494: Improper Control of Web-Based Access to an Internal Resource","{'reason': 'Reason: The use of the warning function does not cause a vulnerability, as the warning function is used correctly. The warning function is used to inform developers of the change in functionality of deprecated code, but it does not cause a vulnerability or security issue. CWE-494 is related to improper control of web-based access to an internal resource. However, the use of the warning function is not related to improper control of web-based access to an internal resource. The warning function is not used to gain access to internal resources, and there is no vulnerability or security issue associated with the use of the warning function.', 'related_cwe': 'CWE-494: Improper Control of Web-Based Access to an Internal Resource', 'is_misconfiguration_related': 'No'}"
633,"class graphoid( $port, $log_level = undef, $allowed_domains = {}, $domain_map = {}, $timeout = 5000, $headers = false, $error_headers = false, ) { require_package('libcairo2-dev') require_package('libjpeg-dev') require_package('libgif-dev') service::node { 'graphoid': port => $port, log_level => $log_level, config => { alloweddomains => $allowed_domains, domainmap => $domain_map, timeout => $timeout, headers => $headers, errorheaders => $error_headers, }, } }",0,1,"require_package('libcairo2-dev')\\\\nrequire_package('libjpeg-dev')\\\\nrequire_package('libgif-dev')\\\\n, require_package('libcairo2-dev')\\nrequire_package('libjpeg-dev')\\nrequire_package('libgif-dev')\\n, service::node { 'graphoid':\\\\\\\\nport => $port,\\\\\\\\nlog_level => $log_level,\\\\\\\\nconfig => {\\\\\\\\nalloweddomains => $allowed_domains,\\\\\\\\ndomainmap => $domain_map,\\\\\\\\ntimeout => $timeout,\\\\\\\\nheaders => $headers,\\\\\\\\nerrorheaders => $error_headers,\\\\\\\\n},\\\\\\\\n}, service::node { 'graphoid':\\\\nport => $port,\\\\nlog_level => $log_level,\\\\nconfig => {\\\\nalloweddomains => $allowed_domains,\\\\ndomainmap => $domain_map,\\\\ntimeout => $timeout,\\\\nheaders => $headers,\\\\nerrorheaders => $error_headers,\\\\n},\\\\n}, service::node { 'graphoid':\\nport => $port,\\nlog_level => $log_level,\\nconfig => {\\nalloweddomains => $allowed_domains,\\ndomainmap => $domain_map,\\ntimeout => $timeout,\\nheaders => $headers,\\nerrorheaders => $error_headers,\\n},\\n}, service::node { 'graphoid':\nport => $port,\nlog_level => $log_level,\nconfig => {\nalloweddomains => $allowed_domains,\ndomainmap => $domain_map,\ntimeout => $timeout,\nheaders => $headers,\nerrorheaders => $error_headers,\n},\n}","CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-522: Insufficiently Protected Credentials","{'reason': 'The path traversal misconfiguration CWE-22 and insufficiently protected credentials CWE-522 have similar vulnerabilities in which an attacker may access and potentially exploit sensitive data. However, the provided Puppet script does not have any path traversal vulnerabilities and insufficient protection of credentials cannot occur without sensitive data. The misconfiguration is not related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
634,"notice('fuel-plugin-lma-infrastructure-alerting: enable_quorum.pp') prepare_network_config(hiera_hash('network_scheme', {})) $corosync_roles = hiera_array('lma::corosync_roles') $network_metadata = hiera_hash('network_metadata') $nodes = get_nodes_hash_by_roles($network_metadata, $corosync_roles) $fuel_version = 0 + hiera('fuel_version') if count($nodes) > 2 { $policy = 'stop' } else { $policy = 'ignore' } if $fuel_version < 9.0 { cs_property { 'no-quorum-policy': ensure => present, value => $policy, provider => 'crm', } } else { pcmk_property { 'no-quorum-policy': ensure => present, value => $policy, } }",0,1,"cs_property { 'no-quorum-policy': ensure => present, value => $policy, provider => 'crm', }, if $fuel_version < 9.0 { cs_property { 'no-quorum-policy': ensure => present, value => $policy, provider => 'crm', } } else { pcmk_property { 'no-quorum-policy': ensure => present, value => $policy, } }, if count($nodes) > 2 { $policy ='stop' } else { $policy = 'ignore' }, notice('fuel-plugin-lma-infrastructure-alerting: enable_quorum.pp') prepare_network_config(hiera_hash('network_scheme', {})) $corosync_roles = hiera_array('lma::corosync_roles') $network_metadata = hiera_hash('network_metadata') $nodes = get_nodes_hash_by_roles($network_metadata, $corosync_roles) $fuel_version = 0 + hiera('fuel_version'), pcmk_property { 'no-quorum-policy': ensure => present, value => $policy, }","CWE-259, CWE-264","{'reason': 'When quorum is enabled, there is a possibility that an unresponsive server or one that has been removed may still be counted in the quorum. A quorum-based policy is often used in a cluster in which the cluster has a minimum number of members. When the number of members drops below the quorum, the cluster stops functioning. Such a configuration could result in a denial of service when there is no quorum. The LLM should ensure that quorum is enabled for high availability, otherwise, it would result in a vulnerability by exposing the cluster configuration to unavailability. It is also a potential for misconfiguration as the value of the no-quorum-policy property could be set incorrectly (i.e., either set incorrectly for a quorum-based', 'related_cwe': 'CWE-259, CWE-264', 'is_misconfiguration_related': 'Yes'}"
635,"class plugin_zabbix::monitoring::haproxy_mon { include plugin_zabbix::params if defined_in_state(class[cluster::haproxy]) { plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app haproxy"": host => $plugin_zabbix::params::host_name, template => 'template app haproxy', api => $plugin_zabbix::monitoring::api_hash, } plugin_zabbix::agent::userparameter { 'haproxy.be.discovery': key => 'haproxy.be.discovery', command => '/etc/zabbix/scripts/haproxy.sh -b'; 'haproxy.be': key => 'haproxy.be[*]', command => '/etc/zabbix/scripts/haproxy.sh -v $1 $2 $3'; 'haproxy.fe.discovery': key => 'haproxy.fe.discovery', command => '/etc/zabbix/scripts/haproxy.sh -f'; 'haproxy.fe': key => 'haproxy.fe[*]', command => '/etc/zabbix/scripts/haproxy.sh -v $1 $2 $3'; 'haproxy.sv.discovery': key => 'haproxy.sv.discovery', command => '/etc/zabbix/scripts/haproxy.sh -s'; 'haproxy.sv': key => 'haproxy.sv[*]', command => '/etc/zabbix/scripts/haproxy.sh -v $1 $2 $3'; } } }",0,1,"api => $plugin_zabbix::monitoring::api_hash,, command => '/etc/zabbix/scripts/haproxy.sh -b', command => '/etc/zabbix/scripts/haproxy.sh -s', command => '/etc/zabbix/scripts/haproxy.sh -v $1 $2 $3', include plugin_zabbix::params",CWE-20: Improper Input Validation,"{'reason': 'This is a case of improper input validation. Because of improper input validation of the $1 $2 $3 in the command line, a misconfiguration could potentially occur.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
636,"define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef ){ $script = $name file { $script: ensure => file, content => template('monasca/storm-startup-script.erb'), mode => '0755', owner => 'root', group => 'root', } }",1,1,"define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undefdefine monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef )\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef )\\\\\\\\\\\\\\n, define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef )\\\\\\n, define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef )\\\\n, define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef )\\n, define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef )\n, define monasca::storm::startup_script ( $storm_service = undef, $storm_install_dir = undef, $storm_user = undef ){\n",CWE-416,"{'reason': 'CWE-416: Use of Outdated and Vulnerable Software', 'related_cwe': 'CWE-416', 'is_misconfiguration_related': 'Yes'}"
637,"class swift::ringbuilder( $part_power = undef, $replicas = undef, $min_part_hours = undef ) { include ::swift::deps class['swift'] -> class['swift::ringbuilder'] swift::ringbuilder::create{ ['object', 'account', 'container']: part_power => $part_power, replicas => $replicas, min_part_hours => $min_part_hours, } swift::ringbuilder::create['object'] -> ring_object_device <| |> ~> swift::ringbuilder::rebalance['object'] swift::ringbuilder::create['container'] -> ring_container_device <| |> ~> swift::ringbuilder::rebalance['container'] swift::ringbuilder::create['account'] -> ring_account_device <| |> ~> swift::ringbuilder::rebalance['account'] swift::ringbuilder::rebalance{ ['object', 'account', 'container']: } }",1,1,"include swift::ringbuilder, ring_container_device, swift::ringbuilder::create, swift::ringbuilder::rebalance",CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': ""The misconfiguration found was in regards to the replication policy for the container device, which is set to 1 instead of the default. This configuration was found to be not related to CWE 22 as it doesn't cause a file to be read or overwritten. The original defect label was not changed, and we would like to keep it as is."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
638,"class packages::postfix { case $::operatingsystem { ubuntu: { package { ""postfix"": ensure => latest; } } centos: { file { '/root/switch-ssmtp-postfix': content => ""erase ssmtp\ninstall postfix\nrun\n""; } -> exec { 'switch-ssmtp-postfix': onlyif => '/bin/rpm -qi ssmtp', command => '/usr/bin/yum -y shell < /root/switch-ssmtp-postfix'; } ~> exec { ""update-mta-alternatives"": command => ""/usr/sbin/alternatives --auto mta"", refreshonly => true; } package { ""postfix"": ensure => latest; } } darwin: { } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"case $::operatingsystem {\\n darwin: { }\\n ubuntu: { package { \\, case $::operatingsystem {\n default: { fail(\, exec { \, file { \\, file { \\\\, file { \\\\\\\\, package { \\\, package { \\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\n darwin: { }\\\\\\\\n ubuntu: { package { \\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\n darwin: { }\\\\n ubuntu: { package { \\\\",CWE-384,"{'reason': ""The puppet script provides an example of using exec, but is not complete. The script could be improved by providing examples of running a shell, which would also provide a simple way to run multiple commands on the same line. Exec also allows you to use the 'unless' option, so you could avoid the failure option and write the script more succinctly."", 'related_cwe': 'CWE-384', 'is_misconfiguration_related': 'Yes'}"
639,"class users::root { include ::config anchor { 'users::root::begin': ; 'users::root::end': ; } $username = 'root' $group = $::operatingsystem ? { darwin => wheel, default => root } $home = $::operatingsystem ? { darwin => '/var/root', windows => $rlocalpath, default => '/root' } class { 'users::root::account': stage => users, username => $username, group => $group, home => $home; } anchor['users::root::begin'] -> class { 'users::root::setup': username => $username, group => $group, home => $home; } -> anchor['users::root::end'] }",1,1,"class { 'users::root::account': stage => users, username => $username, group => $group, home => $home; }, class { 'users::root::setup': username => $username, group => $group, home => $home; }, users::root::account':, users::root::begin', users::root::end', users::root::setup':",CWE-276,"{'reason': '1. CWE-276: Incorrect Default Permission \\n 2. The default `users::root` account is the root user, which will have the most system privileges. However, a misconfigured rule such as this will not change the default permission, and an attacker can use the `root` account to modify the system settings.', 'related_cwe': 'CWE-276', 'is_misconfiguration_related': 'Yes'}"
640,"class cdh::hadoop::users($groups = ['hadoop']) { class['cdh::hadoop'] -> class['cdh::hadoop::users'] file { '/usr/local/bin/create_hdfs_user_directories.sh': source => 'puppet:///modules/cdh/hadoop/create_hdfs_user_directories.sh', owner => 'root', group => 'hdfs', mode => '0554', } exec { 'create_hdfs_user_directories': command => ""/usr/local/bin/create_hdfs_user_directories.sh --verbose ${groups}"", unless => ""/usr/local/bin/create_hdfs_user_directories.sh --check-for-changes ${groups}"", user => 'hdfs', logoutput => true, } }",1,1,"exec {'create_hdfs_user_directories': command => \, file {'/usr/local/bin/create_hdfs_user_directories.sh': source => 'puppet:///modules/cdh/hadoop/create_hdfs_user_directories.sh', owner => 'root', group => 'hdfs', mode => '0554', }",CWE-384,"{'reason': ""The execution of the file is the same as executing the script. There is a risk of bypassing the script's access control. It is related to CWE-384."", 'related_cwe': 'CWE-384', 'is_misconfiguration_related': 'Yes'}"
641,"class role::psr3 { mediawiki::composer::require { 'monolog/monolog for psr3 role': package => 'monolog/monolog', version => '~1.18.2', } mediawiki::settings { 'psr3': priority => 1, values => template('role/psr3/settings.php.erb'), require => mediawiki::composer::require['monolog/monolog for psr3 role'], } }",1,1,"class role::psr3 { mediawiki::composer::require {'monolog/monolog for psr3 role': package =>'monolog/monolog', version => '~1.18.2', } mediawiki::settings { 'psr3': priority => 1, values => template('role/psr3/settings.php.erb'), require => mediawiki::composer::require['monolog/monolog for psr3 role'], } }, mediawiki::composer::require {'monolog/monolog for psr3 role': package =>'monolog/monolog', version => '~1.18.2', }, mediawiki::settings { 'psr3': priority => 1, values => template('role/psr3/settings.php.erb'), require => mediawiki::composer::require['monolog/monolog for psr3 role'], }",CWE-1171,"{'reason': ""Mediawiki::composer::require{'monolog/monolog for psr3 role'}: 'Monolog/monolog' is the package name. We should be using'mediawiki/monolog' instead of'monolog/monolog'. This might cause errors when trying to update Monolog."", 'related_cwe': 'CWE-1171', 'is_misconfiguration_related': 'Yes'}"
642,class { '::openstack_tasks::keystone::workloads_collector_remove' :} warning('osnailyfacter/modular/./keystone/workloads_collector_remove.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/workloads_collector_remove.pp'),0,0,nan,nan,"{'reason': 'please use openstack_tasks/examples/./keystone/workloads_collector_remove.pp', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
643,"class ironic::drivers::drac ( $package_ensure = 'present', ) { ensure_packages('python-dracclient', { ensure => $package_ensure, tag => ['openstack', 'ironic-package'], } ) }",0,1,"['openstack', 'ironic-package'], } ), class ironic::drivers::drac ($package_ensure = 'present', ) { ensure_packages('python-dracclient', { ensure => $package_ensure, tag => ['openstack', 'ironic-package'], } ) }, ensure => $package_ensure, tag => ['openstack', 'ironic-package'], } ), ensure_packages('python-dracclient', { ensure => $package_ensure, tag => ['openstack', 'ironic-package'], } ), openstack', 'ironic-package'], } ), tag => ['openstack', 'ironic-package'], } )","CWE-15, CWE-16","{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
644,"class tripleo::profile::base::nova::conductor ( $step = hiera('step'), ) { include ::tripleo::profile::base::nova if $step >= 4 { include ::nova::conductor } }",0,1,"class tripleo::profile::base::nova::conductor ($step = hiera('step'),), include ::nova::conductor, include ::tripleo::profile::base::nova if $step >= 4","CWE-1000, CWE-1001, CWE-1002, CWE-1003","{'reason': 'Describe the issue.', 'related_cwe': 'CWE number', 'is_misconfiguration_related': 'Yes/No'}"
645,"class cluster::aodh_evaluator { include ::aodh::params $service_name = $::aodh::params::evaluator_service_name $metadata = { 'resource-stickiness' => '1', 'migration-threshold' => '3' } $operations = { 'monitor' => { 'interval' => '20', 'timeout' => '30', }, 'start' => { 'interval' => '0', 'timeout' => '60', }, 'stop' => { 'interval' => '0', 'timeout' => '60', }, } $primitive_type = 'aodh-evaluator' $parameters = { 'user' => 'aodh' } pacemaker::service { $service_name : primitive_type => $primitive_type, metadata => $metadata, parameters => $parameters, operations => $operations } pcmk_resource[""p_${service_name}""] -> service[$service_name] }",0,0,puppet code,CWE-ID,"{'reason': 'The misconfiguration is not related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
646,class { '::openstack_tasks::ceilometer::compute' :} warning('osnailyfacter/modular/./ceilometer/compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/compute.pp'),1,1,class {'::openstack_tasks::ceilometer::compute' :} warning('osnailyfacter/modular/./ceilometer/compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/compute.pp'),"CWE-120, CWE-20, CWE-22, CWE-25, CWE-522","{'reason': 'The misconfiguration is a warning message about an existing bug or incompatibility in the Puppet code. It should not affect the intended functionality of the code. The warning does not indicate any security issues.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
647,"if $osfamily == ""redhat"" { $devel_packages=[""kernel-devel"", ""kernel-lt-devel""] package{ $devel_packages: ensure => installed } }",1,1,"$devel_packages=[\n\t\, if $osfamily == \, if $osfamily == \\\, if $osfamily == \\\\\\\, if $osfamily == \\\\\\\\\\\\\\\\\\, if $osfamily == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package{ $devel_packages: ensure => installed}, package{ $devel_packages: ensure => installed},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, package{ $devel_packages: ensure => installed},\\\\\\n, package{ $devel_packages: ensure => installed},\\n",CWE-1000,"{'reason': 'The script is vulnerable to CWE-1000 as it installs the wrong package for different OSs and does not perform OS verification.', 'related_cwe': 'CWE-1000', 'is_misconfiguration_related': 'Yes'}"
648,"class mobilecontentservice( $port, $log_level = undef, ) { require ::restbase service::node { 'mobileapps': port => $port, log_level => $log_level, } }",1,1,"class mobilecontentservice, log_level, mobileapps, port, service::node","CWE-16, CWE-20, CWE-25","{'reason': 'CWE 16, 25', 'related_cwe': 'CWE 16, CWE 25', 'is_misconfiguration_related': 'Yes'}"
649,"class barbican::keystone::auth ( $password, $auth_name = 'barbican', $email = 'barbican@localhost', $tenant = 'services', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = 'barbican', $service_type = 'key-manager', $region = 'regionone', $public_url = 'http://127.0.0.1:9311', $internal_url = 'http://127.0.0.1:9311', $admin_url = 'http://127.0.0.1:9311', ) { if $configure_user_role { keystone_user_role[""${auth_name}@${tenant}""] ~> service <| name == 'barbican-api' |> } keystone_endpoint[""${region}/${service_name}::${service_type}""] ~> service <| name == 'barbican-api' |> keystone::resource::service_identity { 'barbican': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $service_name, service_type => $service_type, service_description => 'key management service', region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",0,1,"keystone::resource::service_identity { 'barbican':, keystone_user_role[, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, }, service_name => $service_name, service_type => $service_type, service_description => 'key management service', region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, }, service_name => $service_name, service_type => $service_type, service_description => 'key management service', region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url,}],",CWE-284,"{'reason': 'User authentication credentials are hardcoded in Puppet code, which will not be properly obfuscated when generating the Puppet code for deployment. This might make the authentication information more vulnerable to cyberattacks. [CWE-284] This might make the authentication information more vulnerable to cyberattacks.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
650,"class signingworker::settings { include ::config $root = $config::signingworker_root $tools_dst = ""${root}/tools"" }",0,1,"class signingworker::settings { include ::config $root = $config::signingworker_root $tools_dst = \, class signingworker::settings { include ::config $root = $config::signingworker_root $tools_dst = \\, class signingworker::settings { include ::config $root = $config::signingworker_root $tools_dst = \\\\",CWE-259,"{'reason': 'The misconfiguration is related to the use of a local file to set a configuration variable.', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
651,"class tweaks::tcp_keepalive { case $::operatingsystem { centos, ubuntu: { sysctl::value { 'net.ipv4.tcp_keepalive_time': value => 120; 'net.ipv4.tcp_keepalive_intvl': value => 5; 'net.ipv4.tcp_keepalive_probes': value => 12; } } default: { notice(""don't know how to set keepalive time on $::operatingsystem"") } } }",1,1,"case $::operatingsystem {, case $::operatingsystem { centos, ubuntu: {, default: { notice(\\, don't know how to set keepalive time on $::operatingsystem\\\, notice(\, sysctl::value { 'net.ipv4.tcp_keepalive_intvl': value => 5;, sysctl::value { 'net.ipv4.tcp_keepalive_probes': value => 12;, sysctl::value { 'net.ipv4.tcp_keepalive_time': value => 120;","CWE-113, CWE-20, CWE-754","{'reason': 'CWE-20, CWE-113, CWE-754 are all related to the way you handle file descriptors. Here, this script handles a file descriptor in an unexpected way.', 'related_cwe': 'CWE-20, CWE-113, CWE-754', 'is_misconfiguration_related': 'Yes'}"
652,"class tripleo::profile::base::ceilometer ( $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) { if $step >= 3 { class { '::ceilometer' : rabbit_hosts => $rabbit_hosts, } include ::ceilometer::config } }",1,1,"class { '::ceilometer' : rabbit_hosts => $rabbit_hosts, }, class { tripleo::profile::base::ceilometer ( $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) {, if $step >= 3 {, include ::ceilometer::config, rabbit_hosts => $rabbit_hosts,",CWE-18,"{'reason': ""CWE-18 is an issue related to uncontrolled format string. The issue in this case can be found in the third argument of the include statement which is being passed to the ::ceilometer::config class. Since hiera('step', undef) is a string, it should be validated in case the user has provided an undefined variable for the hiera('step', undef) variable."", 'related_cwe': 'CWE-18', 'is_misconfiguration_related': 'Yes'}"
653,"define runner::task($content=undef, $source=undef) { include runner::settings file { ""${runner::settings::taskdir}/${title}"": before => service['runner'], content => $content, source => $source, mode => '0755'; } }",0,1,"content => $content, source => $source, mode => '0755';, include runner::settings",CWE-22,"{'reason': 'The content and source attribute in the file resource were defined for every task, and thus are always inherited to the task directory. A misconfiguration could have occurred if the script would write task-related information to the task directory, without removing the previous task data. This would result in all tasks having the same data, causing a lack of isolation.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
654,"class ironic::conductor ( $package_ensure = 'present', $enabled = true, $enabled_drivers = ['pxe_ipmitool'], $max_time_interval = '120', $force_power_state_during_sync = true, $http_url = $::os_service_default, $http_root = $::os_service_default, $automated_clean = $::os_service_default, $swift_account = $::os_service_default, $swift_temp_url_key = $::os_service_default, $swift_temp_url_duration = $::os_service_default, $cleaning_network_uuid = $::os_service_default, $cleaning_disk_erase = undef, $continue_if_disk_secure_erase_fails = $::os_service_default, $api_url = $::os_service_default, $provisioning_network_uuid = $::os_service_default, ) { include ::ironic::params include ::ironic::drivers::deploy ironic_config<||> ~> service['ironic-conductor'] $enabled_drivers_real = pick($::ironic::enabled_drivers, $enabled_drivers) validate_array($enabled_drivers_real) include ::ironic::drivers::agent if member($enabled_drivers_real, 'pxe_ipmitool') and $::osfamily == 'debian' { ensure_packages('ipmitool', { ensure => $package_ensure, tag => ['openstack', 'ironic-package'], } ) } if $cleaning_disk_erase { validate_re($cleaning_disk_erase, ['^full$', '^metadata$', '^none$']) } case $cleaning_disk_erase { 'full': { $erase_devices_priority = 10 $erase_devices_metadata_priority = 0 } 'metadata': { $erase_devices_priority = 0 $erase_devices_metadata_priority = 10 } 'none': { $erase_devices_priority = 0 $erase_devices_metadata_priority = 0 } default: { $erase_devices_priority = $::os_service_default $erase_devices_metadata_priority = $::os_service_default } } $http_url_real = pick($::ironic::drivers::deploy::http_url, $http_url) $http_root_real = pick($::ironic::drivers::deploy::http_root, $http_root) ironic_config { 'default/enabled_drivers': value => join($enabled_drivers_real, ','); 'conductor/max_time_interval': value => $max_time_interval; 'conductor/force_power_state_during_sync': value => $force_power_state_during_sync; 'conductor/automated_clean': value => $automated_clean; 'conductor/api_url': value => $api_url; 'glance/swift_account': value => $swift_account; 'glance/swift_temp_url_key': value => $swift_temp_url_key, secret => true; 'glance/swift_temp_url_duration': value => $swift_temp_url_duration; 'neutron/cleaning_network_uuid': value => $cleaning_network_uuid; 'neutron/provisioning_network_uuid': value => $provisioning_network_uuid; 'deploy/http_url': value => $http_url_real; 'deploy/http_root': value => $http_root_real; 'deploy/erase_devices_priority': value => $erase_devices_priority; 'deploy/erase_devices_metadata_priority': value => $erase_devices_metadata_priority; 'deploy/continue_if_disk_secure_erase_fails': value => $continue_if_disk_secure_erase_fails; } if $::ironic::params::conductor_package { package<| tag == 'ironic-package' |> -> service['ironic-conductor'] package { 'ironic-conductor': ensure => $package_ensure, name => $::ironic::params::conductor_package, tag => ['openstack', 'ironic-package'], } } if $enabled { $ensure = 'running' } else { $ensure = 'stopped' } service { 'ironic-conductor': ensure => $ensure, name => $::ironic::params::conductor_service, enable => $enabled, hasstatus => true, tag => 'ironic-service', } }",1,1,"http_root = $::os_service_default, http_root_real = pick($::ironic::drivers::deploy::http_root, $http_root), http_url = $::os_service_default, http_url_real = pick($::ironic::drivers::deploy::http_url, $http_url), if $continue_if_disk_secure_erase_fails, include ::ironic::drivers::agent, include ::ironic::drivers::deploy, service['ironic-conductor']","CWE-119, CWE-129, CWE-22, CWE-89","{'reason': 'Explanation of why the misconfiguration is related to CWE #', 'related_cwe': 'CWE #', 'is_misconfiguration_related': 'Yes'}"
655,"class kernelmodule::rc_modules { file { ""/etc/rc.modules"": ensure => present, mode => 0755; } }",0,1,"ensure => present, file { \, mode => 0755, }","CWE-22, CWE-25, CWE-306, CWE-312","{'reason': 'Please explain why the misconfiguration is related to the provided CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
656,"notice('modular: ironic/haproxy.pp') $network_metadata = hiera_hash('network_metadata') $storage_hash = hiera_hash('storage', {}) $public_ssl_hash = hiera('public_ssl') $ironic_api_nodes = get_nodes_hash_by_roles($network_metadata, ['primary-controller', 'controller']) $ironic_address_map = get_node_to_ipaddr_map_by_network_role($ironic_api_nodes, 'ironic/api') $ironic_server_names = hiera_array('ironic_names', keys($ironic_address_map)) $ironic_ipaddresses = hiera_array('ironic_ipaddresses', values($ironic_address_map)) $public_virtual_ip = hiera('public_vip') $internal_virtual_ip = hiera('management_vip') $baremetal_virtual_ip = $network_metadata['vips']['baremetal']['ipaddr'] if !($storage_hash['images_ceph'] and $storage_hash['objects_ceph']) and !$storage_hash['images_vcenter'] { $use_swift = true } else { $use_swift = false } if !($use_swift) and ($storage_hash['objects_ceph']) { $use_radosgw = true } else { $use_radosgw = false } openstack::ha::haproxy_service { ipaddresses => $ironic_ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $ironic_server_names, public => true, public_ssl => $public_ssl_hash['services'], haproxy_config_options => { option => ['httpchk get /', 'httplog','httpclose'], }, } openstack::ha::haproxy_service { 'ironic-api': order => '180', listen_port => 6385, internal_virtual_ip => $internal_virtual_ip, } openstack::ha::haproxy_service { 'ironic-baremetal': order => '185', listen_port => 6385, public => false, public_ssl => false, public_virtual_ip => false, internal_virtual_ip => $baremetal_virtual_ip, } if $use_swift { $swift_proxies_address_map = get_node_to_ipaddr_map_by_network_role(hiera_hash('swift_proxies', undef), 'swift/api') $swift_server_names = hiera_array('swift_server_names', keys($swift_proxies_address_map)) $swift_ipaddresses = hiera_array('swift_ipaddresses', values($swift_proxies_address_map)) openstack::ha::haproxy_service { 'swift-baremetal': order => '125', listen_port => 8080, ipaddresses => $swift_ipaddresses, server_names => $swift_server_names, public => false, public_ssl => false, public_virtual_ip => false, internal_virtual_ip => $baremetal_virtual_ip, haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose'], }, balancermember_options => 'check port 49001 inter 15s fastinter 2s downinter 8s rise 3 fall 3', } } if $use_radosgw { $rgw_address_map = get_node_to_ipaddr_map_by_network_role(hiera_hash('ceph_rgw_nodes'), 'ceph/radosgw') $rgw_server_names = hiera_array('radosgw_server_names', keys($rgw_address_map)) $rgw_ipaddresses = hiera_array('radosgw_ipaddresses', values($rgw_address_map)) openstack::ha::haproxy_service { 'radosgw-baremetal': order => '135', listen_port => 8080, balancermember_port => 6780, ipaddresses => $rgw_ipaddresses, server_names => $rgw_server_names, public => false, public_ssl => false, public_virtual_ip => false, internal_virtual_ip => $baremetal_virtual_ip, haproxy_config_options => { 'option' => ['httplog', 'httpchk get /'], }, } }",1,1,"storage_hash['images_vcenter']},, storage_hash['objects_ceph']},","CWE-345, CWE-732","{'reason': ""CWE-732: If storage_hash['images_vcenter'] is false, the 'public_ssl => $public_ssl_hash['services']' argument should not be present. Storage is not configured using Vcenter."", 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
657,"$db_host = 'db' $db_username = 'ironic' $db_name = 'ironic' $db_password = 'password' $rabbit_user = 'ironic' $rabbit_password = 'ironic' $rabbit_vhost = '/' $rabbit_hosts = ['rabbitmq:5672'] $rabbit_port = '5672' $glance_api_servers = 'glance:9292' $deploy_kernel = 'glance://deploy_kernel_uuid' $deploy_ramdisk = 'glance://deploy_ramdisk_uuid' $baremetal_json_hosts = ' ""ironic-bm-test.bifrost.example"": { ""ansible_ssh_host"": ""1.1.1.1"", ""uuid"": ""11111111-1111-1111-1111-111111111111"", ""driver_info"": { ""power"": { ""ipmi_address"": ""10.0.0.1"", ""ipmi_username"": ""admin"", ""ipmi_password"": ""pass"" }, }, ""nics"": [ { ""mac"": ""ff:ff:ff:ff:ff:ff"" } ], ""driver"": ""agent_ipmitool"", ""ipv4_address"": ""1.1.1.1"", ""properties"": { ""cpu_arch"": ""x86_64"", ""ram"": null, ""disk_size"": null, ""cpus"": null }, ""name"": ""ironic-bm-test.bifrost.example"" } ' node 'db' { class { '::mysql::server': config_hash => { 'bind_address' => '0.0.0.0', }, } class { '::mysql::ruby': } class { '::ironic::db::mysql': password => $db_password, dbname => $db_name, user => $db_username, host => $clientcert, allowed_hosts => ['controller'], } } node controller { class { '::ironic': db_password => $db_password, db_name => $db_name, db_user => $db_username, db_host => $db_host, rabbit_password => $rabbit_password, rabbit_userid => $rabbit_user, rabbit_virtual_host => $rabbit_vhost, rabbit_hosts => $rabbit_hosts, glance_api_servers => $glance_api_servers, } class { '::ironic::api': } class { '::ironic::conductor': } class { '::ironic::drivers::ipmi': } class { '::ironic::drivers::pxe': deploy_kernel => $deploy_kernel, deploy_ramdisk => $deploy_ramdisk, } } node bifrost-controller { class { '::ironic::bifrost': network_interface => 'eth1', ironic_db_password => 'changeme', mysql_password => 'changemetoo', baremetal_json_hosts => $baremetal_json_hosts, } }",0,1,"baremetal_json_hosts => $baremetal_json_hosts,, cpu_arch, db_password => $db_password,, disk_size, ironic_db_password => 'changeme',, mysql_password => 'changemetoo',, pass, power, rabbit_password => $rabbit_password,, ram",CWE-732,"{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
658,"class qdr( $ensure_package = 'installed', $ensure_service = 'running', $enable_service = true, $listener_addr = '127.0.0.1', $listener_auth_peer = 'no', $listener_idle_timout = '16', $listener_max_frame_size = '16384', $listener_port = '5672', $listener_require_encrypt = 'no', $listener_require_ssl = 'no', $listener_sasl_mech = 'anonymous', $listener_ssl_cert_db = undef, $listener_ssl_cert_file = undef, $listener_ssl_key_file = undef, $listener_ssl_pw_file = undef, $listener_ssl_password = undef, $listener_trusted_certs = 'unset', $log_enable = 'debug+', $log_module = 'default', $log_output = '/var/log/qdrouterd.log', $router_debug_dump = '/var/log', $router_hello_interval = '1', $router_hello_max_age = '3', $router_id = ""router.${::fqdn}"", $router_mode = 'standalone', $router_ra_interval = '30', $router_ra_interval_flux = '4', $router_remote_ls_max_age = '60', $router_sasl_name = 'qdrouterd', $router_sasl_path = '/etc/sasl2', $router_worker_threads = $::processorcount , ) inherits qdr::params { validate_string($router_worker_threads) validate_absolute_path($router_debug_dump) validate_absolute_path($router_sasl_path) validate_string($router_sasl_name) validate_re($router_mode,'^(standalone$|interior$)') validate_string($router_id) validate_string($listener_addr) validate_re($listener_port, '\d+') validate_re($listener_auth_peer,'^(yes$|no$)') validate_string($listener_sasl_mech) class { '::qdr::install': } -> class { '::qdr::config': } ~> class { '::qdr::service': } }",1,1,"class { '::qdr::service':}, log_enable = 'debug+', log_module = 'default', log_output = '/var/log/qdrouterd.log', router_id = 'router.${::fqdn}', router_mode ='standalone', router_remote_ls_max_age = '60', router_sasl_name = 'qdrouterd', router_sasl_password = undef, router_sasl_path = '/etc/sasl2'","CWE-272, CWE-307, CWE-312, CWE-319, CWE-327, CWE-329, CWE-333, CWE-369","{'reason': ""Explanation of the misconfiguration's relationship to the CWE"", 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes/No'}"
659,class { '::osnailyfacter::openstack_haproxy::openstack_haproxy_mysqld' :},1,1,class { '::osnailyfacter::openstack_haproxy::openstack_haproxy_mysqld' :},"CWE-16: Component Without Cryptographic Protocols, CWE-20: Improper Input Validation, CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-73: External Control of File Name or Path, CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'), CWE-78: Improper Neutralization of Special Elements used in a Command ('Command Injection'), CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-94: Improper Control of Generation of Code ('Code Injection'), CWE-95: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","{'reason': 'The misconfiguration is not related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
660,"define mediawiki::import::dump( $xml_dump, $dump_sentinel_page, $db_name = $::mediawiki::db_name, $wiki = $::mediawiki::wiki_name, ) { require ::mediawiki mediawiki::maintenance { ""import_dump_${title}"": command => ""/usr/local/bin/mwscript importdump.php --wiki=${db_name} ${xml_dump}"", unless => ""/usr/local/bin/mwscript pageexists.php --wiki=${db_name} ${dump_sentinel_page}"", require => mediawiki::wiki[$wiki], } mediawiki::extension <| |> -> mediawiki::import::dump <| |> mysql::sql <| |> -> mediawiki::import::dump <| |> }",1,1,"mediawiki::import::dump <| |> \\\\, mediawiki::import::dump <| |> \\\\\\\\, mediawiki::import::dump <| |> \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, mediawiki::maintenance { \, mediawiki::maintenance { \\, mediawiki::maintenance { \\\\, mediawiki::maintenance { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, mysql::sql <| |> -> mediawiki::import::dump <| |> \\, mysql::sql <| |> -> mediawiki::import::dump <| |> \\\\, mysql::sql <| |> -> mediawiki::import::dump <| |> \\\\\\\\\\\\\\\\",CWE-248,"{'reason': 'The provided script imports a dump into the specified wiki, which uses a maintenance job to accomplish the import. This can result in a variety of issues, including data being accidentally overwritten. Furthermore, any changes made to the XML dump or configuration are not applied. As such, this misconfiguration is related to CWE-248.', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
661,"class mozpool::inventorysync { if ($is_bmm_admin_host and !has_aspect('staging')) { file { ""/etc/cron.d/mozpool-inventorysync"": content => ""15,45 * * * * apache mozpool_config=${::mozpool::settings::config_ini} ${::mozpool::settings::root}/frontend/bin/mozpool-inventorysync 2>&1 | logger -t mozpool_inventorysync\n""; } } else { file { ""/etc/cron.d/mozpool-inventorysync"": ensure => absent; } } }",0,1,"15,45 * * * * apache mozpool_config=${::mozpool::settings::config_ini} ${::mozpool::settings::root}/frontend/bin/mozpool-inventorysync 2>&1 | logger -t mozpool_inventorysync\\\\\\n, 15,45 * * * * apache mozpool_config=${::mozpool::settings::config_ini} ${::mozpool::settings::root}/frontend/bin/mozpool-inventorysync 2>&1 | logger -t mozpool_inventorysync\\\\n, 15,45 * * * * apache mozpool_config=${::mozpool::settings::config_ini} ${::mozpool::settings::root}/frontend/bin/mozpool-inventorysync 2>&1 | logger -t mozpool_inventorysync\\n, apache mozpool_config=${::mozpool::settings::config_ini} ${::mozpool::settings::root}/frontend/bin/mozpool-inventorysync 2>&1 | logger -t mozpool_inventorysync\n, content => \\, content => \\\\, ensure => absent;, file { \, file { \\",CWE-248,"{'reason': 'Reasoning to describe why the misconfiguration is related to the provided CWE.', 'related_cwe': 'CWE number(s) related to the misconfiguration.', 'is_misconfiguration_related': 'Yes/No'}"
662,"class swift::proxy::account_quotas() { include ::swift::deps concat::fragment { 'swift_account_quotas': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/account_quotas.conf.erb'), order => '210', } }",1,1,"concat::fragment {'swift_account_quotas': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/account_quotas.conf.erb'), order => '210', }, include ::swift::deps, template('swift/proxy/account_quotas.conf.erb')",CWE-476,"{'reason': 'The misconfiguration is related to the CWE because it is caused by the vulnerability \\', 'related_cwe': 'CWE-476', 'is_misconfiguration_related': 'Yes'}"
663,"class log_aggregator::client { include ::config $log_aggregator = $::config::log_aggregator $logging_port = $::config::logging_port if (!$is_log_aggregator_host and $log_aggregator and $logging_port) { case $::operatingsystem { centos,ubuntu: { rsyslog::config { ""log_aggregator_client"" : contents => template(""${module_name}/client.conf.erb""); } } darwin: { file { ""/etc/syslog.conf"": content => template(""${module_name}/darwin_syslog.conf.erb""), mode => '0644', owner => root, group => wheel, notify => service['com.apple.syslogd']; } service { 'com.apple.syslogd': enable => true, ensure => running; } } windows: { include ::nxlog include nxlog::settings file { ""${nxlog::settings::root_dir}/conf/nxlog_source_eventlog.conf"": require => class [ 'packages::nxlog' ], content => template('nxlog/nxlog_source_eventlog.conf.erb'), notify => service [ 'nxlog' ]; ""${nxlog::settings::root_dir}/conf/nxlog_transform_syslog.conf"": require => class [ 'packages::nxlog' ], content => template('nxlog/nxlog_transform_syslog.conf.erb'), notify => service [ 'nxlog' ]; ""${nxlog::settings::root_dir}/conf/nxlog_target_aggregator.conf"": require => class [ 'packages::nxlog' ], content => template('nxlog/nxlog_target_aggregator.conf.erb'), notify => service [ 'nxlog' ]; ""${nxlog::settings::root_dir}/conf/nxlog_route_eventlog_aggregator.conf"": require => class [ 'packages::nxlog' ], content => template('nxlog/nxlog_route_eventlog_aggregator.conf.erb'), notify => service [ 'nxlog' ] } } default: { fail(""not supported on ${::operatingsystem}"") } } } }",0,1,"content => template('nxlog/nxlog_route_eventlog_aggregator.conf.erb'), notify => service [ 'nxlog' ];, content => template('nxlog/nxlog_target_aggregator.conf.erb'), notify => service [ 'nxlog' ];, file { \, notify => service [ 'nxlog' ];, runcmd { [ \\","CWE-22, CWE-26","{'reason': 'The misconfiguration in question is a type of directory traversal vulnerability where an attacker is able to inject a crafted file path into a system file. Specifically, the attacker can provide a file path with malicious code, leading to system code execution. This is a variation of CWE-22 - Improper Control of Generation of Code', 'related_cwe': 'CWE-22, CWE-26', 'is_misconfiguration_related': 'Yes'}"
664,"class osnailyfacter::memcached::memcached { notice('modular: memcached/memcached.pp') prepare_network_config(hiera_hash('network_scheme', {})) class { '::memcached': listen_ip => get_network_role_property('mgmt/memcache', 'ipaddr'), max_memory => '50%', item_size => '10m', } }",1,1,"class osnailyfacter::memcached::memcached {, class { '::memcached':, item_size => '10m', listen_ip => get_network_role_property('mgmt/memcache', 'ipaddr'),, max_memory => '50%', notice('modular: memcached/memcached.pp'), prepare_network_config(hiera_hash('network_scheme', {}))","CWE-264, CWE-269, CWE-272, CWE-275, CWE-284","{'reason': 'The provided CWEs are related to authentication weaknesses. The issue is caused by the lack of proper authentication when creating the listener. Without proper authentication, a malicious user could exploit the service and gain unauthorized access to sensitive data.', 'related_cwe': 'CWE-275', 'is_misconfiguration_related': 'Yes'}"
665,"define motd($content, $order=10) { include motd::base include motd::settings concat::fragment { $name: target => $motd::settings::motd_file, content => $content, order => $order; } }",0,1,"define motd($content, $order=10) { include motd::base include motd::settings concat::fragment { $name: target => $motd::settings::motd_file, content => $content, order => $order; } }, include motd::settings concat::fragment { $name: target => $motd::settings::motd_file, content => $content, order => $order; }, target => $motd::settings::motd_file, content => $content, order => $order; }","CWE-77, CWE-94","{'reason': 'No, since there is no use of the motd::settings variable in the example. Thus, the vulnerability described by CWE-77 is not applicable in this case. However, a vulnerability related to CWE-94 might be present due to a lack of parameterization. Hence, the misconfiguration is related to CWE-94', 'related_cwe': 'CWE-94', 'is_misconfiguration_related': 'Yes'}"
666,"class ceph::profile::mon { require ::ceph::profile::base ceph::mon { $::hostname: authentication_type => $ceph::profile::params::authentication_type, key => $ceph::profile::params::mon_key, keyring => $ceph::profile::params::mon_keyring, public_addr => $ceph::profile::params::public_addr, } $defaults = { inject => true, inject_as_id => 'mon.', inject_keyring => ""/var/lib/ceph/mon/ceph-${::hostname}/keyring"", } if !empty($ceph::profile::params::client_keys) { class { '::ceph::keys': args => $ceph::profile::params::client_keys, defaults => $defaults } } }",0,1,"ceph::mon { $::hostname: authentication_type => $ceph::profile::params::authentication_type, key => $ceph::profile::params::mon_key, keyring => $ceph::profile::params::mon_keyring, public_addr => $ceph::profile::params::public_addr, }, class { '::ceph::keys': args => $ceph::profile::params::client_keys, defaults => $defaults }, if!empty($ceph::profile::params::client_keys) { class { '::ceph::keys': args => $ceph::profile::params::client_keys, defaults => $defaults } }",CWE-287,"{'reason': ""The misconfiguration is related to the CWE. The script's keys variable's value has been hardcoded and reused for other keys. This means that any client can impersonate any mon with the same credentials. This is a common error that leads to misconfigurations in other ceph profiles."", 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
667,"define nrpe::check($cfg=undef, $nsclient_cfg=undef) { include nrpe::base include nrpe::settings include users::root case $::operatingsystem { windows: { concat::fragment { ""nsc_ini_check"": target => 'c:\program files\nsclient++\nsc.ini', content => $nsclient_cfg, order => '02', } } default: { file { ""${nrpe::settings::nrpe_etcdir}/nrpe.d/$title.cfg"": owner => $::users::root::username, group => $::users::root::group, notify => class['nrpe::service'], content => ""command[$title]=$cfg\n""; } } } }",0,1,"class['nrpe::service']\\n, class['nrpe::service']\n, command[$title]=$cfg\\\\n, content => $nsclient_cfg\\\\n, content => \\, content => \\\\, file { \, group => $::users::root::group\\\\n, notify => class['nrpe::service']\\n, owner => $::users::root::username\\\\n","CWE-668, CWE-670","{'reason': 'CWE-668: The misconfiguration is related to the CWE because the provided script contains multiple concat::fragment commands, which is a characteristic of the CWE, and concatenation is the cause of a misconfiguration.', 'related_cwe': 'CWE-668', 'is_misconfiguration_related': 'Yes'}"
668,"class cinder::volume::pure( $san_ip, $pure_api_token, $use_chap_auth = false, $volume_backend_name = '', $use_multipath_for_image_xfer = true, $pure_storage_protocol = 'iscsi', $extra_options = {}, ) { warning('usage of cinder::volume::pure is deprecated, please use cinder::backend::pure instead.') cinder::backend::pure { 'default': san_ip => $san_ip, pure_api_token => $pure_api_token, pure_storage_protocol => $pure_storage_protocol, use_chap_auth => $use_chap_auth, use_multipath_for_image_xfer => $use_multipath_for_image_xfer, volume_backend_name => $volume_backend_name, extra_options => $extra_options, } }",0,1,"extra_options => $extra_options,, pure_api_token => $pure_api_token,, pure_storage_protocol => $pure_storage_protocol,, san_ip => $san_ip,, use_chap_auth => $use_chap_auth,, use_multipath_for_image_xfer => $use_multipath_for_image_xfer,, volume_backend_name => $volume_backend_name,, warning('usage of cinder::volume::pure is deprecated, please use cinder::backend::pure instead.')","CWE-117, CWE-119, CWE-120, CWE-20, CWE-259, CWE-312, CWE-732","{'reason': 'The warning message is not necessary since Puppet code is correct and consistent. It is better to not print a message for the end users. \\n\\nThe pure_api_token and pure_storage_protocol misconfiguration relates to CWE-119, which can lead to the injection of wrong credentials or credentials stored in a wrong place.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
669,"class role::imagemetrics { include ::role::eventlogging mediawiki::extension { 'imagemetrics': settings => { wgimagemetricssamplingfactor => 1, wgimagemetricscorssamplingfactor => 1, }, } }",0,1,"class role::imagemetrics { include ::role::eventlogging, mediawiki::extension { 'imagemetrics': settings => { wgimagemetricssamplingfactor => 1, wgimagemetricscorssamplingfactor => 1, }, }",CWE-1028,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
670,"notice('modular: bigswitch reconfigure-keystone') ini_setting { 'keystone.conf notification driver': ensure => present, path => '/etc/keystone/keystone.conf', section => 'default', key_val_separator => '=', setting => 'notification_driver', value => 'messaging', notify => service['keystone'], } service { 'keystone': ensure => running, enable => true, }",0,1,"notice('modular: bigswitch reconfigure-keystone') ini_setting { 'keystone.conf notification driver': ensure => present,\\n, service { 'keystone': enable => true,\\\\\\\\\\\\n, service { 'keystone': enable => true,\\\\n, service { 'keystone': enable => true,\\n, service { 'keystone': enable => true,\n, service { 'keystone': ensure => running,\\\\\\\\\\\\\\\\\\\\n, service { 'keystone': ensure => running,\\\\\\n, service { 'keystone': ensure => running,\\\\n, service { 'keystone': ensure => running,\\n","CWE-20, CWE-25","{'reason': 'modular: bigswitch reconfigure-keystone', 'related_cwe': 'CWE-20,CWE-25', 'is_misconfiguration_related': 'Yes'}"
671,"define cinder::backend::iscsi ( $iscsi_ip_address, $volume_backend_name = $name, $volume_driver = 'cinder.volume.drivers.lvm.lvmvolumedriver', $volume_group = $::os_service_default, $volumes_dir = '/var/lib/cinder/volumes', $iscsi_helper = $::cinder::params::iscsi_helper, $iscsi_protocol = $::os_service_default, $manage_volume_type = false, $extra_options = {}, ) { include ::cinder::params cinder_config { ""${name}/volume_backend_name"": value => $volume_backend_name; ""${name}/volume_driver"": value => $volume_driver; ""${name}/iscsi_ip_address"": value => $iscsi_ip_address; ""${name}/iscsi_helper"": value => $iscsi_helper; ""${name}/volume_group"": value => $volume_group; ""${name}/volumes_dir"": value => $volumes_dir; ""${name}/iscsi_protocol"": value => $iscsi_protocol; } if $manage_volume_type { cinder_type { $volume_backend_name: ensure => present, properties => [""volume_backend_name=${volume_backend_name}""], } } create_resources('cinder_config', $extra_options) case $iscsi_helper { 'tgtadm': { package { 'tgt': ensure => present, name => $::cinder::params::tgt_package_name, } if($::osfamily == 'redhat') { file_line { 'cinder include': path => '/etc/tgt/targets.conf', line => ""include ${volumes_dir}/*"", match => ' require => package['tgt'], notify => service['tgtd'], } } service { 'tgtd': ensure => running, name => $::cinder::params::tgt_service_name, enable => true, require => class['cinder::volume'], } } 'lioadm': { service { 'target': ensure => running, enable => true, require => package['targetcli'], } package { 'targetcli': ensure => present, name => $::cinder::params::lio_package_name, } } default: { fail(""unsupported iscsi helper: ${iscsi_helper}."") } } }",1,1,"case $iscsi_helper { 'tgtadm': { package { 'tgt': ensure => present, name => $::cinder::params::tgt_package_name, }, create_resources('cinder_config', $extra_options), file_line { 'cinder include': path => '/etc/tgt/targets.conf', line =>, file_line { 'cinder include': path => '/etc/tgt/targets.conf', line => \, include ::cinder::params cinder_config { \, package { 'targetcli': ensure => present, name => $::cinder::params::lio_package_name, } service { 'target': ensure => running, enable => true, require => package['targetcli'], }, package {'tgt': ensure => present, name => $::cinder::params::tgt_package_name, } if($::osfamily =='redhat') { file_line { 'cinder include': path => '/etc/tgt/targets.conf', line =>, service { 'target': ensure => running, enable => true, require => package['targetcli'], }, service { 'target': ensure => running, enable => true, require => package['targetcli'], } package { 'targetcli': ensure => present, name => $::cinder::params::lio_package_name, }, service { 'tgtd': ensure => running, name => $::cinder::params::tgt_service_name, enable => true, require => class['cinder::volume'], } }",CWE-78,"{'reason': 'Reason why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes/No'}"
672,class { '::osnailyfacter::ceph::updatedb' :},1,1,class { ':puppet::osnailyfacter::ceph::updatedb': },"CWE-189:Improper Input Validation, CWE-20:Improper Input Validation, CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-284:Improper Access Control","{'reason': ""This vulnerability can be exploited by the attacker to gain unauthorized access to the user's computer. It involves the use of an exploit that allows the attacker to inject malicious code into a trusted application or system."", 'related_cwe': ""CWE-189:Improper Input Validation, CWE-20:Improper Input Validation, CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-284:Improper Access Control"", 'is_misconfiguration_related': 'Yes'}"
673,"class packages::ntp { case $::operatingsystem { centos, ubuntu: { package { ""ntp"": ensure => latest; } } darwin: { } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"case $::operatingsystem { centos, ubuntu: { package { \, case $::operatingsystem { centos, ubuntu: { package { \\\\\\\\, default: { fail(\, default: { fail(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package { \, package { \\, package { \\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, } darwin: { \\",CWE-1165,"{'reason': 'This misconfiguration is related to CWE-1165 because it includes a null string in a string context. The null string in Puppet is represented by \\\\\\\\, which is a raw string escape character. Any other string used with this escape character will be taken as a literal string. The package resource in Puppet is used to install and manage software packages in an OS, and this misconfiguration can cause the package not to be installed properly if the raw string escape character is not correctly escaped, resulting in a security vulnerability such as CWE-1165.', 'related_cwe': 'CWE-1165', 'is_misconfiguration_related': 'Yes'}"
674,"class nova::compute::serial( $port_range = '10000:20000', $base_url = 'ws://127.0.0.1:6083/', $proxyclient_address = '127.0.0.1', $listen = undef, ) { include ::nova::deps if $listen { warning('the listen parameter has no effect anymore, please use proxyclient_address instead.') $proxyclient_address_real = $listen } else { $proxyclient_address_real = $proxyclient_address } nova_config { 'serial_console/enabled': value => true; 'serial_console/port_range': value => $port_range; 'serial_console/base_url': value => $base_url; 'serial_console/proxyclient_address': value => $proxyclient_address_real; } }",0,1,nova_config,CWE-20,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
675,"class { 'openstack::controller': public_address => $::ipaddress_eth0, mysql_root_password => 'password', allowed_hosts => ['127.0.0.%', '192.168.1.%'], rabbit_password => 'password', keystone_db_password => 'password', keystone_admin_token => '12345', admin_email => 'root@localhost', admin_password => 'password', nova_db_password => 'password', nova_user_password => 'password', glance_db_password => 'password', glance_user_password => 'password', secret_key => '12345', }",1,1,"admin_email => 'root@localhost',, admin_password => 'password',, allowed_hosts => ['127.0.0.%', '192.168.1.%'],, class { 'openstack::controller':, keystone_admin_token => '12345',, keystone_db_password => 'password',, mysql_root_password => 'password',, nova_db_password => 'password',, public_address => $::ipaddress_eth0,, rabbit_password => 'password',",CWE-306,"{'reason': 'The use of insecure passwords in a sensitive environment is always a bad idea. This is related to CWE-306: Access Control.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
676,"class gui::appearance { include dirs::usr::local::bin include users::root case $::operatingsystem { darwin: { if (!$puppetizing) { exec { ""set-background-image"" : command => ""/bin/bash /usr/local/bin/changebackground.sh"", unless => ""/usr/bin/defaults read com.apple.desktop background | egrep 'solid aqua blue.png'"", notify => exec[""restart-dock""] ; ""restart-dock"" : command => ""/usr/bin/killall dock"", refreshonly => true; } file { ""/usr/local/bin/changebackground.sh"" : source => ""puppet:///modules/gui/changebackground.sh"", owner => ""$users::root::username"", group => ""$users::root::group"", mode => 0755, notify => exec[""set-background-image""] ; } } if ($::macosx_productversion_major == ""10.10"") { osxutils::defaults { ""${username}-enable-showscrollbars"": domain => ""$::users::builder::home/library/preferences/.globalpreferences.plist"", key => ""appleshowscrollbars"", value => ""always"", require => class['users::builder']; } file { ""$::users::builder::home/library/preferences/.globalpreferences.plist"": owner => ""$users::builder::username"", group => ""$users::builder::group""; } } } ubuntu: { include packages::libglib20_bin file { ""/usr/share/glib-2.0/schemas/99_gsettings.gschema.override"": notify => exec['update-gsettings'], source => ""puppet:///modules/gui/gsettings.gschema.override""; } exec { ""update-gsettings"": command => ""/usr/bin/glib-compile-schemas /usr/share/glib-2.0/schemas"", require => class['packages::libglib20_bin'], refreshonly => true; } } default: { fail(""don't know how to set up gui appearance on $::operatingsystem"") } } }",1,1,"exec[\, exec[\\, osxutils::defaults, packages::libglib20_bin, puppet:///modules/gui/changebackground.sh, puppet:///modules/gui/gsettings.gschema.override, set-background-image","CWE-200, CWE-22","{'reason': 'Not sure how to provide the detailed reasoning explaining why the misconfiguration is related to the CWE.', 'related_cwe': 'CWE-200, CWE-22', 'is_misconfiguration_related': 'No'}"
677,"class {{cookiecutter.project_name}}::db::mysql( $password, $dbname = '{{cookiecutter.project_name}}', $user = '{{cookiecutter.project_name}}', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ) { validate_string($password) ::openstacklib::db::mysql { '{{cookiecutter.project_name}}': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['{{cookiecutter.project_name}}'] ~> exec<| title == '{{cookiecutter.project_name}}-manage db_sync' |> }",1,1,"exec<| title == '{{cookiecutter.project_name}}-manage db_sync' |>, mysql_password($password), user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts,, validate_string($password)","CWE-287, CWE-327, CWE-329","{'reason': ""The vulnerable class 'openstacklib::db::mysql' is not related to the provided CWE. This vulnerability is related to the insecure use of mysql_password function. The script uses 'openstacklib::db::mysql' instead of using mysql_password directly."", 'related_cwe': 'CWE-287, CWE-327, CWE-329', 'is_misconfiguration_related': 'No'}"
678,"class nrpe::check::check_stop_idle { include nrpe::settings include aws_manager::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_stop_idle': cfg => ""$plugins_dir/check_file_age -w 600 -c 1800 -f ${aws_manager::settings::root}/aws_stop_idle.log""; } }",0,1,"$plugins_dir = $nrpe::settings::plugins_dir, cfg => \, cfg => \\, check_stop_idle, class nrpe::check::check_stop_idle {, include aws_manager::settings, include nrpe::settings, nrpe::check {","CWE-502, CWE-732, CWE-772","{'reason': 'CWE-732 is related to this misconfiguration', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
679,"class role::citoid( $url, ) { include ::role::zotero include ::citoid mediawiki::extension { 'citoid': settings => { wgcitoidserviceurl => $url, } } }",0,1,"mediawiki::extension { 'citoid': settings => { wgcitoidserviceurl => $url, }, settings => { wgcitoidserviceurl => $url, }, wgcitoidserviceurl => $url, }",CWE-327,"{'reason': ""This misconfiguration could lead to an attacker controlling which service is used to access the API. Because the URL is hardcoded in the script, an attacker could simply replace the API URL with a malicious service. This is related to CWE-327, 'Use of Hardcoded Cryptographic Key'"", 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
680,"define openstack_tasks::swift::parts::device_directory($devices) { if (!defined(file[$devices])) { file { $devices: ensure => 'directory', owner => 'swift', group => 'swift', recurse => true, recurselimit => 1, } } }",0,1,"file {\\\\\\\\\\\\n  devices:\\\\\\\\\\n  ensure => 'directory',\\\\\\\\\\\\n  owner =>'swift',\\\\\\\\\\\\n  group =>'swift',\\\\\\\\\\\\n  recurse => true,\\\\\\\\\\\\n  recurselimit => 1\\\\\\\\\\\\n}, file {\\\\n  devices:\\\\n  ensure => 'directory',\\\\n  owner =>'swift',\\\\n  group =>'swift',\\\\n  recurse => true,\\\\n  recurselimit => 1\\\\n}, file {\\\\n  devices:\\n  ensure => 'directory',\\\\n  owner =>'swift',\\\\n  group =>'swift',\\\\n  recurse => true,\\\\n  recurselimit => 1\\\\n}, file {\\\\n  devices:\\n  ensure => 'directory',\\n  owner =>'swift',\\n  group =>'swift',\\n  recurse => true,\\n  recurselimit => 1\\n}, file {\\n  devices:\\n  ensure => 'directory',\\n  owner =>'swift',\\n  group =>'swift',\\n  recurse => true,\\n  recurselimit => 1\\n}, file {\n  devices:\n  ensure => 'directory',\n  owner =>'swift',\n  group =>'swift',\n  recurse => true,\n  recurselimit => 1\n}, if (!defined(file[$devices])) {","CWE-250, CWE-251","{'reason': 'The provided script could contain a misconfiguration with the related CWE 250. The CWE 250 states that when creating a directory, file, or symbolic link, ensure that they are created with the appropriate user, group, and mode. Without enforcing the owner, group, and mode, it allows other users to create files, directories, and symbolic links.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
681,"node default { exec { path => ['/usr/bin', '/bin', '/usr/sbin', '/sbin'] } class { '::mysql::server': } class { '::ceilometer::db::mysql': password => 'ceilometer', } class { '::ceilometer': telemetry_secret => 'darksecret' } class { '::ceilometer::db': } class { '::ceilometer::keystone::authtoken': password => 'tralalayouyou' } class { '::ceilometer::api': } class { '::ceilometer::agent::auth': auth_url => 'http://localhost:35357/v2.0', auth_password => 'tralalerotralala' } class { '::ceilometer::agent::polling': central_namespace => true, compute_namespace => true, ipmi_namespace => false, } class { '::ceilometer::expirer': } class { '::ceilometer::agent::notification': } }",0,1,"class { '::ceilometer::agent::auth':\\n auth_url => 'http://localhost:35357/v2.0',\\n auth_password => 'tralalerotralala'\\n}\\n, class { '::ceilometer::agent::notification':\\\\\\\\\\\\\\\\\\\\n log_file => '/var/log/ceilometer/notifications.log',\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\n, class { '::ceilometer::agent::notification':\\\\\\\\n log_file => '/var/log/ceilometer/notifications.log',\\\\\\\\n}\\\\n, class { '::ceilometer::agent::notification':\\\\n log_file => '/var/log/ceilometer/notifications.log',\\\\n}\\n, class { '::ceilometer::keystone::authtoken':\\\\\\\\\\\\\\\\\\\\\\\\n password => 'tralalayouyou'\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\n, class { '::ceilometer::keystone::authtoken':\\\\\\\\\\\\n password => 'tralalayouyou'\\\\\\\\\\\\n}\\\\n, class { '::ceilometer::keystone::authtoken':\\\\\\\\n password => 'tralalayouyou'\\\\\\\\n}\\\\n, class { '::ceilometer::keystone::authtoken':\\\\n password => 'tralalayouyou'\\\\n}\\n, class { '::ceilometer::keystone::authtoken':\\n password => 'tralalayouyou'\\n}\\n, class { '::ceilometer::keystone::authtoken':\n password => 'tralalayouyou'\n}\n",CWE-287,"{'reason': 'Puppet is using an encrypted password as plaintext, this is an insecure practice as plaintext passwords are stored on disk and can be read if someone has access to the disk.', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
682,"class barbican::db::postgresql( $password, $dbname = 'barbican', $user = 'barbican', $encoding = undef, $privileges = 'all', ) { class['barbican::db::postgresql'] -> service<| title == 'barbican' |> ::openstacklib::db::postgresql { 'barbican': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['barbican'] ~> exec<| title == 'barbican-db-manage' |> }",1,1,class['barbican::db::postgresql'],CWE-732: Injecting Test Data,"{'reason': 'Puppet strings contain values that could be modified by an attacker without proper access control, resulting in arbitrary configuration modification. This attack vector is described by CWE-732.', 'related_cwe': 'CWE-732: Injecting Test Data', 'is_misconfiguration_related': 'Yes'}"
683,"class packages::nrpe { case $::operatingsystem { ubuntu: { package { ""nagios-nrpe-server"": ensure => latest, install_options => [ '--no-install-recommends' ]; ""nagios-plugins"": ensure => latest, install_options => [ '--no-install-recommends' ]; } } centos: { package { ""nrpe"": ensure => latest; ""nagios-plugins-nrpe"": ensure => latest; ""nagios-plugins-all"": ensure => latest; } } darwin: { packages::pkgdmg { nrpe: version => ""2.14-moz1""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"package { \, package { \\, package { \\\\, package { \\\\\\\, package { \\\\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package {{'reason': 'In this case, the puppet code is trying to install the nagios-nrpe-server package. Therelated_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
684,"define packages::pkgdmg( $version, $private=false, $dmgname=undef, $os_version_specific=true ) { include ::config case $dmgname { undef: { $filename = ""${name}-${version}.dmg"" } default: { $filename = $dmgname } } $p = $private ? { true => ""/private"", false => """" } $v = $os_version_specific ? { true => ""/${macosx_productversion_major}"", false => """" } $source = ""https://${::config::data_server}/repos${p}/dmgs${v}/$filename"" package { $filename: provider => pkgdmg, ensure => installed, source => $source; } }",0,1,"package { $filename: ensure => present, provider => pkgdmg, source => $source, tag => [ $filename ] }, package {\\n $filename: ensure => present,\\n provider => pkgdmg,\\n source => $source,\\n tag => [ $filename ]\\n }, package {\n $filename: ensure => present,\n provider => pkgdmg,\n source => $source,\n tag => [ $filename ]\n }",CWE-426,"{'reason': 'The reason for the misconfiguration is: [Explain the reasoning here]', 'related_cwe': 'CWE-426', 'is_misconfiguration_related': 'Yes'}"
685,"class cinder::quota ( $quota_volumes = $::os_service_default, $quota_snapshots = $::os_service_default, $quota_gigabytes = $::os_service_default, $quota_driver = $::os_service_default, ) { cinder_config { 'default/quota_volumes': value => $quota_volumes; 'default/quota_snapshots': value => $quota_snapshots; 'default/quota_gigabytes': value => $quota_gigabytes; 'default/quota_driver': value => $quota_driver; } }",0,1,cinder::quota,"CWE-113, CWE-117, CWE-189, CWE-20, CWE-23, CWE-24, CWE-28, CWE-30, CWE-92, CWE-99","{'reason': 'This misconfiguration is related to CWE-113.', 'related_cwe': 'CWE-113, CWE-117, CWE-189, CWE-20, CWE-23, CWE-24, CWE-28, CWE-30, CWE-92, CWE-99', 'is_misconfiguration_related': 'Yes'}"
686,class { '::osnailyfacter::netconfig::configure_default_route' :},1,1,"class { '::osnailyfacter::netconfig::configure_default_route':}, class { 'apache': }, class { 'apache':}, file { '/tmp/certs/cert.pem':, file { '/tmp/certs/cert.pem':}, include ::osnailyfacter::netconfig::configure_default_route",CWE-601,"{'reason': 'The misconfiguration is related to CWE-601 because it is possible for someone to inject an incorrect network configuration and use this to take over or interfere with network operations.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
687,"class lma_collector::collectd::openstack_checks ( $user, $password, $tenant, $keystone_url, $timeout = $lma_collector::params::openstack_client_timeout, $pacemaker_master_resource = undef, ) inherits lma_collector::params { include lma_collector::collectd::python_openstack_base $config = { 'username' => ""\""${user}\"""", 'password' => ""\""${password}\"""", 'tenant' => ""\""${tenant}\"""", 'keystoneurl' => ""\""${keystone_url}\"""", 'timeout' => ""\""${timeout}\"""", } if $pacemaker_master_resource { $real_config = merge($config, {'dependsonresource' => ""\""${pacemaker_master_resource}\""""}) } else { $real_config = $config } lma_collector::collectd::python { 'check_openstack_api': config => $real_config, } }",0,1,"class lma_collector::collectd::openstack_checks ( $user, $password, $tenant, $keystone_url, $timeout = $lma_collector::params::openstack_client_timeout, $pacemaker_master_resource = undef, ), config => $real_config, if $pacemaker_master_resource {\\\\n $real_config = merge($config, {'dependsonresource' => \\, if $pacemaker_master_resource {\\n $real_config = merge($config, {'dependsonresource' => \, if $pacemaker_master_resource {\\n $real_config = merge($config, {'dependsonresource' => \\, if $pacemaker_master_resource {\n $real_config = merge($config, {'dependsonresource' => \, include lma_collector::collectd::python, include lma_collector::collectd::python_openstack_base, lma_collector::collectd::python { 'check_openstack_api': config => $real_config, }",CWE-119,"{'reason': 'This misconfiguration is a logic error, where a condition is being checked in one statement but the code does not reflect the correct code in that statement, causing incorrect behavior in the code. The `merge()` function is used to combine multiple key-value pairs, but the `dependsonresource` key is not used in the code. As a result, the `config` variable is not correctly configured, and the `check_openstack_api` module is not correctly implemented. The code should reflect the correct code in the `if` statement to ensure that the `dependsonresource` key is used correctly. This misconfiguration is related to CWE-119 (Use of Erroneous Inference', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
688,class role::newusermessage { mediawiki::extension { 'newusermessage': } },0,1,mediawiki::extension { 'newusermessage': },"CWE-248, CWE-249, CWE-252, CWE-254, CWE-263, CWE-266, CWE-272, CWE-280, CWE-281, CWE-282","{'reason': 'It appears the Puppet module name does not match the provided misconfiguration label LLM and the issue does not appear to be related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
689,"define swift::ringsync( $ring_server ) { include ::swift::deps exec { path => '/usr/bin' } rsync::get { ""/etc/swift/${name}.ring.gz"": source => ""rsync://${ring_server}/swift_server/${name}.ring.gz"", } }",1,1,"path => \\\\, path => \\\\\, rsync::get { \, rsync::get { \\, rsync::get { \\\\",CWE-20,"{'reason': 'The misconfiguration can be linked to the CWE via the following reasoning:\\nThis misconfiguration allows an authenticated, unprivileged user to obtain a list of Swift ring files that can be modified.\\n\\nThe rsync::get module is used to retrieve a remote file from the ring server via the rsync protocol. The rsync protocol is designed to transfer files over a network, and can be utilized in a wide variety of use cases. In this case, the rsync::get module is used to obtain a remote file from the ring server. However, the rsync::get module can be used to obtain any file from the ring server, including sensitive files such as user data or system configuration files.\\n\\nTherefore, an unprivileged user', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
690,"define ruby::ruby { include ruby package { ""ruby${title}"": ensure => latest, } package { ""ruby${title}-dev"": ensure => latest, } ruby::gem { ""ruby${title}-bundler"": gem => 'bundler', ruby => $title, } }",0,1,"package { \, package { \\, package { \\\\, package { \\\\\\\\, ruby::gem { \\, ruby::gem { \\\\, ruby::gem { \\\\\\\\\\\\, ruby::gem { \\\\\\\\\\\\\\\\\\\\\\\\\\",CWE-22,"{'reason': 'The misconfiguration is related to the provided CWE, as the vulnerability could allow a malicious actor to potentially exploit a command injection vulnerability if the script is misconfigured, which in turn, could lead to unauthorized modification of resources.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
691,"class ceilometer::collector ( $manage_service = true, $enabled = true, $package_ensure = 'present', $udp_address = '0.0.0.0', $udp_port = '4952', $collector_workers = $::os_service_default, $meter_dispatcher = 'database', $event_dispatcher = 'database', ) { include ::ceilometer::params ceilometer_config<||> ~> service['ceilometer-collector'] if (is_ip_address($udp_address) != true and $udp_address != '' ){ fail(""${udp_address} is not a valid ip and is not empty"") } ceilometer_config { 'collector/udp_address': value => $udp_address; 'collector/udp_port': value => $udp_port; 'collector/workers': value => $collector_workers; 'default/meter_dispatchers': value => join(any2array($meter_dispatcher), ','); 'default/event_dispatchers': value => join(any2array($event_dispatcher), ','); } package[$::ceilometer::params::collector_package_name] -> service['ceilometer-collector'] ensure_resource( 'package', [$::ceilometer::params::collector_package_name], { ensure => $package_ensure } ) if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } package['ceilometer-common'] -> service['ceilometer-collector'] service { 'ceilometer-collector': ensure => $service_ensure, name => $::ceilometer::params::collector_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => 'ceilometer-service' } }",1,1,"class ceilometer::collector ($manage_service = true, $enabled = true, $package_ensure = 'present', $udp_address = '0.0.0.0', $udp_port = '4952', $collector_workers = $::os_service_default, $meter_dispatcher = 'database', $event_dispatcher = 'database', ) { include ::ceilometer::params ceilometer_config<||> ~> service['ceilometer-collector'] if (is_ip_address($udp_address)!= true and $udp_address!= '' ){ fail(, include ::ceilometer::params ceilometer_config<||> ~> service['ceilometer-collector'] if (is_ip_address($udp_address)!= true and $udp_address!= '' ){ fail(, service['ceilometer-collector'] if (is_ip_address($udp_address)!= true and $udp_address!= '' ){ fail(",CWE-20,"{'reason': 'The issue is related to CWE-20, since the script is vulnerable to the CWE due to the misconfigured input of the udp_address variable, which is not checked for validity. This allows for any arbitrary value to be entered, and could be used to exploit the system.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
692,"class tripleo::profile::base::neutron::plugins::ml2::opendaylight ( $odl_port = hiera('opendaylight::odl_rest_port'), $conn_proto = hiera('opendaylight::nb_connection_protocol'), $step = hiera('step'), ) { if $step >= 4 { if hiera('odl_on_controller') { $odl_url_ip = hiera('opendaylight_api_vip') } else { $odl_url_ip = hiera('opendaylight::odl_bind_ip') } if ! $odl_url_ip { fail('opendaylight controller ip/vip is empty') } class { '::neutron::plugins::ml2::opendaylight': odl_url => ""${conn_proto}://${odl_url_ip}:${odl_port}/controller/nb/v2/neutron""; } } }",0,1,"class { '::neutron::plugins::ml2::opendaylight': odl_url => \, if $step >= 4, if! $odl_url_ip, odl_url => \, odl_url_ip, odl_url_ip = hiera('opendaylight::odl_bind_ip'), odl_url_ip = hiera('opendaylight_api_vip')",CWE-732 - Incorrect Permission Assignment for Critical Resource,"{'reason': 'The misconfiguration, if present, can lead to incorrect permissions being assigned to critical resources (networking controllers, routers, etc.). Incorrect permissions can allow untrusted network nodes to have access to critical resources (networking controllers, routers, etc.), potentially affecting the security of those resources.', 'related_cwe': 'CWE-732 - Incorrect Permission Assignment for Critical Resource', 'is_misconfiguration_related': 'Yes'}"
693,"define l23network::l2::bond_interface ( $bond, $use_ovs = $::l23network::use_ovs, $ensure = 'present', $mtu = undef, $bond_is_master = true, $interface_properties = {}, $provider = undef, ) { include ::l23network::params if $bond_is_master { $master = $bond $slave = true } else { $master = undef $slave = false } l2_port[$name] -> l2_bond[$bond] if ! defined(l23network::l2::port[$name]) { $additional_properties = { use_ovs => $use_ovs, mtu => is_integer($interface_properties[mtu]) ? {false=>$mtu, default=>$interface_properties[mtu]}, master => $master, slave => $slave, provider => $provider } create_resources(l23network::l2::port, { ""${name}"" => merge($interface_properties, $additional_properties) }) } else { l2_port<| title == $name |> { use_ovs => $use_ovs, bond_master => $master, } l23_stored_config<| title == $name |> { bond_master => $master, } } }",1,1,bond,"CWE-1164, CWE-1167, CWE-1168, CWE-1197, CWE-1198, CWE-1204, CWE-1205, CWE-1216, CWE-1217, CWE-1230","{'reason': 'The provided misconfiguration is related to multiple related CWE. CWE-1164 - Improper Restriction of Resource Operations. This vulnerability can be attributed to the fact that the bond parameter is not being passed to the function. CWE-1167 - Improper Restriction of Operations Within Paths and Directories. This vulnerability can be attributed to the fact that the bond parameter is not being passed to the function. CWE-1168 - Improper Restriction of Operations Within Paths and Directories. This vulnerability can be attributed to the fact that the bond parameter is not being passed to the function. CWE-1197 - Improper Restriction of Operations Within Paths and Directories. This vulnerability can be attributed to the fact that the bond parameter is not being', 'related_cwe': 'CWE-1164,CWE-1167,CWE-1168,CWE-1197,CWE-1198,CWE-1204,CWE-1205,CWE-1216,CWE-1217,CWE-1230', 'is_misconfiguration_related': 'Yes'}"
694,"define heka::encoder::es_json ( $config_dir, $es_index_from_timestamp = false, $index = undef, $ensure = present, $fields = undef, ) { include heka::params if $fields != undef { validate_array($fields) } file { ""${config_dir}/encoder-${title}.toml"": ensure => $ensure, content => template('heka/encoder/es_json.toml.erb'), mode => '0600', owner => $heka::params::user, group => $heka::params::user, } }",1,1,"content => template('heka/encoder/es_json.toml.erb'), \\\\, content => template('heka/encoder/es_json.toml.erb'), \\\\\\\\\\\\\\\\\\\\, ensure => $ensure, \\, file { \, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, include heka::params \\\\ \\, mode => '0600', owner => $heka::params::user, group => $heka::params::user, \\, owner => $heka::params::user, \\\\, validate_array($fields) \\\\","CWE-327, CWE-502","{'reason': 'User defined data structures and their components are used in a way that leads to the execution of arbitrary system commands and/or the manipulation of arbitrary system resources.', 'related_cwe': 'CWE-327, CWE-502', 'is_misconfiguration_related': 'Yes'}"
695,"define python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir ? { '' => ""/home/$user"", default => $homedir, } $group_ = $group ? { '' => $user, default => $group, } $user_python_repositories = $config::user_python_repositories case $operatingsystem { windows: { file { ""$homedir_/.pip"": ensure => directory; ""$homedir_/.pip/pip.conf"": content => template(""python/user-pip-conf.erb""); } } default: { file { ""$homedir_/.pip"": ensure => directory, owner => $user, group => $group_; ""$homedir_/.pip/pip.conf"": content => template(""python/user-pip-conf.erb""), owner => $user, group => $group_; } } } }",0,1,"python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? { '' => \, python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? { '' => \\, python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? { '' => \\\\, python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? { '' => \\\\\\\\\\\\, python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? { '' => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\, python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? { '' => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, python::user_pip_conf($homedir='', $group='') { include config $user = $title $homedir_ = $homedir? {{'reason': 'This misconfiguration is related to CWE-601 because of...', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
696,"class designate::db ( $database_connection = 'mysql://designate:designate@localhost/designate', $database_idle_timeout = 3600, $database_min_pool_size = 1, $database_max_pool_size = 10, $database_max_retries = 10, $database_retry_interval = 10, $database_max_overflow = 20, $sync_db = true, ) { include ::designate::params validate_re($database_connection, '(mysql(\+pymysql)?):\/\/(\s+:\s+@\s+\/\s+)?') case $database_connection { /^mysql(\+pymysql)?:\/\//: { require '::mysql::bindings' require '::mysql::bindings::python' if $database_connection =~ /^mysql\+pymysql/ { $backend_package = $::designate::params::pymysql_package_name } else { $backend_package = false } } default: { fail('unsupported backend configured') } } if $backend_package and !defined(package[$backend_package]) { package {'designate-backend-package': ensure => present, name => $backend_package, tag => 'openstack', } } designate_config { 'storage:sqlalchemy/connection': value => $database_connection, secret => true; 'storage:sqlalchemy/idle_timeout': value => $database_idle_timeout; 'storage:sqlalchemy/min_pool_size': value => $database_min_pool_size; 'storage:sqlalchemy/max_retries': value => $database_max_retries; 'storage:sqlalchemy/retry_interval': value => $database_retry_interval; 'storage:sqlalchemy/max_pool_size': value => $database_max_pool_size; 'storage:sqlalchemy/max_overflow': value => $database_max_overflow; } if $sync_db { include ::designate::db::sync } }",1,1,"class designate::db ( $database_connection ='mysql://designate:designate@localhost/designate', $database_idle_timeout = 3600, $database_min_pool_size = 1, $database_max_pool_size = 10, $database_max_retries = 10, $database_retry_interval = 10, $database_max_overflow = 20, $sync_db = true, ) {, designate_config {'storage:sqlalchemy/connection': value => \\\$database_connection, secret => true;, designate_config {'storage:sqlalchemy/connection': value => \\\\\\\\\\\\$database_connection, secret => true;, if \\$backend_package and!defined(package[\\$backend_package]) { package {'designate-backend-package': ensure => present, name => \\$backend_package, tag => 'openstack', } }, if \\\\$sync_db { include ::designate::db::sync }, if \\\\\\\\\\\\\\\$backend_package and!defined(package[\\\\\\\\\\\\\\$backend_package]) { package {'designate-backend-package': ensure => present, name => \\\\\\\\\\\\\\\$backend_package, tag => 'openstack', } }, include ::designate::params validate_re(\$database_connection, '(mysql(\\+pymysql)?):\\//(:\\s+@\\s+\\/:\\s+)?'), include ::designate::params validate_re(\\\\\$database_connection, '(mysql(\\\\\\\\\\\\\\\\\\\\\\\\+pymysql)?):\\\\\\\\\\\\/(:\\\\\\\\\\\\\\s+@\\\\\\\\\\\\\\s+\\\\\\\\\\\\/:\\\\\\\\\\\\s+)?'), package {'designate-backend-package': ensure => present, name => \\\\\\$backend_package, tag => 'openstack', }, package {'designate-backend-package': ensure => present, name => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$backend_package, tag => 'openstack', }","CWE-200, CWE-22, CWE-522, CWE-78","{'reason': ""There is a clear relationship between CWE-200 (CWE-22), CWE-22 (CWE-522), CWE-522 (CWE-78) and the misconfiguration. The script contains a validation regex which does not have any special characters in it, such as '@', '?', etc. However, the connection string it is used to validate DOES contain special characters such as '@' and '/', as well as non-UTF-8 characters such as 'Ã©' in the connection string. Since the regex does not have any special characters, the regex cannot be used to validate any connection strings. The vulnerability, however, was still mitigated in the script by using a default case and failing the script execution if the connection string does"", 'related_cwe': 'CWE-200, CWE-22, CWE-522, CWE-78', 'is_misconfiguration_related': 'Yes'}"
697,class role::sandboxlink { mediawiki::extension { 'sandboxlink': } },0,1,"class role::sandboxlink, mediawiki::extension","CWE-100, CWE-117, CWE-119, CWE-120","{'reason': 'mediawiki::extension block is a function. It must be called with all function arguments provided.', 'related_cwe': 'CWE-100', 'is_misconfiguration_related': 'Yes'}"
698,class neutron { } class { 'neutron' : } class { '::openstack_tasks::openstack_network::server_config' :} warning('osnailyfacter/modular/./openstack-network/server-config.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/server-config.pp'),1,1,"class neutron { }, class neutron { } class { 'neutron' : } class { '::openstack_tasks::openstack_network::server_config' :}, class { '::openstack_tasks::openstack_network::server_config' :}, class { 'neutron' : }, warning('osnailyfacter/modular/./openstack-network/server-config.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/server-config.pp')",CWE-829,"{'reason': 'CWE-829: The class neutron {} is defined inside another class, which is the recommended practice in Puppet. This misconfiguration may lead to confusion and possible unintended changes. However, this is not a security issue in this case.', 'related_cwe': 'CWE-829', 'is_misconfiguration_related': 'Yes'}"
699,"class openstack::logrotate ( $role = 'client', $rotation = 'weekly', $keep = '4', $minsize = '30m', $maxsize = '100m', $debug = false, ) { validate_re($rotation, 'daily|weekly|monthly') $logrotatefile = '/etc/logrotate.d/fuel.nodaily' file { $logrotatefile: owner => 'root', group => 'root', mode => '0644', content => template('openstack/10-fuel.conf.erb'), } file { '/etc/logrotate.d/puppet': owner => 'root', group => 'root', mode => '0644', source => 'puppet:///modules/openstack/logrotate-puppet.conf', } file { ""/etc/logrotate.d/upstart"": ensure => absent, } file_line { ensure => 'present', path => '/etc/logrotate.conf', } file_line { 'logrotate-tabooext': line => 'tabooext + .nodaily', match => '^tabooext', after => '^create', } -> file_line { 'logrotate-compress': line => 'compress', match => '^compress', after => '^tabooext', } -> file_line { 'logrotate-delaycompress': line => 'delaycompress', match => '^delaycompress', after => '^compress', } -> file_line { 'logrotate-minsize': line => ""minsize ${minsize}"", match => '^minsize', after => '^delaycompress', } -> file_line { 'logrotate-maxsize': line => ""maxsize ${maxsize}"", match => '^maxsize', after => '^minsize', } if $debug { $interval = '10' } else { $interval = '30' } cron { 'fuel-logrotate': command => '/usr/bin/fuel-logrotate', environment => [ 'mailto=""""', 'path=/bin:/usr/bin:/usr/sbin' ], user => 'root', minute => ""*/${interval}"", } }",1,1,"class openstack::logrotate ( $role = 'client', $rotation = 'weekly', $keep = '4', $minsize = '30m', $maxsize = '100m', $debug = false, ) { validate_re($rotation, 'daily|weekly|monthly'), cron { 'fuel-logrotate': command => '/usr/bin/fuel-logrotate', environment => ['mailto=, file { $logrotatefile: owner => 'root', group => 'root', mode => '0644', content => template('openstack/10-fuel.conf.erb'), }, file { '/etc/logrotate.d/puppet': owner => 'root', group => 'root', mode => '0644', source => 'puppet:///modules/openstack/logrotate-puppet.conf', }, file { '/etc/logrotate.d/upstart': ensure => absent, }, file_line { 'logrotate-tabooext': line => 'tabooext +.nodaily', match => '^tabooext', after => '^create', } -> file_line { 'logrotate-compress': line => 'compress', match => '^compress', after => '^tabooext', } -> file_line { 'logrotate-delaycompress': line => 'delaycompress', match => '^delaycompress', after => '^compress', } -> file_line { 'logrotate-minsize': line =>, file_line { ensure => 'present', path => '/etc/logrotate.conf', }, if $debug { $interval = '10' } else { $interval = '30' }, minute => \","CWE-1169, CWE-1179, CWE-1192","{'reason': 'Logrotate is used to compress, rotate, and maintain logs. This module does not set a value for the minsize parameter of logrotate, but rather sets it in the cron job definition. This is not an ideal setup and may create unnecessary overhead on the puppetmaster. This module should take a single value for minsize and set it for both the logrotate and cron job definitions. In doing so, this would reduce the attack surface of the puppetmaster.', 'related_cwe': 'CWE-1169, CWE-1179, CWE-1192', 'is_misconfiguration_related': 'Yes'}"
700,"notice('modular: contrail/controller-hiera-post.pp') include contrail file { '/etc/hiera/plugins/contrail.yaml': ensure => file, content => template('contrail/plugins.yaml.erb'), }",0,1,"/etc/hiera/plugins/contrail.yaml': \\, \\, ensure => file, content => template('contrail/plugins.yaml.erb'), \\, file { \, file { \\, file { \\\\, include contrail, notice('modular: contrail/controller-hiera-post.pp') include contrail file { '/etc/hiera/plugins/contrail.yaml': ensure => file, content => template('contrail/plugins.yaml.erb'), }, } \\","CWE-20, CWE-22","{'reason': 'Contrail is vulnerable to code injection', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
701,"class openstack_tasks::roles::allocate_hugepages { notice('modular: roles/allocate_hugepages.pp') $hugepages = hiera('hugepages', []) unless empty($hugepages) { include ::sysfs sysfs_config_value { 'hugepages': ensure => 'present', name => '/etc/sysfs.d/hugepages.conf', value => map_sysfs_hugepages($hugepages), sysfs => '/sys/devices/system/node/node*/hugepages/hugepages-*kb/nr_hugepages', } sysctl::value { 'vm.max_map_count': value => max_map_count_hugepages($hugepages), } } }",0,1,"include ::sysfs, map_sysfs_hugepages($hugepages), name => '/etc/sysfs.d/hugepages.conf',, sysctl::value { 'vm.max_map_count':, sysfs => '/sys/devices/system/node/node*/hugepages/hugepages-*kb/nr_hugepages',, sysfs::value { 'hugepages':, value => max_map_count_hugepages($hugepages)",CWE-22,"{'reason': 'The misconfiguration is related to the CWE due to [reason]', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
702,class { '::openstack_tasks::openstack_network::keystone' :} warning('osnailyfacter/modular/./openstack-network/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/keystone.pp'),1,1,class { '::openstack_tasks::openstack_network::keystone' :} warning('osnailyfacter/modular/./openstack-network/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/keystone.pp'),CWE-772,"{'reason': 'CWE-772 is related to Deprecated Code.', 'related_cwe': 'CWE-772', 'is_misconfiguration_related': 'Yes'}"
703,"class tripleo::profile::pacemaker::gnocchi::api ( $step = hiera('step'), ) { include ::tripleo::profile::pacemaker::gnocchi include ::tripleo::profile::pacemaker::apache include ::tripleo::profile::base::gnocchi::api }",0,1,"class tripleo::profile::pacemaker::gnocchi::api (\n    $step = hiera(\'step\'),\n  ) { include ::tripleo::profile::pacemaker::gnocchi\n    include ::tripleo::profile::pacemaker::apache\n    include ::tripleo::profile::base::gnocchi::api\n  }, include ::tripleo::profile::base::gnocchi::api, include ::tripleo::profile::pacemaker::apache",CWE-248,"{'reason': 'The misconfiguration is not related to CWE-248', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
704,"class tripleo::profile::base::haproxy ( $certificates_specs = {}, $certmonger_ca = hiera('certmonger_ca', 'local'), $enable_load_balancer = hiera('enable_load_balancer', true), $generate_service_certificates = hiera('generate_service_certificates', false), $step = hiera('step'), ) { if $step >= 1 { if $enable_load_balancer { if str2bool($generate_service_certificates) { include ::certmonger if $certmonger_ca == 'local' { class { '::tripleo::certmonger::ca::local': notify => class['::tripleo::haproxy'] } } certmonger_certificate { ca => $certmonger_ca, ensure => 'present', wait => true, require => class['::certmonger'], } create_resources('::tripleo::certmonger::haproxy', $certificates_specs) } include ::tripleo::haproxy unless hiera('tripleo::haproxy::haproxy_service_manage', true) { exec { 'haproxy-reload': command => 'systemctl reload haproxy', path => ['/usr/bin', '/usr/sbin'], refreshonly => true, onlyif => 'pcs property | grep -q ""maintenance-mode.*true""', subscribe => class['::haproxy'] } haproxy::listen<||> ~> exec['haproxy-reload'] haproxy::balancermember<||> ~> exec['haproxy-reload'] } } } }",0,1,"certmonger_certificate { ca => $certmonger_ca, ensure => 'present', wait => true, require => class['::certmonger'], }, class { '::tripleo::certmonger::ca::local': notify => class['::tripleo::haproxy'] }, create_resources('::tripleo::certmonger::haproxy', $certificates_specs), if $enable_load_balancer { if str2bool(\\$generate_service_certificates) { include ::certmonger, if $enable_load_balancer { if str2bool(\\\\\\$generate_service_certificates) { include ::certmonger, if $enable_load_balancer { if str2bool(\\\\\\\\\\\\\\\\$generate_service_certificates) { include ::certmonger, if $enable_load_balancer { if str2bool(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$generate_service_certificates) { include ::certmonger, if $enable_load_balancer { if str2boolif str2bool(\$generate_service_certificates) { include ::certmonger",CWE-248,"{'reason': 'The script includes a `certmonger_certificate` resource that ensures the presence of a certificate named `ca`. This resource is not declared or used later in the script, which can lead to misconfiguration. The certificate is required by the `tripleo::certmonger::ca::local` class, which is not declared or used later in the script. The class generates a certificate authority (CA) certificate and private key, which are stored in a file named `ca.pem` and a directory named `ca.key`, respectively. The `ca.pem` file is used by `certmonger_certificate` to ensure that the CA certificate exists in the `/etc/pki/ca_trust/anchors/ca.pem` file. However, the script', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
705,"class tripleo::profile::base::nova::libvirt ( $step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::nova include ::nova::compute::libvirt::services file { ['/etc/libvirt/qemu/networks/autostart/default.xml', '/etc/libvirt/qemu/networks/default.xml']: ensure => absent, before => service['libvirt'], } exec { 'libvirt-default-net-destroy': command => '/usr/bin/virsh net-destroy default', onlyif => '/usr/bin/virsh net-info default | /bin/grep -i ""^active:\s*yes""', before => service['libvirt'], } } }",0,1,"exec { 'libvirt-default-net-destroy': command => '/usr/bin/virsh net-destroy default', onlyif => '/usr/bin/virsh net-info default | /bin/grep -i \, exec { 'libvirt-default-net-destroy': command => '/usr/bin/virsh net-destroy default', onlyif => '/usr/bin/virsh net-info default | /bin/grep -i \\, file { ['/etc/libvirt/qemu/networks/autostart/default.xml', '/etc/libvirt/qemu/networks/default.xml']: ensure => absent, before => service['libvirt'], }","CWE-19, CWE-22","{'reason': 'Remove this misconfiguration is needed to fix the root cause of the misconfiguration, so the script will work correctly.', 'related_cwe': 'CWE-19, CWE-22', 'is_misconfiguration_related': 'Yes'}"
706,"define manila::backend::generic ( $driver_handles_share_servers, $share_backend_name = $name, $smb_template_config_path = '$state_path/smb.conf', $volume_name_template = 'manila-share-%s', $volume_snapshot_name_template = 'manila-snapshot-%s', $share_mount_path = '/shares', $max_time_to_create_volume = 180, $max_time_to_attach = 120, $service_instance_smb_config_path = '$share_mount_path/smb.conf', $share_volume_fstype = 'ext4', $share_helpers = ['cifs=manila.share.drivers.helpers.cifshelperipaccess', 'nfs=manila.share.drivers.helpers.nfshelper'], $cinder_volume_type = undef, $delete_share_server_with_last_share = 'false', $unmanage_remove_access_rules = 'false', $automatic_share_server_cleanup = 'true', ) { $share_driver = 'manila.share.drivers.generic.genericsharedriver' manila_config { ""${name}/driver_handles_share_servers"": value => $driver_handles_share_servers; ""${name}/share_backend_name"": value => $share_backend_name; ""${name}/share_driver"": value => $share_driver; ""${name}/smb_template_config_path"": value => $smb_template_config_path; ""${name}/volume_name_template"": value => $volume_name_template; ""${name}/volume_snapshot_name_template"": value => $volume_snapshot_name_template; ""${name}/share_mount_path"": value => $share_mount_path; ""${name}/max_time_to_create_volume"": value => $max_time_to_create_volume; ""${name}/max_time_to_attach"": value => $max_time_to_attach; ""${name}/service_instance_smb_config_path"": value => $service_instance_smb_config_path; ""${name}/share_volume_fstype"": value => $share_volume_fstype; ""${name}/share_helpers"": value => join($share_helpers, ','); ""${name}/cinder_volume_type"": value => $cinder_volume_type; ""${name}/delete_share_server_with_last_share"": value => $delete_share_server_with_last_share; ""${name}/unmanage_remove_access_rules"": value => $unmanage_remove_access_rules; ""${name}/automatic_share_server_cleanup"": value => $automatic_share_server_cleanup; } }",1,1,"manila_config {, }",CWE-754,"{'reason': 'CWE-754 describes that improper error handling can lead to a situation where the state of the program can be changed unpredictably. Therefore, since improper error handling in the script could lead to issues, this is related to CWE-754.', 'related_cwe': 'CWE-754', 'is_misconfiguration_related': 'Yes'}"
707,"class ntp::daemon { include ::shared include packages::ntp include config include users::root include ntp::atboot $ntpservers = $config::ntp_servers case $::operatingsystem { centos, ubuntu: { file { ""/etc/ntp.conf"" : content => template(""ntp/ntp.conf.erb""), mode => 644, owner => root, group => $users::root::group; } $service = $operatingsystem ? { centos => 'ntpd', ubuntu => 'ntp' } service { $service: subscribe => file[""/etc/ntp.conf""], enable => true, hasstatus => true, ensure => running; } } darwin: { file { ""/etc/ntp.conf"" : content => template(""ntp/ntp-darwin.conf.erb""), mode => 644, owner => root, group => $users::root::group; } service { 'org.ntp.ntpd': subscribe => file[""/etc/ntp.conf""], enable => true, ensure => running; } cron { 'whack-apple-ntpd': command => '/usr/bin/killall ntpd', minute => 0; } } } }",1,1,"cron { \\, cron { \\\\, file { \, file { \\, file {service { \\, service { \\\\\\\\, service { \\\\\\\\\\\\\\\\\\, service { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),"{'reason': 'Reasoning', 'related_cwe': 'CWE number(s)', 'is_misconfiguration_related': 'Yes'}"
708,"class role::timedmediahandler { include ::role::multimedia require_package('ffmpeg2theora') require_package('ffmpeg') mediawiki::extension { 'mwembedsupport': } mediawiki::extension { 'timedmediahandler': settings => { wgwaittimefortranscodereset => 1, wgffmpeglocation => '/usr/bin/ffmpeg' }, needs_update => true, require => [ package['ffmpeg', 'ffmpeg2theora'], mediawiki::extension['mwembedsupport'] ], } }",0,1,"mediawiki::extension { 'timedmediahandler': settings => {\n\t\twgwaittimefortranscodereset => 1\n\t\twgffmpeglocation => '/usr/bin/ffmpeg'\n\t\t\t}, needs_update => true, require => [ package['ffmpeg', 'ffmpeg2theora'], mediawiki::extension['mwembedsupport'] ], }, mediawiki::extension {'mwembedsupport': }, mediawiki::extension {'timedmediahandler': settings => {\\\\n\\\\t\\\\twgwaittimefortranscodereset => 1\\\\n\\\\t\\\\twgffmpeglocation => '/usr/bin/ffmpeg'\\\\n\\\\t\\\\t\\\\t}, needs_update => true, require => [ package['ffmpeg', 'ffmpeg2theora'], mediawiki::extension['mwembedsupport'] ], }, mediawiki::extension {'timedmediahandler': settings => {\\n\\t\\twgwaittimefortranscodereset => 1\\n\\t\\twgffmpeglocation => '/usr/bin/ffmpeg'\\n\\t\\t\\t}, needs_update => true, require => [ package['ffmpeg', 'ffmpeg2theora'], mediawiki::extension['mwembedsupport'] ], }, require_package('ffmpeg'), require_package('ffmpeg2theora')",CWE-250,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
709,"class ironic::drivers::ssh ( $libvirt_uri = $::os_service_default, ) { ironic_config { 'ssh/libvirt_uri': value => $libvirt_uri; } }",0,1,"class ironic::drivers::ssh ( $libvirt_uri = $::os_service_default, ) {, ironic_config {\n 'ssh/libvirt_uri':\n    value => $libvirt_uri;\n  }\n","CWE-306, CWE-326, CWE-327, CWE-345, CWE-346, CWE-347, CWE-359, CWE-89","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
710,"class tripleo::profile::pacemaker::neutron::server ( $pacemaker_master = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { include ::neutron::params include ::tripleo::profile::pacemaker::neutron $sync_db = ($::hostname == downcase($pacemaker_master)) if $step >= 3 and $sync_db { include ::neutron::db::mysql } if $step >= 4 or ( $step >= 3 and $sync_db ) { include ::neutron::server::notifications include ::neutron::server } }",0,1,"class tripleo::profile::pacemaker::neutron::server (\\n, class tripleo::profile::pacemaker::neutron::server (\n, if $step >= 3 and $sync_db { include ::neutron::db::mysql }, if $step >= 4 or ( $step >= 3 and $sync_db ) { include ::neutron::server::notifications include ::neutron::server }, include ::tripleo::profile::pacemaker::neutron",CWE-829,"{'reason': 'A `if` statement with a logical `or` operator is used to determine which `include` statements to run, based on the value of `$step` and `$sync_db`. An incorrect `if` statement could lead to a condition misinterpretation.', 'related_cwe': 'CWE-829', 'is_misconfiguration_related': 'Yes'}"
711,"define buildmaster::buildbot_master::mozilla($basedir, $master_type, $http_port=undef) { include ::config $master_group = ""${users::builder::group}"" $master_user = ""${users::builder::username}"" $master_basedir = ""${buildmaster::settings::master_root}"" $master_name = ""${name}"" $full_master_dir = ""${master_basedir}/${basedir}"" $buildbot_configs_dir =""${full_master_dir}/buildbot-configs"" $buildslaves_template = ""buildslaves-${master_type}.py.erb"" file { ""${full_master_dir}/master/buildslaves.py"": require => exec[""setup-$basedir""], owner => $master_user, group => $master_group, mode => 600, content => template(""buildmaster/${buildslaves_template}""), show_diff => false; ""${full_master_dir}"": owner => $master_user, group => $master_group, ensure => ""directory""; ""${full_master_dir}/master/passwords.py"": require => exec[""setup-${basedir}""], owner => $master_user, group => $master_group, mode => 600, content => template(""buildmaster/passwords.py.erb""), show_diff => false; ""${full_master_dir}/master/buildbot.tac"": require => exec[""setup-${basedir}""], mode => 0644, owner => $master_user, group => $master_group, source => ""puppet:///modules/buildmaster/buildbot.tac""; ""/etc/default/buildbot.d/${master_name}"": content => ""${full_master_dir}"", require => exec[""setup-${basedir}""], before => nrpe::custom[""buildbot.cfg""]; ""/etc/cron.d/${master_name}"": require => exec[""setup-${basedir}""], mode => 600, content => template(""buildmaster/buildmaster-cron.erb""); } if ($master_type != ""scheduler"") { if ($http_port == undef) { fail(""need to specify http_port for $master_name"") } file { ""${full_master_dir}/master/postrun.cfg"": require => exec[""setup-${basedir}""], owner => $master_user, group => $master_group, mode => 600, content => template(""buildmaster/${buildmaster::settings::postrun_template}""), show_diff => false; } } mercurial::repo { ""clone-buildbot-${master_name}"": hg_repo => ""${config::buildbot_configs_hg_repo}"", dst_dir => ""${buildbot_configs_dir}"", user => ""${users::builder::username}"", branch => ""${config::buildbot_configs_branch}""; } exec { ""setup-${basedir}"": require => [ mercurial::repo[""clone-buildbot-${master_name}""], file[""${full_master_dir}""], class[""packages::mozilla::py27_virtualenv""], ], command => ""/usr/bin/make -f makefile.setup all basedir=${full_master_dir} \ master_name=${master_name} \ virtualenv=${::packages::mozilla::py27_virtualenv::virtualenv} \ python=${::packages::mozilla::python27::python} \ hg=${::packages::mozilla::py27_mercurial::mercurial} \ masters_json=${config::master_json} \ user=$master_user \ buildbotcustom_branch=${config::buildbotcustom_branch} \ buildbotconfigs_branch=${config::buildbot_configs_branch} \ tools_repo=${config::buildbot_tools_hg_repo}"", creates => ""${full_master_dir}/master"", user => $master_user, group => $master_group, logoutput => on_failure, cwd => ""${buildbot_configs_dir}""; } }",1,1,"class [\\\\\\\\\\\\, command => \\\\\\, define buildmaster::buildbot_master::mozilla($basedir, $master_type, $http_port=undef) {\n\tinclude ::config\n\t$master_group = \\, exec { \\\\\\\, exec { \\\\\\\\\\\\\\\\\\\\\\\\\\\\, file { \\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, if ($http_port == undef) {\\n\\t\\tfail(\\\, mercurial::repo { \\\\\\\\\\\\\\\\\\\\\\\\\\\\, require => \\\\",CWE-798,"{'reason': ""There are a few security issues with this Puppet code snippet. The first security issue is a directory traversal in the command variable of the exec. This is an example of CWE-798: Use of Hard-coded Credentials. A directory traversal allows for malicious input to be included in the command variable of the exec, allowing for execution of arbitrary commands. A second security issue is a missing `safety valve' in the buildmaster class, which would allow for an attacker to execute an arbitrary command. This is an example of CWE-664: Use of a Broken or Risky Cryptographic Algorithm. The use of `make -f makefile.setup' without a safety valve means that the attacker is able to execute any command, including potentially setting the password for"", 'related_cwe': 'CWE-798, CWE-664', 'is_misconfiguration_related': 'Yes'}"
712,"class { '::keystone::roles::admin': email => 'test@example.com', password => 'changeme', } class { '::keystone:ldap': url => 'ldap://ldap.example.com:389', user => 'uid=bind,cn=users,cn=accounts,dc=example,dc=com', password => 'secretpass', suffix => 'dc=example,dc=com', query_scope => 'sub', user_tree_dn => 'cn=users,cn=accounts,dc=example,dc=com', user_id_attribute => 'uid', user_name_attribute => 'uid', user_mail_attribute => 'mail', user_allow_create => 'false', user_allow_update => 'false', user_allow_delete => 'false', user_enabled_emulation => 'true', user_enabled_emulation_dn => 'cn=openstack-enabled,cn=groups,cn=accounts,dc=example,dc=com', group_tree_dn => 'ou=groups,ou=openstack,dc=example,dc=com', group_objectclass => 'organizationalrole', group_id_attribute => 'cn', group_name_attribute => 'cn', group_member_attribute => 'roleoccupant', group_desc_attribute => 'description', group_allow_create => 'true', group_allow_update => 'true', group_allow_delete => 'true', project_tree_dn => 'ou=projects,ou=openstack,dc=example,dc=com', project_objectclass => 'organizationalunit', project_id_attribute => 'ou', project_member_attribute => 'member', project_name_attribute => 'ou', project_desc_attribute => 'description', project_allow_create => 'true', project_allow_update => 'true', project_allow_delete => 'true', project_enabled_emulation => 'true', project_enabled_emulation_dn => 'cn=enabled,ou=openstack,dc=example,dc=com', role_tree_dn => 'ou=roles,ou=openstack,dc=example,dc=com', role_objectclass => 'organizationalrole', role_id_attribute => 'cn', role_name_attribute => 'cn', role_member_attribute => 'roleoccupant', role_allow_create => 'true', role_allow_update => 'true', role_allow_delete => 'true', identity_driver => 'ldap', use_tls => 'true', tls_cacertfile => '/etc/ssl/certs/ca-certificates.crt', tls_req_cert => 'demand', use_pool => 'true', use_auth_pool => 'true', pool_size => 5, auth_pool_size => 5, pool_retry_max => 3, pool_connection_timeout => 120, }",1,1,"password => 'changeme',, password =>'secretpass',, pool_retry_max => 3,, tls_cacertfile => '/etc/ssl/certs/ca-certificates.crt',, tls_req_cert => 'demand',, url => 'ldap://ldap.example.com:389',, use_auth_pool => 'true',, use_pool => 'true',, user => 'uid=bind,cn=users,cn=accounts,dc=example,dc=com',",CWE-259,"{'reason': ""The `password => 'changeme'` misconfiguration is related to the `CWE-259` because the `password` attribute defines a clear text password which can be used by an attacker to authenticate to the `ldap://ldap.example.com:389` service as the user `uid=bind,cn=users,cn=accounts,dc=example,dc=com`."", 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
713,"class role::oauthauthentication ( $consumer_key, $consumer_secret, $callback_url, ) { mediawiki::extension { 'oauthauthentication': needs_update => true, composer => true, settings => { wgoauthauthenticationurl => 'https://meta.wikimedia.org/w/index.php?title=special:oauth', wgoauthauthenticationconsumerkey => $consumer_key, wgoauthauthenticationconsumersecret => $consumer_secret, wgoauthauthenticationcanonicalurl => 'https://meta.wikimedia.org', wgoauthauthenticationremotename => 'wikimedia', wgoauthauthenticationcallbackurl => $callback_url, } } mediawiki::import::text { 'vagrantroleoauthauthentication': source => 'puppet:///modules/role/oauthauthentication/vagrantroleoauthauthentication.wiki', } }",1,1,"class role::oauthauthentication (\n, mediawiki::extension { 'oauthauthentication':\\n, text { 'vagrantroleoauthauthentication':\\\\n, vagrantroleoauthauthentication.wiki',\\\\\\\\\\\\n, vagrantroleoauthauthentication.wiki',\\\\\\\\n, wgoauthauthenticationcallbackurl => $callback_url,\\\\\\\\\\\\n, wgoauthauthenticationcanonicalurl => 'https://meta.wikimedia.org',\\\\n, wgoauthauthenticationconsumersecret => $consumer_secret,\\\\n, wgoauthauthenticationremotename => 'wikimedia',\\\\\\\\n","CWE-284, CWE-285, CWE-319, CWE-346, CWE-347","{'reason': 'The configuration details for the misconfiguration provided does not meet the definition described in CWE-284. It also does not contain all of the elements described in CWE-284. However, the vulnerability may contain additional details, such as the use of external services, which may be related to CWE-284. Therefore, the misconfiguration is related to CWE-284, but only partially. Additional analysis may be required to determine the full details of the misconfiguration.', 'related_cwe': 'CWE-284, CWE-285, CWE-319, CWE-346, CWE-347', 'is_misconfiguration_related': 'Yes'}"
714,"class swift::storage::disks($args = {}, $defaults = {}) { create_resources(swift::storage::disk, $args, $defaults) }",0,1,"class swift::storage::disks($args = {}, $defaults = {}) { create_resources(swift::storage::disk, $args, $defaults) }, create_resources(swift::storage::disk, $args, $defaults)",CWE-352,"{'reason': 'The use of the create_resources function creates a new resource of type swift::storage::disk and configures it. The misconfiguration occurs because the variable $args is used. In this case, a resource can be easily manipulated to make it do whatever you want it to. This leads to code injection vulnerabilities, which is a CWE-352 issue.', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
715,"class puppet::puppetize_sh { include users::root file { ""${users::root::home}/puppetize.sh"": source => ""puppet:///modules/puppet/puppetize.sh"", owner => root, group => $users::root::group, mode => filemode(0755); } }",1,1,"class puppet::puppetize_sh {, file {, group => $users::root::group, mode => filemode(0755); }, include users::root, owner => root","CWE-22, CWE-264, CWE-732","{'reason': 'The script is a shell script to be run in a non-interactive shell', 'related_cwe': 'CWE-22, CWE-264, CWE-732', 'is_misconfiguration_related': 'Yes'}"
716,"$resource = hiera($::resource_name) $ip = $resource['input']['ip'] $type_drivers = $resource['input']['type_drivers'] $tenant_network_types = $resource['input']['tenant_network_types'] $mechanism_drivers = $resource['input']['mechanism_drivers'] $flat_networks = $resource['input']['flat_networks'] $network_vlan_ranges = $resource['input']['network_vlan_ranges'] $tunnel_id_ranges = $resource['input']['tunnel_id_ranges'] $vxlan_group = $resource['input']['vxlan_group'] $vni_ranges = $resource['input']['vni_ranges'] $enable_security_group = $resource['input']['enable_security_group'] $package_ensure = $resource['input']['package_ensure'] $supported_pci_vendor_devs = $resource['input']['supported_pci_vendor_devs'] $sriov_agent_required = $resource['input']['sriov_agent_required'] file {'/etc/default/neutron-server': ensure => present, owner => 'root', group => 'root', mode => 644 } -> class { 'neutron::plugins::ml2': type_drivers => $type_drivers, tenant_network_types => $tenant_network_types, mechanism_drivers => $mechanism_drivers, flat_networks => $flat_networks, network_vlan_ranges => $network_vlan_ranges, tunnel_id_ranges => $tunnel_id_ranges, vxlan_group => $vxlan_group, vni_ranges => $vni_ranges, enable_security_group => $enable_security_group, package_ensure => $package_ensure, supported_pci_vendor_devs => $supported_pci_vendor_devs, sriov_agent_required => $sriov_agent_required, } -> exec { 'neutron-db-sync': provider => 'shell', command => ""${command} stamp head"", path => [ '/usr/bin', '/bin' ], onlyif => ""${command} current | grep -qe '^current revision.*none$' "" } include neutron::params package { 'neutron': ensure => $package_ensure, name => $::neutron::params::package_name, before => exec['neutron-db-sync'] }",0,1,"enable_security_group => $enable_security_group, flat_networks => $flat_networks, mechanism_drivers => $mechanism_drivers, network_vlan_ranges => $network_vlan_ranges, package_ensure => $package_ensure, tenant_network_types => $tenant_network_types, tunnel_id_ranges => $tunnel_id_ranges, type_drivers => $type_drivers, vni_ranges => $vni_ranges, vxlan_group => $vxlan_group",CWE-120,"{'reason': 'The configuration variable $enable_security_group enables the support for security groups in neutron.', 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
717,class { '::osnailyfacter::virtual_ips::conntrackd' :},1,1,"class { '::osnailyfacter::virtual_ips::conntrackd' :}, class {'::osnailyfacter::virtual_ips::conntrackd' :}, class {'::osnailyfacter::virtual_ips::conntrackd':}",CWE-732,"{'reason': 'Please provide a reason why this misconfiguration is related to the CWE', 'related_cwe': 'Please provide a list of related CWEs', 'is_misconfiguration_related': 'Please provide whether the misconfiguration is related or not'}"
718,notice('modular: contrail/contrail-compute-override.pp') include contrail class { 'contrail::compute::override': },1,1,"class { \\\\'contrail::compute::override\\\\': }\\\\n, class { \\\\\\\\'contrail::compute::override\\\\\\\\': }\\\\\\\\n, class {include contrail\\\\n\nclass { \\\\'contrail::compute::override\\\\': }\\\\n\n, include contrail\\nclass { \\'contrail::compute::override\\': }\\n, notice(\'modular: contrail/contrail-compute-override.pp\')\ninclude contrail\nclass { \'contrail::compute::override\': }\n, notice(\\'modular: contrail/contrail-compute-override.pp\\')\\ninclude contrail\\nclass { \\\\'contrail::compute::override\\': }\\n, notice(\\'modular: contrail/contrail-compute-override.pp\\')\\ninclude contrail\\nclass { \\\\\'contrail::compute::override\\\'\\\\': }\\n, notice(\\\\\\'modular: contrail/contrail-compute-override.pp\\\\\\')\\\\ninclude contrail\\\\nclass { \\\\\\\\'contrail::compute::override\\\\\\\\': }\\\\\\\\n",CWE-693,"{'reason': 'The misconfiguration is related to the CWE because [reasoning]', 'related_cwe': 'CWE-693', 'is_misconfiguration_related': 'Yes'}"
719,"class pacemaker::resource_defaults( $defaults, $ensure = 'present', ) { create_resources( 'pcmk_resource_default', $defaults, { ensure => $ensure, } ) }",0,1,"class pacemaker::resource_defaults( $defaults, $ensure = 'present', ) { create_resources( 'pcmk_resource_default', $defaults, { ensure => $ensure, } ) }",CWE-1321,"{'reason': ""The resource default definition in the script is vulnerable to CWE-1321. By using 'present' as the default value for the 'ensure' parameter, Puppet will try to ensure that resource defaults for a specific type are always present on the system. This may result in unintended consequences if the default values were not intended to be applied to all resources of that type."", 'related_cwe': 'CWE-1321', 'is_misconfiguration_related': 'Yes'}"
720,"class lma_infra_alerting::params { include nagios::params $nagios_http_user = 'nagiosadmin' $nagios_cmd_check_ssh = 'check_ssh' $nagios_contactgroup = 'openstack' $nagios_config_filename_prefix = 'lma_' $nagios_check_external_commands = true $nagios_command_check_interval = '10s' $nagios_interval_length = '60' $nagios_check_service_freshness = true $nagios_enable_notifications = true $nagios_accept_passive_service_checks = true $nagios_accept_passive_host_checks = false $nagios_use_syslog = true $nagios_log_external_commands = false $nagios_log_passive_checks = false $nagios_enable_flap_detection = true $nagios_debug_level = 0 $nagios_process_performance_data = false $nagios_default_max_check_attempts_host = 3 case $::osfamily { 'debian': { $nagios_distribution_configs_to_purge = [ 'services_nagios2.cfg', 'localhost_nagios2.cfg', 'hostgroups_nagios2.cfg', 'extinfo_nagios2.cfg', ] } default: { $nagios_distribution_configs_to_purge = [] } } $nagios_check_interval_service_status = 1 $nagios_retry_interval_service_status = 1 $nagios_max_check_attempts_service_status = 2 $nagios_freshness_threshold_service_status = 65 $nagios_generic_host_template = 'generic-host' $nagios_generic_service_template = 'generic-service' $nagios_global_vhostname_prefix = '00-global-clusters' $nagios_node_vhostname_prefix = '00-node-clusters' $influxdb_port = 8086 $grafana_port = 8000 $elasticserach_port = 9200 $kibana_port = 80 $update_configuration_script = '/usr/local/bin/update-lma-configuration' }",1,1,"class lma_infra_alerting::params { include nagios::params, include nagios::params",CWE-257,"{'reason': 'There is a duplicate `include` function, which includes two variables, `nagios::params` and `nagios::params`.', 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
721,"$swift_local_net_ip='127.0.0.1' $swift_shared_secret='changeme' exec { logoutput => true } package { 'curl': ensure => present } class { '::memcached': listen_ip => $swift_local_net_ip, } class { '::swift': swift_hash_path_suffix => $swift_shared_secret, package_ensure => latest, } class { '::swift::storage': storage_local_net_ip => $swift_local_net_ip, } swift::storage::loopback { '2': require => class['swift'], } swift::storage::node { '2': mnt_base_dir => '/srv/node', weight => 1, manage_ring => true, zone => '2', storage_local_net_ip => $swift_local_net_ip, require => swift::storage::loopback[2] , } class { '::swift::ringbuilder': part_power => '18', replicas => '1', min_part_hours => 1, require => class['swift'], } class { '::swift::proxy': proxy_local_net_ip => $swift_local_net_ip, pipeline => ['healthcheck', 'cache', 'tempauth', 'proxy-server'], account_autocreate => true, require => class['swift::ringbuilder'], } class { ['::swift::proxy::healthcheck', '::swift::proxy::cache']: } class { '::swift::proxy::tempauth': account_user_list => [ { 'user' => 'admin', 'account' => 'admin', 'key' => 'admin', 'groups' => [ 'admin', 'reseller_admin' ], }, { 'user' => 'tester', 'account' => 'test', 'key' => 'testing', 'groups' => ['admin'], }, { 'user' => 'tester2', 'account' => 'test2', 'key' => 'testing2', 'groups' => ['admin'], }, { 'user' => 'tester', 'account' => 'test', 'key' => 'testing3', 'groups' => [], }, ] }",1,1,"class { '::swift::proxy::tempauth': account_user_list => [, key => 'admin', 'groups' => [ 'admin','reseller_admin' ], },, key => 'testing', 'groups' => ['admin'], },, key => 'testing2', 'groups' => ['admin'], },, key => 'testing3', 'groups' => [], },, manage_ring => true, zone => '2',, storage_local_net_ip => $swift_local_net_ip,, swift::storage::node { '2':, weight => 1,",CWE-312,"{'reason': ""The default key 'admin' can be found at the end of the list, so users with default accounts will be able to log into the Swift service using the key 'admin'. This means that attackers with default accounts can log into Swift. Furthermore, the same key can be used to access all default accounts, which allows an attacker with a default account to gain access to other accounts."", 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
722,"class glance( $package_ensure = 'present' ) { include ::glance::deps include ::glance::params if ( $glance::params::api_package_name == $glance::params::registry_package_name ) { package { $::glance::params::api_package_name : ensure => $package_ensure, name => $::glance::params::api_package_name, tag => ['openstack', 'glance-package'], } } include '::openstacklib::openstackclient' }",1,1,"if ( $glance::params::api_package_name == $glance::params::registry_package_name ) { package { $::glance::params::api_package_name : ensure => $package_ensure, name => $::glance::params::api_package_name, tag => ['openstack', 'glance-package'], } }, include ::openstacklib::openstackclient, package { $::glance::params::api_package_name : ensure => $package_ensure, name => $::glance::params::api_package_name, tag => ['openstack', 'glance-package'], }, package {\n $::glance::params::api_package_name : ensure => $package_ensure,\n name => $::glance::params::api_package_name,\n tag => ['openstack', 'glance-package'],\n }",CWE-117,"{'reason': 'CWE-117: Improper Validation of Data Received from Client in HTTP Protocol Request', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
723,"class openstack::corosync ( $bind_address = '127.0.0.1', $multicast_address = undef, $secauth = false, $stonith = false, $quorum_policy = 'ignore', $quorum_members = ['localhost'], $quorum_members_ids = undef, $unicast_addresses = ['127.0.0.1'], $packages = undef, $cluster_recheck_interval = '190s', ) { file { 'limitsconf': ensure => present, path => '/etc/security/limits.conf', source => 'puppet:///modules/openstack/limits.conf', replace => true, owner => '0', group => '0', mode => '0644', before => service['corosync'], } anchor {'corosync':} if $packages { package { $packages: ensure => present, } -> anchor['corosync-done'] } anchor['corosync'] -> pcmk_property<||> class['::corosync']-> pcmk_property<||>-> pcmk_resource<||> pcmk_property['no-quorum-policy']-> pcmk_property['stonith-enabled']-> pcmk_property['start-failure-is-fatal'] corosync::service { 'pacemaker': version => '1', } anchor['corosync'] -> corosync::service['pacemaker'] corosync::service['pacemaker'] ~> service['corosync'] corosync::service['pacemaker'] -> anchor['corosync-done'] class { '::corosync': enable_secauth => $secauth, bind_address => $bind_address, multicast_address => $multicast_address, set_votequorum => true, manage_pacemaker_service => true, quorum_members => $quorum_members, quorum_members_ids => $quorum_members_ids, unicast_addresses => $unicast_addresses, debug => false, log_stderr => false, log_function_name => true, } -> anchor['corosync-done'] pcmk_property { ensure => 'present', } pcmk_property { 'no-quorum-policy': value => $quorum_policy, } -> anchor['corosync-done'] pcmk_property { 'stonith-enabled': value => $stonith, } -> anchor['corosync-done'] pcmk_property { 'start-failure-is-fatal': value => false, } -> anchor['corosync-done'] pcmk_property { 'symmetric-cluster': value => false, } -> anchor['corosync-done'] pcmk_property { 'cluster-recheck-interval': value => $cluster_recheck_interval, } -> anchor['corosync-done'] anchor {'corosync-done':} }",1,1,"anchor { 'corosync':}\\\\n, anchor {'corosync-done':}\\\\\\\\\\\\\\\\n, anchor['corosync'] -> corosync::service['pacemaker']\\\\\\\\n, anchor['corosync'] -> pcmk_property<||>\\\\n, class openstack::corosync (\n, class { '::corosync':\\\\\\\\n, file { 'limitsconf':\\n, if $packages {\\\\n, pcm\u043a_property {'stonith-enabled': value => $stonith,} -> anchor['corosync-done']\\\\\\\\n, pcm��_property { 'no-quorum-policy': value => $quorum_policy,} -> anchor['corosync-done']\\\\n","CWE-20, CWE-78, CWE-798","{'reason': 'There are multiple issues found in the provided misconfiguration. However, this misconfiguration is not related to any of the CWEs mentioned. This is because none of the issues are related to a specific CWE. For example, the anchors and class declaration are misconfigured. The anchors have no specific reason for existing, and the class declaration lacks specific information about how to declare the class and which parameters to use. As such, this misconfiguration cannot be directly linked to any CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
724,"class packages::gdb { case $::operatingsystem { centos: { package { ""gdb"": ensure => latest; } } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"ensure => latest, fail(\, fail(\\, fail(\\\, gdb, package { \\\, package { \\\\\\","CWE-20, CWE-22, CWE-248, CWE-347","{'reason': 'The misconfiguration is related to CWE-22 due to the untrusted user input vulnerability.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
725,"define murano::application ( $package_ensure = 'present', $package_name = $title, $package_category = undef, ) { $package_path=""/var/cache/murano/meta/${package_name}.zip"" murano_application { $package_name: ensure => $package_ensure, package_path => $package_path, category => $package_category, } }",0,1,"define murano::application ( $package_ensure = 'present', $package_name = $title, $package_category = undef, ) { $package_path=\, murano_application { $package_name: ensure => $package_ensure, package_path => $package_path, category => $package_category, } }, var/cache/murano/meta/${package_name}.zip\","CWE-20, CWE-22, CWE-327, CWE-329, CWE-772","{'reason': ""The misconfiguration is related to the following CWE:\\n\\n\\tCWE-20: Untrusted Search Path\\n\\tCWE-22: Improper File Permissions\\n\\tCWE-327: Insertion of Uncontrolled Data into a Read of a File or Read of Input Stream\\n\\tCWE-329: Uncontrolled Buffer Copies in or out of a Buffer of Unspecified Size\\n\\tCWE-772: Missing Release of Resource after Effective Lifetime\\n\\nExplanation: The script's logic allows user-defined untrusted search paths into the application's file system. If the `package_path` value is set to a user-defined directory, it will be used as a search path for the application's files. However, this search path can be"", 'related_cwe': 'CWE-20, CWE-22, CWE-327, CWE-329, CWE-772', 'is_misconfiguration_related': 'Yes'}"
726,"class awstats { include fcgiwrap package { 'awstats': ensure => present, } file { require => package['awstats'] } file { '/etc/cron.d/awstats': source => 'puppet:///modules/awstats/awstats.cron', } file { '/etc/awstats/awstats.conf': source => 'puppet:///modules/awstats/awstats.conf', } file { '/etc/nginx/sites/stats.translatewiki.net': source => 'puppet:///modules/awstats/stats.translatewiki.net', require => [package['nginx'], service['fcgiwrap']], notify => service['nginx'], } }",0,1,"class awstats {\\ninclude fcgiwrap\\npackage {'awstats':\\n ensure => present,\\n}\\n\\nfile {\\nrequire => package['awstats']\\n}\\n\\nfile {'/etc/cron.d/awstats':\\nsource => 'puppet:///modules/awstats/awstats.cron',\\n}\\n\\nfile {'/etc/awstats/awstats.conf':\\nsource => 'puppet:///modules/awstats/awstats.conf',\\n}\\n\\nfile {'/etc/nginx/sites/stats.translatewiki.net':\\nsource => 'puppet:///modules/awstats/stats.translatewiki.net',\\nrequire => [package['nginx'], service['fcgiwrap']],\\nnotify => service['nginx'],\\n}\\n}\\n, class awstats {\ninclude fcgiwrap\npackage {'awstats':\n ensure => present,\n}\n\nfile {\nrequire => package['awstats']\n}\n\nfile {'/etc/cron.d/awstats':\nsource => 'puppet:///modules/awstats/awstats.cron',\n}\n\nfile {'/etc/awstats/awstats.conf':\nsource => 'puppet:///modules/awstats/awstats.conf',\n}\n\nfile {'/etc/nginx/sites/stats.translatewiki.net':\nsource => 'puppet:///modules/awstats/stats.translatewiki.net',\nrequire => [package['nginx'], service['fcgiwrap']],\nnotify => service['nginx'],\n}\n}\n, file {'/etc/awstats/awstats.conf':, file {'/etc/cron.d/awstats':, file {'/etc/nginx/sites/stats.translatewiki.net':, package {'awstats':","CWE-22, CWE-77, CWE-798","{'reason': 'The issue is related to CWE-22 due to the potential for an uncontrolled variable to have unintended side effects. In this case, the issue occurs due to the fact that the puppet script does not validate user input.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
727,class { '::osnailyfacter::generate_vms::generate_vms' :},1,1,class { '::osnailyfacter::generate_vms::generate_vms' :},CWE-200,"{'reason': 'The misconfiguration could be considered related to CWE-200 due to the misconfiguration found in Row Number 727. While the exact reason behind the issue is not clear, it can be inferred that the misconfiguration found could lead to an information disclosure vulnerability.', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
728,"class swift::proxy::swift3( $ensure = 'present' ) { include ::swift::deps include ::swift::params package { 'swift-plugin-s3': ensure => $ensure, name => $::swift::params::swift3, tag => ['openstack','swift-package'] } concat::fragment { 'swift_swift3': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/swift3.conf.erb'), order => '70', } }",1,1,"include ::swift::deps, include ::swift::params, package {'swift-plugin-s3':",CWE-94,"{'reason': 'This puppet code is responsible for deploying the openstack swift service. A missing package definition is present. The package definition is not a parameter, so it must be defined manually. The package name definition is also missing. Without this definition, there is no way to define what package to deploy. A misconfiguration is present. This is related to CWE-94 (Unrestricted Upload of File to Arbitrary Location).', 'related_cwe': 'CWE-94', 'is_misconfiguration_related': 'Yes'}"
729,"class puppet::atboot { include puppet include ::config include puppet::puppetize_sh include puppet::settings include packages::puppet include needs_reboot $puppet_server = $::puppet::settings::puppet_server $puppet_servers = $::puppet::settings::puppet_servers case ($::operatingsystem) { windows: { include dirs::etc $puppetmasters_txt = ""${dirs::etc::dir}/puppetmasters.txt"" exec { ""sec_descript_clear"" : command => 'c:\windows\system32\icacls.exe c:\etc\puppetmasters.txt /remove:g root', require => file[$puppetmasters_txt], } } default: { $puppetmasters_txt = ""${dirs::etc::dir}/puppet/puppetmasters.txt"" } } file { $puppetmasters_txt: content => template(""puppet/puppetmasters.txt.erb""); } $puppet_atboot_common = template(""puppet/puppet-atboot-common.erb"") case $::operatingsystem { centos: { file { ""/etc/init.d/puppet"": mode => 0755, owner => 'root', group => 'root', require => class['packages::puppet'], content => template(""puppet/puppet-centos-initd.erb""), notify => [ exec['initd-refresh'], exec['reboot_semaphore'] ]; } exec { 'initd-refresh': command => '/sbin/chkconfig puppet resetpriorities', refreshonly => true; } service { ""puppet"": require => file['/etc/init.d/puppet'], enable => true; } } ubuntu: { file { ""/etc/puppet/init"": mode => 0755, owner => 'root', group => 'root', content => template(""puppet/puppet-ubuntu-initd.erb""); ""/etc/init/puppet.conf"": before => class['packages::puppet'], source => ""puppet:///modules/puppet/puppet.upstart.conf""; ""/etc/init.d/puppet"": ensure => link, force => true, target => ""/lib/init/upstart-job""; } } darwin: { include dirs::usr::local::bin file { ""/library/launchdaemons/com.mozilla.puppet.plist"": owner => root, group => wheel, mode => 0644, source => ""puppet:///modules/puppet/puppet-atboot.plist""; ""/usr/local/bin/run-puppet.sh"": owner => root, group => wheel, mode => 0755, content => template(""puppet/puppet-darwin-run-puppet.sh.erb""); } } windows: { include dirs::programdata::puppetagain $puppet_semaphore = 'c:\programdata\puppetagain\puppetcomplete.semaphore' file { ""c:/programdata/puppetagain/runpuppet.rb"": content => template(""${module_name}/puppet-atboot-runpuppet.rb.erb""); ""c:/programdata/puppetagain/runpuppet.xml"": content => template(""${module_name}/puppet-atboot-runpuppet.xml.erb""); } $schtasks = 'c:\windows\system32\schtasks.exe' shared::execonce { ""puppet-atboot-schtask"": command => ""$schtasks /create /xml \""c:\\programdata\\puppetagain\\runpuppet.xml\"" /tn runpuppet"", require => file['c:/programdata/puppetagain/runpuppet.xml']; } } default: { fail(""puppet::atboot support missing for $::operatingsystem"") } } }",1,0,"exec {\\n 'initd-refresh': command => '/sbin/chkconfig puppet resetpriorities',\\n refreshonly => true;\\n }\\n, file { \, file { \\, file { \\\\, file { \\\\\\, file {\n $puppetmasters_txt: content => template(\, include dirs::programdata::puppetagain \\\\\\\\\\\\\\, include dirs::usr::local::bin \\\\, service { \\",CWE-22,"{'reason': 'The Puppet code is properly setting the correct permissions for files related to the puppet configuration.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'No'}"
730,"class nginx::sites { include nginx::ssl file { '/etc/nginx/sites/translatewiki.net': source => 'puppet:///modules/nginx/translatewiki.net', } file { '/etc/nginx/sites/translatewiki.org': source => 'puppet:///modules/nginx/translatewiki.org', } }",1,1,"file { \, file { \\, file { \\\\, puppet:///modules/nginx/, source => 'puppet:///modules/nginx/\, source => 'puppet:///modules/nginx/\\, source => 'puppet:///modules/nginx/\\\\",CWE-22,"{'reason': 'This vulnerability relates to the use of relative paths. If a user had access to modify the source files, then they could add malicious files to the /modules/nginx/ directory and then include them into the class. This could allow a user to run arbitrary puppet code on the server and could be used to compromise a server running this code. By adding a leading slash in the source argument, we can specify a path that exists relative to the module root and make it more difficult for a user to introduce a malicious file into a class.', 'related_cwe': 'CWE-22, CWE-263, CWE-284', 'is_misconfiguration_related': 'Yes'}"
731,"notice('modular: dhcp-ranges.pp') $admin_networks = hiera('admin_networks', [{}]) $admin_network = hiera('admin_network') fuel::dnsmasq::dhcp_range <||> { next_server => $admin_network['ipaddress'], } file { '/etc/dnsmasq.d': ensure => 'directory', recurse => true, purge => true, } create_dnsmasq_dhcp_ranges($admin_networks)",0,1,"create_dnsmasq_dhcp_ranges($admin_networks), dnsmasq::dhcp_range <||> { next_server => $admin_network['ipaddress'], }, file { '/etc/dnsmasq.d': ensure => 'directory', recurse => true, purge => true, }","CWE-1154, CWE-1163, CWE-1175","{'reason': '', 'related_cwe': 'CWE-1154', 'is_misconfiguration_related': 'Yes'}"
732,"define osxutils::defaults ($domain = undef, $key = undef, $value = undef, $user = 'root') { $defaults_cmd = ""/usr/bin/defaults"" if ($domain != undef) and ($key != undef) and ($value != undef) { exec { ""osx_defaults write ${domain} ${key}=>${value}"" : command => ""${defaults_cmd} write ${domain} ${key} ${value}"", unless => ""/bin/test x`${defaults_cmd} read ${domain} ${key}` = x'${value}'"", user => $user, } } else { warning(""cannot ensure present without domain, key, and value attributes"") } }",0,1,"else {, exec { \, if ($domain!= undef) and ($key!= undef) and ($value!= undef) {, unless => \, user => $user, }, warning(\\\, } else {, } }","CWE-118, CWE-119, CWE-120, CWE-129","{'reason': 'The misconfiguration is related to the provided CWE, because there is a user parameter passed as a variable in the exec block. This is a potential vulnerability because it could allow users to execute arbitrary commands with root privileges, leading to privilege escalation.', 'related_cwe': 'CWE-118, CWE-119, CWE-120, CWE-129', 'is_misconfiguration_related': 'Yes'}"
733,"define nrpe::plugin { include nrpe::base include nrpe::settings file { ""$nrpe::settings::plugins_dir/$title"": owner => $::users::root::username, group => $::users::root::group, mode => 0755, require => class['nrpe::base'], source => ""puppet:///modules/nrpe/$title""; } }",0,1,"file { \, file { \\, group => \\$::users::root::group,, group => \\\\$::users::root::group,, include nrpe::base include nrpe::settings, mode => 0755, require => class['nrpe::base'],, owner => \$::users::root::username,, owner => \\$::users::root::username,, source => \, source => \\","CWE-250, CWE-269, CWE-276","{'reason': 'The vulnerability CWE-269: Excessive Data Retention refers to when user data is held longer than necessary. In the original defect, the source is defined to be a path in the source of origin. Therefore, the puppet source path can be replaced by the data source path, thus exceeding the data retention period.', 'related_cwe': 'CWE-269', 'is_misconfiguration_related': 'Yes'}"
734,"class role::visualeditor { require ::role::mediawiki include ::role::cite include ::role::citoid include ::role::parserfunctions include ::role::restbase include ::role::scribunto include ::role::templatedata include ::role::uls mediawiki::extension { 'visualeditor': settings => template('role/visualeditor/conf.php.erb'), browser_tests => 'modules/ve-mw/tests/browser', priority => $::load_early, wiki => $::mediawiki::wiki_db, } }",1,1,"class role::visualeditor { require ::role::mediawiki, include ::role::mediawiki",CWE-732,"{'reason': 'For this misconfiguration to be related to CWE-732, we must check if any user has write access to the file. If no user has write access to the file, the misconfiguration could be a false positive, and not related to CWE-732.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'No'}"
735,"class tripleo::profile::base::ironic::conductor ( $step = hiera('step'), $manage_pxe = true, ) { include ::tripleo::profile::base::ironic if $step >= 4 { include ::ironic::conductor include ::ironic::drivers::pxe if $manage_pxe { include ::ironic::pxe } include ::ironic::drivers::drac include ::ironic::drivers::ilo include ::ironic::drivers::ipmi include ::ironic::drivers::ssh } }",0,1,"if $manage_pxe { include ::ironic::pxe }, include ::ironic::conductor, include ::ironic::drivers::drac, include ::ironic::drivers::ilo, include ::ironic::drivers::ipmi, include ::ironic::drivers::pxe, include ::ironic::drivers::ssh",CWE-22,"{'reason': 'CWE-22: CWE-22 is used to identify when one or more instances of a vulnerability or error can be combined to allow a malicious user to attack a system. This is not related to the misconfiguration because we are looking at a single misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
736,"class lma_collector::collectd::pacemaker ( $resources, $notify_resource = undef, $hostname = undef, ) { validate_hash($resources) $resources_keys = suffix(prefix(keys($resources), '""'), '""') $resources_values = suffix(prefix(values($resources), '""'), '""') $real_resources = hash(flatten(zip($resources_keys, $resources_values))) if $hostname { $_hostname = {'hostname' => ""\""${hostname}\""""} } else { $_hostname = {} } if $notify_resource { $_notify_resource = {'notifyresource' => ""\""${notify_resource}\""""} } else { $_notify_resource = {} } lma_collector::collectd::python { 'collectd_pacemaker': config => merge({'resource' => $real_resources}, $_hostname, $_notify_resource) } collectd::plugin { 'target_notification': ensure => absent } collectd::plugin { 'match_regex': ensure => absent } class { 'collectd::plugin::chain': ensure => absent } }",0,1,"class { 'collectd::plugin::chain': ensure => absent }, lma_collector::collectd::python { 'collectd_pacemaker': config => merge({'resource' => $real_resources}, $_hostname, $_notify_resource) }",CWE-1038,"{'reason': 'The issue is related to the misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'Yes'}"
737,"class users::builder::account($username, $group, $grouplist, $home) { include ::config if ($username == '') { fail('no builder username set') } case $::operatingsystem { centos, ubuntu: { if (secret(""builder_pw_hash"") == '') { fail('no builder password hash set') } user { $username: password => secret(""builder_pw_hash""), shell => ""/bin/bash"", managehome => true, groups => $grouplist, comment => ""builder""; } } windows: { user { $username: password => secret(""builder_pw_cleartext""), groups => [""administrators"",""remote desktop users""], managehome => true, comment => ""builder""; } } darwin: { case $::macosx_productversion_major { '10.6': { if (secret(""builder_pw_paddedsha1"") == '') { fail('no builder password paddedsha1 set') } darwinuser { $username: gid => $group, shell => ""/bin/bash"", home => $home, password => secret(""builder_pw_paddedsha1""), comment => ""builder"", notify => exec['kill-builder-keychain']; } $user_req = darwinuser[$username] } '10.7': { if (secret(""builder_pw_saltedsha512"") == '') { fail('no builder password saltedsha512 set') } darwinuser { $username: gid => $group, shell => ""/bin/bash"", home => $home, password => secret(""builder_pw_saltedsha512""), comment => ""builder"", notify => exec['kill-builder-keychain']; } $user_req = darwinuser[$username] } '10.8': { if (secret(""builder_pw_pbkdf2"") == '' or secret(""builder_pw_pbkdf2_salt"") == '') { fail('no builder password pbkdf2 set') } darwinuser { $username: shell => ""/bin/bash"", home => $home, password => secret(""builder_pw_pbkdf2""), salt => secret(""builder_pw_pbkdf2_salt""), iterations => secret(""builder_pw_pbkdf2_iterations""), comment => ""builder"", notify => exec['kill-builder-keychain']; } $user_req = darwinuser[$username] } '10.9','10.10': { if (secret(""builder_pw_pbkdf2"") == '' or secret(""builder_pw_pbkdf2_salt"") == '') { fail('no builder password pbkdf2 set') } user { $username: shell => ""/bin/bash"", home => $home, password => secret(""builder_pw_pbkdf2""), salt => secret(""builder_pw_pbkdf2_salt""), iterations => secret(""builder_pw_pbkdf2_iterations""), comment => ""builder"", groups => $grouplist, notify => exec['kill-builder-keychain']; } $user_req = user[$username] } default: { fail(""cannot create user on os x ${macosx_productversion_major}"") } } exec { 'kill-builder-keychain': command => ""/bin/rm -rf $home/library/keychains/login.keychain"", refreshonly => true; } file { $home: ensure => directory, owner => $username, group => $group, mode => 0755, require => $user_req; } } } }",1,1,"groups => [\\\\\, groups => [\\\\\\\\\\\\\\\\\\\\, groups => \\, groups => \\\\\, groups => \\\\\\\\, password => secret(\, password => secret(\\, password => secret(\\\\\\, shell => \, shell => \\\\\","CWE-306, CWE-326","{'reason': ""Puppet's password hash is generated by Puppet (not by the system) and so is not affected by system-level weaknesses. However, weaknesses within Puppet's password management code can still be exploited.\\n\\nThe password_hash variable used by Puppet has not changed in several years. Its default value was set based on security best practices at the time. However, due to the introduction of new password algorithms, these settings may not conform to the latest best practices.\\n\\nPuppet provides a way for users to configure their own password management code and their own password hashes.\\n\\nPuppet's password hash variables contain salted SHA512 hashes for Mac OS X and SHA512 hashes with a salt and number of iterations for Linux and FreeBSD. This format of"", 'related_cwe': '306,326', 'is_misconfiguration_related': 'Yes'}"
738,"class openstack_tasks::openstack_network::agents::metadata { notice('modular: openstack_network/agents/metadata.pp') $neutron_controller_roles = hiera('neutron_controller_roles', ['controller', 'primary-controller']) $neutron_compute_roles = hiera('neutron_compute_nodes', ['compute']) $controller = roles_include($neutron_controller_roles) $compute = roles_include($neutron_compute_roles) $neutron_advanced_config = hiera_hash('neutron_advanced_configuration', { }) $neutron_config = hiera_hash('neutron_config') $dvr = pick($neutron_advanced_config['neutron_dvr'], false) $workers_max = hiera('workers_max', 16) if $compute { $metadata_workers = pick($neutron_config['workers'], min($::processorcount / 8 + 1, $workers_max)) } else { $metadata_workers = pick($neutron_config['workers'], min(max($::processorcount, 2), $workers_max)) } if $controller or ($dvr and $compute) { $override_configuration = hiera_hash('configuration', {}) override_resources { 'neutron_metadata_agent_config': data => $override_configuration['neutron_metadata_agent_config'] } ~> service['neutron-metadata'] } if $controller or ($dvr and $compute) { $debug = hiera('debug', true) $ha_agent = dig44($neutron_advanced_config, ['metadata_agent_ha'], true) $service_endpoint = hiera('service_endpoint') $management_vip = hiera('management_vip') $shared_secret = dig44($neutron_config, ['metadata', 'metadata_proxy_shared_secret']) $nova_endpoint = hiera('nova_endpoint', $management_vip) $nova_metadata_protocol = hiera('nova_metadata_protocol', 'http') $ssl_hash = hiera_hash('use_ssl', {}) $nova_internal_protocol = get_ssl_property($ssl_hash, {}, 'nova', 'internal', 'protocol', [$nova_metadata_protocol]) $nova_internal_endpoint = get_ssl_property($ssl_hash, {}, 'nova', 'internal', 'hostname', [$nova_endpoint]) class { '::neutron::agents::metadata': debug => $debug, shared_secret => $shared_secret, metadata_ip => $nova_endpoint, metadata_protocol => $nova_internal_protocol, metadata_workers => $metadata_workers, manage_service => true, enabled => true, } if ($ha_agent) and !($compute) { $primary_controller = hiera('primary_controller') class { '::cluster::neutron::metadata' : primary => $primary_controller, } } package { 'neutron': name => 'binutils', ensure => 'installed', } } }",1,1,", class {'::neutron::agents::metadata':, override_resources, package { 'neutron':","CWE-200, CWE-209, CWE-22, CWE-255, CWE-259","{'reason': '1', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
739,"class openstack::keepalive ( $tcpka_time = '7200', $tcpka_intvl = '75', $tcpka_probes = '9', $tcp_retries2 = '15', ) { sysctl::value { 'net.ipv4.tcp_keepalive_time': value => $tcpka_time } sysctl::value { 'net.ipv4.tcp_keepalive_intvl': value => $tcpka_intvl } sysctl::value { 'net.ipv4.tcp_keepalive_probes': value => $tcpka_probes } sysctl::value { 'net.ipv4.tcp_retries2': value => $tcp_retries2 } }",1,1,"sysctl::value { 'net.ipv4.tcp_keepalive_intvl': value => $tcpka_intvl } sysctl::value { 'net.ipv4.tcp_keepalive_probes': value => $tcpka_probes } sysctl::value { 'net.ipv4.tcp_retries2': value => $tcp_retries2 }, sysctl::value { 'net.ipv4.tcp_keepalive_time': value => $tcpka_time }, sysctl::value { 'net.ipv4.tcp_keepalive_time': value => $tcpka_time } sysctl::value { 'net.ipv4.tcp_keepalive_intvl': value => $tcpka_intvl } sysctl::value { 'net.ipv4.tcp_keepalive_probes': value => $tcpka_probes }, sysctl::value { 'net.ipv4.tcp_keepalive_time': value => $tcpka_time } sysctl::value { 'net.ipv4.tcp_keepalive_intvl': value => $tcpka_intvl } sysctl::value { 'net.ipv4.tcp_keepalive_probes': value => $tcpka_probes } sysctl::value { 'net.ipv4.tcp_retries2': value => $tcp_retries2 }",CWE-937,"{'reason': 'This issue is related to the CWE, as it involves the incorrect manipulation of sysctl parameters. The misconfiguration allows for a network service to be continuously connected to the internet for a prolonged period of time, increasing the risk of an attacker compromising the service. This issue is related to the CWE, as it involves the incorrect manipulation of sysctl parameters. The misconfiguration allows for a network service to be continuously connected to the internet for a prolonged period of time, increasing the risk of an attacker compromising the service.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
740,"class shellprofile::base { include shellprofile::settings include users::root file { ""${::shellprofile::settings::profile_d}"": ensure => directory, owner => $users::root::username, group => $users::root::group; ""${::shellprofile::settings::profile_puppet_d}"": owner => $users::root::username, group => $users::root::group, ensure => directory, purge => true, recurse => true, force => true; ""${::shellprofile::settings::profile_d}/puppetdir.sh"": owner => $users::root::username, group => $users::root::group, mode => 0755, content => template(""shellprofile/puppetdir.sh.erb""); } case ($::operatingsystem) { centos: { } ubuntu: { } darwin: { file { ""/etc/profile"": source => ""puppet:///modules/shellprofile/darwin-profile""; } } windows: { } default: { fail(""don't know how to setup profile.d on this operating system"") } } }",1,1,"include shellprofile::settings, mode => 0644, mode => 0755, owner => $users::root::username, source =>","CWE-250, CWE-306","{'reason': ""This misconfiguration is related to a lack of understanding of the impact of modifying a system's default configuration, as well as the possibility of unintended consequences."", 'related_cwe': 'CWE-250, CWE-306', 'is_misconfiguration_related': 'Yes'}"
741,"class tripleo::profile::base::neutron::sriov( $step = hiera('step'), $mechanism_drivers = hiera('neutron::plugins::ml2::mechanism_drivers'), ) { if $step >= 4 { if 'sriovnicswitch' in $mechanism_drivers { include ::neutron::agents::ml2::sriov include ::tripleo::host::sriov } } }",0,1,"class tripleo::profile::base::neutron::sriov($step = hiera('step'), $mechanism_drivers = hiera('neutron::plugins::ml2::mechanism_drivers'), ) { if $step >= 4 { if'sriovnicswitch' in $mechanism_drivers { include ::neutron::agents::ml2::sriov include ::tripleo::host::sriov } } }",CWE-120,"{'reason': 'The script will fail when the sriovnicswitch is not installed', 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
742,"class aodh::config ( $aodh_config = {}, $aodh_api_paste_ini = {}, ) { validate_hash($aodh_config) validate_hash($aodh_api_paste_ini) create_resources('aodh_config', $aodh_config) create_resources('aodh_api_paste_ini', $aodh_api_paste_ini) }",0,1,"class aodh::config ( $aodh_config = {}, $aodh_api_paste_ini = {}, ) {, create_resources('aodh_api_paste_ini', $aodh_api_paste_ini), create_resources('aodh_config', $aodh_config), validate_hash($aodh_api_paste_ini), validate_hash($aodh_config), }",CWE-1134,"{'reason': 'Puppet code is susceptible to the `CWE-1134: Unrestricted Upload of File with Dangerous Type` vulnerability. While this misconfiguration alone does not result in an exploitable security issue, it is a contributing factor when combined with a vulnerable module. Furthermore, this vulnerability highlights the importance of maintaining secure software development practices in order to protect against the exploitation of such issues.', 'related_cwe': 'CWE-1134', 'is_misconfiguration_related': 'Yes'}"
743,"define monasca::checks::instances::solidfire ( $admin_name, $admin_password, $cluster_mvip, ) { $conf_dir = $::monasca::agent::conf_dir concat::fragment { ""${title}_solidfire_instance"": target => ""${conf_dir}/solidfire.yaml"", content => template('monasca/checks/solidfire.erb'), order => '1', } }",0,1,"content => template('monasca/checks/solidfire.erb'), order => '1',, target => \, target => \\",CWE-20,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
744,"class cdh::impala::worker inherits cdh::impala { package {'impala-server': ensure => 'installed', } $cgroup_path = '/sys/fs/cgroup/cpu/impala' package { 'cgroup-bin': ensure => 'installed', } exec { 'cgroup-create-impala': command => '/usr/bin/cgcreate -a impala:impala -t impala:impala -g cpu:impala', creates => ""${cgroup_path}/tasks"", require => [package['impala-server'], package['cgroup-bin']], } $hadoop_config_directory = $::cdh::hadoop::config_directory $fair_scheduler_enabled = $::cdh::hadoop::fair_scheduler_enabled file { '/etc/default/impala': content => template('cdh/impala/default-impala.erb'), require => package['impala-server'], } service { 'impala-server': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, require => [ package['impala-server'], exec['cgroup-create-impala'], file['/etc/default/impala'], ] } }",0,1,"cgroup-create-impala', creates => \, class cdh::impala::worker inherits cdh::impala, exec { 'cgroup-create-impala': command => '/usr/bin/cgcreate -a impala:impala -t impala:impala -g cpu:impala', creates => '${cgroup_path}/tasks', require => [package['impala-server'], package['cgroup-bin']], }, if [ $HADOOP_SECURE_DN_USER ]; then\\n\\tHADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER} HADOOP_SECURE_DN_USER\\n\\texport HADOOP_SECURE_DN_USER\\nfi\\n, if [ -e $KRB5CCNAME ]; then\\n\\texport KRB5CCNAME=\\\\, if [ -e $KRB5CCNAME ]; then\n\texport KRB5CCNAME=\\, if [ \, package {'impala-server': ensure => 'installed',}, service { 'impala-server': ensure => 'running', enable => true, hasstatus => true, hasrestart => true, require => [ package['impala-server'], exec['cgroup-create-impala'], file['/etc/default/impala'], ] } }","CWE-269, CWE-306, CWE-494, CWE-665, CWE-732","{'reason': 'The misconfiguration is related to the CWE because the script creates a cgroup which is not necessary and will only introduce extra overhead on system. Also the impala process should run as the user impala:impala.', 'related_cwe': 'CWE-269, CWE-306, CWE-494, CWE-665, CWE-732', 'is_misconfiguration_related': 'Yes'}"
745,"define plugin_zabbix::agent::userparameter ( $ensure = present, $command = undef, $key = undef, $index = undef, $file = undef, $template = 'plugin_zabbix/zabbix_agent_userparam.conf.erb' ) { include plugin_zabbix::params $key_real = $key ? { undef => $name, default => $key } $index_real = $index ? { undef => '', default => ""${index}_"", } $file_real = $file ? { undef => ""${::plugin_zabbix::params::agent_include}/${index_real}${name}.conf"", default => $file, } file { $file_real: ensure => $ensure, content => template($template), notify => service[$plugin_zabbix::params::agent_service] } }",0,1,"file { $file_real: ensure => $ensure, content => template($template), notify => service[$plugin_zabbix::params::agent_service] }, include plugin_zabbix::params, notify => service[$plugin_zabbix::params::agent_service] }, service[$plugin_zabbix::params::agent_service] }","CWE-20, CWE-352","{'reason': 'The original defect and misconfiguration labels were not used correctly for this code segment, but it does have some similarities to the misconfiguration label. The issue is that a file type was declared without defining a template or a content type. A template file must be specified in order to have a well-defined file type, since otherwise a string of code would be inserted without being templated. However, while a file type is present, this code segment is only related to the CWE if this file is being used as a source of truth for configuration values. If this is the case, then we have a configuration misconfiguration, since the configuration information is being pulled from an arbitrary file rather than an official source of truth, like an inventory management tool. If it', 'related_cwe': 'CWE-20, CWE-352', 'is_misconfiguration_related': 'No'}"
746,"class toplevel::slave::releng::build::standard inherits toplevel::slave::releng::build { include ::config include users::builder if ($::operatingsystem == ""darwin"") { include packages::xcode include packages::yasm include packages::autoconf include packages::p7zip include packages::libpng include packages::unzip include packages::upx class { 'vnc': ; 'screenresolution': width => 1024, height => 768, depth => 32, refresh => 60; } } }",0,1,"include ::config, include packages::autoconf, include packages::libpng, include packages::p7zip, include packages::unzip, include packages::upx, include packages::xcode, include packages::yasm, include toplevel::slave::releng::build::standard::vnc, include users::builder",CWE-20,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
747,"class trove::client ( $client_package_name = $trove::params::client_package_name, $package_ensure = present, ) inherits trove::params { include ::trove::deps package { 'python-troveclient': ensure => $package_ensure, name => $client_package_name, tag => 'openstack', } }",0,1,"class trove::client ( $client_package_name = $trove::params::client_package_name, $package_ensure = present, )\ninherits trove::params {\ninclude ::trove::deps\npackage {\n'python-troveclient':\nensure => $package_ensure,\nname => $client_package_name,\ntag => 'openstack',\n}\n}, include ::trove::deps, package {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n'python-troveclient':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensure => $package_ensure,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nname => $client_package_name,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntag => 'openstack',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, package {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n'python-troveclient':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nensure => $package_ensure,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nname => $client_package_name,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ntag => 'openstack',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, package {\\\\\\\\\\\\n'python-troveclient':\\\\\\\\\\\\nensure => $package_ensure,\\\\\\\\\\\\nname => $client_package_name,\\\\\\\\\\\\ntag => 'openstack',\\\\\\\\\\\\n}, package {\\\\n'python-troveclient':\\\\nensure => $package_ensure,\\\\nname => $client_package_name,\\\\ntag => 'openstack',\\\\n}, package {\\n'python-troveclient':\\nensure => $package_ensure,\\nname => $client_package_name,\\ntag => 'openstack',\\n}",CWE-20,"{'reason': ""Since the $package_ensure variable is set to 'present', the package will always be installed and will never be removed (https://puppet.com/docs/puppet/latest/types/package.html)."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
748,"class role::ldapauth( $proxy_agent_password, $writer_password, $admin_password, ) { require_package('php5-ldap') $base_dn = 'dc=wmftest,dc=net' $admin_dn = ""cn=admin,${base_dn}"" $user_base_dn = ""ou=people,${base_dn}"" $proxy_agent_dn = ""cn=proxyagent,${base_dn}"" $writer_dn = ""cn=writer,${base_dn}"" class { '::openldap': suffix => $base_dn, datadir => '/var/lib/ldap', admin_dn => $admin_dn, admin_password => $admin_password, } exec { 'create ldap db': command => template('role/ldapauth/create_db.erb'), unless => template('role/ldapauth/check_db.erb'), require => class['::openldap'], } mediawiki::wiki { 'ldapauth': wgconf => { 'wmvextensions' => { 'centralauth' => false, }, }, } mediawiki::extension { 'ldapauthentication': needs_update => true, settings => template('role/ldapauth/ldapauthentication.php.erb'), wiki => 'ldapauth', } }",0,1,"admin_dn, admin_password, base_dn, base_dn = 'dc=wmftest,dc=net', class { '::openldap': suffix => $base_dn, datadir => '/var/lib/ldap', admin_dn => $admin_dn, admin_password => $admin_password, }, mediawiki::extension { 'ldapauthentication': needs_update => true, settings => template('role/ldapauth/ldapauthentication.php.erb'), wiki => 'ldapauth', }, mediawiki::wiki { 'ldapauth': wgconf => { 'wmvextensions' => { 'centralauth' => false, }, }, }, settings => template('role/ldapauth/ldapauthentication.php.erb'),, wgconf => { 'wmvextensions' => { 'centralauth' => false, }, },","CWE-312, CWE-502","{'reason': 'Admin credentials are defined in a Puppet variable. If this variable is accessed from an uncontrolled device or system that can access this variable, then the Admin credentials are vulnerable to theft. This can be mitigated by encrypting this variable, or by using an encrypted secret storage mechanism.', 'related_cwe': '312', 'is_misconfiguration_related': 'Yes'}"
749,"class cdh::sqoop { class['cdh::hadoop'] -> class['cdh::sqoop'] package { 'sqoop': ensure => 'installed', } if (!defined(package['libmysql-java'])) { package { 'libmysql-java': ensure => 'installed', } } file { '/usr/lib/sqoop/lib/mysql-connector-java.jar': ensure => 'link', target => '/usr/share/java/mysql-connector-java.jar', require => [package['sqoop'], package['libmysql-java']], } }",1,1,"class cdh::sqoop { class['cdh::hadoop'] -> class['cdh::sqoop'], file { '/usr/lib/sqoop/lib/mysql-connector-java.jar': ensure => 'link', target => '/usr/share/java/mysql-connector-java.jar', require => [package['sqoop'], package['libmysql-java']], }, if (!defined(package['libmysql-java'])) { package { 'libmysql-java': ensure => 'installed', } }, package { 'libmysql-java': ensure => 'installed', }","CWE-116, CWE-118, CWE-120, CWE-121, CWE-22","{'reason': 'This issue is related to CWE 118 due to the following reasons:\\n\\nThe class `cdh::sqoop` creates a link to a file in a package defined in an outer class. This can be dangerous as the link target may not exist at the time of creation of the link. As a result, it is possible to create a dangling link, which can cause problems later on.\\n\\nAlso, the class uses a conditional to check if the package exists before creating a package resource for it. This is necessary because Puppet will not allow a package to be created if it is already installed. However, this may fail if the package is installed as part of a different class. In that case, the conditional may fail. In general', 'related_cwe': 'CWE-118, CWE-120, CWE-121', 'is_misconfiguration_related': 'Yes'}"
750,"class heat::db::mysql( $password = false, $dbname = 'heat', $user = 'heat', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ) { include ::heat::deps validate_string($password) ::openstacklib::db::mysql { 'heat': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } anchor['heat::db::begin'] ~> class['heat::db::mysql'] ~> anchor['heat::db::end'] }",1,1,"allowed_hosts => $allowed_hosts,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, allowed_hosts => $allowed_hosts,\\\\\\\\\\\\\\\\n, class heat::db::mysql( $password = false, $dbname = 'heat', $user = 'heat', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ) {\n include ::heat::deps validate_string($password) \n ::openstacklib::db::mysql {\n 'heat': \n user => $user,\n password_hash => mysql_password($password),\n dbname => $dbname,\n host => $host,\n charset => $charset,\n collate => $collate,\n allowed_hosts => $allowed_hosts,\n \n }\n anchor['heat::db::begin'] ~> class['heat::db::mysql'] ~> anchor['heat::db::end']\n}, collate => $collate,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, collate => $collate,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, host => $host,\\\\\\\\\\\\n, mysql_password($password) \\\\n password_hash => mysql_password($password),\\\\n dbname => $dbname,\\\\n host => $host,\\\\n charset => $charset,\\\\n collate => $collate,\\\\n allowed_hosts => $allowed_hosts,\\\\n \\\\n }\\\\n, mysql_password($password),\\\\\\\\n, password_hash => mysql_password($password),\\\\n, validate_string($password) \\n ::openstacklib::db::mysql {\\n 'heat': \\n user => $user,\\n password_hash => mysql_password($password),\\n dbname => $dbname,\\n host => $host,\\n charset => $charset,\\n collate => $collate,\\n allowed_hosts => $allowed_hosts,\\n \\n }\\n",CWE-347,"{'reason': 'The $allowed_hosts argument sets the list of IP addresses and subnets that can connect to the MySQL server. It is a required argument because otherwise MySQL will listen on all hosts (0.0.0.0). The default value of $allowed_hosts is undef. When $allowed_hosts is not explicitly defined, MySQL listens on all hosts (0.0.0.0). This is a possible misconfiguration that may lead to unexpected behavior. This misconfiguration is related to CWE-347: Use of a Missing Resource in a Selective Encryption', 'related_cwe': 'CWE-347', 'is_misconfiguration_related': 'Yes'}"
751,"class role::simple_miser { include ::role::simple_performant mediawiki::settings { 'simple_miser': values => { wgmisermode => true, wgsqlmode => undef, wgusefilecache => true, wgusegzip => true, wgfilecachedepth => 0, }, notify => exec['rebuild_file_cache'], } mediawiki::maintenance { 'rebuild_file_cache': command => '/usr/local/bin/foreachwiki rebuildfilecache.php', refreshonly => true, } }",0,1,"include ::role::simple_performant, include ::role::simple_performant\\nmediawiki::settings {'simple_miser': values => { wgmisermode => true, wgsqlmode => undef, wgusefilecache => true, wgusegzip => true, wgfilecachedepth => 0, }, notify => exec['rebuild_file_cache'], }\\nmediawiki::maintenance {'rebuild_file_cache': command => '/usr/local/bin/foreachwiki rebuildfilecache.php', refreshonly => true, }, include ::role::simple_performant\nmediawiki::settings {'simple_miser': values => { wgmisermode => true, wgsqlmode => undef, wgusefilecache => true, wgusegzip => true, wgfilecachedepth => 0, }, notify => exec['rebuild_file_cache'], }\nmediawiki::maintenance {'rebuild_file_cache': command => '/usr/local/bin/foreachwiki rebuildfilecache.php', refreshonly => true, }, mediawiki::maintenance {'rebuild_file_cache': command => '/usr/local/bin/foreachwiki rebuildfilecache.php', refreshonly => true, }, mediawiki::settings {'simple_miser': values => { wgmisermode => true, wgsqlmode => undef, wgusefilecache => true, wgusegzip => true, wgfilecachedepth => 0, }, notify => exec['rebuild_file_cache'], }","CWE-117, N/A","{'reason': 'This misconfiguration is related to CWE-117 as the file cache will be rebuilt without taking into account the changes made to the SQL tables. This can lead to unexpected behavior, such as a loss of data, or the creation of invalid SQL entries.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
752,class { '::openstack_tasks::roles::enable_compute' :} warning('osnailyfacter/modular/./roles/enable_compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/enable_compute.pp'),0,1,class { '::openstack_tasks::roles::enable_compute' :} warning('osnailyfacter/modular/./roles/enable_compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/enable_compute.pp'),CWE-22,"{'reason': 'The module name in the warning message is deprecated, and therefore not considered as a misconfiguration. However, the warning message states that a different module should be used in the future, which is an indicator of a misconfiguration.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
753,"class contrail::webui { package { ensure => present } file { ensure => present, mode => '0644', owner => 'contrail', group => 'contrail', require => package['contrail-openstack-webui'], } package { 'nodejs': } -> package { 'contrail-web-core': } -> package { 'contrail-web-controller': } -> package { 'contrail-openstack-webui': } file { '/etc/contrail/config.global.js': content => template('contrail/config.global.js.erb'), } file { '/etc/contrail/contrail-webui-userauth.js': content => template('contrail/contrail-webui-userauth.js.erb'), } service { 'supervisor-webui': ensure => running, enable => true, require => package['contrail-openstack-webui'], subscribe => [ file['/etc/contrail/contrail-webui-userauth.js'], file['/etc/contrail/config.global.js'], ], } }",0,1,"file { '/etc/contrail/config.global.js': content => template('contrail/config.global.js.erb'), }, file { '/etc/contrail/contrail-webui-userauth.js': content => template('contrail/contrail-webui-userauth.js.erb'), }, file { ensure => present, mode => '0644', owner => 'contrail', group => 'contrail', require => package['contrail-openstack-webui'], }, package { 'contrail-openstack-webui': }, package { 'contrail-web-controller': }, package { 'contrail-web-core': }, package { 'nodejs': }, package { ensure => present }, service {'supervisor-webui': ensure => running, enable => true, require => package['contrail-openstack-webui'], subscribe => [ file['/etc/contrail/contrail-webui-userauth.js'], file['/etc/contrail/config.global.js'], ], }","CWE-100, CWE-20, CWE-93, CWE-95","{'reason': '1', 'related_cwe': 'CWE-100, CWE-20, CWE-93, CWE-95', 'is_misconfiguration_related': 'No'}"
754,"class {{cookiecutter.project_name}}::db ( $database_connection = 'sqlite:////var/lib/{{cookiecutter.project_name}}/{{cookiecutter.project_name}}.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { validate_re($database_connection, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { '{{cookiecutter.project_name}}_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, } }",1,1,"oslo::db { '{{cookiecutter.project_name}}_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, validate_re($database_connection, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?')","CWE-16, CWE-19, CWE-22","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
755,"class toplevel::slave::releng::build::mock inherits toplevel::slave::releng::build { include ::config include mockbuild include users::builder include packages::gdb include packages::php include packages::subversion if $::virtual == 'xenhvm' { include tweaks::swap_on_instance_storage } exec { 'add-builder-to-mock_mozilla': command => ""/usr/bin/gpasswd -a ${users::builder::username} mock_mozilla"", unless => ""/usr/bin/groups ${users::builder::username} | grep '\\<mock_mozilla\\>'"", require => [class['packages::mozilla::mock_mozilla'], class['users::builder']]; } include runner::tasks::config_mockbuild case $::kernel { 'linux': { include runner::tasks::populate_shared_repos include runner::tasks::check_ami } } }",1,1,"exec { 'add-builder-to-mock_mozilla': command => \, include ::config, include runner::tasks::config_mockbuild case \$::kernel { 'linux': { include runner::tasks::populate_shared_repos include runner::tasks::check_ami } } }, include runner::tasks::config_mockbuild case \\$::kernel { 'linux': { include runner::tasks::populate_shared_repos include runner::tasks::check_ami } } }, include runner::tasks::config_mockbuild case \\\\$::kernel { 'linux': { include runner::tasks::populate_shared_repos include runner::tasks::check_ami } } }","CWE-426, CWE-502, CWE-532","{'reason': 'This script demonstrates the problem of including multiple classes without providing a condition that determines which of the classes should be included. In this case, both \\${runner::tasks::config_mockbuild::include} and \\${runner::tasks::config_mockbuild::case} should have conditions that determine when they should be included, and which should be included. Otherwise, Puppet will include all of the classes indiscriminately. This creates a scenario where Puppet attempts to declare the same resource multiple times, which will result in errors being thrown when Puppet attempts to declare the resource for the second time. As such, we can assume that the provided misconfiguration is related to CWE-426 and CWE-532. CWE-502 is not directly related to the misconfiguration', 'related_cwe': 'CWE-426, CWE-532', 'is_misconfiguration_related': 'Yes'}"
756,class { '::openstack_tasks::sahara::sahara' :} class openstack::firewall {} include openstack::firewall warning('osnailyfacter/modular/./sahara/sahara.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./sahara/sahara.pp'),1,1,"class openstack::firewall {}, class { '::openstack_tasks::sahara::sahara' :}, include openstack::firewall, warning('osnailyfacter/modular/./sahara/sahara.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./sahara/sahara.pp')","CWE-259, CWE-798","{'reason': ""sahara::sahara is deprecated in Mitaka and will be removed in Newton. Please use openstack_tasks::sahara::sahara. Furthermore, sahara::sahara is using class{'::sahara'} to specify all sahara parameters, which is no longer necessary. Please refer to openstack::firewall::sahara::firewall instead, as the sahara::sahara class is being phased out"", 'related_cwe': 'CWE-259, CWE-798', 'is_misconfiguration_related': 'Yes'}"
757,"class tripleo::profile::base::neutron::server ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } include ::tripleo::profile::base::neutron if $step >= 3 and $sync_db { include ::neutron::db::mysql } if $step >= 4 and $sync_db { include ::neutron::server::notifications class { '::neutron::server': sync_db => $sync_db, } } if $step >= 5 and !$sync_db { include ::neutron::server::notifications class { '::neutron::server': sync_db => $sync_db, } } }",0,1,"class { '::neutron::server': sync_db => $sync_db, }, if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false }, include ::neutron::db::mysql, include ::neutron::server::notifications, include ::tripleo::profile::base::neutron",CWE-798,"{'reason': 'The given misconfiguration is a configuration mistake in Puppet, where a variable $sync_db should not be assigned with the values, true or false, but it is. Also, the boolean values are being assigned in a conditional logic instead of using the proper variable scope to make this decision. The misconfiguration causes a variable to have a fixed value, where the correct value should have been decided based on the Puppet logic. This fixed value, either true or false, has no significance in the Puppet logic, which is the problem in this misconfiguration. The vulnerability is not a result of this misconfiguration, but it is because of the variable assignment mistake in Puppet.\\n\\nAccording to CWE, CWE-798 is related to this misconfiguration. CWE-', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
758,"class tripleo::profile::pacemaker::gnocchi ( $bootstrap_node = hiera('bootstrap_nodeid'), $gnocchi_indexer_backend = downcase(hiera('gnocchi_indexer_backend', 'mysql')), $step = hiera('step'), ) { service <| tag == 'gnocchi-service' |> { hasrestart => true, restart => '/bin/true', start => '/bin/true', stop => '/bin/true', } if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } if $step >= 2 and $pacemaker_master { if $gnocchi_indexer_backend == 'mysql' { class { '::gnocchi::db::mysql': require => exec['galera-ready'], } } } if $step >= 3 { include ::gnocchi include ::gnocchi::config include ::gnocchi::client if $pacemaker_master { include ::gnocchi::db::sync } } if $step >= 5 and $pacemaker_master { pacemaker::constraint::base { 'keystone-then-gnocchi-metricd-constraint': constraint_type => 'order', first_resource => 'openstack-core-clone', second_resource => ""${::gnocchi::params::metricd_service_name}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::gnocchi::params::metricd_service_name], pacemaker::resource::ocf['openstack-core']], } pacemaker::constraint::base { 'gnocchi-metricd-then-gnocchi-statsd-constraint': constraint_type => 'order', first_resource => ""${::gnocchi::params::metricd_service_name}-clone"", second_resource => ""${::gnocchi::params::statsd_service_name}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::gnocchi::params::metricd_service_name], pacemaker::resource::service[$::gnocchi::params::statsd_service_name]], } pacemaker::constraint::colocation { 'gnocchi-statsd-with-metricd-colocation': source => ""${::gnocchi::params::statsd_service_name}-clone"", target => ""${::gnocchi::params::metricd_service_name}-clone"", score => 'infinity', require => [pacemaker::resource::service[$::gnocchi::params::metricd_service_name], pacemaker::resource::service[$::gnocchi::params::statsd_service_name]], } } }",1,1,"class { \\'::gnocchi::db::mysql\\\\': require => exec['galera-ready'], }, class { \\\\\\\\'::gnocchi::db::mysql\\\\\\\\\\\\\\'\\\\\\\\n    }, if $::hostname == downcase($bootstrap_node) {\\n    $pacemaker_master = true\\n} else {\\n    $pacemaker_master = false\\n}, if $::hostname == downcase($bootstrap_node) {\n    $pacemaker_master = true\n} else {\n    $pacemaker_master = false\n}, if $step >= 2 and $pacemaker_master {\\\\n    if $gnocchi_indexer_backend == \\\\\\\, include ::gnocchi::db::sync, pacemaker::constraint::base { \\\\'keystone-then-gnocchi-metricd-constraint\\\\\\\': constraint_type => \\\\'order\\\\\\\', first_resource => \\\\'openstack-core-clone\\\\\\\', second_resource => \\\\, pacemaker::constraint::base { \\\\\\\\'gnocchi-metricd-then-gnocchi-statsd-constraint\\\\\\\\\\\\\\': constraint_type => \\\\\\\\'order\\\\\\\\\\\\\\', first_resource => \\\\\\\\, pacemaker::constraint::colocation { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'gnocchi-statsd-with-metricd-colocation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' \\\\, service |<tag==\\'gnocchi-service\\'\\>| { hasrestart => true, restart => \'/bin/true\\', start => \'/bin/true\\', stop => \'/bin/true\\', }",CWE-1250,"{'reason': 'The misconfiguration is a vulnerability for CWE-1250: Insufficiently Protected Credentials, which describes an issue when credentials are protected by weak encryption algorithms. In this case, the credentials are stored within the script as a hiera variable. If the misconfiguration is related, the related CWE is CWE-1250: Insufficiently Protected Credentials.', 'related_cwe': 'CWE-1250', 'is_misconfiguration_related': 'Yes'}"
759,"notice('fuel-plugin-lma-collector: compute.pp') $ceilometer = hiera_hash('ceilometer', {}) if hiera('lma::collector::elasticsearch::server', false) { lma_collector::logs::openstack { 'nova': } lma_collector::logs::openstack { 'neutron': } class { 'lma_collector::logs::libvirt': } } if hiera('lma::collector::influxdb::server', false) { class { 'lma_collector::logs::counter': hostname => $::hostname, } } if $ceilometer['enabled'] { $notification_topics = ['notifications', 'lma_notifications'] } else { $notification_topics = ['lma_notifications'] } include nova::params $compute_service = $::nova::params::compute_service_name nova_config { 'default/notification_topics': value => join($notification_topics, ','), notify => service[$compute_service], } nova_config { 'default/notification_driver': value => 'messaging', notify => service[$compute_service], } nova_config { 'default/notify_on_state_change': value => 'vm_and_task_state', notify => service[$compute_service], } service { $compute_service: hasstatus => true, hasrestart => true, }",0,1,"lma_collector::logs::counter {\\\\n\\\\thostname => $::hostname,\\\\n\\\\t}\\\\n, lma_collector::logs::counter {\\n\\thostname => $::hostname,\\n\\t}, nova_config {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t'default/notification_topics':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\tvalue => join($notification_topics, ','),\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\tnotify => service[$compute_service],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, nova_config {\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\t'default/notification_topics':\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\tvalue => join($notification_topics, ','),\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\tnotify => service[$compute_service],\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\\\\\n, nova_config {\\\\\\\\n\\\\\\\\t'default/notification_driver':\\\\\\\\n\\\\\\\\t\\\\\\\\tvalue =>'messaging',\\\\\\\\n\\\\\\\\t\\\\\\\\tnotify => service[$compute_service],\\\\\\\\n\\\\\\\\t}\\\\\\\\n, nova_config {\\\\n\\\\t'notify_on_state_change':\\\\n\\\\t\\\\tvalue => 'vm_and_task_state',\\\\n\\\\t\\\\tnotify => service[$compute_service],\\\\n\\\\t}\\\\n, nova_config {\\n\\t'default/notification_driver':\\n\\t\\tvalue =>'messaging',\\n\\t\\tnotify => service[$compute_service],\\n\\t}\\\\n, nova_config {\\n\\t'default/notification_topics':\\n\\t\\tvalue => join($notification_topics, ','),\\n\\t\\tnotify => service[$compute_service],\\n\\t}\\n, nova_config {\\n\\t'default/notification_topics':\\n\\t\\tvalue => join($notification_topics, \',\'),\\n\\t\\tnotify => service[$compute_service],\\n\\t}\\n, nova_config {\n\t'notify_on_state_change':\n\t\tvalue => 'vm_and_task_state',\n\t\tnotify => service[$compute_service],\n\t}\n",CWE-1193,"{'reason': 'CWE-1193 has the description, \\', 'related_cwe': 'CWE-1193', 'is_misconfiguration_related': 'Yes'}"
760,"class vnc::ultravnc_ini { include packages::ultravnc file { 'c:\program files\uvnc bvba\ultravnc\ultravnc.ini': require => class[""packages::ultravnc""], replace => true, show_diff => false, content => template(""vnc/ultravnc.ini.erb""), } shared::execonce { ""restrict_vnc_ini_access"" : command => 'c:\windows\system32\icacls.exe ""c:\program files\uvnc bvba\ultravnc\ultravnc.ini"" /deny cltbld:f', require => file['c:\program files\uvnc bvba\ultravnc\ultravnc.ini']; } service { ""uvnc_service"": ensure => running, enable => true, require => class[ ""packages::ultravnc"" ], subscribe => file['c:\program files\uvnc bvba\ultravnc\ultravnc.ini'], } }",1,1,"file {'c:\\\\\\\\\\\\\\\\, file {'c:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file {'c:\\program files\uvnc bvba\\ultravnc\\ultravnc.ini':, service { \\, service { \\\\, service { \\\\uvnc\\\\ultravnc\\\\ultravnc.ini', subscribe => file['c:\\\\\\\\, shared::execonce { \, shared::execonce { \\","CWE-119, CWE-22, CWE-23","{'reason': 'For the first misconfiguration found in this script, the vulnerability described by CWE-119 is applicable.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
761,"define concat( $path = $name, $owner = $::id, $group = $concat::setup::root_group, $mode = undef, $warn = false, $force = false, $backup = 'puppet', $replace = true, $gnu = undef, $order='alpha' ) { include concat::setup $safe_name = regsubst($name, $concat::setup::pathchars, '_', 'g') $concatdir = $concat::setup::concatdir $version = $concat::setup::majorversion $fragdir = ""${concatdir}/${safe_name}"" $concat_name = 'fragments.concat.out' $default_warn_message = ' case $warn { 'true', true, yes, on: { $warnmsg = $default_warn_message } 'false', false, no, off: { $warnmsg = '' } default: { $warnmsg = $warn } } $warnmsg_escaped = regsubst($warnmsg, ""'"", ""'\\\\''"", 'g') $warnflag = $warnmsg_escaped ? { '' => '', default => ""-w '${warnmsg_escaped}'"" } case $force { 'true', true, yes, on: { $forceflag = '-f' } 'false', false, no, off: { $forceflag = '' } default: { fail(""improper 'force' value given to concat: ${force}"") } } case $order { numeric: { $orderflag = '-n' } alpha: { $orderflag = '' } default: { fail(""improper 'order' value given to concat: ${order}"") } } file { owner => $::id, group => $group, mode => $mode, backup => $backup, replace => $replace } file { $fragdir: ensure => directory, mode => ""0775"", } $source_real = $version ? { 24 => 'puppet:///concat/null', default => undef, } file { ""${fragdir}/fragments"": ensure => directory, mode => ""0775"", force => true, ignore => ['.svn', '.git', '.gitignore'], notify => exec[""concat_${name}""], purge => true, recurse => true, source => $source_real, } file { ""${fragdir}/fragments.concat"": ensure => present, mode => ""0664"", } file { ""${fragdir}/${concat_name}"": ensure => present, mode => ""0664"", } file { $name: ensure => present, path => $path, alias => ""concat_${name}"", group => $group, mode => $mode, owner => $owner, source => ""${fragdir}/${concat_name}"", } exec { ""concat_${name}"": alias => ""concat_${fragdir}"", command => ""\""${::concat_ruby_interpreter}\"" ${concat::setup::concatdir}/bin/concatfragments.rb -o ${fragdir}/${concat_name} -d ${fragdir} ${warnflag} ${forceflag} ${orderflag}"", notify => file[$name], logoutput => on_failure, require => [ file[$fragdir], file[""${fragdir}/fragments""], file[""${fragdir}/${concat_name}""], file[""${fragdir}/fragments.concat""], ], subscribe => file[$fragdir], unless => ""\""${::concat_ruby_interpreter}\"" ${concat::setup::concatdir}/bin/concatfragments.rb -o ${fragdir}/${concat_name} -d ${fragdir} -t ${warnflag} ${forceflag} ${orderflag}"", } if $::id == 'root' { exec[""concat_${name}""] { user => root, group => $group, } } }",1,1,"define concat( $path = $name, $owner = $::id, $group = $concat::setup::root_group, $mode = undef, $warn = false, $force = false, $backup = 'puppet', $replace = true, $gnu = undef, $order='alpha' ) { include concat::setup, file {, file { owner => $::id, group => $group, mode => $mode, backup => $backup, replace => $replace } file { $fragdir: ensure => directory, mode =>",CWE-1167,"{'reason': 'The misconfiguration found is related to CWE-1167: Direct Request for a Nonexistent Resource. This misconfiguration is related to the CWE because a misconfigured file { owner => $::id, group => $group, mode => $mode, backup => $backup, replace => $replace } file { $fragdir: ensure => directory, mode => \\', 'related_cwe': 'CWE-1167', 'is_misconfiguration_related': 'Yes'}"
762,"class bcf { $bond_lacp = 'bond-mode 4' $sys_desc_lacp = '5c:16:c7:00:00:04' $sys_desc_xor = '5c:16:c7:00:00:00' $deployment_id = hiera('deployment_id') $network_scheme = hiera_hash('network_scheme', {}) $existing_bridges = $network_scheme['endpoints'] prepare_network_config($network_scheme) $gw = get_default_gateways() $phy_devs = get_network_role_property('neutron/private', 'phys_dev') $mgmt_itf = get_network_role_property('admin/pxe', 'phys_dev') $if_str = ""${phy_devs}"" if $if_str =~ /^bond.*/ { $ifaces = join($phy_devs, ',') $bond = true $bond_name = ""${phy_devs[0]}"" $s = ""${phy_devs[0]},"" $r = split(""abc${ifaces}"", $s) $itfs = $r[1] } else { $bond = false $bond_name = 'none' $itfs = $phy_devs } $network_metadata = hiera_hash('network_metadata', {}) $public_vip = $network_metadata['vips']['public']['ipaddr'] }",0,1,class bcf { $bond_lacp = 'bond-mode 4',"CWE-22, CWE-74, CWE-78, CWE-94","{'reason': 'The script uses a variable ($bond_lacp) to set bond-mode 4 in a configuration file. It may be a common practice, but without a good reason, the configuration may be considered as a security threat. According to the script, it is not known what $bond_lacp is actually used for. In this case, an attacker can inject malicious configurations into the system by providing malicious configurations, such as the use of weak bond-mode 4.', 'related_cwe': 'CWE-22, CWE-74, CWE-78, CWE-94', 'is_misconfiguration_related': 'Yes'}"
763,"define lma_logging_analytics::es_template ( $number_of_shards = 5, $number_of_replicas = 0, $host = 'localhost', $port = 9200, $index_template = undef, ) { if $index_template { $template = $index_template } else { $template = ""${title}-*"" } elasticsearch::template { $title: content => template(""lma_logging_analytics/es_template_${title}.json.erb""), host => $host, port => $port, } }",0,0,"define lma_logging_analytics::es_template ( $number_of_shards = 5, $number_of_replicas = 0, $host = 'localhost', $port = 9200, $index_template = undef, ) { if $index_template { $template = $index_template } else { $template =, elasticsearch::template { $title: content => template(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, elasticsearch::template { $title: content => templatees_search::template { $title: content => template(\\, esearch::template { $title: content => template(, esearch::template { $title: content => template(\\\\\\\\\\\\, host => $host,, port => $port, } }, template(\, template(\\\\",CWE-1201,"{'reason': ""The reason that justifies this issue. CWE-1201: The vulnerability relates to the lack of an 'escape string' procedure. There are many security risks associated with this vulnerability. These include: -SQL injection: An attacker could inject malicious SQL commands into a query string. -LDAP injection: An attacker could inject malicious LDAP commands into a query string. -Command injection: An attacker could inject malicious commands into a command string. The vulnerability is also known as the 'SQL injection flaw'."", 'related_cwe': ""CWE-1201: The vulnerability relates to the lack of an 'escape string' procedure."", 'is_misconfiguration_related': 'Yes'}"
764,"class cinder::config ( $cinder_config = {}, $api_paste_ini_config = {}, ) { validate_hash($cinder_config) validate_hash($api_paste_ini_config) create_resources('cinder_config', $cinder_config) create_resources('cinder_api_paste_ini', $api_paste_ini_config) }",1,1,"class cinder::config ( $cinder_config = {\, class cinder::config ( $cinder_config = {}, $api_paste_ini_config = {}, ) { validate_hash($cinder_config) validate_hash($api_paste_ini_config) create_resources('cinder_config', $cinder_config) create_resources('cinder_api_paste_ini', $api_paste_ini_config) }, create_resources('cinder_api_paste_ini', $api_paste_ini_config), create_resources('cinder_config', $cinder_config), validate_hash($api_paste_ini_config), validate_hash($cinder_config)",CWE-732,"{'reason': 'Misconfiguration is related to CWE-732 -', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
765,"class barbican::plugins::p11_crypto ( $p11_crypto_plugin_library_path = $::os_service_default, $p11_crypto_plugin_login = undef, $p11_crypto_plugin_mkek_label = undef, $p11_crypto_plugin_mkek_length = undef, $p11_crypto_plugin_hmac_label = undef, $p11_crypto_plugin_slot_id = undef, ) { if $p11_crypto_plugin_login == undef { fail('p11_crypto_plugin_login must be defined') } if $p11_crypto_plugin_mkek_label == undef { fail('p11_crypto_plugin_mkek_label must be defined') } if $p11_crypto_plugin_mkek_length == undef { fail('p11_crypto_plugin_mkek_length must be defined') } if $p11_crypto_plugin_hmac_label == undef { fail('p11_crypto_plugin_hmac_label must be defined') } if $p11_crypto_plugin_slot_id == undef { fail('p11_crypto_plugin_slot_id must be defined') } barbican_config { 'p11_crypto_plugin/library_path': value => $p11_crypto_plugin_library_path; 'p11_crypto_plugin/login': value => $p11_crypto_plugin_login; 'p11_crypto_plugin/mkek_label': value => $p11_crypto_plugin_mkek_label; 'p11_crypto_plugin/mkek_length': value => $p11_crypto_plugin_mkek_length; 'p11_crypto_plugin/hmac_label': value => $p11_crypto_plugin_hmac_label; 'p11_crypto_plugin/slot_id': value => $p11_crypto_plugin_slot_id; } }",0,1,"fail('p11_crypto_plugin_hmac_label must be defined'), fail('p11_crypto_plugin_login must be defined'), fail('p11_crypto_plugin_mkek_label must be defined'), fail('p11_crypto_plugin_mkek_length must be defined'), p11_crypto_plugin/hmac_label, p11_crypto_plugin/library_path, p11_crypto_plugin/login, p11_crypto_plugin/mkek_label, p11_crypto_plugin/mkek_length, p11_crypto_plugin/slot_id",CWE-287,"{'reason': 'The fail() directive in Puppet has no effect unless the code it is invoked in is reached. Therefore, this code cannot fail, which means that the conditionals inside fail() can never be executed. However, Puppet will not fail if the conditionals inside fail() are unreachable, since these functions are executed at runtime, before the code inside the conditional is reached. This means that if any of these conditional expressions are not evaluated, the code inside those functions will never be reached, and no error is returned.', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'No'}"
766,"prepare_network_config(hiera('network_scheme', {})) $redis_roles = [""primary-controller"", ""controller""] $redis_nodes = get_nodes_hash_by_roles(hiera('network_metadata'), $redis_roles) $redis_address_map = get_node_to_ipaddr_map_by_network_role($redis_nodes, 'ceilometer/api') $redis_hosts = values($redis_address_map) $redis_bind_address = get_network_role_property('ceilometer/api', 'ipaddr') $redis_primary_nodes = get_nodes_hash_by_roles(hiera('network_metadata'), [""primary-controller""]) $redis_primary_address_map = get_node_to_ipaddr_map_by_network_role($redis_primary_nodes, 'ceilometer/api') $primary_redis_node = values($redis_primary_address_map) $master_name = 'ceilometer_redis_master' class {'::redis::main': primary_redis_node => $primary_redis_node[0], redis_hosts => $redis_hosts, redis_bind_address => $redis_bind_address, primary_controller => hiera('primary_controller'), master_name => $master_name, }",1,1,"class {'::redis::main': primary_redis_node => $primary_redis_node[0], redis_hosts => $redis_hosts, redis_bind_address => $redis_bind_address, primary_controller => hiera('primary_controller'), master_name => $master_name, }",CWE-22,"{'reason': ""The 'class' keyword in Puppet is used to add functionality to the system. When a class is used in a manifest, a code file is automatically generated and included in the catalog. The code files contain a function that sets the variables specified in the parameters section, plus any code defined within the class itself. Because these generated code files are processed automatically, they cannot be modified or customized. In the scenario described, the user attempts to use the 'class' keyword in Puppet to define a function that can be modified or customized. This is not possible. Therefore, the code file generated by Puppet cannot be modified or customized."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
767,"class packages::7z920 { packages::pkgmsi {""7-zip 9.20"": msi => ""7z920.msi"", install_options => ['/quiet']; } }",0,1,"class packages::7z920 { packages::pkgmsi { \n\t\, install_options => ['/quiet']; } } }],",CWE-120,"{'reason': ""7-Zip 9.20 is vulnerable to uncontrolled resource consumption in the installation phase via MSI installer with '/quiet' installation option. This can be exploited by attackers to trigger CPU resource exhaustion. For more information, please refer to [CVE-2022-40089](https://www.cve.org/CVERecord?id=CVE-2022-40089) and [https://blog.sevntu.com/2022/09/06/msi-installation-misconfigurations-part-1/](https://blog.sevntu.com/2022/09/06/msi-installation-misconfigurations-part-1/)."", 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
768,"class heat::client ( $ensure = 'present' ) { include ::heat::deps include ::heat::params package { 'python-heatclient': ensure => $ensure, name => $::heat::params::client_package_name, tag => 'openstack', } }",0,1,"include ::heat::deps, include ::heat::deps include ::heat::params, include ::heat::deps include ::heat::params package { 'python-heatclient': ensure => $ensure, name => $::heat::params::client_package_name, tag => 'openstack', }, include ::heat::params, package { 'python-heatclient': ensure => $ensure, name => $::heat::params::client_package_name, tag => 'openstack', }",CWE-200: Information Exposure,"{'reason': 'The misconfiguration can be considered a CWE-200 due to the fact that it is unclear from the script what the intended function of the code is, making it possible that a user might run the code without being aware of what it does. This could lead to information exposure.', 'related_cwe': 'CWE-200: Information Exposure', 'is_misconfiguration_related': 'Yes'}"
769,"notice('modular: virtual_accelerator/6wind_repo.pp') $settings = hiera('6wind-virtual-accelerator', {}) $va_version = $settings['va_version'] $cred_package_content = $settings['credentials_package'][content] $cred_package_name = $settings['credentials_package'][name] if $cred_package_name !~ /.+[.]deb[.]b64?/ { fail('the given credentials package has wrong format') } if $va_version !~ /1[.](\d+)/ { if $va_version != 'stable' { $va_version = 'stable' } } file {""/tmp/${cred_package_name}"": ensure => file, content => $cred_package_content, } -> exec { 'decode_credentials': command => ""/usr/bin/base64 --decode /tmp/${cred_package_name} > /tmp/6wind-authentication-credentials.deb"", } -> package { ""6wind-authentication-credentials"": provider => 'dpkg', ensure => 'installed', source => ""/tmp/6wind-authentication-credentials.deb"" } -> exec { 'retrieve_va_repo': command => ""/usr/bin/curl --cacert /usr/local/etc/certs/6wind_ca.crt --key /usr/local/etc/certs/6wind_client.key --cert /usr/local/etc/certs/6wind_client.crt -o /tmp/6wind-virtual-accelerator-repository.deb https://repo.6wind.com/virtual-accelerator/ubuntu-14.04/$(dpkg --print-architecture)/${va_version}/6wind-virtual-accelerator-ubuntu-14.04-repository_${va_version}-1_$(dpkg --print-architecture).deb"", } -> package { ""6wind-virtual-accelerator-repository"": provider => 'dpkg', ensure => 'installed', source => ""/tmp/6wind-virtual-accelerator-repository.deb"" } -> exec { 'increase_repo_priority': command => ""/bin/sed -i 's }",0,1,"exec {'decode_credentials': \\\\, exec {'decode_credentials': \\\\\\\\\\\\\\\\, exec {'increase_repo_priority': \\\\, exec {'retrieve_va_repo': \\, file {\\\\, if $cred_package_name!~ /.+[.]deb[.]b64?/ { fail('the given credentials package has wrong format') } if $va_version!~ /1[.](\\d+)/ { if $va_version!='stable' { $va_version ='stable' } } file {\\\\, if $va_version!='stable' { $va_version ='stable' } } file {\\\\, if $va_version!~ /1[.](\\d+)/ { if $va_version!='stable' { $va_version ='stable' } } file {\\\\, notice('modular: virtual_accelerator/6wind_repo.pp') $settings = hiera('6wind-virtual-accelerator', {}) $va_version = $settings['va_version'] $cred_package_content = $settings['credentials_package'][content] $cred_package_name = $settings['credentials_package'][name] if $cred_package_name!~ /.+[.]deb[.]b64?/ { fail('the given credentials package has wrong format') } if $va_version!~ /1[.](\d+)/ { if $va_version!='stable' { $va_version ='stable' } } file {\\, package { \","CWE-501, CWE-502, CWE-521, CWE-532","{'reason': 'The script relies on environment variables being available by the time the script runs. Since it is not clear if environment variables are guaranteed to be available, we can assume that they may not be, resulting in a failure of the credentials_package to be parsed or the wrong va_version to be chosen. The resulting misconfiguration is related to CWE-532.', 'related_cwe': 'CWE-532', 'is_misconfiguration_related': 'Yes'}"
770,"class osnailyfacter::test_controller { file { ""/tmp/controller-file"": content => ""hello world! $role is installed"", } }",0,1,"content => \, content => \\, content => \\\, content => \\\\\\\\\\, contentfile { \, hello world! $role is installed, hello world! $role is installed\, hello world! $role is installed\\, hello world! $role is installed\\\\\\\\\\\\\\\\\\\\\\",CWE-502: Deserialization of Untrusted Data,"{'reason': 'The given misconfiguration is related to CWE-502 because the content provided in the code is used as input to a function, which is not trusted. The input is not being validated or sanitized, making it possible for an attacker to inject arbitrary content. The content could contain malicious data that would be executed as part of the deserialization process, leading to security vulnerabilities.', 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
771,"class plugin_zabbix::monitoring::mysql_mon { include plugin_zabbix::params if defined_in_state(class['mysql::server']) { plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app mysql"": host => $plugin_zabbix::params::host_name, template => 'template app mysql', api => $plugin_zabbix::monitoring::api_hash, } plugin_zabbix::agent::userparameter { 'mysql.status': key => 'mysql.status[*]', command => join([ 'echo ""show global status where variable_name=\'$1\';""', ' | mysql --defaults-extra-file=/var/lib/zabbix/.my.cnf -n', ' | awk \'{print $$2}\''], ''); 'mysql.ping': command => 'mysqladmin --defaults-extra-file=/var/lib/zabbix/.my.cnf ping | grep -c alive'; 'mysql.version': command => 'mysql -v'; 'db.wsrep.status.query': command => '/etc/zabbix/scripts/query_db.py wsrep_status'; 'db.wsrep.ready.query': command => '/etc/zabbix/scripts/query_db.py wsrep_ready'; 'db.wsrep.connected.query': command => '/etc/zabbix/scripts/query_db.py wsrep_connected'; } file { ""${::plugin_zabbix::params::agent_include}/userparameter_mysql.conf"": ensure => absent, } file { '/var/lib/zabbix': ensure => directory, } file { '/var/lib/zabbix/.my.cnf': ensure => present, content => template('plugin_zabbix/my.cnf.erb'), require => file['/var/lib/zabbix'], } } }",1,1,"command => '/etc/zabbix/scripts/query_db.py wsrep_ready';\\\\\\\\\\\, command => '/etc/zabbix/scripts/query_db.py wsrep_status';\\\\, command =>'mysql -v';\\, content => template(\\',, file { \, if defined_in_state(class[\, plugin_zabbix::agent::userparameter {'db.wsrep.ready.query':\\\\, plugin_zabbix::agent::userparameter {'db.wsrep.status.query':\\, plugin_zabbix::agent::userparameter {'mysql.version':\, require => file[\\',",4042,"{'reason': 'The issue of this misconfiguration is that the query_db.py script is called insecurely.', 'related_cwe': '4042', 'is_misconfiguration_related': 'Yes'}"
772,"class openstack_tasks::openstack_network::agents::sriov { notice('modular: openstack_network/agents/sriov.pp') $network_scheme = hiera_hash('network_scheme', {}) $neutron_config = hiera_hash('neutron_config') $neutron_advanced_config = hiera_hash('neutron_advanced_configuration', {}) $enable_qos = pick($neutron_advanced_config['neutron_qos'], false) prepare_network_config($network_scheme) $pci_passthrough_whitelist = get_nic_passthrough_whitelist('sriov') if $pci_passthrough_whitelist { $physical_device_mappings = nic_whitelist_to_mappings($pci_passthrough_whitelist) class { '::neutron::agents::ml2::sriov': physical_device_mappings => $physical_device_mappings, extensions => $enable_qos ? { true => ['qos'], default => ''}, manage_service => true, enabled => true, } package { 'neutron': name => 'binutils', ensure => 'installed', } $override_configuration = hiera_hash('configuration', {}) override_resources { 'neutron_sriov_agent_config': data => $override_configuration['neutron_sriov_agent_config'] } } }",1,1,"class \\, class \\\\, hiera_hash('network_scheme', {}), hiera_hash('neutron_advanced_configuration', {}), hiera_hash('neutron_config'), module \, module \\, notice('modular: openstack_network/agents/sriov.pp'), pick($neutron_advanced_config['neutron_qos'], false), prepare_network_config($network_scheme)",CWE-284,"{'reason': 'The issue is related to CWE-284 because it involves incorrect use of hiera configuration, which can lead to vulnerabilities.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
773,"define virtualenv::environment ( $packages = undef, $dir = $title, $ensure = 'present', $owner = 'root', $group = 'root', $timeout = 300, $python = 'python', ) { require ::virtualenv if $ensure == 'present' { file { $dir: ensure => directory, owner => $owner, group => $group, } exec { ""virtualenv-${dir}"": command => template('virtualenv/create-virtualenv.sh.erb'), cwd => $dir, creates => ""${dir}/lib"", user => $owner, group => $group, require => file[$dir], timeout => $timeout, } } elsif $ensure == 'absent' { file { $dir: ensure => absent, force => true, recurse => true, purge => true, } } }",0,1,"$packages = undef, $dir = $title, $ensure = 'present', $owner = 'root', $group = 'root', $timeout = 300, $python = 'python', ) { require ::virtualenv if $ensure == 'present' { file { $dir: ensure => directory, owner => $owner, group => $group, } exec { \\, define virtualenv::environment ( $packages = undef, $dir = $title, $ensure = 'present', $owner = 'root', $group = 'root', $timeout = 300, $python = 'python', ) { require ::virtualenv if $ensure == 'present' { file { $dir: ensure => directory, owner => $owner, group => $group, } exec { \, elsif $ensure == 'absent' { file { $dir: ensure => absent, force => true, recurse => true, purge => true, } } },, exec { \\, exec { \\\\, file { $dir: ensure => absent, force => true, recurse => true, purge => true, } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }, force => true, recurse => true, purge => true, } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }, if $ensure == 'present' { file { $dir: ensure => directory, owner => $owner, group => $group, } exec { \, if $ensure == 'present' { file { $dir: ensure => directory, owner => $owner, group => $group, } exec { \\, user => $owner, group => $group, require => file[$dir], timeout => $timeout, } } elif $ensure == 'absent' { file { $dir: ensure => absent, force => true, recurse => true, purge => true, } } },","CWE-1167, CWE-916","{'reason': 'This issue is related to CWE-1167 and CWE-916 because it has the potential to allow an unauthenticated, unintended user to perform actions that they should not be able to perform.', 'related_cwe': 'CWE-1167, CWE-916', 'is_misconfiguration_related': 'Yes'}"
774,"class plugin_zabbix::monitoring::firewall_mon { include plugin_zabbix::params if defined_in_state(class['firewall']) { plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app iptables stats"": host => $plugin_zabbix::params::host_name, template => 'template app iptables stats', api => $plugin_zabbix::monitoring::api_hash, } package { 'iptstate': ensure => present; } plugin_zabbix::agent::userparameter { 'iptstate.tcp': command => 'sudo iptstate -1 | grep tcp | wc -l'; 'iptstate.tcp.syn': command => 'sudo iptstate -1 | grep syn | wc -l'; 'iptstate.tcp.timewait': command => 'sudo iptstate -1 | grep time_wait | wc -l'; 'iptstate.tcp.established': command => 'sudo iptstate -1 | grep established | wc -l'; 'iptstate.tcp.close': command => 'sudo iptstate -1 | grep close | wc -l'; 'iptstate.udp': command => 'sudo iptstate -1 | grep udp | wc -l'; 'iptstate.icmp': command => 'sudo iptstate -1 | grep icmp | wc -l'; 'iptstate.other': command => 'sudo iptstate -1 -t | head -2 |tail -1 | sed -e \'s/^.*other: \(.*\) (.*/\1/\'' } } }",0,1,"command =>'sudo iptstate -1 -t | head -2 |tail -1 | sed -e \'s/^.*other: \(.*\) (.*/\1/', command =>'sudo iptstate -1 | grep close | wc -l', command =>'sudo iptstate -1 | grep established | wc -l', command =>'sudo iptstate -1 | grep icmp | wc -l', command =>'sudo iptstate -1 | grep syn | wc -l', command =>'sudo iptstate -1 | grep tcp | wc -l', command =>'sudo iptstate -1 | grep time_wait | wc -l', command =>'sudo iptstate -1 | grep udp | wc -l', include plugin_zabbix::params, package { 'iptstate': ensure => present; }","CWE-190, CWE-264, CWE-494","{'reason': 'This misconfiguration can be related to CWE-190. This is because a privileged account is created with the intention of granting it the least amount of privilege required to perform its functions. Unfortunately, the user account that sudo is called as is not a least privilege account, since it has permissions to run every command as root, making this misconfiguration related to CWE-190.', 'related_cwe': 'CWE-190', 'is_misconfiguration_related': 'Yes'}"
775,"class osnailyfacter::api_proxy::api_proxy { notice('modular: api_proxy/api_proxy.pp') $max_header_size = hiera('max_header_size', '81900') $apache_api_proxy_ports = hiera('apache_api_proxy_ports', ['443', '563', '5000', '6385', '8000', '8003', '8004', '8042', '8080', '8082', '8386', '8773', '8774', '8776', '8777', '9292', '9494', '9696']) class { '::osnailyfacter::apache': listen_ports => hiera_array('apache_ports', ['0.0.0.0:80', '0.0.0.0:8888']), } class { '::osnailyfacter::apache_api_proxy': master_ip => hiera('master_ip'), max_header_size => $max_header_size, ports => $apache_api_proxy_ports, } include ::tweaks::apache_wrappers }",0,1,"class { '::osnailyfacter::apache_api_proxy': master_ip => hiera('master_ip'), max_header_size => $max_header_size, ports => $apache_api_proxy_ports, }","CWE-120, CWE-20, CWE-22, CWE-24, CWE-25, CWE-27, CWE-306, CWE-79, CWE-81, CWE-86","{'reason': 'This misconfiguration is related to [CWE-306] due to the way it handles errors. When a request is received from an untrusted source, the service might not check the content for malicious input or not sanitize it properly, leading to security issues.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
776,"class toplevel::base { if ($::fqdn != $::clientcert) { fail(""this host's fqdn fact, '${::fqdn}', does not match its clientcert fact, '${::clientcert}'. this will lead to sadness!"") } class { 'packages::setup': stage => packagesetup, } include puppet include users::root include network include sudoers include hardware include ssh include timezone include tweaks::rc_local include needs_reboot include log_aggregator::client include packages::bash class { 'web_proxy': host => $::config::web_proxy_host, port => $::config::web_proxy_port, exceptions => $::config::web_proxy_exceptions } if ($::operatingsystem != windows) { include packages::editors include packages::screen include users::global include powermanagement include collectd include packages::openssl include packages::libc } if $kernel == linux { include packages::kernel } if ($::operatingsystem == windows) { include rdp } include security::motd }",1,1,"class toplevel::base { if ($::fqdn!= $::clientcert) { fail('this host's fqdn fact, '${::fqdn}', does not match its clientcert fact, '${::clientcert}'. this will lead to sadness!') }, class { 'web_proxy': host=>$::config::web_proxy_host,port=>$::config::web_proxy_port,exceptions=>$::config::web_proxy_exceptions }, if ($::operatingsystem!= windows) { include packages::editors include packages::screen include users::global include powermanagement include collectd include packages::openssl include packages::libc } if $kernel == linux { include packages::kernel } if ($::operatingsystem == windows) { include rdp } include security::motd, if($::fqdn!=$::clientcert) {fail('this host's fqdn fact, '${::fqdn}', does not match its clientcert fact, '${::clientcert}'. this will lead to sadness!')}, if($::operatingsystem==windows) { include rdp } include security::motd, include network, include security::motd, include users::global, include users::root",CWE-306: Missing Authentication for Critical Function,"{'reason': 'CWE-306 is a very generic CWE and is used to describe any missing authentication in a system. The provided script does not contain any security issues that we can find and does not include any authentication, therefore CWE-306 is not related to this misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
777,"define vmware::ceilometer::ha ( $availability_zone_name, $vc_cluster, $vc_host, $vc_user, $vc_password, $service_name, $target_node, $default_log_levels, $hypervisor_inspector = 'vmware', $api_retry_count = '5', $task_poll_interval = '5.0', $vc_insecure = true, $vc_ca_file = undef, $datastore_regex = undef, $amqp_port = '5673', $ceilometer_config = '/etc/ceilometer/ceilometer.conf', $ceilometer_conf_dir = '/etc/ceilometer/ceilometer-compute.d', ) { if ($target_node == 'controllers') { $ceilometer_compute_conf = ""${ceilometer_conf_dir}/vmware-${availability_zone_name}_${service_name}.conf"" $vcenter_ca_file = pick($vc_ca_file, {}) $vcenter_ca_content = pick($vcenter_ca_file['content'], {}) $vcenter_ca_filepath = ""${ceilometer_conf_dir}/vmware-${availability_zone_name}_${service_name}-ca.pem"" if ! defined(file[$ceilometer_conf_dir]) { file { $ceilometer_conf_dir: ensure => directory, owner => 'ceilometer', group => 'ceilometer', mode => '0750', } } if ! empty($vcenter_ca_content) and ! $vc_insecure { $ceilometer_vcenter_ca_filepath = $vcenter_ca_filepath $ceilometer_vcenter_insecure_real = false file { $vcenter_ca_filepath: ensure => file, content => $vcenter_ca_content, mode => '0644', owner => 'root', group => 'root', } } else { $ceilometer_vcenter_ca_filepath = $::os_service_default $ceilometer_vcenter_insecure_real = $vc_insecure } if ! defined(file[$ceilometer_compute_conf]) { file { $ceilometer_compute_conf: ensure => present, content => template('vmware/ceilometer-compute.conf.erb'), mode => '0600', owner => 'ceilometer', group => 'ceilometer', } } $primitive_name = ""p_ceilometer_agent_compute_vmware_${availability_zone_name}_${service_name}"" $primitive_class = 'ocf' $primitive_provider = 'fuel' $primitive_type = 'ceilometer-agent-compute' $metadata = { 'target-role' => 'stopped', 'resource-stickiness' => '1' } $parameters = { 'amqp_server_port' => $amqp_port, 'config' => $ceilometer_config, 'pid' => ""/var/run/ceilometer/ceilometer-agent-compute-${availability_zone_name}_${service_name}.pid"", 'user' => 'ceilometer', 'additional_parameters' => ""--config-file=${ceilometer_compute_conf}"", } $operations = { 'monitor' => { 'timeout' => '20', 'interval' => '30', }, 'start' => { 'timeout' => '360', }, 'stop' => { 'timeout' => '360', } } pacemaker::service { $primitive_name : prefix => false, primitive_class => $primitive_class, primitive_provider => $primitive_provider, primitive_type => $primitive_type, metadata => $metadata, parameters => $parameters, operations => $operations, } service { $primitive_name : ensure => 'running', enable => true, } file[$ceilometer_conf_dir]-> file[$ceilometer_compute_conf]-> pcmk_resource[$primitive_name]-> service[$primitive_name] } }",1,1,"amqp_port = '5673', ceilometer_compute_conf =, ceilometer_conf_dir = '/etc/ceilometer/ceilometer-compute.d', ceilometer_config = '/etc/ceilometer/ceilometer.conf', if! defined(file[$ceilometer_conf_dir]) {, if! empty($vcenter_ca_content) and! $vc_insecure {, vc_ca_file = undef, vc_insecure = true",CWE-200,"{'reason': 'The misconfiguration is related to CWE-200 because...', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
778,"notice('modular: midonet-host-registry.pp') $api_ip = hiera('management_vip') $access_data = hiera_hash('access') $username = $access_data['user'] $password = $access_data['password'] $tenant_name = $access_data['tenant'] $midonet_settings = hiera_hash('midonet-fuel-plugin') $tz_type = $midonet_settings['tunnel_type'] $service_path = $operatingsystem ? { 'centos' => '/sbin', 'ubuntu' => '/usr/bin:/usr/sbin:/sbin' } exec {'service midolman restart': path => $service_path } -> midonet_host_registry {$::fqdn: ensure => present, midonet_api_url => ""http://${api_ip}:8081"", username => $username, password => $password, tenant_name => $tenant_name, underlay_ip_address => $::ipaddress_br_mesh, tunnelzone_type => $tz_type, tunnelzone_name => 'tzonefuel' }",0,1,"exec {'service midolman restart': path => $service_path } ->, hiera('access'), hiera('management_vip'), hiera_hash('midonet-fuel-plugin'), midonet_host_registry {$::fqdn: ensure => present,",CWE-807,"{'reason': 'modular: midonet-host-registry.pp', 'related_cwe': 'CWE-807', 'is_misconfiguration_related': 'No'}"
779,"class ironic::config ( $ironic_config = {}, $ironic_api_paste_ini = {}, ) { validate_hash($ironic_config) validate_hash($ironic_api_paste_ini) create_resources('ironic_config', $ironic_config) create_resources('ironic_api_paste_ini', $ironic_api_paste_ini) }",0,1,"class ironic::config ( $ironic_config = {}, $ironic_api_paste_ini = {}, ) {, create_resources('ironic_api_paste_ini', $ironic_api_paste_ini), create_resources('ironic_config', $ironic_config)",CWE-1037,"{'reason': 'Reason: This misconfiguration is related to the misconfiguration in Ironic. It is a configuration that contains sensitive information. This vulnerability allows a remote attacker to get access to sensitive information. This is a CWE-1037 issue.', 'related_cwe': 'CWE-1037', 'is_misconfiguration_related': 'Yes'}"
780,"class umm ( $umm_enabled = 'yes', $umm_reboot_count = '2', $umm_counter_reset_time = '10', ) { package { 'fuel-umm' : ensure => 'installed', } file { 'umm_config' : ensure => present, content => template('umm/umm.conf.erb'), path => '/etc/umm.conf', require => package['fuel-umm'], } }",1,1,"class umm ( $umm_enabled = 'yes', $umm_reboot_count = '2', $umm_counter_reset_time = '10', ) { package { 'fuel-umm' : ensure => 'installed', } file { 'umm_config' : ensure => present, content => template('umm/umm.conf.erb'), path => '/etc/umm.conf', require => package['fuel-umm'], } }, class umm ( $umm_enabled = 'yes', $umm_reboot_count = '2', $umm_counter_reset_time = '10', ) {\\n\\n    package { 'fuel-umm' : ensure => 'installed', }\\n\\n\\n    file { 'umm_config' : ensure => present,\\n      content => template('umm/umm.conf.erb'),\\n      path => '/etc/umm.conf',\\n      require => package['fuel-umm'],\\n    }\\n\\n}, file {\\n  'umm_config' : ensure => present,\\n  content => template('umm/umm.conf.erb'),\\n  path => '/etc/umm.conf',\\n  require => package['fuel-umm'],\\n}\\n, file {\n  'umm_config' : ensure => present,\n  content => template('umm/umm.conf.erb'),\n  path => '/etc/umm.conf',\n  require => package['fuel-umm'],\n}\n, package { 'fuel-umm' : ensure => 'installed',}\\\\\\\\n, package { 'fuel-umm' : ensure => 'installed',}\\\\n, package { 'fuel-umm' : ensure => 'installed',}\\\\n\\\\n\\\\n\\\\n, package { 'fuel-umm' : ensure => 'installed',}\\n",CWE-798,"{'reason': ""The misconfiguration is related to CWE-798: Use of Hard-coded, Shared Credential. The umm_config file's contents are hardcoded in the umm class definition. This creates a potential vulnerability if the credential (username, password, token, or key) used by the file in question is hard-coded in Puppet code, since this is equivalent to hard-coded credentials in any source code. This is not ideal for production environments, and should be avoided at all costs."", 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
781,"class npm ( $cache_dir = '/tmp/cache/npm', ) { include ::apt file { '/usr/local/share/nodesource-pubkey.asc': source => 'puppet:///modules/npm/nodesource-pubkey.asc', owner => 'root', group => 'root', before => file['/etc/apt/sources.list.d/nodesource.list'], notify => exec['add_nodesource_apt_key'], } exec { 'add_nodesource_apt_key': command => '/usr/bin/apt-key add /usr/local/share/nodesource-pubkey.asc', before => file['/etc/apt/sources.list.d/nodesource.list'], refreshonly => true, require => [ exec['ins-apt-transport-https'], exec['ins-npm-nodejs-legacy'], ], } file { '/etc/apt/sources.list.d/nodesource.list': source => 'puppet:///modules/npm/nodesource.sources.list', owner => 'root', group => 'root', require => exec['ins-apt-transport-https'], notify => exec['apt-get update'], } exec { 'ins-npm-nodejs-legacy': command => '/usr/bin/apt-get update && /usr/bin/apt-get install -y --force-yes npm nodejs-legacy', environment => 'debian_frontend=noninteractive', unless => '/usr/bin/dpkg -l npm && /usr/bin/dpkg -l nodejs-legacy', user => 'root', } package { 'nodejs': ensure => latest, require => [ file['/etc/apt/sources.list.d/nodesource.list'], exec['apt-get update'] ], } exec { 'npm_set_cache_dir': command => ""/bin/mkdir -p ${cache_dir} && /bin/chmod -r 0777 ${cache_dir}"", unless => ""/usr/bin/test -d ${cache_dir}"", user => 'root', group => 'root', } env::var { 'npm_config_cache': value => $cache_dir, require => exec['npm_set_cache_dir'], } }",1,1,"class npm ( $cache_dir = '/tmp/cache/npm', ) { include ::apt file { '/usr/local/share/nodesource-pubkey.asc': source => 'puppet:///modules/npm/nodesource-pubkey.asc', owner => 'root', group => 'root', before => file['/etc/apt/sources.list.d/nodesource.list'], notify => exec['add_nodesource_apt_key'], }, exec { 'add_nodesource_apt_key': command => '/usr/bin/apt-key add /usr/local/share/nodesource-pubkey.asc', before => file['/etc/apt/sources.list.d/nodesource.list'], refreshonly => true, require => [ exec['ins-apt-transport-https'], exec['ins-npm-nodejs-legacy'], ], }, exec { 'npm_set_cache_dir': command =>, file { '/etc/apt/sources.list.d/nodesource.list': source => 'puppet:///modules/npm/nodesource.sources.list', owner => 'root', group => 'root', require => exec['ins-apt-transport-https'], notify => exec['apt-get update'], }, file { '/usr/local/share/nodesource-pubkey.asc': source => 'puppet:///modules/npm/nodesource-pubkey.asc', owner => 'root', group => 'root', before => file['/etc/apt/sources.list.d/nodesource.list'], notify => exec['add_nodesource_apt_key'], }",CWE-732: Incorrect Permission Assignment for Critical Resource,"{'reason': ""The npm class specifies that the nodesource-pubkey.asc file is owned by root. By adding a resource for /usr/local/share/nodesource-pubkey.asc, a file resource is created that ensures the file's owner is root. This can be exploited if root permissions are escalated to the file or a vulnerable version of npm is installed. By adding a resource for /usr/local/share/nodesource-pubkey.asc, a file resource is created that ensures the file's owner is root. This can be exploited if root permissions are escalated to the file or a vulnerable version of npm is installed. A vulnerability in npm was detected in November of 2018, where the npm utility can be exploited to overwrite arbitrary files on the system if"", 'related_cwe': 'CWE-732: Incorrect Permission Assignment for Critical Resource', 'is_misconfiguration_related': 'Yes'}"
782,"class packages::mozilla::screenresolution { anchor { 'packages::mozilla::screenresolution::begin': ; 'packages::mozilla::screenresolution::end': ; } anchor['packages::mozilla::screenresolution::begin'] -> case $::operatingsystem { centos : { } darwin : { case $::macosx_productversion_major { '10.6','10.7': { packages::pkgdmg { screenresolution: version => ""1.5""; } } '10.8','10.9','10.10': { packages::pkgdmg { screenresolution: version => ""1.6""; } } default: { fail(""no build of screenresolution known to work on this os x version"") } } } default : { fail(""cannot install on $::operatingsystem"") } } -> anchor['packages::mozilla::screenresolution::end'] }",0,1,"packages::mozilla::screenresolution::begin, packages::mozilla::screenresolution::end",CWE-20,"{'reason': 'I believe the misconfiguration is related to CWE-20 as the failure will only occur when the script is used to install on a new Operating System (OS) version, or on an OS version where there are no builds available. In both cases, the script will fail and the resulting configuration will not be as intended.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
783,"class qdr::params { $service_package_name = 'qpid-dispatch-router' $service_name = 'qdrouterd' $package_provider = 'yum' $service_user = 'qdrouterd' $service_group = 'qdrouterd' $service_home = '/var/lib/qdrouterd' $service_version = '0.6.0' $sasl_package_list = [ 'cyrus-sasl-lib', 'cyrus-sasl-plain' ] $tools_package_list = [ 'qpid-dispatch-tools' ] if $::osfamily == 'debian' { $service_package_name = 'qdrouterd' $package_provider = 'apt' $sasl_package_list = 'sasl2-bin' $tools_package_list = [ 'qdmanage' , 'qdstat' ] } $service_config_path = '/etc/qpid-dispatch/qdrouterd.conf' $service_config_template = 'qdr/qdrouterd.conf.erb' }",1,1,"class qdr::params, if $::osfamily == 'debian' { $service_package_name = 'qdrouterd' $package_provider = 'apt' $sasl_package_list ='sasl2-bin' $tools_package_list = [ 'qdmanage', 'qdstat' ] } $service_config_path = '/etc/qpid-dispatch/qdrouterd.conf' $service_config_template = 'qdr/qdrouterd.conf.erb' }, sasl_package_list = [ 'cyrus-sasl-lib', 'cyrus-sasl-plain' ], service_config_path = '/etc/qpid-dispatch/qdrouterd.conf', service_config_template = 'qdr/qdrouterd.conf.erb', service_group = 'qdrouterd', service_home = '/var/lib/qdrouterd', service_user = 'qdrouterd', service_version = '0.6.0', tools_package_list = [ 'qpid-dispatch-tools' ]","CWE-327, CWE-732","{'reason': 'Qdrouterd configuation files are stored in a shared directory. If these files are world-readable, sensitive information about the qdrouterd process, such as passwords, can be extracted from memory by an attacker.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
784,"class puppetmaster::httpd { include puppetmaster::ssl $deploy_htpasswd = secret('puppetmaster_deploy_htpasswd') case $::operatingsystem { centos: { file { ""/etc/puppet/deploy.htpasswd"": content => ""deploy:${deploy_htpasswd}"", show_diff => false; [""/etc/puppet/rack"", ""/etc/puppet/rack/public""]: require => class[""puppet""], ensure => directory, owner => puppet, group => puppet, notify => service['httpd']; ""/etc/puppet/rack/config.ru"": owner => puppet, group => puppet, source => ""puppet:///modules/puppetmaster/config.ru"", notify => service['httpd']; } service { ""puppetmaster"": require => class[""puppetmaster::install""], ensure => stopped, enable => false; } httpd::config { ""data.conf"": content => template(""puppetmaster/data.conf.erb""); ""puppetmaster_passenger.conf"": content => template(""puppetmaster/puppetmaster_passenger.conf.erb""); } file['/etc/puppet/puppet.conf'] ~> service['httpd'] package['openssl'] ~> service['httpd'] } default: { fail(""puppetmaster::httpd support missing for $::operatingsystem"") } } }",1,1,"content => \, content => template(\\\, group => puppet;, include puppetmaster::ssl, notify => service['httpd'];, owner => puppet;, show_diff => false;, source => \","CWE-255, CWE-256, CWE-264","{'reason': 'The content of the puppetmaster::httpd class contains a configuration which may result in the accidental disclosure of sensitive information, as described in CWE-256.', 'related_cwe': 'CWE-256', 'is_misconfiguration_related': 'Yes'}"
785,"class wiki ($config, $user) { file { '/etc/cron.d/wikimaintenance': content => template('wiki/wikimaintenance.erb'), } file { '/etc/cron.d/wikiservices': content => template('wiki/wikiservices.erb'), } file { '/etc/cron.d/wikistats': content => template('wiki/wikistats.erb'), } file { '/etc/init/mw-jobrunner.conf': source => 'puppet:///modules/wiki/upstart', } service { 'mw-jobrunner': ensure => running, enable => true, provider => upstart, require => file['/etc/init/mw-jobrunner.conf'], } package { [ 'libpoe-component-irc-perl', 'librsvg2-bin' ]: ensure => present, } }",0,1,"file { '/etc/cron.d/wikimaintenance':\\n\\t\\t\\t\\t\\tcontent => template('wiki/wikimaintenance.erb'),\\n\\t\\t\\t\\t}, file { '/etc/cron.d/wikimaintenance':\n\t\t\t\t\tcontent => template('wiki/wikimaintenance.erb'),\n\t\t\t\t}, file { '/etc/cron.d/wikiservices': content => template('wiki/wikiservices.erb'),\\\\n}, file { '/etc/cron.d/wikiservices': content => template('wiki/wikiservices.erb'),\\n}, file { '/etc/cron.d/wikistats':\\n\\t\\t\\t\\t\\tcontent => template('wiki/wikistats.erb'),\\n\\t\\t\\t\\t}, file { '/etc/init/mw-jobrunner.conf':\\n\\t\\tsource => 'puppet:///modules/wiki/upstart',\\n\\t\\t}, package { [ 'libpoe-component-irc-perl', 'librsvg2-bin' ]:ensure => present,}, service {'mw-jobrunner':\\\\\\\\n\\\\\\\\t\\\\\\\\tensure => running,\\\\\\\\n\\\\\\\\t\\\\\\\\tenable => true,\\\\\\\\n\\\\\\\\t\\\\\\\\tprovider => upstart,\\\\\\\\n\\\\\\\\t\\\\\\\\trequire => file['/etc/init/mw-jobrunner.conf'],\\\\\\\\n}, service {'mw-jobrunner':\\\\n\\\\t\\\\tensure => running,\\\\n\\\\t\\\\tenable => true,\\\\n\\\\t\\\\tprovider => upstart,\\\\n\\\\t\\\\trequire => file['/etc/init/mw-jobrunner.conf'],\\\\n}","CWE-794, CWE-798, CWE-799","{'reason': 'The content of the wiki misconfiguration is a direct cause of the CWE vulnerability.\\n\\nThis misconfiguration directly enables the functionality of job runners in Wiki, which results in a CWE-798 vulnerability.\\n\\nThis misconfiguration is also indirectly related to the other two vulnerabilities.\\n\\nIt provides a clear path for the attackers to exploit the wiki system in this way:\\n\\n* 1. The misconfiguration in the wiki system directly allows job runners to be started.\\n\\n* 2. This misconfiguration can be used by an attacker to inject a malicious job that has the privileges of a job runner.\\n\\n* 3. The misconfiguration can also be used to create jobs on the wiki that allow a job runner to run', 'related_cwe': 'CWE-794, CWE-798, CWE-799', 'is_misconfiguration_related': 'Yes'}"
786,"class designate::policy ( $policies = {}, $policy_path = '/etc/designate/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) }",0,1,"create_resources('openstacklib::policy::base', $policies)\\\\\\\\\\\\\\\\\\\\n, create_resources('openstacklib::policy::base', $policies)\\\\n, create_resources('openstacklib::policy::base', $policies)\\n, openstacklib::policy::base { file_path => $policy_path, }\\\\\\\\n, openstacklib::policy::base { file_path => $policy_path, }\\n, openstacklib::policy::base { file_path => $policy_path, }\n, validate_hash($policies)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, validate_hash($policies)\\\\\\\\n, validate_hash($policies)\\n",CWE-532,"{'reason': ""The `create_resources('openstacklib::policy::base', $policies)` function call in the `create_resources('openstacklib::policy::base', $policies)` function call has a vulnerability that enables an attacker to perform unauthenticated code execution. This vulnerability is categorized under CWE-532: Insertion of Sensitive Information into Publicly Accessible Files or Function."", 'related_cwe': 'CWE-532', 'is_misconfiguration_related': 'Yes'}"
787,"class nova::spicehtml5proxy( $enabled = true, $manage_service = true, $host = '0.0.0.0', $port = '6082', $ensure_package = 'present' ) { include ::nova::deps include ::nova::params nova_config { 'spice/enabled': value => $enabled; 'spice/agent_enabled': value => $enabled; 'spice/html5proxy_host': value => $host; 'spice/html5proxy_port': value => $port; } nova::generic_service { 'spicehtml5proxy': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::spicehtml5proxy_package_name, service_name => $::nova::params::spicehtml5proxy_service_name, ensure_package => $ensure_package, } }",1,1,"nova::generic_service {'spicehtml5proxy': enabled => $enabled;, nova::generic_service {'spicehtml5proxy': ensure_package => $ensure_package;, nova::generic_service {'spicehtml5proxy': manage_service => $manage_service;, nova::generic_service {'spicehtml5proxy': package_name => $::nova::params::spicehtml5proxy_package_name;, nova::generic_service {'spicehtml5proxy': service_name => $::nova::params::spicehtml5proxy_service_name;, nova_config {'spice/agent_enabled': value => $enabled;, nova_config {'spice/enabled': value => $enabled;, nova_config {'spice/html5proxy_host': value => $host;, nova_config {'spice/html5proxy_port': value => $port;",CWE-253,"{'reason': 'The script and the misconfiguration involve a parameterized `ensure_package` setting. This parameter is used in a `nova::generic_service` defined type to specify the package that should be installed on the target system. If the value of this parameter is not properly configured, this could result in incorrect installation or removal of the desired package, potentially leading to security issues. The `CWE-253: Insecure Computation` vulnerability describes this exact issue, where incorrect or malicious computation could lead to security vulnerabilities.', 'related_cwe': 'CWE-253', 'is_misconfiguration_related': 'Yes'}"
788,"class zaqar::transport::wsgi( $bind = $::os_service_default, $port = $::os_service_default, ) { zaqar_config { 'drivers:transport:wsgi/bind': value => $bind; 'drivers:transport:wsgi/port': value => $port; } }",0,1,"class zaqar::transport::wsgi( $bind = $::os_service_default, $port = $::os_service_default, ) { zaqar_config { 'drivers:transport/wsgi/bind': value => $bind; 'drivers:transport/wsgi/port': value => $port; } }, class zaqar::transport::wsgi( $bind = $::os_service_default, $port = $::os_service_default, ) { zaqar_config { 'drivers:transport:wsgi/bind': value => $bind; 'drivers:transport/wsgi/port': value => $port; } }, class zaqar::transport::wsgi( $bind = $::os_service_default, $port = $::os_service_default, ) { zaqar_config { 'drivers:transport:wsgi/bind': value => $bind; 'drivers:transport:wsgi/port': value => $port; } }",CWE-798,"{'reason': ""The class contains a configuration block with a value of $os_service_default. This means that if the Puppet OS is changed, the default setting will change, which may cause issues with the application's correct operation. This is a common source of configuration drift."", 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
789,"$management_address = hiera('management_vip') $access_data = hiera_hash('access') $username = $access_data['user'] $password = $access_data['password'] $tenant_name = $access_data['tenant'] $midonet_settings = hiera_hash('midonet-fuel-plugin') $f_net_cidr = split($midonet_settings['floating_cidr'], '/') $remote_peers = generate_remote_peers($midonet_settings) $nodes_hash = hiera('nodes') $node = filter_nodes($nodes_hash, 'fqdn', $::fqdn) $gw_ip = $node[0]['public_address'] $gw_mask = $node[0]['public_netmask'] $net_hash = public_network_hash($gw_ip, $gw_mask) $bgp_subnet = split($midonet_settings['bgp_cidr'], '/') $bgp_subnet_ip = $bgp_subnet[0] $bgp_subnet_cidr = $bgp_subnet[1] exec {""add veth interface"": path => ""/usr/bin:/usr/sbin:/sbin"", command => ""ip link add gw-veth-br type veth peer name gw-veth-mn"", unless => ""ip l | /bin/grep gw-veth-br"" } -> exec {""set gw-veth-br interface up"": path => ""/usr/bin:/usr/sbin:/sbin"", command => ""ip l set dev gw-veth-br up"" } -> exec {""set gw-veth-mn interface up"": path => ""/usr/bin:/usr/sbin:/sbin"", command => ""ip l set dev gw-veth-mn up"" } -> exec {""add veth to bridge"": path => ""/usr/bin:/usr/sbin:/sbin"", command => ""brctl addif br-ex gw-veth-br"", unless => ""brctl show br-ex | /bin/grep gw-veth-br"" } -> file {""/etc/sysconfig/network-scripts/ifcfg-p_br-floating-0"": ensure => absent, } -> exec {""set up external bridge"": path => ""/usr/bin:/usr/sbin:/sbin"", command => ""ip link set dev br-ex up"" } -> file {""/etc/init/midonet-network.conf"": ensure => present, source => ""/etc/fuel/plugins/midonet-fuel-plugin-4.0/puppet/files/startup.conf"" } -> midonet_gateway { $::fqdn: ensure => present, midonet_api_url => ""http://${management_address}:8081/midonet-api"", username => $username, password => $password, tenant_name => $tenant_name, interface => 'gw-veth-mn', local_as => $midonet_settings['local_as'], bgp_port => { 'port_address' => $midonet_settings['bgp_ip'], 'net_prefix' => $bgp_subnet_ip, 'net_length' => $bgp_subnet_cidr }, remote_peers => $remote_peers, advertise_net => [{ 'net_prefix' => $f_net_cidr[0], 'net_length' => $f_net_cidr[1]}] }",1,1,"brctl addif br-ex gw-veth-br, brctl show br-ex | /bin/grep gw-veth-br, ip l set dev gw-veth-br up, ip l set dev gw-veth-mn up, ip l | /bin/grep gw-veth-br, ip link set dev br-ex up",CWE-22,"{'reason': ""CWE-22: Improper Flow Control: This issue is caused due to not properly enforcing security mechanisms. The 'brctl addif br-ex gw-veth-br' command exposes the network to an untrusted user. The 'brctl show br-ex | /bin/grep gw-veth-br' command also allows untrusted users to view the network."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
790,"class plugin_purestorage_cinder::common { include plugin_purestorage_cinder::params package {$plugin_purestorage_cinder::params::pip_package_name: ensure => 'installed' } package {$plugin_purestorage_cinder::params::iscsi_package_name: ensure => 'installed' } package {$plugin_purestorage_cinder::params::multipath_package_name: ensure => 'installed' } case $::osfamily { 'debian': { service {$plugin_purestorage_cinder::params::iscsi_service_name: ensure => 'running', enable => true, hasrestart => true, require => package[$plugin_purestorage_cinder::params::iscsi_package_name], } file {'99-pure-storage.rules': path => '/lib/udev/rules.d/99-pure-storage.rules', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/99-pure-storage.rules', } } 'redhat': { file {'99-pure-storage.rules': path => '/etc/udev/rules.d/99-pure-storage.rules', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/99-pure-storage.rules', } } default: { fail(""unsuported osfamily ${::osfamily}, currently debian and redhat are the only supported platforms"") } } service {$plugin_purestorage_cinder::params::multipath_service_name: ensure => 'running', enable => true, hasrestart => true, hasstatus => false, status => 'pgrep multipathd', require => package[$plugin_purestorage_cinder::params::multipath_package_name], } file {'multipath.conf': path => '/etc/multipath.conf', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/multipath.conf', require => package[$plugin_purestorage_cinder::params::multipath_package_name], notify => service[$plugin_purestorage_cinder::params::multipath_package_name], } }",0,1,"case $::osfamily { 'debian': { service {$plugin_purestorage_cinder::params::iscsi_service_name: ensure => 'running', enable => true, hasrestart => true, require => package[$plugin_purestorage_cinder::params::iscsi_package_name], } file {'99-pure-storage.rules': path => '/lib/udev/rules.d/99-pure-storage.rules', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/99-pure-storage.rules', } }'redhat': { file {'99-pure-storage.rules': path => '/etc/udev/rules.d/99-pure-storage.rules', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/99-pure-storage.rules', } } default: { fail(\, case $::osfamily { 'debian': { service {$plugin_purestorage_cinder::params::iscsi_service_name: ensure => 'running', enable => true, hasrestart => true, require => package[$plugin_purestorage_cinder::params::iscsi_package_name], } file {'99-pure-storage.rules': path => '/lib/udev/rules.d/99-pure-storage.rules', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/99-pure-storage.rules', } }'redhat': { file {'99-pure-storage.rules': path => '/etc/udev/rules.d/99-pure-storage.rules', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/99-pure-storage.rules', } } default: { fail(\\, file {'multipath.conf': path => '/etc/multipath.conf', mode => '0644', owner => root, group => root, source => 'puppet:///modules/plugin_purestorage_cinder/multipath.conf', require => package[$plugin_purestorage_cinder::params::multipath_package_name], notify => service[$plugin_purestorage_cinder::params::multipath_package_name], }, include plugin_purestorage_cinder::params, package {$plugin_purestorage_cinder::params::iscsi_package_name: ensure => 'installed' }, package {$plugin_purestorage_cinder::params::multipath_package_name: ensure => 'installed' }, service {$plugin_purestorage_cinder::params::multipath_service_name: ensure => 'running', enable => true, hasrestart => true, hasstatus => false, status => 'pgrep multipathd', require => package[$plugin_purestorage_cinder::params::multipath_package_name], }",CWE-20,"{'reason': ""The file content that is provided for the '/etc/multipath.conf' file is not provided with proper visibility and accessibility."", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'No'}"
791,"class { '::ceilometer': telemetry_secret => 'secrete', rabbit_userid => 'ceilometer', rabbit_password => 'an_even_bigger_secret', rabbit_host => '127.0.0.1', } class { '::ceilometer::db::mysql': password => 'a_big_secret', } class { '::ceilometer::db': database_connection => 'mysql://ceilometer:a_big_secret@127.0.0.1/ceilometer?charset=utf8', } class { '::ceilometer::keystone::auth': password => 'a_big_secret', } class { '::ceilometer::client': } class { '::ceilometer::expirer': } class { '::ceilometer::agent::central': } class { '::ceilometer::agent::notification': } class { '::ceilometer::keystone::authtoken': password => 'a_big_secret', } class { '::ceilometer::api': enabled => true, service_name => 'httpd', } include ::apache class { '::ceilometer::wsgi::apache': ssl => false, } class { '::ceilometer::collector': meter_dispatcher => ['gnocchi'], } class { '::ceilometer::dispatcher::gnocchi': filter_service_activity => false, filter_project => 'gnocchi_swift', url => 'https://gnocchi:8041', archive_policy => 'high', resources_definition_file => 'gnocchi.yaml', }",1,1,"class { '::ceilometer::agent::central': }, class { '::ceilometer::agent::notification': }, class { '::ceilometer::client': }, class { '::ceilometer::collector': meter_dispatcher => ['gnocchi'], }, class { '::ceilometer::db': database_connection =>'mysql://ceilometer:a_big_secret@127.0.0.1/ceilometer?charset=utf8', }, class { '::ceilometer::db::mysql': password => 'a_big_secret', }, class { '::ceilometer::expirer': }, class { '::ceilometer::keystone::auth': password => 'a_big_secret', }, class { '::ceilometer::keystone::authtoken': password => 'a_big_secret', }, class { '::ceilometer::wsgi::apache': ssl => false, }","CWE-255, CWE-282","{'reason': 'The class for the Ceilometer agent configuration specifies a big secret, which could expose sensitive information, if the attacker can gain access to the system.', 'related_cwe': 'CWE-282', 'is_misconfiguration_related': 'Yes'}"
792,"define kafka::mirror::monitoring( $group_prefix = undef, ) { nrpe::monitor_service { ""kafka-mirror-${title}"": description => ""kafka mirrormaker ${title}"", nrpe_command => ""/usr/lib/nagios/plugins/check_procs -c 1:1 -c java --ereg-argument-array 'kafka.tools.mirrormaker.+/etc/kafka/mirror/${title}/producer\.properties'"", require => kafka::mirror[$title], } if !defined(nrpe::monitor_service['jmxtrans']) { nrpe::monitor_service { 'jmxtrans': description => 'jmxtrans', nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1:1 -c java --ereg-argument-array ""-jar.+jmxtrans-all.jar""', require => service['jmxtrans'], } } }",0,1,"define kafka::mirror::monitoring(\n\t\t\t$group_prefix = undef,\n\t\t), description => 'jmxtrans',, if!defined(nrpe::monitor_service['jmxtrans']) {, jmxtrans, jmxtrans-all.jar', nrpe_command => '/usr/lib/nagios/plugins/check_procs -c 1:1 -c java --ereg-argument-array \\, require => kafka::mirror[$title],, require => service['jmxtrans'],}","CWE-269, CWE-312, CWE-352","{'reason': 'The issue may cause memory exhaustion on the jmxtrans service because the default memory settings are not specified, which can cause unexpected behaviour or failure of the service. This may cause a Denial-of-Service to the jmxtrans service and, therefore, affect the service availability. A configuration file should be specified to adjust the memory settings, as recommended in the jmxtrans service configuration.', 'related_cwe': 'CWE-269', 'is_misconfiguration_related': 'Yes'}"
793,"notice('modular: connectivity-checker.pp') $plugin_name = 'connectivity_checker' $plugin_settings = hiera_hash(""${plugin_name}"", {}) $task_deploy = hiera('task_deploy', false) connectivity_checker { 'netconfig': network_scheme => hiera_hash('network_scheme'), network_metadata => hiera_hash('network_metadata'), non_destructive => pick($plugin_settings['non_destructive'], false), ping_tries => pick($plugin_settings['ping_tries'], 5), ping_timeout => pick($plugin_settings['ping_timeout'], 20), }",0,1,"connectivity_checker { 'netconfig':, network_metadata => hiera_hash('network_metadata'),, network_scheme => hiera_hash('network_scheme'),, non_destructive => pick($plugin_settings['non_destructive'], false),, ping_timeout => pick($plugin_settings['ping_timeout'], 20),, ping_tries => pick($plugin_settings['ping_tries'], 5),",CWE-20,"{'reason': 'This issue is related to CWE-20 since the vulnerability in Puppet Enterprise can cause the host to crash', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
794,"class murano::params { include ::openstacklib::defaults $dbmanage_command = 'murano-db-manage --config-file /etc/murano/murano.conf upgrade' $default_external_network = 'public' case $::osfamily { 'redhat': { $api_package_name = 'openstack-murano-api' $cfapi_package_name = 'openstack-murano-cfapi' $common_package_name = 'openstack-murano-common' $engine_package_name = 'openstack-murano-engine' $pythonclient_package_name = 'openstack-python-muranoclient' $dashboard_package_name = 'openstack-murano-dashboard' $api_service_name = 'murano-api' $cfapi_service_name = 'murano-cfapi' $engine_service_name = 'murano-engine' $local_settings_path = '/etc/openstack-dashboard/local_settings' } 'debian': { $api_package_name = 'murano-api' $cfapi_package_name = 'murano-cfapi' $common_package_name = 'murano-common' $engine_package_name = 'murano-engine' $pythonclient_package_name = 'python-muranoclient' $dashboard_package_name = 'python-murano-dashboard' $api_service_name = 'murano-api' $cfapi_service_name = 'murano-cfapi' $engine_service_name = 'murano-engine' $local_settings_path = '/etc/openstack-dashboard/local_settings.py' } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}"") } } }",1,1,class murano::params,"CWE-255, CWE-258, CWE-259, CWE-260, CWE-261, CWE-264, CWE-265, CWE-266, CWE-267, CWE-268","{'reason': ""This misconfiguration occurs when a developer has incorrectly defined a variable as a value within the class body. It is considered a misconfiguration because it may introduce unintended logic into the class, which could result in unexpected behavior or security vulnerabilities. By defining a variable as a value, the developer is effectively making the variable constant, which can lead to hard-to-diagnose bugs and security issues.\\n\\nThis issue can be resolved by defining the variable as a reference to a value, rather than as the value itself. This can be done by using the '=' operator instead of the ':=' operator. For example:\\n\\n\\n\\n$api_service_name ='murano-api'\\n\\n\\n\\n$api_service_name ='murano-api'\\n"", 'related_cwe': 'CWE-255, CWE-258, CWE-259, CWE-260, CWE-261, CWE-264, CWE-265, CWE-266, CWE-267, CWE-268', 'is_misconfiguration_related': 'Yes'}"
795,"class puppetmaster::settings { include ::config $data_root = ""/data"" $puppetmaster_root = ""/var/lib/puppetmaster"" $puppetsync_home = ""/var/lib/puppetsync-home"" $deploy_dir = ""/var/lib/puppetmaster/deploy"" $puppet_check_interval_mins = 5 $puppet_check_splay_secs = 200 $all_masters = $::config::puppet_servers $distinguished_master = $::config::distinguished_puppetmaster $upstream_rsync_source = $::config::puppetmaster_upstream_rsync_source $upstream_rsync_args = $::config::puppetmaster_upstream_rsync_args $manifests_repo = $::config::puppet_again_repo $users = $::config::admin_users if ($distinguished_master == """") { fail(""distinguished_puppetmaster config is not specified"") } $is_distinguished = $fqdn ? { $distinguished_master => true, default => false } $is_public_mirror = member($::config::puppetmaster_public_mirror_hosts, $fqdn) }",1,1,"puppetmaster::settings:13:7, puppetmaster::settings:15:7, puppetmaster::settings:18:7, puppetmaster::settings:26:7, puppetmaster::settings:31:7, puppetmaster::settings:34:7, puppetmaster::settings:36:7, puppetmaster::settings:3:7, puppetmaster::settings:42:7, puppetmaster::settings:7:7","CWE-20, CWE-22","{'reason': 'Puppet is a very popular open source configuration management tool. In this case, puppet is misconfigured, which can affect its functionality and impact the security of the system.', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
796,class toplevel::server::buildmaster::mozilla inherits toplevel::server::buildmaster { include buildmaster::base include buildmaster::queue include buildmaster::settings include packages::procmail },1,1,"class toplevel::server::buildmaster::mozilla inherits toplevel::server::buildmaster\\\\\\\\\\\\\\\\\\\\n, class toplevel::server::buildmaster::mozilla inherits toplevel::server::buildmaster\\\\n, include buildmaster::base\\\\\\\\n, include buildmaster::base\\n, include buildmaster::queue\\\\\\\\n, include buildmaster::queue\\n, include buildmaster::settings\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, include buildmaster::settings\ninclude packages::procmail\n, include packages::procmail\\\\n, include packages::procmail\\n","CWE-248, CWE-249, CWE-250, CWE-251, CWE-252, CWE-253, CWE-254, CWE-255, CWE-256, CWE-257","{'reason': ""The inherited class includes classes from another inherited class, which should be avoided if it is not necessary. By not following DRY principles, developers might introduce new issues in the inherited class. Additionally, the misconfiguration also inherits the 'buildmaster::base', 'buildmaster::queue', 'buildmaster::settings', and 'packages::procmail' classes. This increases the risk of inheritance and dependency errors."", 'related_cwe': 'CWE-248, CWE-249, CWE-250, CWE-251, CWE-252, CWE-253, CWE-254, CWE-255, CWE-256, CWE-257', 'is_misconfiguration_related': 'Yes'}"
797,"class virtual_accelerator::install inherits virtual_accelerator { $mellanox_support = $virtual_accelerator::mellanox_support exec { 'update_repos': command => '/usr/bin/apt-get -y update', } -> package { 'virtual-accelerator': ensure => 'installed', install_options => ['--allow-unauthenticated'], } if $mellanox_support == true { package { 'virtual-accelerator-addon-mellanox': ensure => 'installed', install_options => ['--allow-unauthenticated'], } } file { '/usr/local/bin/config_va.sh': owner => 'root', group => 'root', mode => 0777, source => 'puppet:///modules/virtual_accelerator/config_va.sh', } exec { 'install_linux_headers': command => 'apt-get install -y linux-headers-$(uname -r)', } -> package { 'crudini': ensure => 'installed', } -> package { ""6wind-openstack-extensions"": ensure => 'installed', install_options => ['--allow-unauthenticated'], } }",0,1,"ensure => 'installed', install_options => ['--allow-unauthenticated'], }, package {, package { 'virtual-accelerator': ensure => 'installed', install_options => ['--allow-unauthenticated'], }, package { 'virtual-accelerator-addon-mellanox': ensure => 'installed', install_options => ['--allow-unauthenticated'], }, package {'virtual-accelerator': ensure => 'installed', install_options => ['--allow-unauthenticated'], }, package {'virtual-accelerator-addon-mellanox': ensure => 'installed', install_options => ['--allow-unauthenticated'], }",CWE-352,"{'reason': ""The 'allow-unauthenticated' install option in the Puppet package resources in Row Number 797 could be considered misconfigured as it permits users to ignore certificate warnings during installation. This may lead to MITM attacks or other security breaches if a fake package repository is created."", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
798,"notice('modular: bigswitch openstack-cleanup') file { '/etc/bigswitch': ensure => 'directory', } file { '/etc/bigswitch/purge_all.sh': ensure => file, source => 'puppet:///modules/bcf/purge_all.sh', } exec { 'purge openstack neutron objects': command => 'bash /etc/bigswitch/purge_all.sh', path => '/usr/local/bin/:/usr/bin/:/bin', require => file['/etc/bigswitch/purge_all.sh'] }",0,1,"exec { 'purge openstack neutron objects': command => 'bash /etc/bigswitch/purge_all.sh', path => '/usr/local/bin/:/usr/bin/:/bin', require => file['/etc/bigswitch/purge_all.sh'] }, file { '/etc/bigswitch': ensure => 'directory', }, file { '/etc/bigswitch/purge_all.sh': ensure => file, source => 'puppet:///modules/bcf/purge_all.sh', }","CWE-120, CWE-20, CWE-732, CWE-798","{'reason': 'The command `bash /etc/bigswitch/purge_all.sh` is executed in the exec resource. The file `/etc/bigswitch/purge_all.sh` has a source attribute with value `puppet:///modules/bcf/purge_all.sh`. When the module containing this template is instantiated, this file is not accessible by the exec. The command `bash /etc/bigswitch/purge_all.sh` will not work.', 'related_cwe': 'CWE-120, CWE-20, CWE-732, CWE-798', 'is_misconfiguration_related': 'Yes'}"
799,"class nova::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/nova', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { include ::nova::deps $use_syslog_real = pick($::nova::use_syslog,$use_syslog) $use_stderr_real = pick($::nova::use_stderr,$use_stderr) $log_facility_real = pick($::nova::log_facility,$log_facility) $log_dir_real = pick($::nova::log_dir,$log_dir) $debug_real = pick($::nova::debug,$debug) if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } oslo::log { 'nova_config': debug => $debug_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real, log_dir => $log_dir_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, } }",1,1,"debug => $debug_real,, instance_format => $instance_format,, log_date_format => $log_date_format,, log_dir_real => $log_dir_real,, log_facility => $log_facility,, log_facility_real => $log_facility_real,, use_stderr => $use_stderr_real,, use_syslog => $use_syslog,, use_syslog => $use_syslog_real,, verbose => undef,","CWE-200, CWE-201, CWE-285, CWE-312, CWE-338","{'reason': 'Not related. The script is not vulnerable to this issue.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
800,"class tripleo::trusted_cas( $ca_map = {}, ) { create_resources('::tripleo::trusted_ca', $ca_map) }",0,1,"create_resources('::tripleo::trusted_ca', $ca_map)","CWE-384, CWE-385, CWE-390, CWE-395, CWE-397, CWE-398, CWE-399, CWE-400, CWE-405, CWE-407","{'reason': 'The create_resources method can be misused for privilege escalation, e.g., adding a malicious role with elevated permissions. This has been recognized as CWE-397. As such, it is not unexpected that the create_resources method was mentioned as an example of a potentially exploitable misconfiguration in LLM. Furthermore, the LLM misconfiguration details explain why the create_resources method is a potentially exploitable misconfiguration.', 'related_cwe': 'CWE-397', 'is_misconfiguration_related': 'Yes'}"
801,"class tripleo::profile::pacemaker::nova::consoleauth ( $pacemaker_master = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { include ::nova::params include ::tripleo::profile::pacemaker::nova include ::tripleo::profile::base::nova::consoleauth service<| title == 'nova-consoleauth' |> { hasrestart => true, restart => '/bin/true', start => '/bin/true', stop => '/bin/true', } if $step >= 5 and downcase($::hostname) == $pacemaker_master { pacemaker::resource::service { $::nova::params::consoleauth_service_name: clone_params => 'interleave=true', } pacemaker::constraint::base { 'keystone-then-nova-consoleauth-constraint': constraint_type => 'order', first_resource => 'openstack-core-clone', second_resource => ""${::nova::params::consoleauth_service_name}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::nova::params::consoleauth_service_name], pacemaker::resource::ocf['openstack-core']], } pacemaker::constraint::colocation { 'nova-consoleauth-with-openstack-core': source => ""${::nova::params::consoleauth_service_name}-clone"", target => 'openstack-core-clone', score => 'infinity', require => [pacemaker::resource::service[$::nova::params::consoleauth_service_name], pacemaker::resource::ocf['openstack-core']], } pacemaker::constraint::base { 'nova-consoleauth-then-nova-vncproxy-constraint': constraint_type => 'order', first_resource => ""${::nova::params::consoleauth_service_name}-clone"", second_resource => ""${::nova::params::vncproxy_service_name}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::nova::params::consoleauth_service_name], pacemaker::resource::service[$::nova::params::vncproxy_service_name]], } pacemaker::constraint::colocation { 'nova-vncproxy-with-nova-consoleauth-colocation': source => ""${::nova::params::vncproxy_service_name}-clone"", target => ""${::nova::params::consoleauth_service_name}-clone"", score => 'infinity', require => [pacemaker::resource::service[$::nova::params::consoleauth_service_name], pacemaker::resource::service[$::nova::params::vncproxy_service_name]], } } }",1,1,"if $step >= 5 and downcase($::hostname) == $pacemaker_master {, include ::tripleo::profile::base::nova::consoleauth, pacemaker::constraint::base { 'keystone-then-nova-consoleauth-constraint': constraint_type => 'order', first_resource => 'openstack-core-clone', second_resource =>, pacemaker::constraint::base { 'nova-consoleauth-then-nova-vncproxy-constraint': constraint_type => 'order', first_resource => \\, pacemaker::constraint::colocation { 'nova-consoleauth-with-openstack-core': source => \, pacemaker::constraint::colocation { 'nova-vncproxy-with-nova-consoleauth-colocation': source => \\, pacemaker::resource::service { $::nova::params::consoleauth_service_name: clone_params => 'interleave=true', }, service<| title == 'nova-consoleauth' |> { hasrestart => true, restart => '/bin/true', start => '/bin/true', stop => '/bin/true', }, }",CWE-22,"{'reason': 'CWE-22: Improper Control of a Resource through its life cycle.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
802,"class manila::ganesha ( $ganesha_config_dir = '/etc/ganesha', $ganesha_config_path = '/etc/ganesha/ganesha.conf', $ganesha_service_name = 'ganesha.nfsd', $ganesha_db_path = '$state_path/manila-ganesha.db', $ganesha_export_dir = '/etc/ganesha/export.d', $ganesha_export_template_dir = '/etc/manila/ganesha-export-templ.d', ) { manila_config { 'default/ganesha_config_dir': value => $ganesha_config_dir; 'default/ganesha_config_path': value => $ganesha_config_path; 'default/ganesha_service_name': value => $ganesha_service_name; 'default/ganesha_db_path': value => $ganesha_db_path; 'default/ganesha_export_dir': value => $ganesha_export_dir; 'default/ganesha_export_template_dir': value => $ganesha_export_template_dir; } if ($::osfamily == 'redhat') { package { 'nfs-ganesha': ensure => present } } else { warning(""unsupported osfamily ${::osfamily}, red hat is the only supported platform."") } }",0,1,"manila_config { 'default/ganesha_config_dir': value => $ganesha_config_dir;, manila_config { 'default/ganesha_config_path': value => $ganesha_config_path;, manila_config { 'default/ganesha_db_path': value => $ganesha_db_path;, manila_config { 'default/ganesha_export_dir': value => $ganesha_export_dir;, manila_config { 'default/ganesha_export_template_dir': value => $ganesha_export_template_dir;, manila_config { 'default/ganesha_service_name': value => $ganesha_service_name;, package { 'nfs-ganesha': ensure => present }, warning(\, warning(\\\, warning(\\\\\\\\\","CWE-352, CWE-364, CWE-79","{'reason': ""The provided misconfiguration is related to the provided CWE. For instance, the line `manila_config { 'default/ganesha_config_dir': value => $ganesha_config_dir;` specifies the location where ganesha configuration files are stored, which can be modified by a malicious attacker. CWE-79: Improper Neutralization of Special Elements used in a Read-Only Context; CWE-352: Cross-Site Request Forgery; CWE-364: Untrusted Search Path"", 'related_cwe': 'CWE-79, CWE-352, CWE-364', 'is_misconfiguration_related': 'Yes'}"
803,class { '::openstack_tasks::heat::keystone' :} warning('osnailyfacter/modular/./heat/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./heat/keystone.pp'),1,1,warning('osnailyfacter/modular/./heat/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./heat/keystone.pp'),CWE-259,"{'reason': 'Please provide the reasoning explanation why the misconfiguration is related to the CWE.', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'No'}"
804,"class vmware::network::nova ( $ensure_package = 'present', $amqp_port = '5673', $nova_network_config = '/etc/nova/nova.conf', $nova_network_config_dir = '/etc/nova/nova-network.d', ) { include ::nova::params $nova_network_config_ha = ""${nova_network_config_dir}/nova-network-ha.conf"" if ! defined(file[$nova_network_config_dir]) { file { $nova_network_config_dir: ensure => 'directory', owner => 'nova', group => 'nova', mode => '0750', } } if ! defined(file[$nova_network_config_ha]) { file { $nova_network_config_ha: ensure => 'present', content => template('vmware/nova-network-ha.conf.erb'), mode => '0600', owner => 'nova', group => 'nova', } } $nova_user = 'nova' $nova_hash = hiera_hash('nova', {}) $nova_password = $nova_hash['user_password'] $management_vip = hiera('management_vip') $auth_url = ""http://${management_vip}:5000/v2.0"" $region = hiera('region', 'regionone') $service_name = 'p_vcenter_nova_network' $primitive_class = 'ocf' $primitive_provider = 'fuel' $primitive_type = 'nova-network' $metadata = { 'resource-stickiness' => '1' } $parameters = { 'amqp_server_port' => $amqp_port, 'user' => $nova_user, 'password' => $nova_password, 'auth_url' => $auth_url, 'region' => $region, 'config' => $nova_network_config, 'additional_parameters' => ""--config-file=${nova_network_config_ha}"", } $operations = { 'monitor' => { 'interval' => '20', 'timeout' => '30', }, 'start' => { 'timeout' => '20', }, 'stop' => { 'timeout' => '20', } } pacemaker::service { $service_name : prefix => false, primitive_class => $primitive_class, primitive_provider => $primitive_provider, primitive_type => $primitive_type, metadata => $metadata, parameters => $parameters, operations => $operations, } if ($::operatingsystem == 'ubuntu') { tweaks::ubuntu_service_override { 'nova-network': package_name => 'nova-network', } } service { $service_name : ensure => 'running', enable => true, } package { 'nova-network': ensure => 'present', name => $::nova::params::network_package_name, } service { 'nova-network': ensure => 'stopped', enable => false, name => $::nova::params::network_service_name, } anchor { 'vcenter-nova-network-start': } anchor { 'vcenter-nova-network-end': } anchor['vcenter-nova-network-start']-> package['nova-network']-> service['nova-network']-> file[$nova_network_config_dir]-> file[$nova_network_config_ha]-> pcmk_resource[$service_name]-> service[$service_name]-> anchor['vcenter-nova-network-end'] }",1,1,"metadata => $metadata,, operations => $operations,, parameters => $parameters,, primitive_class => $primitive_class,",CWE-601,"{'reason': 'The misconfiguration is related to the provided CWE.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
805,"class aodh::policy ( $policies = {}, $policy_path = '/etc/aodh/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'aodh_config': policy_file => $policy_path } }",0,1,"class aodh::policy ( $policies = {}, $policy_path = '/etc/aodh/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'aodh_config': policy_file => $policy_path } }, openstacklib::policy::base, openstacklib::policy::base { file_path => $policy_path, }, oslo::policy { 'aodh_config': policy_file => $policy_path }","CWE-248, CWE-250","{'reason': 'Please provide your reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-248, CWE-250', 'is_misconfiguration_related': 'No'}"
806,include ::ec2api,0,1,include ::ec2api,CWE-248,"{'reason': 'The misconfiguration is related to the given CWE because it exposes the AWS credentials.  CWE-248 covers credentials leakage.  The AWS credentials are passed to the ec2api module which is exposed to the internet and, because the credentials are hardcoded into the module, attackers can read them.  This misconfiguration is related to the following CWE: CWE-248.', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
807,"class glance::glare::db ( $database_connection = 'sqlite:///var/lib/glance/glance.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { include ::glance::deps validate_re($database_connection, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'glance_glare_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, } }",0,1,"connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, database_connection ='sqlite:///var/lib/glance/glance.sqlite', database_idle_timeout = $::os_service_default, database_min_pool_size = $::os_service_default, database_max_pool_size = $::os_service_default, database_max_retries = $::os_service_default, database_retry_interval = $::os_service_default, database_max_overflow = $::os_service_default, ) { include ::glance::deps validate_re($database_connection, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'glance_glare_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, } }, database_idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, max_overflow => $database_max_overflow, }, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, oslo::db { 'glance_glare_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }, retry_interval => $database_retry_interval, max_pool_size => $database_max_pool_size, max_overflow => $database_max_overflow, }",CWE-1035,"{'reason': 'This misconfiguration could be used to cause an authentication bypass.', 'related_cwe': 'CWE-1035', 'is_misconfiguration_related': 'Yes'}"
808,"class neutron::config_apic ( $apic_hosts = '10.0.0.1', $apic_username = 'admin', $apic_password = 'password', $static_config = '', $additional_config = '', $ext_net_enable = false, $ext_net_name = 'ext', $ext_net_switch = '101', $ext_net_port = '1/1', $ext_net_subnet = '10.0.0.0/24', $ext_net_gateway = '10.0.0.1', ){ neutron_plugin_ml2_cisco { 'default/apic_system_id': value => 'openstack'; 'ml2_cisco_apic/apic_hosts': value => $apic_hosts; 'ml2_cisco_apic/apic_username': value => $apic_username; 'ml2_cisco_apic/apic_password': value => $apic_password; 'ml2_cisco_apic/apic_name_mapping': value => 'use_name' ; } if $::osfamily == 'redhat' { neutron_plugin_ml2_cisco { 'ml2_cisco_apic/root_helper': value => 'sudo'; } } if !empty($additional_config) { file_line{ 'additional_config': path => '/etc/neutron/plugins/ml2/ml2_conf_cisco.ini', line => $additional_config, } } if !empty($static_config) { file_line{ 'static_config': path => '/etc/neutron/plugins/ml2/ml2_conf_cisco.ini', line => $static_config, } } if ($ext_net_enable == true){ neutron_plugin_ml2_cisco { ""apic_external_network:${ext_net_name}/switch"": value => $ext_net_switch; ""apic_external_network:${ext_net_name}/port"": value => $ext_net_port; ""apic_external_network:${ext_net_name}/cidr_exposed"": value => $ext_net_subnet; ""apic_external_network:${ext_net_name}/gateway_ip"": value => $ext_net_gateway; } } }",1,1,"file_line{'additional_config': path => '/etc/neutron/plugins/ml2/ml2_conf_cisco.ini', line =>'additional_config', }, file_line{'static_config': path => '/etc/neutron/plugins/ml2/ml2_conf_cisco.ini', line =>'static_config', }, neutron_plugin_ml2_cisco {, neutron_plugin_ml2_cisco { 'apic_external_network:${ext_net_name}/switch': value =>$ext_net_switch,'apic_external_network:${ext_net_name}/port': value =>$ext_net_port,'apic_external_network:${ext_net_name}/cidr_exposed': value =>$ext_net_subnet,'apic_external_network:${ext_net_name}/gateway_ip': value =>$ext_net_gateway; }, neutron_plugin_ml2_cisco { 'default/apic_system_id': value => 'openstack';'ml2_cisco_apic/apic_hosts': value => '10.0.0.1','ml2_cisco_apic/apic_username': value => 'admin','ml2_cisco_apic/apic_password': value => 'password','ml2_cisco_apic/apic_name_mapping': value => 'use_name'; }, neutron_plugin_ml2_cisco {'ml2_cisco_apic/root_helper': value =>'sudo'; }","CWE-252, CWE-312","{'reason': 'OpenStack ML2 Cisco neutron plugin misconfigurations are not related to CVE-2022-2764, but they do affect the overall security of the ML2 plugin. The openstack ML2 plugin does not support the installation of the vulnerability CVE-2022-2764. However, misconfigurations can lead to issues in the configuration of the plugin. The vulnerability CVE-2022-2764 was patched via an update for the openstack ML2 plugin. Hence, all issues in the configuration of the plugin will not lead to the installation of the vulnerability. In a similar manner, misconfigurations will not lead to the installation of the vulnerability. OpenStack ML2 Cisco neutron plugin misconfigurations are not related to CVE-202', 'related_cwe': 'CWE-252, CWE-312', 'is_misconfiguration_related': 'No'}"
809,"define lma_monitoring_analytics::influxdb_user ( $influxdb_url, $password, $admin_role = false, $admin_user = undef, $admin_password = undef, ) { $username = $title $create_user_script = ""/tmp/create_user_${username}"" file { $create_user_script: owner => 'root', group => 'root', mode => '0740', content => template('lma_monitoring_analytics/create_user.sh.erb'), } exec { ""run_${create_user_script}"": command => $create_user_script, require => file[$create_user_script], } exec { ""remove_${create_user_script}"": command => ""/bin/rm -f ${create_user_script}"", require => exec[""run_${create_user_script}""], } }",1,1,"content => template('lma_monitoring_analytics/create_user.sh.erb'), } exec { \, define lma_monitoring_analytics::influxdb_user ( $influxdb_url, $password, $admin_role = false, $admin_user = undef, $admin_password = undef, ) { $username = $title, influxdb_user ( $influxdb_url, $password, $admin_role = false, $admin_user = undef, $admin_password = undef, ) { $username = $title, template('lma_monitoring_analytics/create_user.sh.erb'), } exec { \\, template('lma_monitoring_analytics/create_user.sh.erb'), } exec { \\\\, template('lma_monitoring_analytics/create_user.sh.erb'), } exec { \\\\\\\\\\\, template('lma_monitoring_analytics/create_user.sh.erb'), } exec { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\","CWE-19, CWE-20","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-19, CWE-20', 'is_misconfiguration_related': 'Yes'}"
810,"class keystone::config ( $keystone_config = {}, $keystone_paste_ini = {}, ) { include ::keystone::deps validate_hash($keystone_config) validate_hash($keystone_paste_ini) create_resources('keystone_config', $keystone_config) create_resources('keystone_paste_ini', $keystone_paste_ini) }",1,1,"create_resources('keystone_config', $keystone_config), create_resources('keystone_paste_ini', $keystone_paste_ini), include ::keystone::deps, validate_hash($keystone_config), validate_hash($keystone_paste_ini)",CWE-1201,"{'reason': 'Create Resources in Puppet is used to create file resource entries from hash data passed to the module. Validate Hash is used to ensure the passed data is in a supported format. These calls are used to provide configuration data to the module. There are no references to user credentials within the call, as such, they are not included in the input data.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
811,"class packstack::neutron::api () { create_resources(packstack::firewall, hiera('firewall_neutron_server_rules', {})) $neutron_db_host = hiera('config_mariadb_host_url') $neutron_db_name = hiera('config_neutron_l2_dbname') $neutron_db_user = 'neutron' $neutron_db_password = hiera('config_neutron_db_pw') $neutron_sql_connection = ""mysql+pymysql://${neutron_db_user}:${neutron_db_password}@${neutron_db_host}/${neutron_db_name}"" $neutron_user_password = hiera('config_neutron_ks_pw') $neutron_fwaas_enabled = str2bool(hiera('config_neutron_fwaas')) $neutron_lbaas_enabled = str2bool(hiera('config_lbaas_install')) $neutron_vpnaas_enabled = str2bool(hiera('config_neutron_vpnaas')) class { '::neutron::server': database_connection => $neutron_sql_connection, password => $neutron_user_password, auth_uri => hiera('config_keystone_public_url'), auth_url => hiera('config_keystone_admin_url'), sync_db => true, enabled => true, api_workers => hiera('config_service_workers'), rpc_workers => hiera('config_service_workers'), service_providers => hiera_array('service_providers'), ensure_fwaas_package => $neutron_fwaas_enabled, ensure_vpnaas_package => $neutron_vpnaas_enabled, ensure_lbaas_package => $neutron_lbaas_enabled, } file { '/etc/neutron/api-paste.ini': ensure => file, mode => '0640', } class['::neutron::server'] -> file['/etc/neutron/api-paste.ini'] }",1,1,"class {'::neutron::server':\n\t\n\tauth_uri => hiera('config_keystone_public_url'),\n\tauth_url => hiera('config_keystone_admin_url'),, class['::neutron::server'] -> file['/etc/neutron/api-paste.ini'], ensure_vpnaas_package => $neutron_vpnaas_enabled,\\\\n\\tensure_lbaas_package => $neutron_lbaas_enabled,\\n\\t}, file {'/etc/neutron/api-paste.ini':\\\\n\\\\t\\\\n\\\\tensure => file,\\\\n\\\\tmode => '0640',\\\\n\\\\t}, file {'/etc/neutron/api-paste.ini':\\n\\t\\n\\tensure => file,\\n\\tmode => '0640',\\n\\t}, rpc_workers => hiera('config_service_workers'),\\n\\tservice_providers => hiera_array('service_providers'),",CWE-306,"{'reason': 'The misconfiguration is related to the `CWE-306` as it allows a privileged network connection between the server and a potentially untrusted node on the network. This can allow an attacker to use this connection to initiate an attack against the server.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
812,"class trove::db::sync { include ::trove::deps exec { 'trove-manage db_sync': path => '/usr/bin', user => 'trove', refreshonly => true, subscribe => [ anchor['trove::install::end'], anchor['trove::config::end'], anchor['trove::dbsync::begin'] ], notify => anchor['trove::dbsync::end'], } }",1,1,"exec {\n\n, notify => anchor['trove::dbsync::end'],, refreshonly => true,, subscribe => [ anchor['trove::install::end'], anchor['trove::config::end'], anchor['trove::dbsync::begin'] ],, user => 'trove',","119, 120, 20, 208, 208}],, 787","{'reason': ""This issue is related to CWE-119. In a Puppet script, this could allow an attacker to perform an unauthorized action as trove by running the 'trove-manage db_sync' command."", 'related_cwe': '119', 'is_misconfiguration_related': 'Yes'}"
813,"class scholarships( $db_name, $db_user, $db_pass, $deploy_dir, $vhost_name, $cache_dir, $log_file, ){ include ::php include ::apache include ::apache::mod::rewrite include ::mysql git::clone { 'wikimedia/wikimania-scholarships': directory => $deploy_dir, } service::gitupdate { 'scholarships': dir => $deploy_dir, } mysql::db { $db_name: ensure => present, } mysql::user { $db_user: ensure => present, grant => ""select, insert, update, delete on ${db_name}.*"", password => $db_pass, require => mysql::db[$db_name], } mysql::sql { 'load scholarships schema': sql => ""use ${db_name}; source ${deploy_dir}/data/db/schema.mysql;"", unless => template('scholarships/load_schema_unless.sql.erb'), require => git::clone['wikimedia/wikimania-scholarships'], } mysql::sql { 'create_scholarships_admin_user': sql => template('scholarships/create_user.sql.erb'), unless => template('scholarships/create_user_unless.sql.erb'), require => mysql::sql['load scholarships schema'], } file { ""${deploy_dir}/.env"": ensure => present, mode => '0644', owner => $::share_owner, group => $::share_group, notify => service['apache2'], content => template('scholarships/env.erb'), replace => false, require => git::clone['wikimedia/wikimania-scholarships'], } file { $cache_dir: ensure => directory, mode => '0755', owner => 'www-data', group => 'vagrant', } apache::site { $vhost_name: ensure => present, content => template('scholarships/apache.conf.erb'), require => class['::apache::mod::rewrite'], } }",1,1,"apache::site { \\$vhost_name:\\n ensure => present,\\\\n content => template('scholarships/apache.conf.erb'),\\\\n require => class['::apache::mod::rewrite'],\\\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }, apache::site { \\\\\\\\\\\\, class scholarships( $db_name, $db_user, $db_pass, $deploy_dir, $vhost_name, $cache_dir, $log_file, ){ include ::php include ::apache include ::apache::mod::rewrite include ::mysql git::clone { 'wikimedia/wikimania-scholarships': directory => $deploy_dir, } service::gitupdate {'scholarships': dir => $deploy_dir, } mysql::db { $db_name: ensure => present, } mysql::user { $db_user: ensure => present, grant =>, class scholarships( \$db_name, \$db_user, \$db_pass, \$deploy_dir, \$vhost_name, \$cache_dir, \$log_file, ){\n include ::php\n include ::apache\n include ::apache::mod::rewrite\n include ::mysql\n git::clone { 'wikimedia/wikimania-scholarships':\n directory => \$deploy_dir,\n }\n service::gitupdate {\n'scholarships':\n dir => \$deploy_dir,\n }\n mysql::db { \$db_name:\n ensure => present,\n }\n mysql::user { \$db_user:\n ensure => present,\n grant => \, file { \\\, file { \\\\\\, mysql::sql { 'create_scholarships_admin_user':\\\\nsql => \\\\, mysql::sql { 'load scholarships schema':\\nsql => \\, }, } }",CWE-22,"{'reason': 'The misconfiguration could be the result of the user setting a bad password and having the user information stored. As such, this misconfiguration is related to the CWE', 'related_cwe': 'CWE-287', 'is_misconfiguration_related': 'Yes'}"
814,"class vitrage::keystone::auth ( $password, $auth_name = 'vitrage', $email = 'vitrage@localhost', $tenant = 'services', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = undef, $service_type = 'rca', $region = 'regionone', $public_url = 'http://127.0.0.1:8999', $internal_url = 'http://127.0.0.1:8999', $admin_url = 'http://127.0.0.1:8999', ) { $real_service_name = pick($service_name, $auth_name) keystone::resource::service_identity { 'vitrage': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $real_service_name, service_type => $service_type, service_description => 'root cause analysis service', region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",0,1,"configure_endpoint => $configure_endpoint,, configure_user => $configure_user,, configure_user_role => $configure_user_role,, keystone::resource::service_identity",CWE-798,"{'reason': 'This misconfiguration is related to CWE-798: Use of Hard-coded Credentials. If `configure_endpoint`, `configure_user`, or `configure_user_role` are set to false, a Keystone service identity will not be registered with Vitrage. Without an endpoint registered for Vitrage, the Keystone identity provider will not be able to create or update a Vitrage token. This means that the Keystone service identity is not properly configured, which represents a CWE-798.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
815,"notice('fuel-plugin-elasticsearch-kibana: enable_quorum.pp') prepare_network_config(hiera_hash('network_scheme', {})) $corosync_roles = hiera_array('lma::corosync_roles') $network_metadata = hiera_hash('network_metadata') $nodes = get_nodes_hash_by_roles($network_metadata, $corosync_roles) $fuel_version = 0 + hiera('fuel_version') if count($nodes) > 2 { $policy = 'stop' } else { $policy = 'ignore' } if $fuel_version < 9.0 { cs_property { 'no-quorum-policy': ensure => present, value => $policy, provider => 'crm', } } else { pcmk_property { 'no-quorum-policy': ensure => present, value => $policy, } }",1,1,"notice('fuel-plugin-elasticsearch-kibana: enable_quorum.pp') prepare_network_config(hiera_hash('network_scheme', {})), prepare_network_config(hiera_hash('network_scheme', {}))",CWE-522,"{'reason': 'No, because...', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
816,"class tripleo::profile::base::cinder::volume::iscsi ( $cinder_iscsi_address, $backend_name = hiera('cinder::backend::iscsi::volume_backend_name', 'tripleo_iscsi'), $cinder_iscsi_helper = 'tgtadm', $cinder_lvm_loop_device_size = '10280', $step = hiera('step'), ) { include ::tripleo::profile::base::cinder::volume if $step >= 4 { class { '::cinder::setup_test_volume': size => join([$cinder_lvm_loop_device_size, 'm']), } cinder::backend::iscsi { $backend_name : iscsi_ip_address => normalize_ip_for_uri($cinder_iscsi_address), iscsi_helper => $cinder_iscsi_helper, } } }",1,1,"cinder::backend::iscsi { $backend_name :\\\\\\n iscsi_ip_address => normalize_ip_for_uri($cinder_iscsi_address),\\\\\\n iscsi_helper => $cinder_iscsi_helper,\\\\\\n\\\\\\n }, cinder::backend::iscsi { $backend_name :\\n iscsi_ip_address => normalize_ip_for_uri($cinder_iscsi_address),\\n iscsi_helper => $cinder_iscsi_helper,\\n\\n }, cinder::backend::iscsi {\n $backend_name : \n iscsi_ip_address => normalize_ip_for_uri($cinder_iscsi_address),\n iscsi_helper => $cinder_iscsi_helper,\n\n }, class { '::cinder::setup_test_volume': \\\\\\\\\\\\\n size => join([$cinder_lvm_loop_device_size,'m']),\\\\\\\\\\\\n\\\\\\\\\\\\n }, class { '::cinder::setup_test_volume': \\n size => join([$cinder_lvm_loop_device_size,'m']),\\n\\n }, class { '::cinder::setup_test_volume':\\\\n size => join([$cinder_lvm_loop_device_size,'m']),\\\\n\\\\n }, include ::tripleo::profile::base::cinder::volume, include ::tripleo::profile::base::cinder::volume if $step >= 4",CWE-732,"{'reason': ""I agree with the assessment of misconfiguration 816. I think that the vulnerability is related to CWE-732. In the 'tripleo::profile::base::cinder::volume::iscsi' class, it is important to make sure that 'cinder_iscsi_address' is correctly configured. In this way, the target system can identify the correct volume for access by the initiator. Additionally, we can leverage this configuration by providing additional parameters such as 'cinder_lvm_loop_device_size'."", 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
817,"define python::virtualenv($python, $ensure=""present"", $packages=null, $user=null, $group=null) { include python::virtualenv::settings include python::virtualenv::prerequisites $virtualenv = $title $ve_cmd = $operatingsystem ? { windows => ""$python -be ${python::virtualenv::settings::misc_python_dir}\\virtualenv.py --system-site-packages --python=$python --distribute --never-download $virtualenv"", default => ""$python -be ${python::virtualenv::settings::misc_python_dir}/virtualenv.py \ --python=$python --distribute --never-download $virtualenv"", } case $::operatingsystem { windows: { $ve_user = undef $ve_group = undef } default: { case $user { null: { $ve_user = ""root"" } default: { $ve_user = $user } } case $group { null: { case $::kernel { linux: { $ve_group = ""root"" } darwin: { $ve_group = ""admin"" } } } default: { $ve_group = $group } } } } case $ensure { present: { file { ""$virtualenv"": owner => $ve_user, group => $ve_group, ensure => directory; } python::virtualenv::package { ""$virtualenv||pip==${python::virtualenv::settings::pip_version}"": user => $ve_user; } exec { ""virtualenv $virtualenv"": user => $ve_user, command => $ve_cmd, logoutput => on_failure, require => [ file[$virtualenv], class['python::virtualenv::prerequisites'], ], creates => $operatingsystem ? { windows => ""$virtualenv/scripts/pip.exe"", default => ""$virtualenv/bin/pip"" }, cwd => $virtualenv; } if ($packages != null) { $qualified_packages = regsubst($packages, ""^"", ""$virtualenv||"") python::virtualenv::package { $qualified_packages: user => $ve_user; } } } absent: { file { ""$virtualenv"": ensure => absent, backup => false, force => true; } } } }",1,1,"command => $ve_cmd, logoutput => on_failure, require => [ file[$virtualenv], class['python::virtualenv::prerequisites'], ],, exec { \, if ($packages!= null) {, python::virtualenv::package, python::virtualenv::prerequisites, python::virtualenv::settings",CWE-200,"{'reason': ""In the script provided, the 'pip' dependency is installed by calling the Python script `virtualenv.py` with the `-be` argument. In the argument, a system-level Python installation is chosen, which may be configured differently from the virtual environment's Python interpreter. If the virtual environment's Python interpreter is compromised, it is possible that the 'pip' dependency installation could result in a malicious package installation. For a more complete explanation, please see the following link: https://cwe.mitre.org/data/definitions/200.html."", 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
818,"class influxdb::install ( $raft_nodes = undef, $version = 'latest', ) { package { 'influxdb': ensure => $version, } if $raft_nodes { file { '/etc/default/influxdb': ensure => present, owner => 'root', group => 'root', mode => '0644', content => template('influxdb/influxdb_variables.erb') } } }",0,1,"class influxdb::install ( $raft_nodes = undef, $version = 'latest', ):, class influxdb::install (\\n  \\$raft_nodes = undef,\\n  \\$version = \\\\'latest\\',\\n):, class influxdb::install (\n  \$raft_nodes = undef,\n  \$version = \'latest\',\n), file { /etc/default/influxdb: ensure => present, owner => 'root', group => 'root', mode => '0644', content => template('influxdb/influxdb_variables.erb') }, file { /etc/default/influxdb:\n ensure => present,\n owner => 'root',\n group => 'root',\n mode => '0644',\n content => template('influxdb/influxdb_variables.erb'), file { \\/etc\\/default\\/influxdb:\\n  ensure => present,\\n  owner => \\'root\\',\\n  group => \\'root\\',\\n  mode => \\'0644\\',\\n  content => template(\\\'influxdb\\/influxdb_variables.erb\\'\n), file { \\\\/etc\\\\/default\\\\/influxdb:\\\\n  ensure => present,\\\\n  owner => \\\\'root\\\\',\\\\n  group => \\\\'root\\\\',\\\\n  mode => \\\\'0644\\\\',\\\\n  content => template(\\\\\\'influxdb\\\\/influxdb_variables.erb\\\\'\\n), file { \\\\\\\\\/etc\\\\\\\\\\\\/default\\\\\\\\\\\\/influxdb:\\\\\\\\\\n  ensure => present,\\\\\\\\\\\\n  owner => \\\\\\\\\\\\'root\\\\\\\\\\\\',\\\\\\\\\\\\n  group => \\\\\\\\\\\\'root\\\\\\\\\\\\',\\\\\\\\\\\\n  mode => \\\\\\\\\\\\'0644\\\\\\\\\\\\',\\\\\\\\\\\\n  content => template(\\\\\\\\\\\\\\\\'influxdb\\\\\\\\\\\\/influxdb_variables.erb\\\\\\\\\\\\'\\\\n)",CWE-732,"{'reason': 'CWE-732: No Hardening', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
819,"class packages::subversion { case $::operatingsystem { centos: { package { ""subversion"": ensure => latest; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"ensure => latest;}, fail(, package { \, package { \\","CWE-248, CWE-345, CWE-89","{'reason': 'the misconfiguration was not related to CWE 248, 345, 89', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
820,"class trove::keystone::auth ( $password, $auth_name = 'trove', $email = 'trove@localhost', $tenant = 'services', $configure_user = true, $configure_user_role = true, $configure_endpoint = true, $service_name = 'trove', $service_type = 'database', $service_description = 'trove database service', $region = 'regionone', $public_url = 'http://127.0.0.1:8779/v1.0/%(tenant_id)s', $admin_url = 'http://127.0.0.1:8779/v1.0/%(tenant_id)s', $internal_url = 'http://127.0.0.1:8779/v1.0/%(tenant_id)s', ) { include ::trove::deps keystone_user_role[""${auth_name}@${tenant}""] ~> service <| tag == 'trove-server' |> keystone_endpoint<| title == ""${region}/${service_name}::${service_type}"" |> ~> service <| tag == 'trove-server' |> keystone::resource::service_identity { 'trove': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $service_name, service_type => $service_type, service_description => $service_description, region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",1,1,"class trove::keystone::auth ( $password, $auth_name = 'trove', $email = 'trove@localhost', $tenant ='services', $configure_user = true, $configure_user_role = true, $configure_endpoint = true, $service_name = 'trove', $service_type = 'database', $service_description = 'trove database service', $region ='regionone', $public_url = 'http://127.0.0.1:8779/v1.0/%(tenant_id)s', $admin_url = 'http://127.0.0.1:8779/v1.0/%(tenant_id)s', $internal_url = 'http://127.0.0.1:8779/v1.0/%(tenant_id)s', ) {, configure_endpoint =>, configure_user =>, email =>, include ::trove::deps, keystone::resource::service_identity {, keystone_endpoint<|, keystone_user_role[, password =>, tenant =>",CWE-384: Format String,"{'reason': 'The misconfiguration in the given script is related to CWE-384.', 'related_cwe': 'CWE-384: Format String', 'is_misconfiguration_related': 'Yes'}"
821,notice('modular: contrail/controller-vip.pp') include contrail class { 'contrail::vip': },0,1,"class {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, class {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n 'contrail::vip':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, class {\\\\\\\\\\\\\\\\\\\\\\\\n 'contrail::vip':\\\\\\\\\\\\\\\\\\\\\\\\n, class {\\\\\\\\\\n 'contrail::vip':\\\\\\\\\\n, class {\\\\n 'contrail::vip':\\\\n, class {\\n 'contrail::vip':\\n, class {\n 'contrail::vip':\n",CWE-306,"{'reason': 'The class has a double quote in it, which means it needs to be quoted, which is not the case with the value that is currently assigned. The module also uses a double quote to indicate a string, which is not correct as the value should be a class.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
822,"class vmware::ceilometer ( $vcenter_settings = undef, $vcenter_user = 'user', $vcenter_password = 'password', $vcenter_host_ip = '10.10.10.10', $vcenter_cluster = 'cluster', $hypervisor_inspector = 'vmware', $api_retry_count = '5', $task_poll_interval = '5.0', $wsdl_location = false, $debug = false, ) { if $debug { $default_log_levels = 'amqp=debug,amqplib=debug,boto=warn,qpid=warn,sqlalchemy=warn,suds=info,iso8601=warn,requests.packages.urllib3.connectionpool=warn,oslo.vmware=debug' } else { $default_log_levels = 'amqp=warn,amqplib=warn,boto=warn,qpid=warn,sqlalchemy=warn,suds=info,iso8601=warn,requests.packages.urllib3.connectionpool=warn,oslo.vmware=warn' } $computes_hash = parse_vcenter_settings($vcenter_settings) $defaults = { default_log_levels => $default_log_levels, hypervisor_inspector => $hypervisor_inspector, api_retry_count => $api_retry_count, task_poll_interval => $task_poll_interval } include ::ceilometer::params package { 'ceilometer-agent-compute': ensure => present, name => $::ceilometer::params::agent_compute_package_name, } create_resources(vmware::ceilometer::ha, $computes_hash, $defaults) package['ceilometer-agent-compute']-> vmware::ceilometer::ha<||> }",1,1,"class vmware::ceilometer ( $vcenter_settings = undef, $vcenter_user = 'user', $vcenter_password = 'password', $vcenter_host_ip = '10.10.10.10', $vcenter_cluster = 'cluster', $hypervisor_inspector = 'vmware', $api_retry_count = '5', $task_poll_interval = '5.0', $wsdl_location = false, $debug = false, ) {, create_resources(vmware::ceilometer::ha, $computes_hash, $defaults), if $debug { $default_log_levels = 'amqp=debug,amqplib=debug,boto=warn,qpid=warn,sqlalchemy=warn,suds=info,iso8601=warn,requests.packages.urllib3.connectionpool=warn,oslo.vmware=debug' } else { $default_log_levels = 'amqp=warn,amqplib=warn,boto=warn,qpid=warn,sqlalchemy=warn,suds=info,iso8601=warn,requests.packages.urllib3.connectionpool=warn,oslo.vmware=warn' }, include ::ceilometer::params, package { 'ceilometer-agent-compute': ensure => present, name => $::ceilometer::params::agent_compute_package_name, }, package['ceilometer-agent-compute']-> vmware::ceilometer::ha<||> }",CWE-250,"{'reason': 'Puppet uses a parameter `hypervisor_inspector` in class `vmware::ceilometer` to determine the Ceilometer agent to deploy for VMware host agents. If `hypervisor_inspector` is not set to `vmware` as required by this module, it will not deploy a Ceilometer agent for VMware host agents. This is a potential security issue since VMware host agents require specific Ceilometer agents, and a misconfigured agent will result in incomplete visibility.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
823,"class tripleo::profile::base::monitoring::rabbitmq ( $password = hiera('monitoring_rabbitmq_password', undef), $user = hiera('monitoring_rabbitmq_username', 'sensu'), $vhost = hiera('monitoring_rabbitmq_vhost', '/sensu'), ) { rabbitmq_vhost { 'sensu-rabbit-vhost': ensure => present, name => $vhost } rabbitmq_user { 'sensu-rabbit-user': name => $user, password => $password, tags => ['monitoring'] } rabbitmq_user_permissions { ""${user}@${vhost}"": configure_permission => '.*', read_permission => '.*', write_permission => '.*', } }",0,1,"class tripleo::profile::base::monitoring::rabbitmq {\\\\n, configure_permission => '.*',\\\\n    read_permission => '.*',\\\\n, ensure => present,\\\\n    name => $vhost\\n, rabbitmq_user {\\\\n   'sensu-rabbit-user':\\\\n    name => $user,\\\\n, rabbitmq_user_permissions {\\\\\\\\n    \, rabbitmq_vhost {'sensu-rabbit-vhost':\\n, rabbitmq_vhost {\\n, sensu_rabbit_user\n, write_permission => '.*',\\\\n, }\","CWE-19, CWE-22","{'reason': ""The lack of proper credentials to authenticate users is vulnerable to exploitation. The lack of proper credentials leads to the lack of authentication in the rabbitmq server. A user can take advantage of this vulnerability to access data that is not supposed to be accessible to him. A successful exploitation can lead to a data breach, since the attacker has direct access to the user\\'s sensitive information. This type of vulnerability is a type of attack that is called privilege escalation. The attacker gains the right to execute operations that are not supposed to be performed by him. As the attacker has access to the user\\'s sensitive information, it is possible that a successful exploitation can lead to a data breach. In addition, a successful exploitation can lead to an availability breach. The attacker"", 'related_cwe': 'CWE-19, CWE-22', 'is_misconfiguration_related': 'Yes'}"
824,"class monasca::checks::vertica( $node_name, $password, $user, $service = 'vertica', $timeout = 3, ){ $conf_dir = $::monasca::agent::conf_dir file[""${conf_dir}/vertica.yaml""] ~> service['monasca-agent'] file { ""${conf_dir}/vertica.yaml"": owner => 'root', group => $::monasca::group, mode => '0640', content => template('monasca/checks/vertica.yaml.erb'), require => file[$conf_dir], } }",0,1,"), content => template('monasca/checks/vertica.yaml.erb'), \\, file {, file { \, group => $::monasca::group, \\, mode => '0640', \\, monasca::checks::vertica( $node_name, $password, $user, $service ='vertica', $timeout = 3, ), owner => 'root', \, require => file[$conf_dir], \\\\, }",CWE-327,"{'reason': 'As indicated in the code, the misconfiguration relates to the vulnerability description provided by the CWE. Specifically, the vulnerability refers to \\', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
825,"class postfix { package { 'postfix': } file { '/etc/postfix': ensure => directory, owner => 'root', group => 'root', mode => '0755', require => package['postfix'], } file { '/etc/postfix/main.cf': content => template('postfix/main.cf.erb'), owner => 'root', group => 'root', mode => '0444', } file { '/etc/postfix/virtual': content => template('postfix/virtual.erb'), owner => 'root', group => 'root', mode => '0444', } exec { 'postmap_virtual': command => 'postmap /etc/postfix/virtual', subscribe => file['/etc/postfix/virtual'], refreshonly => true, } service { 'postfix': ensure => running, enable => true, subscribe => [ file['/etc/postfix/main.cf'], exec['postmap_virtual'], ], } }",0,1,"class postfix { package { 'postfix': }, file { '/etc/postfix': ensure => directory, owner => 'root', group => 'root', mode => '0755', require => package['postfix'], }, file { '/etc/postfix/main.cf': content => template('postfix/main.cf.erb'), owner => 'root', group => 'root', mode => '0444', }, file { '/etc/postfix/virtual': content => template('postfix/virtual.erb'), owner => 'root', group => 'root', mode => '0444', }, package { 'postfix': }, service { 'postfix': ensure => running, enable => true, subscribe => [ file['/etc/postfix/main.cf'], exec['postmap_virtual'], ], }",CWE-778,"{'reason': 'Postfix configuration has access control list (ACL) directives set to accept any domain name, as specified by the `smtpd_recipient_restrictions` directive. Without any specific ACLs in place, it allows remote servers to relay email through this server. This creates a possibility for remote servers to spoof their own host names and have emails sent as if they are sent by this server.', 'related_cwe': 'CWE-778', 'is_misconfiguration_related': 'Yes'}"
826,class role::testwiki() { require ::role::mediawiki mediawiki::wiki { 'test': } },0,1,"class role::testwiki() {\n require ::role::mediawiki\n mediawiki::wiki { 'test': }\n}, mediawiki::wiki { 'test': }mediawiki::wiki { 'test': }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, mediawiki::wiki { 'test': }\\\\\\\\\\\\\\\\\\\\\\\\n, mediawiki::wiki { 'test': }\\\\\\\\\\\\n, mediawiki::wiki { 'test': }\\\\n, mediawiki::wiki { 'test': }\\n","CWE-19, CWE-25","{'reason': 'The Puppet code is vulnerable to the CWE-25. Because the name of the module was changed to be similar to another Puppet module and it could trick a user into running the puppet command to run the same module.', 'related_cwe': 'CWE-25', 'is_misconfiguration_related': 'Yes'}"
827,"class packages::rsyslog_mysql { include packages::rsyslog case $::operatingsystem { centos: { realize(packages::yumrepo['rsyslog']) package { ""rsyslog-mysql"": ensure => ""latest"", require => class['packages::rsyslog']; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"class['packages::rsyslog']; } \\, package { \, package { \\, package { \\\\, package { \\\\  \\, package { \\\\\\\\  \\\\\\\\  \\\\, package {package {{'reason': 'This misconfiguration is related to CWE-732 because this issue can allow an attacker to execute commands on a remote system.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
828,"class base { package { [ 'acl', 'ack-grep', 'apticron', 'bash-completion', 'git-core', 'htop', 'iotop', 'iperf', 'jnettop', 'make', 'mosh', 'nano', 'netcat-openbsd', 'screen', 'unzip', 'unattended-upgrades', 'wget', ]: ensure => present, } package { 'git-review': ensure => present, provider => pip, } file { '/etc/environment': content => 'path=""/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/home/betawiki/config/bin""', } file { '/etc/default/locale': content => 'lang=""en_us.utf-8""', } file { '/etc/puppet/hiera.yaml': content => '', } }",1,1,"class base { package { [ 'acl', 'ack-grep', 'apticron', 'bash-completion', 'git-core', 'htop', 'iotop', 'iperf', 'jnettop','make','mosh', 'nano', 'netcat-openbsd','screen', 'unzip', 'unattended-upgrades', 'wget', ]: ensure => present, } package { 'git-review': ensure => present, provider => pip, } file { '/etc/environment': content => 'path=, file { '/etc/default/locale': content => 'lang=, file { '/etc/environment': content => 'path=, file { '/etc/puppet/hiera.yaml': content => '', }",CWE-312,"{'reason': 'This misconfiguration is related to CWE-312: Reuse of a Non-Random Value, which may lead to unexpected changes in system configuration.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
829,"define cinder::backend::emc_vnx ( $iscsi_ip_address, $san_ip, $san_password, $storage_vnx_pool_name, $default_timeout = '10', $max_luns_per_storage_group = '256', $package_ensure = 'present', $san_login = 'admin', $volume_backend_name = $name, $extra_options = {}, $volume_driver = 'cinder.volume.drivers.emc.emc_cli_iscsi.emccliiscsidriver', $initiator_auto_registration = $::os_service_default, $storage_vnx_auth_type = $::os_service_default, $storage_vnx_security_file_dir = $::os_service_default, $naviseccli_path = $::os_service_default, $manage_volume_type = false, ) { include ::cinder::params cinder_config { ""${name}/default_timeout"": value => $default_timeout; ""${name}/iscsi_ip_address"": value => $iscsi_ip_address; ""${name}/max_luns_per_storage_group"": value => $max_luns_per_storage_group; ""${name}/naviseccli_path"": value => $naviseccli_path; ""${name}/san_ip"": value => $san_ip; ""${name}/san_login"": value => $san_login; ""${name}/san_password"": value => $san_password; ""${name}/storage_vnx_pool_name"": value => $storage_vnx_pool_name; ""${name}/volume_backend_name"": value => $volume_backend_name; ""${name}/volume_driver"": value => $volume_driver; ""${name}/initiator_auto_registration"": value => $initiator_auto_registration; ""${name}/storage_vnx_authentication_type"": value => $storage_vnx_auth_type; ""${name}/storage_vnx_security_file_dir"": value => $storage_vnx_security_file_dir; } if $manage_volume_type { cinder_type { $volume_backend_name: ensure => present, properties => [""volume_backend_name=${volume_backend_name}""], } } create_resources('cinder_config', $extra_options) }",1,1,"cinder_config { \, cinder_config { \\, cinder_config { \\\\, cinder_config { \\\\\\\\, cinder_config { \\\\\\\\\\\\\\\\, volume_backend_name",CWE-798,"{'reason': 'The cinder_config resource name (volume_backend_name) is a property to be included in the properties hash, which is used to declare the backend volume driver name. While the cinder_config resource name (volume_backend_name) may be changed, if the value is changed to something else, it will no longer match the declared driver name, and the backend will not function properly. As a result, it is best practice to avoid changing the cinder_config resource name (volume_backend_name) and instead manage backend configurations through the properties hash. The cinder_config resource name (volume_backend_name) is not included in the properties hash in the provided cinder_config, and is instead a parameter to the cinder_config resource. This parameter should be moved', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
830,"class watcher::decision_engine ( $package_ensure = 'present', $enabled = true, $manage_service = true, $decision_engine_conductor_topic = $::os_service_default, $decision_engine_status_topic = $::os_service_default, $decision_engine_publisher_id = $::os_service_default, $decision_engine_workers = $::os_service_default, $planner = $::os_service_default, $weights = $::os_service_default, ) { include ::watcher::params include ::watcher::deps if !is_service_default($weights) { validate_hash($weights) $weights_real = join(sort(join_keys_to_values($weights, ':')), ',') } else { $weights_real = $weights } watcher_config<||> ~> service['watcher-decision-engine'] package['watcher-decision-engine'] -> service['watcher-decision-engine'] package { 'watcher-decision-engine': ensure => $package_ensure, name => $::watcher::params::decision_engine_package_name, tag => ['openstack', 'watcher-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'watcher-decision-engine': ensure => $service_ensure, name => $::watcher::params::decision_engine_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => ['watcher-service'], } watcher_config { 'watcher_decision_engine/conductor_topic': value => $decision_engine_conductor_topic; 'watcher_decision_engine/status_topic': value => $decision_engine_status_topic; 'watcher_decision_engine/publisher_id': value => $decision_engine_publisher_id; 'watcher_decision_engine/max_workers': value => $decision_engine_workers; } watcher_config { 'watcher_planner/planner': value => $planner; 'watcher_planners.default/weights': value => $weights_real; } }",0,1,"watcher_config { 'watcher_decision_engine/conductor_topic': value => $decision_engine_conductor_topic; }, watcher_config { 'watcher_decision_engine/max_workers': value => $decision_engine_workers; }, watcher_config { 'watcher_decision_engine/publisher_id': value => $decision_engine_publisher_id; }, watcher_config { 'watcher_decision_engine/status_topic': value => $decision_engine_status_topic; }, watcher_config { 'watcher_planner/planner': value => $planner; }, watcher_config { 'watcher_planners.default/weights': value => $weights_real; }","CWE-325, CWE-362, CWE-366","{'reason': 'The misconfiguration is related to the CWEs because the module provides a way to set sensitive values in a non-secure manner, which can be used to inject malicious content into the system.', 'related_cwe': 'CWE-325, CWE-362, CWE-366', 'is_misconfiguration_related': 'Yes'}"
831,"class osnailyfacter::auth_file( $admin_password, $controller_node = '127.0.0.1', $auth_url = 'http://127.0.0.1:5000/v2.0', $keystone_admin_token = undef, $admin_user = 'admin', $admin_tenant = 'openstack', $region_name = 'regionone', $use_no_cache = true, $cinder_endpoint_type = 'internalurl', $glance_endpoint_type = 'internalurl', $keystone_endpoint_type = 'internalurl', $nova_endpoint_type = 'internalurl', $neutron_endpoint_type = 'internalurl', $os_endpoint_type = 'internalurl', $murano_repo_url = undef, $cacert = undef, $murano_glare_plugin = undef, ) { warning('class osnailyfacter::auth_file is deprecated, please consider using osnailyfacter::credentials_file instead') file { '/root/openrc': owner => 'root', group => 'root', mode => '0700', content => template(""${module_name}/openrc.erb"") } }",0,1,"admin_tenant = 'openstack', admin_user = 'admin', cinder_endpoint_type = 'internalurl', file { '/root/openrc': owner => 'root', group => 'root', mode => '0700', content => template(, glance_endpoint_type = 'internalurl', keystone_admin_token = undef, keystone_endpoint_type = 'internalurl', nova_endpoint_type = 'internalurl', use_no_cache = true, warning('class osnailyfacter::auth_file is deprecated, please consider using osnailyfacter::credentials_file instead')","CWE-1169, CWE-379, CWE-384","{'reason': ""The openrc template file is an authentication file that enables OpenStack users to authenticate. It is used by Puppet to access OpenStack services. The admin_tenant is a critical configuration variable. If an attacker can obtain access to this file, they can impersonate the administrator and obtain full access to OpenStack. The admin_tenant is vulnerable to CWE-379, CWE-384. By default, Puppet OpenStack credentials files use 'admin' as the default user, which has the same vulnerability. CWE-1169 is also related to the script. CWE-379 describes authentication bypass vulnerabilities caused by hard-coded passwords and credentials. The user can be obtained by reverse-engineering the Puppet configuration, and the admin_tenant variable can be obtained using CWE"", 'related_cwe': 'CWE-1169, CWE-379, CWE-384', 'is_misconfiguration_related': 'Yes'}"
832,"class tripleo::profile::base::ceph ( $ceph_mon_initial_members = hiera('ceph_mon_node_names', undef), $ceph_mon_host = hiera('ceph_mon_node_ips', '127.0.0.1'), $enable_ceph_storage = false, $step = hiera('step'), ) { if $step >= 2 { if $ceph_mon_initial_members { if is_array($ceph_mon_initial_members) { $mon_initial_members = downcase(join($ceph_mon_initial_members, ',')) } else { $mon_initial_members = downcase($ceph_mon_initial_members) } } else { $mon_initial_members = undef } if is_array($ceph_mon_host) { if is_ipv6_address($ceph_mon_host[0]) { $mon_host = join(enclose_ipv6($ceph_mon_host), ',') } else { $mon_host = join($ceph_mon_host, ',') } } else { $mon_host = $ceph_mon_host } class { '::ceph::profile::params': mon_initial_members => $mon_initial_members, mon_host => $mon_host, } include ::ceph::conf } if $enable_ceph_storage { include ::tripleo::profile::base::ceph::osd } }",0,1,"class {'::ceph::profile::params': mon_initial_members => $mon_initial_members, mon_host => $mon_host, }\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\ninclude ::ceph::conf\\\\\\\\\\\\\\\\\\\\\\\\n, class {'::ceph::profile::params': mon_initial_members => $mon_initial_members, mon_host => $mon_host, }\\\\\\\\\\n\\\\\\\\\\ninclude ::ceph::conf\\\\\\\\\\n, class {'::ceph::profile::params': mon_initial_members => $mon_initial_members, mon_host => $mon_host, }\\\\n\\\\ninclude ::ceph::conf\\\\n, class {'::ceph::profile::params': mon_initial_members => $mon_initial_members, mon_host => $mon_host, }\\n\\ninclude ::ceph::conf\\n, class {'::ceph::profile::params': mon_initial_members => $mon_initial_members, mon_host => $mon_host, }\n\ninclude ::ceph::conf\n, include ::tripleo::profile::base::ceph::osd",CWE-347,"{'reason': 'The provided misconfiguration is related to a race condition and therefore it is linked to CWE-347.', 'related_cwe': 'CWE-347', 'is_misconfiguration_related': 'Yes'}"
833,"class heat::config ( $heat_config = {}, $heat_api_paste_ini = {}, ) { include ::heat::deps validate_hash($heat_config) validate_hash($heat_api_paste_ini) create_resources('heat_config', $heat_config) create_resources('heat_api_paste_ini', $heat_api_paste_ini) }",1,1,"create_resources('heat_api_paste_ini', $heat_api_paste_ini), create_resources('heat_config', $heat_config), include ::heat::deps, validate_hash($heat_api_paste_ini), validate_hash($heat_config)",CWE-125,"{'reason': ""I found two CWEs that are related to this misconfiguration: CWE-124 and CWE-125. CWE-125 is the most likely issue here. The 'validate_hash' function verifies that $heat_config and $heat_api_paste_ini is a HashRef. The 'create_resources' function checks that each HashRef passed contains a valid Puppet resource definition. The 'include' function allows any module listed in this file to be loaded. The 'validate_hash' function is called to verify that the $heat_config and $heat_api_paste_ini variables are HashRefs. This means that the module can be loaded with any input, which is insecure. It's a bit unclear from the original defect label how exactly this is related to CWE-"", 'related_cwe': 'CWE-124, CWE-125', 'is_misconfiguration_related': 'Yes'}"
834,class lma_monitoring_analytics::params { $influxdb_url = 'http://localhost:8086' $influxdb_dir = '/var/lib/influxdb' $influxdb_retention_period = 'inf' $influxdb_replication_factor = 1 $grafana_domain = 'localhost' $grafana_address = '' $grafana_port = 8000 $protocol = 'http' },0,1,"grafana_address = '', grafana_domain = 'localhost', grafana_port = 8000, influxdb_dir = '/var/lib/influxdb', influxdb_replication_factor = 1, influxdb_retention_period = 'inf', influxdb_url = 'http://localhost:8086', protocol = 'http'",CWE-295,"{'reason': 'This misconfiguration is related to the provided CWE because it allows users to easily navigate to a website without requiring them to authenticate or confirm their identity.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
835,"class role::echo( $shared_tracking_cluster, $shared_tracking_db, $echo_dir, ) { require ::role::mediawiki include ::role::betafeatures include ::role::centralauth include ::role::eventlogging include ::role::svg mysql::sql { 'create echo_unread_wikis': sql => ""use ${shared_tracking_db}; source ${echo_dir}/db_patches/echo_unread_wikis.sql;"", unless => ""select 1 from information_schema.tables where table_schema='${shared_tracking_db}' and table_name = 'echo_unread_wikis'"", require => [ mysql::db[$shared_tracking_db], mediawiki::extension['echo'], ], notify => mediawiki::maintenance['backfill echo_unread_wikis'], } mediawiki::maintenance { 'backfill echo_unread_wikis': command => '/usr/local/bin/foreachwikiwithextension echo extensions/echo/maintenance/backfillunreadwikis.php', refreshonly => true, } mediawiki::extension { 'echo': needs_update => true, settings => { wgechocrosswikinotifications => true, wgechosharedtrackingcluster => $shared_tracking_cluster, wgechosharedtrackingdb => $shared_tracking_db, wgechoenableemailbatch => false, wgallowhtmlemail => true, wgechousecrosswikibetafeature => false, 'wgdefaultuseroptions[\'echo-cross-wiki-notifications\']' => true, 'wgechoconfig[\'eventlogging\'][\'echo\'][\'enabled\']' => true, 'wgechoconfig[\'eventlogging\'][\'echomail\'][\'enabled\']' => true, 'wgechoconfig[\'eventlogging\'][\'echointeraction\'][\'enabled\']' => true, }, } mediawiki::wiki { 'fr': } mediawiki::settings { 'fr settings': wiki => 'fr', values => { 'wglanguagecode' => 'fr', 'wgsitename' => 'wikip����������������dia', } } mediawiki::wiki { 'he': } mediawiki::settings { 'hewiki settings': wiki => 'he', values => { 'wglanguagecode' => 'he', 'wgsitename' => '��������������������������������������������������������������������������������������������������������������������������������', } } mediawiki::wiki { 'frwiktionary': } mediawiki::settings { 'frwiktionary settings': wiki => 'frwiktionary', values => { 'wglanguagecode' => 'fr', 'wgsitename' => 'wiktionnaire', } } mediawiki::wiki { 'zhwikivoyage': } mediawiki::settings { 'zhwikivoyage settings': wiki => 'zhwikivoyage', values => { 'wglanguagecode' => 'zh', 'wgsitename' => '������������������������������������������������������������������������������������������������', } } mediawiki::extension { 'thanks': require => mediawiki::extension['echo'], } $user_a = 'selenium echo user a' $user_b = 'selenium echo user b' mediawiki::user { [ $user_a, $user_b ]: password => $::mediawiki::admin_pass, } role::centralauth::migrate_user { [ $user_a, $user_b ]: } mediawiki::settings { 'echo cors': values => template('role/echo/cors.php.erb'), } }",1,1,"mediawiki::extension { 'thanks':, mediawiki::settings { 'echo cors':, mediawiki::settings { 'echo cors': values => template('role/echo/cors.php.erb'),, mediawiki::settings { 'fr settings':, mediawiki::settings { 'frwiktionary settings':, mediawiki::settings { 'hewiki settings':, mediawiki::settings { 'zhwikivoyage settings':, mediawiki::user { [, mysql::sql { 'create echo_unread_wikis':, role::centralauth::migrate_user { [","CWE-20, CWE-94","{'reason': ""When the puppet script creates the echo_unread_wikis sql table it does not restrict the creation of the table to a certain user. The mysql::sql { 'create echo_unread_wikis': } resource should include 'unless =>"", 'related_cwe': 'CWE-20, CWE-94', 'is_misconfiguration_related': 'Yes'}"
836,"class packages::javadeveloper_for_os_x { anchor { 'packages::javadeveloper_for_os_x::begin': ; 'packages::javadeveloper_for_os_x::end': ; } case $::operatingsystem { darwin: { case $macosx_productversion_major { '10.8', '10.10': { anchor['packages::javadeveloper_for_os_x::begin'] -> packages::pkgdmg { ""java_for_os_x_2013005_dp__11m4609"": version => ""2013005_dp__11m4609"", private => true, os_version_specific => false, dmgname => ""java_for_os_x_2013005_dp__11m4609.dmg""; }-> anchor['packages::javadeveloper_for_os_x::end'] } default: { anchor['packages::javadeveloper_for_os_x::begin'] -> packages::pkgdmg { ""javadeveloper_for_os_x_2012003__11m3646"": version => ""2012003__11m3646"", private => true, os_version_specific => false, dmgname => ""javadeveloper_for_os_x_2012003__11m3646.dmg""; }-> anchor['packages::javadeveloper_for_os_x::end'] } } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"anchor['packages::javadeveloper_for_os_x::begin'] -> packages::pkgdmg { \\, anchor['packages::javadeveloper_for_os_x::end'] ->, case $::operatingsystem { darwin: { case $macosx_productversion_major { '10.8', '10.10': { anchor['packages::javadeveloper_for_os_x::begin'] -> packages::pkgdmg { \, class packages::javadeveloper_for_os_x { anchor { 'packages::javadeveloper_for_os_x::begin': ; 'packages::javadeveloper_for_os_x::end': ; }, default: { fail(\\\, java_for_os_x_2013005_dp__11m4609.dmg, javadeveloper_for_os_x_2012003__11m3646.dmg, packages::pkgdmg { \, packages::pkgdmg { \\, packages::pkgdmg { \\\",CWE-732,"{'reason': 'It seems that the anchor node is just used to enforce the ordering of operations. It does not appear to be related to any particular security issues.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
837,"define neutron::plugins::ovs::bridge { include ::neutron::deps $mapping = split($name, ':') $bridge = $mapping[1] vs_bridge {$bridge: ensure => present, external_ids => ""bridge-id=${bridge}"" } }",1,1,"bridge-id=${bridge}, bridge-id=${bridge}\, bridge-id=${bridge}\\}, ensure => present, external_ids =>, ensure => present, external_ids => \, include ::neutron::deps, mapping = split(\$name, ':'), mapping[1] vs_bridge",CWE-119,"{'reason': 'The misconfiguration is related to the CWE as the external_ids value is not properly escaped. When external_ids value contains a forward slash (/), it has to be escaped by preceding it with a backslash (\\).', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
838,class openstack_integration { exec { logoutput => 'on_failure' } if $::osfamily == 'redhat' { package { 'openstack-selinux': ensure => 'latest' } package<| tag == 'openstack' |> { allow_virtual => true } } },0,1,"exec { logoutput => 'on_failure' }, if $::osfamily =='redhat' { package { 'openstack-selinux': ensure => 'latest' } package<| tag == 'openstack' |> { allow_virtual => true } }, package { 'openstack-selinux': ensure => 'latest' }, package { 'openstack-selinux': ensure => 'latest' } package<| tag == 'openstack' |> { allow_virtual => true }, package<| tag == 'openstack' |> { allow_virtual => true }","CWE-269 - Improper Privilege Management, CWE-272 - Numeric Limits, CWE-275 - Incorrect Default Permissions, CWE-285 - Improper Authorization, CWE-295 - Improper Certificate Validation, CWE-306 - Missing Authentication for Critical Function, CWE-307 - Use of Incorrectly Deliberately Permissive Type Safe Operation, CWE-664 - Exposed Dangerous Method or Function, CWE-798 - Use of Hard-coded Credentials","{'reason': 'The Puppet openstack_integration class has an open default of the option logoutput, which allows for arbitrary commands to be run on failure with root permissions. This may result in an escalated privilege and lead to the execution of unintended operations on failure, such as deleting data or creating unwanted users. The CWE for this issue is CWE-269, as the use of a default option value which allows an arbitrary command to be run as root is a form of Improper Privilege Management. Additionally, it also violates CWE-272, CWE-275, CWE-285, CWE-295, CWE-306, CWE-307, CWE-664, and CWE-798.', 'related_cwe': 'CWE-269, CWE-272, CWE-275, CWE-285, CWE-295, CWE-306, CWE-307, CWE-664, CWE-798', 'is_misconfiguration_related': 'Yes'}"
839,"class role::questycaptcha { require ::role::confirmedit include ::role::mediawiki mediawiki::settings { 'questycaptcha': values => template('role/questycaptcha/settings.php.erb'), priority => $::load_later, } mediawiki::import::text { 'vagrantrolequestycaptcha': content => template('role/questycaptcha/vagrantrolequestycaptcha.wiki.erb'), } }",0,1,"class role::questycaptcha { require ::role::confirmedit include ::role::mediawiki, mediawiki::import::text { 'vagrantrolequestycaptcha': content => template('role/questycaptcha/vagrantrolequestycaptcha.wiki.erb'), }, mediawiki::settings { 'questycaptcha': values => template('role/questycaptcha/settings.php.erb'), priority => $::load_later, }",CWE-19,"{'reason': ""The provided CWE is related to the misconfiguration due to the inclusion of `require ::role::confirmedit` and `include ::role::mediawiki, mediawiki::import::text { 'vagrantrolequestycaptcha': content => template('role/questycaptcha/vagrantrolequestycaptcha.wiki.erb'), },` statements."", 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
840,"class neutron::agents::ml2::sriov ( $package_ensure = 'present', $enabled = true, $manage_service = true, $physical_device_mappings = $::os_service_default, $polling_interval = 2, $exclude_devices = $::os_service_default, $extensions = $::os_service_default, $purge_config = false, $number_of_vfs = $::os_service_default, ) { include ::neutron::deps include ::neutron::params resources { 'neutron_sriov_agent_config': purge => $purge_config, } neutron_sriov_agent_config { 'sriov_nic/polling_interval': value => $polling_interval; 'sriov_nic/exclude_devices': value => pick(join(any2array($exclude_devices), ','), $::os_service_default); 'sriov_nic/physical_device_mappings': value => pick(join(any2array($physical_device_mappings), ','), $::os_service_default); 'agent/extensions': value => join(any2array($extensions), ','); 'securitygroup/firewall_driver': value => 'neutron.agent.firewall.noopfirewalldriver'; } if !is_service_default($number_of_vfs) and !empty($number_of_vfs) { neutron_agent_sriov_numvfs { $number_of_vfs: ensure => present } } package { 'neutron-sriov-nic-agent': ensure => $package_ensure, name => $::neutron::params::sriov_nic_agent_package, tag => ['openstack', 'neutron-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'neutron-sriov-nic-agent-service': ensure => $service_ensure, name => $::neutron::params::sriov_nic_agent_service, enable => $enabled, tag => 'neutron-service', } }",1,1,"agent/extensions, exclude_devices, include ::neutron::deps, physical_device_mappings, polling_interval, service_ensure, sriov_nic/exclude_devices, sriov_nic/physical_device_mappings, sriov_nic/polling_interval","CWE-20:Insufficiently Protected Credentials, CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-23:Excessive Data Resulting in a Buffer Overrun, CWE-24:Improper Restriction of Excessive Authentication Attempts","{'reason': 'This misconfiguration is related to CWE-20 as the script can be used to obtain user credentials without authorization. This is done by allowing users to specify their own credentials when configuring a service. The script does not validate the user-supplied credentials and allows users to specify their own credentials. This vulnerability can be exploited by an attacker to steal user credentials.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
841,"define apache::conf( $ensure = present, $conf_type = 'conf', $priority = 50, $content = undef, $source = undef, ) { include ::apache if $priority !~ /^\d?\d$/ { fail('""priority"" must be between 0 - 99') } if $ensure !~ /^(present|absent)$/ { fail('""ensure"" must be ""present"" or ""absent""') } if $conf_type !~ /^(conf|sites)$/ { fail('""conf_type"" must be ""conf"" or ""sites""') } if $source == undef and $content == undef { fail('you must provide either ""source"" or ""content""') } if $source != undef and $content != undef { fail('""source"" and ""content"" are mutually exclusive') } $title_safe = regsubst($title, '[\w_]', '-', 'g') $conf_file = sprintf('%02d-%s.conf', $priority, $title_safe) $link_ensure = $ensure ? { present => link, default => absent, } file { ""/etc/apache2/${conf_type}-available/${conf_file}"": ensure => $ensure, content => $content, source => $source, owner => 'root', group => 'root', mode => '0444', } file { ""/etc/apache2/${conf_type}-enabled/${conf_file}"": ensure => $link_ensure, target => ""/etc/apache2/${conf_type}-available/${conf_file}"", notify => service['apache2'], owner => 'root', group => 'root', mode => '0444', } }",1,1,"file { \, if $conf_type!~ /^(conf|sites)$/ { fail(\\\, if $conf_type!~ /^(conf|sites)$/ { fail(\\\\\\, if $ensure!~ /^(present|absent)$/{ fail(\\\, if $priority!~ /^\d?\d$/ { fail(\'\, if $source == undef and $content == undef { fail(\\\\\\\\\\\\\\\, if $source!= undef and $content!= undef { fail(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, if $source!= undef and $content!= undef { fail(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, if $source== undef and $content== undef { failinclude ::apache",CWE-22,"{'reason': 'The script contains a misconfiguration where the Apache package is included as part of the main package definition, allowing it to be included when not necessary, making the system vulnerable to the provided CWE. In the misconfiguration file, an `include ::apache` is present. This could allow an attacker to use the `include` directive to execute arbitrary Puppet code.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
842,"class manila::share::netapp ( $driver_handles_share_servers, $netapp_login, $netapp_password, $netapp_server_hostname, $netapp_transport_type = 'http', $netapp_storage_family = 'ontap_cluster', $netapp_server_port = undef, $netapp_volume_name_template = 'share_%(share_id)s', $netapp_vserver = undef, $netapp_vserver_name_template = 'os_%s', $netapp_lif_name_template = 'os_%(net_allocation_id)s', $netapp_aggregate_name_search_pattern = '(.*)', $netapp_root_volume_aggregate = undef, $netapp_root_volume_name = 'root', $netapp_port_name_search_pattern = '(.*)', $netapp_trace_flags = undef, ) { manila::backend::netapp { 'default': driver_handles_share_servers => $driver_handles_share_servers, netapp_login => $netapp_login, netapp_password => $netapp_password, netapp_server_hostname => $netapp_server_hostname, netapp_transport_type => $netapp_transport_type, netapp_storage_family => $netapp_storage_family, netapp_server_port => $netapp_server_port, netapp_volume_name_template => $netapp_volume_name_template, netapp_vserver => $netapp_vserver, netapp_vserver_name_template => $netapp_vserver_name_template, netapp_lif_name_template => $netapp_lif_name_template, netapp_aggregate_name_search_pattern => $netapp_aggregate_name_search_pattern, netapp_root_volume_aggregate => $netapp_root_volume_aggregate, netapp_root_volume_name => $netapp_root_volume_name, netapp_port_name_search_pattern => $netapp_port_name_search_pattern, netapp_trace_flags => $netapp_trace_flags, } }",0,1,manila::backend::netapp {'default':,CWE-269,"{'reason': ""Misconfiguration found is related to CWE-269. For example, the variable name 'netapp_server_hostname' used to identify a NetApp server in the configuration script might be configured to use an IP address instead of a fully-qualified domain name, which could lead to a loss of the service if the server's IP address is not static and the server is behind a firewall, NAT, or proxy server. If the server's IP address is not static, it may change over time, rendering the puppet configuration invalid. Furthermore, if the server is behind a firewall, NAT, or proxy server, there may be additional security controls in place that could prevent the puppet script from connecting to the NetApp server, leading to a loss of service."", 'related_cwe': 'CWE-269', 'is_misconfiguration_related': 'Yes'}"
843,"class collectd::plugins::ethstat { include collectd include collectd::settings $plugin_name = 'ethstat' case $::operatingsystem { 'centos', 'ubuntu': { $args = [ 'interface ""eth0""', 'map ""rx_bytes"" ""derive"" ""rx_bytes""', 'map ""tx_bytes"" ""derive"" ""tx_bytes""', 'mappedonly true', ] } default: {fail(""collectd plugin ${title} is not supported with ${::operatingsystem}"")} } collectd::util::config_gen {$plugin_name: arg_array => $args} }",0,0,nan,nan,"{'reason': 'nan', 'related_cwe': 'nan', 'is_misconfiguration_related': 'nan'}"
844,"class osnailyfacter::acpid ( $service_enabled = true, $service_state = 'running', ){ package { 'acpid': ensure => 'installed', } -> service { 'acpid': ensure => $service_state, enable => $service_enabled, } }",0,1,"class osnailyfacter::acpid ( $service_enabled = true, $service_state = 'running', )\\\\n{, class osnailyfacter::acpid ( $service_enabled = true, $service_state = 'running', )\\n{, class osnailyfacter::acpid ( $service_enabled = true, $service_state = 'running', \\\\n){, class osnailyfacter::acpid (\\n $service_enabled = true, $service_state = 'running', \\n){, class osnailyfacter::acpid (\n $service_enabled = true, $service_state = 'running', \n){, package { 'acpid': ensure => 'installed', \\n} ->, package { 'acpid': ensure => 'installed', } ->, service { 'acpid': ensure => $service_state, enable => $service_enabled, } \\\\\\\\n, service { 'acpid': ensure => $service_state, enable => $service_enabled, } \\\\\n, service { 'acpid': ensure => $service_state, enable => $service_enabled, } \\\\n",CWE-252,"{'reason': 'The `\\\\n` character used in the code indicates that it was written in one of the following configurations:\\n\\nWindows-based\\nMac-based\\nUnix-based\\nThe use of the `\\\\n` character within the code is therefore related to the provided CWE. In particular, the misconfiguration is related to CWE-252, which pertains to the improper use of the newline character in code.\\n\\nThe code contains a newline character, which is used to create a line break within the code. This newline character is not properly escaped, leading to the code being interpreted differently than intended. The newline character is being used incorrectly and is therefore a potential security risk.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
845,"class swift::proxy::formpost() { include ::swift::deps concat::fragment { 'swift-proxy-formpost': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/formpost.conf.erb'), order => '130', } }",1,1,"concat::fragment {'swift-proxy-formpost': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/formpost.conf.erb'), order => '130', }, include ::swift::deps",CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': 'Please describe the detailed reasoning here.', 'related_cwe': ""CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"", 'is_misconfiguration_related': 'Yes'}"
846,"class cgroups::service ( $cgroups_settings = {}, ) { service { 'cgroup-lite': ensure => running, enable => true, } service { 'cgconfigparser': ensure => running, hasstatus => false, status => '/bin/true', restart => 'service cgconfigparser restart', require => service['cgroup-lite'], } service { 'cgrulesengd': ensure => running, } $cgclass_res = map_cgclassify_opts($cgroups_settings) unless empty($cgclass_res) { create_resources('cgclassify', $cgclass_res, { 'ensure' => present }) } }",0,1,"if defined $cgroups_settings { $cgclass_res = map_cgclassify_opts($cgroups_settings) unless empty($cgclass_res) { create_resources('cgclassify', $cgclass_res, { 'ensure' => present }) } }, if defined $cgroups_settings { $cgroups_settings = $cgroups_settings + map({ cg_name => {'mount_point' => $mount_point, 'enable' => $enable }}, $cgroups_settings) }, if!defined $cgroups_settings { cgroups::service {} }, service { 'cgconfigparser': ensure => running, hasstatus => false, status => '/bin/true', restart =>'service cgconfigparser restart', require => service['cgroup-lite'], }, service { 'cgroup-lite': ensure => running, enable => true, }, service { 'cgrulesengd': ensure => running, }",CWE-284,"{'reason': 'The misconfiguration was caused by an incorrect use of map in combination with undefined variables, which led to an incomplete instantiation of the map function. When the variable $cgroups_settings was defined, the misconfiguration was created by an attempt to create the variable $cgroups_settings if it was not already defined. This attempt led to an undefined variable, which is caused by the lack of an else clause to deal with the case where the variable is not defined. The use of the map function caused an error because the input to the map function was not correctly structured, causing a missing element in the map function output. This led to an issue with the create_resources function, which relied on the map function output. Finally, an incomplete instantiation of the create_resources', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
847,"class neutron::services::fwaas ( $enabled = $::os_service_default, $driver = $::os_service_default, $vpnaas_agent_package = false, $purge_config = false, ) { include ::neutron::deps include ::neutron::params if ($::osfamily == 'debian') { if $vpnaas_agent_package { ensure_resource( 'package', $::neutron::params::vpnaas_agent_package, { 'ensure' => $neutron::package_ensure, 'tag' => ['neutron-package', 'openstack'], }) } else { ensure_resource( 'package', 'neutron-fwaas' , { 'name' => $::neutron::params::fwaas_package, 'ensure' => $neutron::package_ensure, 'tag' => ['neutron-package', 'openstack'], }) } } elsif($::osfamily == 'redhat') { ensure_resource( 'package', 'neutron-fwaas', { 'name' => $::neutron::params::fwaas_package, 'ensure' => $neutron::package_ensure, 'tag' => ['neutron-package', 'openstack'], }) } resources { 'neutron_fwaas_service_config': purge => $purge_config, } neutron_fwaas_service_config { 'fwaas/enabled': value => $enabled; 'fwaas/driver': value => $driver; } }",1,1,"ensure_resource( 'package', 'neutron-fwaas', {\\\\\\\\n    'name' => $::neutron::params::fwaas_package,\\\\\\\\n    'ensure' => $neutron::package_ensure,\\\\\\\\n    'tag' => ['neutron-package', 'openstack'],\\\\\\\\n}), ensure_resource( 'package', 'neutron-fwaas', {\\\\n    'name' => $::neutron::params::fwaas_package,\\\\n    'ensure' => $neutron::package_ensure,\\\\n    'tag' => ['neutron-package', 'openstack'],\\\\n}), if $vpnaas_agent_package {\\\\\\\\n    ensure_resource( 'package', $::neutron::params::vpnaas_agent_package, { 'ensure' => $neutron::package_ensure, 'tag' => ['neutron-package', 'openstack'], })\\\\\\\\n}\\\\\\\\nelse {\\\\\\\\n    ensure_resource( 'package', 'neutron-fwaas', { 'name' => $::neutron::params::fwaas_package, 'ensure' => $neutron::package_ensure, 'tag' => ['neutron-package', 'openstack'], })\\\\\\\\n}, if ($::osfamily == 'debian') {\\\\n    ensure_resource( 'package', $::neutron::params::vpnaas_agent_package, { 'ensure' => $neutron::package_ensure, 'tag' => ['neutron-package', 'openstack'], })\\\\n}\\\\nelsif($::osfamily =='redhat') {\\\\n    ensure_resource( 'package', 'neutron-fwaas', {\\\\n        'name' => $::neutron::params::fwaas_package,\\\\n        'ensure' => $neutron::package_ensure,\\\\n        'tag' => ['neutron-package', 'openstack'],\\\\n    })\\\\n}\\\\n, include ::neutron::deps\\n include ::neutron::params\\n, include ::neutron::deps\n include ::neutron::params\n, neutron_fwaas_service_config { 'fwaas/driver':\\\\n    value => $driver;\\\\n}, neutron_fwaas_service_config { 'fwaas/enabled':\\n    value => $enabled;\\n}, resources { 'neutron_fwaas_service_config':\\n    purge => $purge_config,\\n}","CWE-327, CWE-352, CWE-532","{'reason': 'This is a test misconfiguration', 'related_cwe': '1', 'is_misconfiguration_related': 'No'}"
848,"define oslo::middleware( $max_request_body_size = $::os_service_default, $enable_proxy_headers_parsing = $::os_service_default, ) { $middleware_options = { 'oslo_middleware/max_request_body_size' => { value => $max_request_body_size }, 'oslo_middleware/enable_proxy_headers_parsing' => { value => $enable_proxy_headers_parsing }, } create_resources($name, $middleware_options) }",0,1,"define oslo::middleware( $max_request_body_size = $::os_service_default, $enable_proxy_headers_parsing = $::os_service_default, ) { $middleware_options = { 'oslo_middleware/max_request_body_size' => { value => $max_request_body_size }, 'oslo_middleware/enable_proxy_headers_parsing' => { value => $enable_proxy_headers_parsing }, } create_resources($name, $middleware_options) }","CWE-12, CWE-15, CWE-16, CWE-17, CWE-19, CWE-20, CWE-209, CWE-26, CWE-30, CWE-94","{'reason': 'The misconfiguration allows the administrator to provide the option to increase the body size that a client may send to the API, potentially causing unexpected behavior.', 'related_cwe': 'CWE-12, CWE-15, CWE-16, CWE-17, CWE-19, CWE-20, CWE-209, CWE-26, CWE-30, CWE-94', 'is_misconfiguration_related': 'Yes'}"
849,"class tripleo::profile::base::pacemaker ( $step = hiera('step'), ) { pcmk_resource <| |> { tries => 10, try_sleep => 3, } if $::hostname == downcase(hiera('bootstrap_nodeid')) { $pacemaker_master = true } else { $pacemaker_master = false } $enable_fencing = str2bool(hiera('enable_fencing', false)) and $step >= 5 if $step >= 1 { $pacemaker_cluster_members = downcase(regsubst(hiera('controller_node_names'), ',', ' ', 'g')) $corosync_ipv6 = str2bool(hiera('corosync_ipv6', false)) if $corosync_ipv6 { $cluster_setup_extras = { '--token' => hiera('corosync_token_timeout', 1000), '--ipv6' => '' } } else { $cluster_setup_extras = { '--token' => hiera('corosync_token_timeout', 1000) } } class { '::pacemaker': hacluster_pwd => hiera('hacluster_pwd'), } -> class { '::pacemaker::corosync': cluster_members => $pacemaker_cluster_members, setup_cluster => $pacemaker_master, cluster_setup_extras => $cluster_setup_extras, } class { '::pacemaker::stonith': disable => !$enable_fencing, } if $enable_fencing { include ::tripleo::fencing pcmk_resource<||> -> class['tripleo::fencing'] pcmk_constraint<||> -> class['tripleo::fencing'] exec <| tag == 'pacemaker_constraint' |> -> class['tripleo::fencing'] class['tripleo::fencing'] -> class['pacemaker::stonith'] } pacemaker::resource::service { op_params => 'start timeout=200s stop timeout=200s', } file { '/var/lib/tripleo/pacemaker-restarts': ensure => directory, } ~> tripleo::pacemaker::resource_restart_flag<||> } if $step >= 2 { if $pacemaker_master { include ::pacemaker::resource_defaults } } }",1,1,puppet code to analyze,CWE-ID,"{'reason': 'Explanation', 'related_cwe': 'CWE-ID', 'is_misconfiguration_related': 'Yes/No'}"
850,"define cinder::backend::bdd ( $iscsi_ip_address, $available_devices, $volume_backend_name = $name, $volume_driver = 'cinder.volume.drivers.block_device.blockdevicedriver', $volume_group = $::os_service_default, $volumes_dir = '/var/lib/cinder/volumes', $iscsi_helper = 'tgtadm', $iscsi_protocol = $::os_service_default, $volume_clear = $::os_service_default, $manage_volume_type = false, $extra_options = {}, ) { include ::cinder::params cinder_config { ""${name}/available_devices"": value => $available_devices; ""${name}/volume_backend_name"": value => $volume_backend_name; ""${name}/volume_driver"": value => $volume_driver; ""${name}/iscsi_ip_address"": value => $iscsi_ip_address; ""${name}/iscsi_helper"": value => $iscsi_helper; ""${name}/volume_group"": value => $volume_group; ""${name}/volumes_dir"": value => $volumes_dir; ""${name}/iscsi_protocol"": value => $iscsi_protocol; ""${name}/volume_clear"": value => $volume_clear; } if $manage_volume_type { cinder_type { $volume_backend_name: ensure => present, properties => [""volume_backend_name=${volume_backend_name}""], } } create_resources('cinder_config', $extra_options) case $iscsi_helper { 'tgtadm': { ensure_packages('tgt', { ensure => present, name => $::cinder::params::tgt_package_name}) ensure_resource('service', 'tgtd', { ensure => running, name => $::cinder::params::tgt_service_name, require => package['tgt']}) if($::osfamily == 'redhat') { ensure_resource('file_line', 'cinder include', { path => '/etc/tgt/targets.conf', line => ""include ${volumes_dir}/*"", match => ' require => package['tgt'], notify => service['tgtd']}) } } 'lioadm': { ensure_packages('targetcli', { ensure => present, name => $::cinder::params::lio_package_name}) ensure_resource('service', 'target', { ensure => running, enable => true, require => package['targetcli']}) } default: { fail(""unsupported iscsi helper: ${iscsi_helper}."") } } }",1,1,"ensure_packages('targetcli', { ensure => present, name => $::cinder::params::lio_package_name}), ensure_packages('tgt', { ensure => present, name => $::cinder::params::tgt_package_name}), ensure_resource('file_line', 'cinder include', { path => '/etc/tgt/targets.conf', line =>, ensure_resource('service', 'target', { ensure => running, enable => true, require => package['targetcli']}), ensure_resource('service', 'tgtd', { ensure => running, name => $::cinder::params::tgt_service_name, require => package['tgt']}), include ::cinder::params","CWE-119, CWE-120, CWE-20","{'reason': 'The Puppet script contains a sensitive information leak vulnerability (CWE-119) that could allow attackers to access sensitive information from the file lines. Moreover, it also contains a hard-coded credentials vulnerability (CWE-120) that could allow attackers to authenticate as an admin account. Finally, it also contains an authentication bypass vulnerability (CWE-20) that could allow attackers to authenticate as an admin account without proper authentication.', 'related_cwe': 'CWE-119, CWE-120, CWE-20', 'is_misconfiguration_related': 'Yes'}"
851,"class packages::puppetserver { include packages::puppet realize(packages::yumrepo['passenger']) case $::operatingsystem { centos: { package { ""puppet-server"": require => class[""packages::puppet""], ensure => $packages::puppet::puppet_rpm_version; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"fail(\, package {, realize(\\, realize(\\\\, realize(\\\\\\\","CWE-352, CWE-362","{'reason': ""The script's package {... } fail directive indicates a conditional misconfiguration scenario based on a variable value's match to a regex pattern. This type of misconfiguration is related to CWE-352, Input Validation Error, as the script's fail statement indicates a failed input validation, specifically for RPM packages. \\n\\nCWE-362, Path Traversal, is not related to this misconfiguration as the script does not contain a traversal path expression.\\n\\n"", 'related_cwe': 'CWE-352, CWE-362', 'is_misconfiguration_related': 'Yes'}"
852,"class buildslave::startup { anchor { 'buildslave::startup::begin': ; 'buildslave::startup::end': ; } include ::shared include buildslave::install include users::root case $::operatingsystem { windows: { file { 'c:/programdata/puppetagain/runslave.py': source => ""puppet:///modules/buildslave/runslave.py""; } } default: { include dirs::usr::local::bin file { ""/usr/local/bin/runslave.py"": source => ""puppet:///modules/buildslave/runslave.py"", owner => ""root"", group => $users::root::group, mode => 755; } } } $startuptype = $::operatingsystem ? { centos => ""runner"", darwin => ""runner"", ubuntu => ""runner"", windows => ""windows"", } anchor['buildslave::startup::begin'] -> class { ""buildslave::startup::$startuptype"": } -> anchor['buildslave::startup::end'] }",0,1,"file { '/usr/local/bin/runslave.py': source =>, file { 'c:/programdata/puppetagain/runslave.py': source =>",CWE-19,"{'reason': 'The file is read in from a path that may not be expected by an administrator or user and not be properly sanitized.', 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
853,"class toplevel::slave inherits toplevel::base { include disableservices::slave include puppet::atboot include sudoers::reboot include users::builder include tweaks::dev_ptmx include tweaks::locale if ($::operatingsystem == ""darwin"") or ($::operatingsystem == ""windows"") { include users::builder::autologin } }",1,1,"include disableservices::slave, include puppet::atboot, include sudoers::reboot, include tweaks::dev_ptmx, include tweaks::locale, include users::builder, include users::builder::autologin",CWE-252,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
854,"define glance_config( $config_file, ) { ini_subsetting { ""${config_file}: stores"": ensure => 'present', path => $config_file, section => 'glance_store', setting => 'stores', subsetting => 'glance.store.cinder.store', subsetting_separator => ',', } -> ini_setting { ""${config_file}: default_store"": ensure => 'present', path => $config_file, section => 'glance_store', setting => 'default_store', value => 'cinder', } } notice('modular: scaleio: glance') $scaleio = hiera('scaleio') if $scaleio['metadata']['enabled'] { $all_nodes = hiera('nodes') $nodes = filter_nodes($all_nodes, 'name', $::hostname) if empty(filter_nodes($nodes, 'role', 'primary-controller')) and empty(filter_nodes($nodes, 'role', 'controller')) { fail(""glance task should be run only on controllers, but node ${::hostname} is not controller"") } if $scaleio['use_scaleio_for_glance'] { $glance_services = $::osfamily ? { 'redhat' => ['openstack-glance-api', 'openstack-glance-registry', 'openstack-glance-glare'], 'debian' => ['glance-api', 'glance-registry', 'glance-glare'], } $glance_api_config_file = '/etc/glance/glance-api.conf' $glance_glare_config_file = '/etc/glance/glance-glare.conf' package { ['python-cinderclient', 'python-os-brick', 'python-oslo.rootwrap']: ensure => 'present', } -> class {'scaleio_openstack::glance': } -> file { ""/etc/glance/rootwrap.conf"": ensure => $ensure, source => ""puppet:///modules/scaleio_fuel/glance_rootwrap.conf"", mode => '0755', owner => 'root', group => 'root', } -> file { ""/etc/sudoers.d/glance_sudoers"": ensure => $ensure, source => ""puppet:///modules/scaleio_fuel/glance_sudoers"", mode => '0644', owner => 'root', group => 'root', } -> glance_config {""${glance_api_config_file}"": config_file => $glance_api_config_file } -> glance_config {""${glance_glare_config_file}"": config_file => $glance_glare_config_file } ~> service { $glance_services: ensure => running, enable => true, } } }",1,1,"define glance_config( $config_file, ) { ini_subsetting {, file { \, file { \\, filter_nodes($all_nodes, 'role', 'controller'), glance_config { ${glance_api_config_file}:, glance_config { ${glance_glare_config_file}:, ini_setting {, service { $glance_services:","CWE-295, CWE-390, CWE-395, CWE-732, CWE-798","{'reason': 'glance task should be run only on controllers, but node ${::hostname} is not controller', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
855,"class cinder::volume ( $package_ensure = 'present', $enabled = true, $manage_service = true, $volume_clear = $::os_service_default, $volume_clear_size = $::os_service_default, $volume_clear_ionice = $::os_service_default, ) { include ::cinder::params validate_bool($manage_service) validate_bool($enabled) cinder_config<||> ~> service['cinder-volume'] cinder_api_paste_ini<||> ~> service['cinder-volume'] exec<| title == 'cinder-manage db_sync' |> ~> service['cinder-volume'] if $::cinder::params::volume_package { package['cinder'] -> package['cinder-volume'] package['cinder-volume'] -> service['cinder-volume'] package { 'cinder-volume': ensure => $package_ensure, name => $::cinder::params::volume_package, tag => ['openstack', 'cinder-package'], } } if $manage_service { if $enabled { $ensure = 'running' } else { $ensure = 'stopped' } } service { 'cinder-volume': ensure => $ensure, name => $::cinder::params::volume_service, enable => $enabled, hasstatus => true, require => package['cinder'], tag => 'cinder-service', } cinder_config { 'default/volume_clear': value => $volume_clear; 'default/volume_clear_size': value => $volume_clear_size; 'default/volume_clear_ionice': value => $volume_clear_ionice; } }",1,1,"cinder_api_paste_ini<||> ~> service['cinder-volume'], cinder_config { 'default/volume_clear': value => $volume_clear; 'default/volume_clear_size': value => $volume_clear_size; 'default/volume_clear_ionice': value => $volume_clear_ionice; }, cinder_config<||> ~> service['cinder-volume'], class cinder::volume, exec<| title == 'cinder-manage db_sync' |> ~> service['cinder-volume'], include ::cinder::params, package { 'cinder-volume': ensure => $package_ensure, name => $::cinder::params::volume_package, tag => ['openstack', 'cinder-package'], }, package['cinder'] -> service['cinder-volume'], package['cinder-volume'] -> service['cinder-volume'], service { 'cinder-volume': ensure => $ensure, name => $::cinder::params::volume_service, enable => $enabled, hasstatus => true, require => package['cinder'], tag => 'cinder-service', }","CWE-284, CWE-754","{'reason': ""This issue is related to CWE-284: Uncontrolled Recursion, CWE-754: Improper Control of Generation of Code ('Code Injection') because the class cinder::volume can have unexpected behavior in cases where a user is not allowed to run the cinder-manage db_sync command. An attacker could exploit this vulnerability by using the cinder-manage db_sync command to generate malicious code."", 'related_cwe': 'CWE-284, CWE-754', 'is_misconfiguration_related': 'Yes'}"
856,"class cluster::neutron () { package['neutron'] -> file {'/var/cache/neutron': ensure => directory, path => '/var/cache/neutron', mode => '0755', owner => neutron, group => neutron, } if !defined(package['lsof']) { package { 'lsof': } } }",0,1,"class cluster::neutron() {package[\\\\\\\\\\\\\\\\\\\\u2018neutron\\\\\\\\\\\\\\\\\\\\u2019]->file {\\\\\\\\\\\\\\\\\\\\u2018/var/cache/neutron\\\\\\\\\\\\\\\\\\\\u2019}:ensure=>directory, path=>\\\\\\\\\\\\\\\\\\\\u2019/var/cache/neutron\\\\\\\\\\\\\\\\\\\\u2019, mode=>\\\\\\\\\\\\\\\\\\\\u2019755\\\\\\\\\\\\\\\\\\\\u2019, owner=>neutron, group=>neutron, }if!defined(package[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018lsof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019]) { package {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2018lsof\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\u2019:} } }, class cluster::neutron() {package[\\\\\\\\\\\\u2018neutron\\\\\\\\\\\\u2019]->file {\\\\\\\\\\\\u2018/var/cache/neutron\\\\\\\\\\\\u2019}:ensure=>directory, path=>\\\\\\\\\\\\u2019/var/cache/neutron\\\\\\\\\\\\u2019, mode=>\\\\\\\\\\\\u2019755\\\\\\\\\\\\u2019, owner=>neutron, group=>neutron, }if!defined(package[\\\\\\\\\\\\\\\\\\\\u2018lsof\\\\\\\\\\\\\\\\\\\\u2019]) { package {\\\\\\\\\\\\\\\\\\\\u2018lsof\\\\\\\\\\\\\\\\\\\\u2019:} } }, classcluster::neutron() {package[\u2018neutron\u2019]->file {\u2018/var/cache/neutron\u2019}:ensure=>directory, path=>\u2019/var/cache/neutron\u2019, mode=>\u2019755\u2019, owner=>neutron, group=>neutron, }if!defined(package[\u2018lsof\u2019]) { package {\u2018lsof\u2019:} } }, if!defined(package[\\\\u2018lsof\\\\u2019]) { package {\\\\u2018lsof\\\\u2019: } }, if!defined(package[\u2018lsof\u2019]) { package { \u2018lsof\u2019: } }, package[\\\\\\\\\\\\u2018neutron\\\\\\\\\\\\u2019]->file {\\\\\\\\\\\\u2018/var/cache/neutron\\\\\\\\\\\\u2019}, package[\\\\u2018neutron\\\\u2019] -> file {\\\\u2018/var/cache/neutron\\\\u2019: ensure=>directory, path=>\\\\u2019/var/cache/neutron\\\\u2019, mode=>\\\\u2019755\\\\u2019, owner=>neutron, group=>neutron, } if!defined(package[\\\\u2018lsof\\\\u2019]) { package {\\\\u2018lsof\\\\u2019: } } }, package[\\u2018neutron\\u2019] -> file {\\u2018/var/cache/neutron\\u2019}, package[\\u2018neutron\\u2019]->file {\\u2018/var/cache/neutron\\u2019}, package[���neutron���] -> file {���/var/cache/neutron���}","CWE-281, CWE-284, CWE-295","{'reason': 'The misconfiguration is related to CWE-284: Insufficiently Protected Credentials. The default configuration has a user (neutron) that does not have sufficient protection from a user accessing credentials. Neutron credentials are required in order to manage OpenStack services, so an adversary that has gained access to those credentials would have the ability to execute system commands, create files, and potentially execute code that they wish to run in the OpenStack environment.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
857,"class glance::client( $ensure = 'present' ) { include ::glance::deps include ::glance::params package { 'python-glanceclient': ensure => $ensure, name => $::glance::params::client_package_name, tag => ['openstack', 'glance-support-package'], } }",1,1,"include ::glance::deps include ::glance::params, package { 'python-glanceclient': ensure => $ensure, name => $::glance::params::client_package_name, tag => ['openstack', 'glance-support-package'], }, tag => ['openstack', 'glance-support-package'], }",CWE-20,"{'reason': 'The script contains the tag \\', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
858,"class auditd($host_type) { include packages::auditd include packages::audisp_cef $packages = [ class['packages::auditd'], class['packages::audisp_cef'], ] case $host_type { 'slave': { } 'server': { } default: { fail(""invalid auditd host_type $host_type"") } } case $operatingsystem { centos: { include rsyslog service { 'auditd': ensure => running, enable => true, subscribe => $packages, hasstatus => true; } file { '/etc/audit/auditd.conf': ensure => file, require => $packages, notify => service['auditd'], owner => ""root"", group => ""root"", mode => '0600', source => ""puppet:///modules/auditd/auditd.conf""; '/etc/audisp/audispd.conf': ensure => file, require => $packages, notify => service['auditd'], owner => ""root"", group => ""root"", mode => '0600', source => ""puppet:///modules/auditd/audispd.conf""; '/etc/audisp/plugins.d/syslog.conf': ensure => file, require => $packages, notify => service['auditd'], owner => root, group => root, mode => '0600', source => ""puppet:///modules/auditd/syslog.conf""; '/var/log/audit': ensure => directory, owner => root, group => root, mode => '0700'; '/etc/audit/audit.rules': ensure => file, require => $packages, notify => service['auditd'], owner => ""root"", group => ""root"", mode => '0600', content => template(""auditd/audit.rules.erb""); } } } }",1,1,"file { '/etc/audisp/audispd.conf': ensure => file, require => $packages, notify => service['auditd'], owner =>, file { '/etc/audit/auditd.conf': ensure => file, require => $packages, notify => service['auditd'], owner =>, include packages::audisp_cef, include packages::auditd, include rsyslog, owner => root, group => root, mode => '0600', source => \, service { 'auditd': ensure => running, enable => true, subscribe => $packages, hasstatus => true;}","CWE-248: Resource Management Errors, CWE-250: Execution with Unnecessary Privileges","{'reason': 'This misconfiguration is related to CWE-248 because the default file and directory permission configuration for /etc/audisp/audispd.conf and /var/log/audit can allow unauthorized access. The owner field was not specified, so the file/directory ownership would not be enforced. A better solution would be to specify the owner and the permission should be set to 0600 to restrict access to the files.', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
859,"class gnocchi::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/gnocchi', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } $use_syslog_real = pick($::gnocchi::use_syslog,$use_syslog) $use_stderr_real = pick($::gnocchi::use_stderr,$use_stderr) $log_facility_real = pick($::gnocchi::log_facility,$log_facility) $log_dir_real = pick($::gnocchi::log_dir,$log_dir) $debug_real = pick($::gnocchi::debug,$debug) oslo::log { 'gnocchi_config': debug => $debug_real, use_syslog => $use_syslog_real, use_stderr => $use_stderr_real, log_dir => $log_dir_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, } }",1,1,"debug_real = pick($::gnocchi::debug,$debug), log_facility_real = pick($::gnocchi::log_facility,$log_facility), verbose = undef",CWE-259,"{'reason': ""The original defect was labeled as an 'Issue' in the defect tracker; however, there is no issue. The original defect simply described a use case for which there was no documented support. In a later release, it was changed to include a description of the use case as well as an example of how to apply the use case to a configuration file. The misconfiguration is not related to the provided CWE."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
860,"class swift::test_file ( $password, $auth_server = '127.0.0.1', $tenant = 'openstack', $user = 'admin' ) { include ::swift::deps file { '/tmp/swift_test_file.rb': mode => '0755', content => template('swift/swift_keystone_test.erb'), tag => 'swift-file', } }",1,1,"auth_server = '127.0.0.1', content = template('swift/swift_keystone_test.erb'), file { '/tmp/swift_test_file.rb':, include ::swift::deps, mode => '0755', password ='secret', tag =>'swift-file', template('swift/swift_keystone_test.erb'), tenant = 'openstack', user = 'admin'","CWE-284, CWE-285","{'reason': ""The template for swift_keystone_test.rb is included in the swift::test_file class definition. Therefore, we do not expect any sensitive data (for example, keys, passwords, or tokens) to be defined in this class. This may be an instance of CWE-285: Improper Verification of Key Cardinality Rules. However, it's unclear if this instance is related to the misconfiguration. We should gather more information about this misconfiguration before we can make any definitive statements about its relation to CWE-285."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
861,"exec { logoutput => 'on_failure' } node glance_keystone_mysql { class { '::mysql::server': } class { '::keystone': debug => true, catalog_type => 'sql', admin_token => 'admin_token', } class { '::keystone::db::mysql': password => 'keystone', } class { '::keystone::roles::admin': email => 'test@puppetlabs.com', password => 'changeme', } class { '::glance::api': debug => true, auth_type => 'keystone', keystone_tenant => 'services', keystone_user => 'glance', keystone_password => 'glance_password', database_connection => 'mysql://glance:glance@127.0.0.1/glance', } class { '::glance::backend::file': } class { '::glance::db::mysql': password => 'glance', dbname => 'glance', user => 'glance', host => '127.0.0.1', } class { '::glance::registry': debug => true, auth_type => 'keystone', keystone_tenant => 'services', keystone_user => 'glance', keystone_password => 'glance_password', database_connection => 'mysql://glance:glance@127.0.0.1/glance', } class { '::glance::keystone::auth': password => 'glance_pass', } } node default { fail(""could not find a matching node entry for ${clientcert}"") }",1,1,"admin_token => 'admin_token',, debug => true,, password => 'glance',, password => 'glance_pass',, password => 'glance_password',, password => 'keystone',",CWE-732,"{'reason': 'Admin token value is not unique. There could be multiple admins with the same token value.', 'related_cwe': '732', 'is_misconfiguration_related': 'Yes'}"
862,"class magnum::config ( $magnum_config = {}, $magnum_api_paste_ini = {}, ) { validate_hash($magnum_config) validate_hash($magnum_api_paste_ini) create_resources('magnum_config', $magnum_config) create_resources('magnum_api_paste_ini', $magnum_api_paste_ini) }",0,1,"create_resources('magnum_api_paste_ini', $magnum_api_paste_ini), create_resources('magnum_config', $magnum_config), magnum::config ( $magnum_config = {}, $magnum_api_paste_ini = {}, ) { validate_hash($magnum_config) validate_hash($magnum_api_paste_ini) create_resources('magnum_config', $magnum_config) create_resources('magnum_api_paste_ini', $magnum_api_paste_ini) }, validate_hash($magnum_api_paste_ini), validate_hash($magnum_config)",CWE-1258,"{'reason': ""The vulnerability is related to the script misconfiguration as it allows an attacker to view private configuration details of the magnum services. The user's credentials need to be guessed or cracked."", 'related_cwe': 'CWE-1258', 'is_misconfiguration_related': 'Yes'}"
863,"class vitrage::config ( $vitrage_config = {}, $vitrage_api_paste_ini = {}, ) { validate_hash($vitrage_config) validate_hash($vitrage_api_paste_ini) create_resources('vitrage_config', $vitrage_config) create_resources('vitrage_api_paste_ini', $vitrage_api_paste_ini) }",0,1,"create_resources('vitrage_api_paste_ini', $vitrage_api_paste_ini), validate_hash($vitrage_api_paste_ini), validate_hash($vitrage_config), vitrage::config","CWE-306, CWE-327","{'reason': 'The vulnerability found by CWE-327 represents the creation of an unauthorized resource with a sensitive data attribute, which is clearly not related to this misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
864,class { '::osnailyfacter::ceph::radosgw' :} class { '::osnailyfacter::upgrade::ceph_service' :},1,1,"class { '::osnailyfacter::ceph::radosgw' :, class { '::osnailyfacter::upgrade::ceph_service' :",CWE-1031,"{'reason': ""The class {} ::osnailyfacter::ceph::radosgw' : class { ::osnailyfacter::upgrade::ceph_service' :, class { is used to configure osnailyfacter::ceph::radosgw and osnailyfacter::upgrade::ceph_service classes.\\n\\nIn puppet, class {} { means that we are declaring a new class called [Your name]::class_name\\nThis is done to avoid namespace collisions.\\n\\nAs per the definition of CWE-1031:\\n\\nCWE-1031: Incorrect Usage\\n\\nIncorrect usage occurs when a component is used in an unexpected manner, or for an unintended purpose. This includes using the component incorrectly and using it in unintended ways"", 'related_cwe': 'CWE-1031', 'is_misconfiguration_related': 'Yes'}"
865,"class needs_reboot::motd { if ($::needs_reboot) { motd { 'needs_reboot': content => template(""${module_name}/motd.erb""); } } }",1,1,"class needs_reboot::motd {\\\\n\\\\tif ($::needs_reboot) {\\\\n\\\\t\\\\tramote, class needs_reboot::motd {\\n\\tif ($::needs_reboot) {\\n\\t\\tramote, class needs_reboot::motd {\n\tif ($::needs_reboot) {\n\t\tramote \, if ($::needs_reboot) {\\\\\\\\n\\\\\\\\t\\\\\\\\tramote, if ($::needs_reboot) {\\\\n\\\\t\\\\tramote, if ($::needs_reboot) {\\n\\t\\tramote",CWE-19,"{'reason': 'The Puppet code provided shows a template defined with a filename matching the module name. It also shows the template variable being defined with the string module name and filename of the module. This is a very common configuration mistake and could be exploited through a template injection attack. While this specific example will not work, this could be a vulnerability if the template file contained sensitive data or if the data was changed in a way that could compromise the system.', 'related_cwe': 'CWE-19, CWE-20, CWE-21', 'is_misconfiguration_related': 'Yes'}"
866,"class manila::share::generic ( $driver_handles_share_servers, $smb_template_config_path = '$state_path/smb.conf', $volume_name_template = 'manila-share-%s', $volume_snapshot_name_template = 'manila-snapshot-%s', $share_mount_path = '/shares', $max_time_to_create_volume = 180, $max_time_to_attach = 120, $service_instance_smb_config_path = '$share_mount_path/smb.conf', $share_volume_fstype = 'ext4', $share_helpers = ['cifs=manila.share.drivers.helpers.cifshelperipaccess', 'nfs=manila.share.drivers.helpers.nfshelper'], $cinder_volume_type = undef, $delete_share_server_with_last_share = 'false', $unmanage_remove_access_rules = 'false', $automatic_share_server_cleanup = 'true', ) { manila::backend::generic { 'default': driver_handles_share_servers => $driver_handles_share_servers, smb_template_config_path => $smb_template_config_path, volume_name_template => $volume_name_template, volume_snapshot_name_template => $volume_snapshot_name_template, share_mount_path => $share_mount_path, max_time_to_create_volume => $max_time_to_create_volume, max_time_to_attach => $max_time_to_attach, service_instance_smb_config_path => $service_instance_smb_config_path, share_helpers => $share_helpers, share_volume_fstype => $share_volume_fstype, cinder_volume_type => $cinder_volume_type, delete_share_server_with_last_share => $delete_share_server_with_last_share, unmanage_remove_access_rules => $unmanage_remove_access_rules, automatic_share_server_cleanup => $automatic_share_server_cleanup, } }",0,1,"share_helpers => $share_helpers,, share_volume_fstype => $share_volume_fstype,","CWE-284, CWE-319","{'reason': 'Both misconfiguration and CWE relate to the problem of passing a string to the value of a boolean flag.', 'related_cwe': 'CWE-319', 'is_misconfiguration_related': 'Yes'}"
867,"class disableservices::slave inherits disableservices::common { include disableservices::iptables include disableservices::displaymanager include disableservices::notification_daemon if $operatingsystem == ""ubuntu"" { include disableservices::release_upgrader } }",1,1,"class disableservices::slave inherits disableservices::common { include disableservices::iptables include disableservices::displaymanager include disableservices::notification_daemon if $operatingsystem == \, class disableservices::slave inherits disableservices::common { include disableservices::iptables include disableservices::displaymanager include disableservices::notification_daemon if $operatingsystem == \\, if $operatingsystem == \, if $operatingsystem == \\, if $operatingsystem == \\\, if $operatingsystem == \\\\\\\, if $operatingsystem == \\\\\\\\\\\\\, include disableservices::release_upgrader } }",CWE-829,"{'reason': ""CWE-829 is about unexpected side effects of code changes, in this case it was due to a string comparison issue with the '==' operator."", 'related_cwe': 'CWE-829', 'is_misconfiguration_related': 'Yes'}"
868,class role::nuke { mediawiki::extension { 'nuke': } },0,1,"mediawiki::extension { 'nuke': }, mediawiki::extension { \\\\\\\\u0027nuke\\\\\\\\u0027: }, mediawiki::extension { \\\\u0027nuke\\\\u0027: }, mediawiki::extension { \\u0027nuke\\u0027: }, mediawiki::extension { \u0027nuke\u0027: }",CWE-22,"{'reason': 'CWE-22', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
869,class { '::openstack_tasks::heat::heat' :} class mysql::server {} class mysql::config {} include mysql::server include mysql::config warning('osnailyfacter/modular/./heat/heat.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./heat/heat.pp'),1,1,"class mysql::server {} class mysql::config {}, class { '::openstack_tasks::heat::heat' :}, include mysql::config, include mysql::server, mysql::config, mysql::server, warning('osnailyfacter/modular/./heat/heat.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./heat/heat.pp')","CWE-19, CWE-20","{'reason': 'CWE-19 is related to the issue', 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
870,"class mozpool::dbcron { include packages::mysql include packages::httpd $dbcron_sh = ""/opt/mozpool/dbcron.sh"" file { $dbcron_sh: content => template(""mozpool/dbcron.sh.erb""), mode => 0755, show_diff => false; } if ($is_bmm_admin_host) { file { ""/etc/cron.d/mozpool-dbcron"": content => ""0 0 * * * apache $dbcron_sh\n"", require => class['packages::httpd']; } } else { file { ""/etc/cron.d/mozpool-dbcron"": ensure => absent; } } }",1,1,"0 0 * * * \\, 0 0 * * * apache \\\\, apache $dbcron_sh \\\\, apache \, apache \\, ensure => absent, file { \, file { \\",CWE-22,"{'reason': 'The misconfiguration is not related to the CWE because the template variable \\', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
871,"class l23network::hosts_file ( $nodes, $hosts_file = '/etc/hosts' ) { $host_resources = nodes_to_hosts($nodes) host { ensure => present, target => $hosts_file } create_resources(host, $host_resources) }",1,1,"class l23network::hosts_file ( $nodes, $hosts_file = '/etc/hosts' ) {, class l23network::hosts_file ( $nodes, $hosts_file = '/etc/hosts' ) { $host_resources = nodes_to_hosts($nodes), class l23network::hosts_file ( $nodes, $hosts_file = '/etc/hosts' ) { $host_resources = nodes_to_hosts($nodes) host { ensure => present, target => $hosts_file } create_resources(host, $host_resources) }, create_resources(host, $host_resources), host { ensure => present, target => $hosts_file }, hosts_file = '/etc/hosts' ) {, nodes_to_hosts($nodes), nodes_to_hosts($nodes) host { ensure => present, target => $hosts_file } create_resources(host, $host_resources) }","CWE-22, CWE-22, CWE-74, CWE-23, CWE-74","{'reason': 'Host Resources must be configured using a separate parameter, e.g. a hash (map), instead of being a part of another parameter.', 'related_cwe': 'CWE-22, CWE-23, CWE-74', 'is_misconfiguration_related': 'Yes'}"
872,"class trove::db::postgresql( $password, $dbname = 'trove', $user = 'trove', $encoding = undef, $privileges = 'all', ) { include ::trove::deps validate_string($password) ::openstacklib::db::postgresql { 'trove': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } anchor['trove::db::begin'] ~> class['trove::db::postgresql'] ~> anchor['trove::db::end'] }",0,1,"class['trove::db::postgresql'] ~> anchor['trove::db::end'], postgres, validate_string($password)","CWE-319, CWE-327, CWE-362","{'reason': 'Postgres configuration could be a problem due to improper password handling.', 'related_cwe': 'CWE-319, CWE-327, CWE-362', 'is_misconfiguration_related': 'Yes'}"
873,"class packstack::neutron::lbaas () { class { '::neutron::agents::lbaas': interface_driver => hiera('config_neutron_lbaas_interface_driver'), device_driver => 'neutron_lbaas.services.loadbalancer.drivers.haproxy.namespace_driver.haproxynsdriver', user_group => 'haproxy', enable_v1 => false, enable_v2 => true, debug => hiera('config_debug_mode'), } class {'::neutron::services::lbaas': service_providers => 'loadbalancer:haproxy:neutron_lbaas.services.loadbalancer.drivers.haproxy.plugin_driver.haproxyonhostplugindriver:default', } }",0,1,"class { '::neutron::agents::lbaas':, class {'::neutron::services::lbaas':, debug => hiera('config_debug_mode'),, device_driver => 'neutron_lbaas.services.loadbalancer.drivers.haproxy.namespace_driver.haproxynsdriver',, enable_v1 => false,, enable_v2 => true,, interface_driver => hiera('config_neutron_lbaas_interface_driver'),, service_providers => 'loadbalancer:haproxy:neutron_lbaas.services.loadbalancer.drivers.haproxy.plugin_driver.haproxyonhostplugindriver:default',, user_group => 'haproxy',, }","CWE-20, CWE-345, CWE-347","{'reason': 'This script allows untrusted users to add a driver for neutron-lbaas services with default parameters and enables the load balancer in both versions. This could be a major security vulnerability that can cause a DoS attack as it enables the load balancer, without restrictions.', 'related_cwe': 'CWE-20, CWE-345, CWE-347', 'is_misconfiguration_related': 'Yes'}"
874,"class slaveapi::base { include dirs::builds include users::builder include packages::mozilla::python27 include packages::libevent include packages::openssl include packages::libevent include packages::gcc include packages::openipmi include packages::snmp include nrpe::check::procs_regex $compiler_req = class['packages::gcc'] $root = ""/builds/slaveapi"" file { $root: ensure => directory, owner => $users::builder::username, group => $users::builder::group, mode => 700; } motd { ""slaveapi"": content => ""the following slaveapi instances are hosted here:\n"", order => 90; } }",0,1,"file { $root: ensure => directory, owner => $users::builder::username, group => $users::builder::group, mode => 700;}, include nrpe::check::procs_regex, include packages::gcc, include packages::libevent, include packages::mozilla::python27, include packages::openipmi, include packages::openssl, include packages::snmp, include users::builder",CWE-306: Missing Authentication for Critical Function,"{'reason': 'the owner and group attributes were set to builder in the file resource, which should have been set to the root user.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
875,"class tripleo::profile::base::ceph::osd ( $ceph_osd_selinux_permissive = false, $step = hiera('step'), ) { include ::tripleo::profile::base::ceph if $step >= 3 { if $ceph_osd_selinux_permissive { exec { 'set selinux to permissive on boot': command => ""sed -ie 's/^selinux=.*/selinux=permissive/' /etc/selinux/config"", onlyif => ""test -f /etc/selinux/config && ! grep '^selinux=permissive' /etc/selinux/config"", path => ['/usr/bin', '/usr/sbin'], } exec { 'set selinux to permissive': command => 'setenforce 0', onlyif => ""which setenforce && getenforce | grep -i 'enforcing'"", path => ['/usr/bin', '/usr/sbin'], } -> class['ceph::profile::osd'] } include ::ceph::profile::osd } }",1,1,"include ::ceph::profile::osd, include ::tripleo::profile::base::ceph, include ::tripleo::profile::base::ceph::osd",CWE-601,"{'reason': ""In the puppet script above, the user is attempting to disable SELinux temporarily on ceph nodes. In order to do so, the script is attempting to remove the'selinux=enforcing' flag on the ceph nodes, and insert'selinux=permissive' instead. Then, if SELinux is actually enabled, the script is also attempting to set SELinux to the permissive mode. Both these actions can be performed only by users with root/administrative privileges on the ceph nodes. This is why SELinux related CWEs are associated with this misconfiguration."", 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
876,"class tripleo::profile::pacemaker::core ( $bootstrap_node = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf { 'openstack-core': ocf_agent_name => 'heartbeat:dummy', clone_params => 'interleave=true', } } if $step >= 5 and $pacemaker_master { pacemaker::constraint::base { 'galera-then-openstack-core-constraint': constraint_type => 'order', first_resource => 'galera-master', second_resource => 'openstack-core-clone', first_action => 'promote', second_action => 'start', require => [pacemaker::resource::ocf['galera'], pacemaker::resource::ocf['openstack-core']], } } }",0,1,"if $::hostname == downcase($bootstrap_node), if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false }, if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf { 'openstack-core': ocf_agent_name => 'heartbeat:dummy', clone_params => 'interleave=true', } }, if $step >= 5 and $pacemaker_master { pacemaker::constraint::base { 'galera-then-openstack-core-constraint': constraint_type => 'order', first_resource => 'galera-master', second_resource => 'openstack-core-clone', first_action => 'promote', second_action =>'start', require => [pacemaker::resource::ocf['galera'], pacemaker::resource::ocf['openstack-core']], } }, pacemaker::constraint::base { 'galera-then-openstack-core-constraint': constraint_type => 'order', first_resource => 'galera-master', second_resource => 'openstack-core-clone', first_action => 'promote', second_action =>'start', require => [pacemaker::resource::ocf['galera'], pacemaker::resource::ocf['openstack-core']], }",CWE-306,"{'reason': ""When setting up Pacemaker, this puppet module ensures that the galera service is started before starting the openstack-core service. The condition that determines when the openstack-core service should be started is: if $::hostname == downcase($bootstrap_node), if $step >= 2 and $pacemaker_master { pacemaker::resource::ocf { 'openstack-core': ocf_agent_name => 'heartbeat:dummy', clone_params => 'interleave=true', } }. This is a vulnerability, as it means that the openstack-core service is not necessarily started after the galera service has been promoted. For more details, see: https://docs.openstack.org/hacking-guide/latest/defects.html#defects-undes"", 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
877,"class xvfb( $display = 99, $resolution = '1024x768x24', ) { require_package('xvfb') group { 'xvfb': ensure => present, } user { 'xvfb': ensure => present, gid => 'xvfb', shell => '/bin/false', home => '/nonexistent', system => true, } file { '/etc/init/xvfb.conf': content => template('xvfb/xvfb.conf.erb'), require => [ package['xvfb'], user['xvfb'] ], } service { 'xvfb': ensure => running, enable => true, provider => 'upstart', require => file['/etc/init/xvfb.conf'], } }",0,1,"file { '/etc/init/xvfb.conf': content => template('xvfb/xvfb.conf.erb'), require => [ package['xvfb'], user['xvfb'] ], }\\n, file { '/etc/init/xvfb.conf': content => template('xvfb/xvfb.conf.erb'), require => [ package['xvfb'], user['xvfb'] ], }\nservice { 'xvfb': ensure => running, enable => true, provider => 'upstart', require => file['/etc/init/xvfb.conf'], }\n, file { '/etc/init/xvfb.conf':\\\\n\\\\tcontent => template('xvfb/xvfb.conf.erb'),\\\\n\\\\trequire => [ package['xvfb'], user['xvfb'] ],\\\\n\\\\t}, file { '/etc/init/xvfb.conf':\\n\\tcontent => template('xvfb/xvfb.conf.erb'),\\n\\trequire => [ package['xvfb'], user['xvfb'] ],\\n\\t}, require package('xvfb'), require package('xvfb')\\nuser {\\n\\tensure => present, gid => 'xvfb', shell => '/bin/false', home => '/nonexistent', system => true, \\n\\t'}\\n, require package('xvfb')\nuser {\n\n\t': ensure => present, gid => 'xvfb', shell => '/bin/false', home => '/nonexistent', system => true, \n\t'}\n, service { 'xvfb': ensure => running, enable => true, provider => 'upstart', require => file['/etc/init/xvfb.conf'], }, user {'xvfb': ensure => present, gid => 'xvfb', shell => '/bin/false', home => '/nonexistent', system => true, }","CWE-248, CWE-384, CWE-703","{'reason': ""1. CWE-248: A user was added to a group. A group with the name 'xvfb' was created to which user 'xvfb' belongs. 2. CWE-384: The script created a user to which the service belongs, and a file (xvfb.conf) is associated with the user. 3. CWE-703: Service 'xvfb' uses provider 'upstart' with '/etc/init/xvfb.conf' as its configuration file."", 'related_cwe': 'CWE-248, CWE-384, CWE-703', 'is_misconfiguration_related': 'Yes'}"
878,class { '::openstack_tasks::murano::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server class murano::api {} include murano::api warning('osnailyfacter/modular/./murano/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/db.pp'),1,1,"class murano::api {} include murano::api, class mysql::config {} include mysql::config class mysql::server {} include mysql::server class murano::api {} include murano::api, class mysql::config {} include mysql::config class mysql::server {} include mysql::server class murano::api {} include murano::api warning('osnailyfacter/modular/./murano/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/db.pp'), class { '::openstack_tasks::murano::db' :}, class { '::openstack_tasks::murano::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server class murano::api {} include murano::api warning('osnailyfacter/modular/./murano/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/db.pp'), include murano::api, include mysql::config, include mysql::server, warning('osnailyfacter/modular/./murano/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/db.pp')",CWE-257,"{'reason': 'This misconfiguration is not related to CWE-257. The reason that this misconfiguration is not related to CWE-257 is that: the misconfiguration is related to a lack of input validation, while CWE-257 is not related to the lack of input validation.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
879,"class role::notebook { package { [ 'nbconvert', 'ipython', 'bleach', ]: ensure => present, provider => pip, } mediawiki::extension { 'notebookviewer': } }",0,1,"provider => pip,",CWE-937,"{'reason': 'The provided misconfiguration could be related to CWE-937 due to it involving the installation of an unnecessary dependency that could increase the attack surface for a compromised system.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
880,"class needs_reboot { include needs_reboot::motd exec { ""reboot_semaphore"": command => $::operatingsystem ? { windows => ""type nul > c:/reboot_after_puppet"", default => ""touch /reboot_after_puppet"", }, path => ['/bin/', '/usr/bin/'], refreshonly => true; } if $needs_reboot { file { '/reboot_after_puppet': ensure => file; } } }",0,1,"exec { \, exec { \\, exec { \\\\, exec { \\\\\\\\, exec { \\\\\\\\\\\\\\\\\\\\\\\\\\, exec { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, exec {{'reason': ""The exec statement, 'exec {"", 'related_cwe': 'CWE-270', 'is_misconfiguration_related': 'Yes'}"
881,"class virtual_accelerator { exec { path => [ '/bin/', '/sbin/' , '/usr/bin/', '/usr/sbin/' ] } $settings = hiera('6wind-virtual-accelerator', {}) $advanced_params = $settings['advanced_params_enabled'] $fp_mem = $settings['fp_mem'] $vm_mem = $settings['vm_mem'] $va_conf_file = '' $disable_ipset = $settings['disable_ipset'] $enable_host_cpu = $settings['enable_host_cpu'] $va_version = $settings['va_version'] $mellanox_support = $settings['mellanox_support'] if $settings['va_conf_file'] { $va_conf_file = $settings['va_conf_file'][content] } if $settings['va_license_file'] { $va_license_file = $settings['va_license_file'][content] } }",0,1,"class virtual_accelerator { exec { path => [ '/bin/', '/sbin/', '/usr/bin/', '/usr/sbin/' ] }, exec { path => [ '/bin/', '/sbin/', '/usr/bin/', '/usr/sbin/' ] }",CWE-327: Use of a Broken or Risky Cryptographic Algorithm,"{'reason': 'This issue is related to CWE-327 because this vulnerability describes the use of broken algorithms or a risky algorithm (i.e. those that have been compromised or cracked) that should not be used.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
882,"define nova::manage::network ( $network, $label = 'novanetwork', $num_networks = 1, $network_size = 255, $vlan_start = undef, $project = undef, $allowed_start = undef, $allowed_end = undef, $dns1 = undef, $dns2 = undef ) { include ::nova::deps nova_network { $name: ensure => present, network => $network, label => $label, num_networks => $num_networks, network_size => $network_size, project => $project, vlan_start => $vlan_start, allowed_start => $allowed_start, allowed_end => $allowed_end, dns1 => $dns1, dns2 => $dns2, } }",1,1,"include ::nova::deps nova_network { $name: ensure => present, network => $network, label => $label, num_networks => $num_networks, network_size => $network_size, project => $project, vlan_start => $vlan_start, allowed_start => $allowed_start, allowed_end => $allowed_end, dns1 => $dns1, dns2 => $dns2, }, nova_network { $name: ensure => present, network => $network, label => $label, num_networks => $num_networks, network_size => $network_size, project => $project, vlan_start => $vlan_start, allowed_start => $allowed_start, allowed_end => $allowed_end, dns1 => $dns1, dns2 => $dns2, }",CWE-732,"{'reason': 'This misconfiguration allows multiple networks with the same network name to be created with the specified network name as the input, which results in overlapping network names. This can lead to unexpected behavior within the network, as well as resource starvation. The specified network name is the key element in the creation of network resources, which in turn enables the network to be assigned to virtual machines.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
883,"class heat::db::postgresql( $password, $dbname = 'heat', $user = 'heat', $encoding = undef, $privileges = 'all', ) { include ::heat::deps ::openstacklib::db::postgresql { 'heat': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } anchor['heat::db::begin'] ~> class['heat::db::postgresql'] ~> anchor['heat::db::end'] }",1,1,"class['heat::db::postgresql'], include ::heat::deps","CWE-119, CWE-125, CWE-20, CWE-22, CWE-24, CWE-29, CWE-319, CWE-89","{'reason': 'This misconfiguration is related to CWE 125 since it creates a user in a PostgresSQL DB, the password_hash attribute is defined, and an invalid password is set, allowing for authentication to occur. It also allows for the creation of a user with any password. Any password is a weak authentication practice which is vulnerable to brute force attacks. This misconfiguration is also related to CWE 22 since any user can gain access to the PostgresSQL DB with any password. Any password is a weak authentication practice which is vulnerable to brute force attacks.', 'related_cwe': 'CWE-125, CWE-22, CWE-319', 'is_misconfiguration_related': 'Yes'}"
884,"class osnailyfacter::astute::dump_rabbitmq_definitions { notice('modular: astute/dump_rabbitmq_definitions.pp') $definitions_dump_file = '/etc/rabbitmq/definitions' $original_definitions_dump_file = '/etc/rabbitmq/definitions.full' $rabbit_hash = hiera_hash('rabbit', { 'user' => false, 'password' => false, } ) $rabbit_enabled = pick($rabbit_hash['enabled'], true) $management_bind_ip_address = hiera('management_bind_ip_address', '127.0.0.1') $management_port = hiera('rabbit_management_port', '15672') if ($rabbit_enabled) { $rabbit_api_endpoint = ""http://${management_bind_ip_address}:${management_port}/api/definitions"" dump_rabbitmq_definitions { $original_definitions_dump_file: user => $rabbit_hash['user'], password => $rabbit_hash['password'], url => $rabbit_api_endpoint, } ~> exec { 'rabbitmq-dump-clean': path => ['/usr/bin', '/usr/sbin', '/sbin', '/bin'], command => ""rabbitmq-dump-clean.py < ${original_definitions_dump_file} > ${definitions_dump_file}"", refreshonly => true, } file { [$definitions_dump_file, $original_definitions_dump_file]: ensure => file, owner => 'root', group => 'root', mode => '0600', } } }",0,1,"$original_definitions_dump_file = '/etc/rabbitmq/definitions.full', pick($rabbit_hash['enabled'], true), rabbit_enabled = pick($rabbit_hash['enabled'], true), rabbit_hash = hiera_hash('rabbit', { 'user' => false, 'password' => false, } ), rabbit_hash['password'], rabbit_hash['user']",CWE-257,"{'reason': ""The script has a flaw in its logic. The rabbit_hash['enabled'] value can never be false. The reason is that hiera_hash('rabbit', { 'user' => false, 'password' => false, } ) returns a boolean that is always true. Because pick returns the first value it is given, the rabbit_hash['enabled'] value will always be true and rabbit_enabled will always be true. It would be better to use 'pick($rabbit_hash['enabled'], true)' in the dump_rabbitmq_definitions block, as this will ensure that the user and password will always be used, rather than relying on the default value of false."", 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
885,"class mellanox_openstack::controller_sriov ( $eswitch_vnic_type, $eswitch_apply_profile_patch, $mechanism_drivers, $mlnx_driver, $network_type, $mlnx_sriov, $pci_vendor_devices, $agent_required, $use_mlnx_neo ) { include neutron::params $server_service = $neutron::params::server_service $dhcp_agent = $neutron::params::dhcp_agent_service include mellanox_openstack::params $package = $::mellanox_openstack::params::neutron_mlnx_packages_controller package { $package : ensure => installed, } nova_config { 'default/scheduler_default_filters': value => 'retryfilter, availabilityzonefilter, ramfilter, computefilter, computecapabilitiesfilter, imagepropertiesfilter, pcipassthroughfilter' } if $use_mlnx_neo{ $sdn_extra_mechanism_driver='sdnmechdriver,' }else{ $sdn_extra_mechanism_driver='' } if ( $network_type == 'ethernet' ){ $ml2_extra_mechanism_driver = ""${sdn_extra_mechanism_driver}sriovnicswitch"" neutron_plugin_ml2 { 'ml2/mechanism_drivers': value => ""${ml2_extra_mechanism_driver},${mechanism_drivers}""; 'ml2_sriov/supported_pci_vendor_devs': value => $pci_vendor_devices; 'ml2_sriov/agent_required': value => $agent_required; } } else { $ml2_extra_mechanism_driver = ""${sdn_extra_mechanism_driver}mlnx"" neutron_plugin_ml2 { 'eswitch/vnic_type': value => $eswitch_vnic_type; 'eswitch/apply_profile_patch': value => $eswitch_apply_profile_patch; 'ml2/mechanism_drivers': value => ""${ml2_extra_mechanism_driver},${mechanism_drivers}""; } } service { $server_service : ensure => running } package[$package] -> neutron_plugin_ml2 <||> ~> service[$server_service] if ( $mlnx_driver == 'eth_ipoib' ){ neutron_dhcp_agent_config { 'default/dhcp_driver' : value => 'networking_mlnx.dhcp.mlnx_dhcp.mlnxdnsmasq', } neutron_dhcp_agent_config { 'default/dhcp_broadcast_reply' : value => 'true', } service { $dhcp_agent : ensure => running, enable => true, provider => pacemaker, subscribe => [neutron_dhcp_agent_config['default/dhcp_driver'], neutron_dhcp_agent_config['default/dhcp_broadcast_reply']], } } }",1,1,"if $use_mlnx_neo{ $sdn_extra_mechanism_driver='sdnmechdriver,' }else{ $sdn_extra_mechanism_driver='' }, if ( $network_type == 'ethernet' ){ $ml2_extra_mechanism_driver =, include neutron::params, neutron_dhcp_agent_config {'default/dhcp_broadcast_reply' : value => 'true', }, neutron_dhcp_agent_config {'default/dhcp_driver' : value => 'networking_mlnx.dhcp.mlnx_dhcp.mlnxdnsmasq', }, neutron_plugin_ml2 {'ml2_sriov/supported_pci_vendor_devs': value => $pci_vendor_devices;, nova_config { 'default/scheduler_default_filters': value =>'retryfilter, availabilityzonefilter, ramfilter, computefilter, computecapabilitiesfilter, imagepropertiesfilter, pcipassthroughfilter' }, package { $package : ensure => installed, }, package[$package] -> neutron_plugin_ml2 <||> ~> service[$server_service], service {$server_service : ensure => running }",CWE-295,"{'reason': 'The use of the variable `$use_mlnx_neo` is redundant as it only contains a condition that will always evaluate to false. The variable is never changed and therefore is pointless, especially in the context of the current implementation of the script. It should not be present in the script and is an easy way to introduce additional security issues that are not relevant.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'No'}"
886,"class role::livingstyleguide { mediawiki::wiki {'livingstyleguide': } mediawiki::extension { 'oouiplayground': composer => true, wiki => 'livingstyleguide', } mediawiki::skin { 'blueprint': default => true, composer => true, wiki => 'livingstyleguide', } }",0,1,"mediawiki::extension { 'oouiplayground':, mediawiki::skin { 'blueprint':, mediawiki::wiki {'livingstyleguide':, wiki => 'livingstyleguide',",CWE-1201,"{'reason': 'The misconfiguration is related to the CWE, because the misconfiguration causes a security issue that violates the rule, allowing the attacker to gain unauthenticated access to the vulnerable web server.', 'related_cwe': 'CWE-1201', 'is_misconfiguration_related': 'Yes'}"
887,"class buildslave::startup::runner { case $::operatingsystem { 'centos': { file { ""/etc/init.d/buildbot"": ensure => absent, notify => exec['bb-service-delete']; } exec { 'bb-service-delete': command => ""/bin/find /etc/rc.d -type l -name '*buildbot' | /usr/bin/xargs /bin/rm"", refreshonly => true; } } 'ubuntu': { file { ""${::users::builder::home}/.config/autostart/gnome-terminal.desktop"": ensure => absent; } } 'darwin': { include runner::tasks::darwin_clean_buildbot file { ""/library/launchagents/com.mozilla.buildslave.plist"": ensure => absent; } } } include runner::tasks::cleanslate_task include runner::tasks::post_flight include runner::tasks::buildbot include runner::tasks::halt }",0,1,"case $::operatingsystem {'centos': { file { '/etc/init.d/buildbot': ensure => absent, notify => exec['bb-service-delete']; } exec { 'bb-service-delete': command => '/bin/find /etc/rc.d -type l -name \'*buildbot\' | /usr/bin/xargs /bin/rm', refreshonly => true; } } }, file { '${::users::builder::home}/.config/autostart/gnome-terminal.desktop': ensure => absent; }, file { '/etc/init.d/buildbot': ensure => absent, notify => exec['bb-service-delete']; }, file { '/library/launchagents/com.mozilla.buildslave.plist': ensure => absent; }, include runner::tasks::darwin_clean_buildbot file { '/library/launchagents/com.mozilla.buildslave.plist': ensure => absent; }, include runner::tasks::post_flight include runner::tasks::buildbot include runner::tasks::halt }",CWE-284,"{'reason': ""This file is needed to start and stop the buildbot service. It's being removed to prevent service misconfiguration"", 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
888,class congress { include ::congress::params },1,1,class congress { include ::congress::params },"CWE-120, CWE-129, CWE-130, CWE-184, CWE-190, CWE-20, CWE-23, CWE-78, CWE-94, CWE-96","{'reason': 'The given misconfiguration is related to CWE-96.', 'related_cwe': 'CWE-96', 'is_misconfiguration_related': 'Yes'}"
889,"class cinder::db::mysql ( $password, $dbname = 'cinder', $user = 'cinder', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ) { validate_string($password) ::openstacklib::db::mysql { 'cinder': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['cinder'] ~> exec<| title == 'cinder-manage db_sync' |> }",1,1,"collate => $collate,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  allowed_hosts => $allowed_hosts,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, collate => $collate,\\\\\\\\n  allowed_hosts => $allowed_hosts,\\\\\\\\n\\\\n}, collate => $collate,\\\\n  allowed_hosts => $allowed_hosts,\\\\n\\n}, openstacklib::db::mysql {\n  'cinder':\n, openstacklib::db::mysql[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  'cinder']\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nopenstacklib::db::mysql[\\\\\\\\n  'cinder']\\\\\\\\n\\\\\\\\\\\\\\\\t~>\\\\\\\\n  exec[\\\\\\\\n    title == 'cinder-manage db_sync'\\\\\\\\n  ]\\\\\\\\n\\\\\\\\\\\\\\\\n}, openstacklib::db::mysql[\\n  'cinder']\\n\\\\t~>\\n  exec[\\n    title == 'cinder-manage db_sync'\\n  ]\\n\\\\n}, user => $user,\\\\\\\\\\\\\\\\\\\\n  password_hash => mysql_password($password),\\\\\\\\\\\\\\\\\\\\n  dbname => $dbname,\\\\\\\\\\\\\\\\\\\\n  host => $host,\\\\\\\\\\\\\\\\\\\\n, user => $user,\\\\n  password_hash => mysql_password($password),\\\\n  dbname => $dbname,\\\\n  host => $host,\\\\n, user => $user,\\n  password_hash => mysql_password($password),\\n  dbname => $dbname,\\n  host => $host,\\n",CWE-295,"{'reason': 'Reasons why the misconfiguration is related to the CWE.', 'related_cwe': 'CWE number(s) related to the issue.', 'is_misconfiguration_related': 'Yes'}"
890,class { '::osnailyfacter::ssl::ssl_keys_saving' :},1,1,class { '::osnailyfacter::ssl::ssl_keys_saving' :},CWE-295,"{'reason': 'CWE 295 is associated with misconfigured file permissions that may enable unauthorized processes to read/write to the file, resulting in data corruption. This misconfiguration is related to CWE 295 as a misconfigured file location could allow data corruption if a file is not properly protected, leading to data leakage. Additionally, there is a possible file name misconfiguration for the SSL certificate, which could lead to the misconfiguration being applied to a file that does not contain any private keys, leading to an unnecessary file being used instead.', 'related_cwe': '295', 'is_misconfiguration_related': 'Yes'}"
891,class { '::openstack_tasks::murano::keystone' :} warning('osnailyfacter/modular/./murano/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone.pp'),1,1,"class { '::openstack_tasks::murano::keystone' :}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, class { '::openstack_tasks::murano::keystone' :}\\\\\\\\n, class { '::openstack_tasks::murano::keystone' :}\\n, class { '::openstack_tasks::murano::keystone' :}\n, warning('osnailyfacter/modular/./murano/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone.ppwarning('osnailyfacter/modular/./murano/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone.pp')\\\\\\\\\\\\\\\\\\\\n, warning('osnailyfacter/modular/./murano/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone.pp')\\\\\\\\n, warning('osnailyfacter/modular/./murano/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone.pp')\\\\n, warning('osnailyfacter/modular/./murano/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/keystone.pp')\\n",CWE-248,"{'reason': 'the misconfiguration was not related to CWE 248 as it was not related to improper control flow or reliance on external information. Rather, the issue was due to a deprecated configuration file.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
892,"class ec2api ( $package_ensure = 'present', $package_manage = true, $package_name = $::ec2api::params::package_name, $package_provider = undef, $purge_config = false, ) inherits ::ec2api::params { validate_string($package_ensure) validate_bool($package_manage) validate_string($package_name) if $package_manage { package { 'ec2api' : ensure => $package_ensure, name => $package_name, provider => $package_provider, } package['ec2api'] -> class['ec2api::config'] } resources { 'ec2api_config': purge => $purge_config, } include '::ec2api::config' include '::ec2api::logging' include '::ec2api::policy' include '::ec2api::db' anchor { 'ec2api-start' :} -> class['ec2api::config'] -> class['ec2api::db'] -> class['ec2api::policy'] -> class['ec2api::logging'] -> anchor { 'ec2api-end' :} }",0,1,"anchor { 'ec2api-start' :} -> class['ec2api::config'], ec2api-start -> class['ec2api::config'] -> class['ec2api::db'] -> class['ec2api::policy'] -> class['ec2api::logging'] -> ec2api-end, include '::ec2api::config', include '::ec2api::config' -> anchor { 'ec2api-end' :} -> class['ec2api::config'], include '::ec2api::logging' include '::ec2api::policy' include '::ec2api::db' anchor { 'ec2api-start' :} -> class['ec2api::config'] -> class['ec2api::db'] -> class['ec2api::policy'] -> class['ec2api::logging'] -> anchor { 'ec2api-end' :}, package { 'ec2api' : ensure => $package_ensure, name => $package_name, provider => $package_provider, }, package { 'ec2api' : ensure => $package_ensure, name => $package_name, provider => $package_provider, } -> anchor { 'ec2api-end' :} -> class['ec2api::config'], package['ec2api'] -> class['ec2api::config'], resources { 'ec2api_config': purge => $purge_config, }, resources { 'ec2api_config': purge => $purge_config, } -> anchor { 'ec2api-end' :} -> class['ec2api::config']",CWE-732,"{'reason': 'Anchors are used to enforce a particular execution order. They are particularly important for ordering package resources and other resources that affect package management. The `ec2api::start` and `ec2api::end` anchors in the script ensure that resources are executed in the right order.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
893,"class windows_firewall ( $ensure = 'running' ) { validate_re($ensure,['^(running|stopped)$']) case $::operatingsystemversion { 'windows server 2003','windows server 2003 r2','windows xp': { $firewall_name = 'sharedaccess' } default: { $firewall_name = 'mpssvc' } } case $ensure { 'running': { $enabled = true $enabled_data = '1' } default: { $enabled = false $enabled_data = '0' } } service { 'windows_firewall': ensure => $ensure, name => $firewall_name, enable => $enabled, } registry_value { 'enablefirewall': ensure => 'present', path => 'hklm\system\controlset001\services\sharedaccess\parameters\firewallpolicy\domainprofile\enablefirewall', type => 'dword', data => $enabled_data } }",0,1,"registry_value { 'enablefirewall': ensure => 'present', path => 'hklm\\system\\controlset001\\services\\sharedaccess\\parameters\\firewallpolicy\\domainprofile\\enablefirewall', type => 'dword', data => $enabled_data }, registry_value { 'enablefirewall': ensure => 'present', path => 'hklm\system\controlset001\services\sharedaccess\parameters\firewallpolicy\domainprofile\enablefirewall', type => 'dword', data => $enabled_data }, service { 'windows_firewall': ensure => $ensure, name => $firewall_name, enable => $enabled, }, validate_re($ensure, ['$^(running|stopped)$'])",CWE-601,"{'reason': ""Puppet Windows Firewall module (https://forge.puppet.com/puppet/windows_firewall) handles configuration of the Windows Firewall via the `registry_value` resource. In this case, a registry value named 'enablefirewall' is used to enable or disable the Windows Firewall based on the ensure property. This value is a binary value, with the enabled state being represented by the hex value 1. In the misconfiguration, the value of the data property is not provided. If this data is not provided, the binary value defaults to 0, which would disable the Windows Firewall, and not match the desired state of `running`. This behavior is caused by a CWE-601: Improper Restriction of operations within the bounds of a Memory Buffer"", 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
894,"class role::wikimetrics( $dir, ) { require ::role::mediawiki require ::role::centralauth require ::mysql::packages require_package('python-nose') $web_server_mode = 'daemon' $wikimetrics_group = $web_server_mode ? { 'apache' => 'www-data', default => 'wikimetrics', } class { '::wikimetrics': path => $dir, group => $wikimetrics_group, db_user_mediawiki => $::mediawiki::multiwiki::db_user, db_pass_mediawiki => $::mediawiki::multiwiki::db_pass, db_name_mediawiki => $::mediawiki::db_name, db_host_mediawiki => 'localhost', db_user_centralauth => $::mediawiki::multiwiki::db_user, db_pass_centralauth => $::mediawiki::multiwiki::db_pass, db_name_centralauth => $::role::centralauth::shared_db, db_host_centralauth => 'localhost', repository_owner => $::share_owner, revision_tablename => 'revision', archive_tablename => 'archive', config_file_owner => $::share_owner, config_file_group => $::share_group, service_start_on => 'vagrant-mounted', } exec { 'install_wikimetrics_dependencies': command => ""${dir}/scripts/install ${dir}"", creates => '/usr/local/bin/wikimetrics', path => '/usr/local/bin:/usr/bin:/bin', user => 'root', require => class['::wikimetrics'], } class { '::wikimetrics::database': db_root_pass => $::mysql::root_password, wikimetrics_path => $dir, require => exec['install_wikimetrics_dependencies'], } class { '::wikimetrics::queue': require => [ exec['install_wikimetrics_dependencies'], class['role::mediawiki'], ] } class { '::wikimetrics::scheduler': require => exec['install_wikimetrics_dependencies'], } include ::apache::mod::wsgi class { 'wikimetrics::web': mode => $web_server_mode, require => exec['install_wikimetrics_dependencies'], } }",1,1,"$web_server_mode = 'daemon' $wikimetrics_group = $web_server_mode? { 'apache' => 'www-data', default => 'wikimetrics', }, class { '::apache::mod::wsgi': require => [ exec['install_wikimetrics_dependencies'], ] }, class { '::wikimetrics': path => $dir, group => $wikimetrics_group, db_user_mediawiki => $::mediawiki::multiwiki::db_user, db_pass_mediawiki => $::mediawiki::multiwiki::db_pass, db_name_mediawiki => $::mediawiki::db_name, db_host_mediawiki => 'localhost', db_user_centralauth => $::mediawiki::multiwiki::db_user, db_pass_centralauth => $::mediawiki::multiwiki::db_pass, db_name_centralauth => $::role::centralauth::shared_db, db_host_centralauth => 'localhost', repository_owner => $::share_owner, revision_tablename =>'revision', archive_tablename => 'archive', config_file_owner => $::share_owner, config_file_group => $::share_group, service_start_on => 'vagrant-mounted', }, class { '::wikimetrics::database': db_root_pass => $::mysql::root_password, wikimetrics_path => $dir, require => exec['install_wikimetrics_dependencies'], }, class { '::wikimetrics::queue': require => [ exec['install_wikimetrics_dependencies'], class['role::mediawiki'], ] }, class { '::wikimetrics::scheduler': require => exec['install_wikimetrics_dependencies'], }, class { 'apache::mod::wsgi': require => [ exec['install_wikimetrics_dependencies'], ] }, class { 'wikimetrics::web': mode => $web_server_mode, require => exec['install_wikimetrics_dependencies'], }, exec { 'install_wikimetrics_dependencies': command =>, path => '/usr/local/bin:/usr/bin:/bin', user => 'root', require => class['::wikimetrics'], }",CWE-312,"{'reason': ""The misconfiguration is related to the CWE because it introduces a security misconfiguration issue due to the fact that the 'apache' web server mode is used to manage the Wikimetrics service and group. The apache server mode, in this case, is 'daemon', which means that the server will run as a background process. This can lead to security issues if the server is not properly configured, such as not following best practices in terms of security, or not being properly updated. It is important to note that this issue is not necessarily related to the apache web server itself, but rather to the use of this specific mode. A misconfiguration can be related to a CWE if it introduces a security issue that could be avoided by following best practices in security"", 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
895,"$plugin_settings = hiera('fuel-plugin-purestorage-cinder') class { 'plugin_purestorage_cinder::controller' : section => 'pure', glance_image_cache => $plugin_settings['pure_glance_image_cache'], glance_image_count => $plugin_settings[""pure_glance_cache_count""], glance_image_size => $plugin_settings[""pure_glance_cache_size""], replication => $plugin_settings['pure_replication'], remote_array => $plugin_settings[""pure_replication_name""], remote_ip => $plugin_settings[""pure_replication_ip""], remote_api => $plugin_settings[""pure_replication_api""], replication_default => $plugin_settings['pure_replication_default'], replication_interval => $plugin_settings[""pure_interval""], replication_short => $plugin_settings[""pure_retention_short""], replication_long_day => $plugin_settings[""pure_retention_long_day""], replication_long => $plugin_settings[""pure_retention_long""], eradicate => $plugin_settings['pure_eradicate'], local_ip => $plugin_settings['pure_san_ip'], local_api => $plugin_settings['pure_api'], local_chap => $plugin_settings['pure_chap'], local_multipath => $plugin_settings['pure_multipath'], protocol => $plugin_settings['pure_protocol'], consis_group => $plugin_settings['pure_cg'], fczm_config => $plugin_settings['pure_fczm_config'], fc_vendor => $plugin_settings['pure_switch_vendor'], fabric_count => $plugin_settings['pure_fabric_count'], fabric_name_1 => $plugin_settings['pure_fabric_name_1'], fabric_name_2 => $plugin_settings['pure_fabric_name_2'], fc_ip_1 => $plugin_settings[""pure_fabric_ip_1""], fc_ip_2 => $plugin_settings[""pure_fabric_ip_2""], fc_user_1 => $plugin_settings[""pure_username_1""], fc_user_2 => $plugin_settings[""pure_username_2""], fc_passwd_1 => $plugin_settings[""pure_password_1""], fc_passwd_2 => $plugin_settings[""pure_password_2""], fc_prefix_1 => $plugin_settings[""pure_fabric_name_1""], fc_prefix_2 => $plugin_settings[""pure_fabric_name_2""], fc_vsan_1 => $plugin_settings[""pure_vsan_1""], fc_vsan_2 => $plugin_settings[""pure_vsan_2""], }",1,1,misconfigured snippet,cwe-id,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
896,"class tripleo::profile::base::nova ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $libvirt_enabled = false, $manage_migration = false, $nova_compute_enabled = false, $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } if hiera('nova::use_ipv6', false) { $memcache_servers = suffix(hiera('memcached_node_ips_v6'), ':11211') } else { $memcache_servers = suffix(hiera('memcached_node_ips'), ':11211') } if hiera('step') >= 4 or (hiera('step') >= 3 and $sync_db) { class { '::nova' : rabbit_hosts => $rabbit_hosts, } include ::nova::config class { '::nova::cache': enabled => true, backend => 'oslo_cache.memcache_pool', memcache_servers => $memcache_servers, } } if $step >= 4 { if $manage_migration { class { '::nova::migration::libvirt': configure_libvirt => $libvirt_enabled, configure_nova => $nova_compute_enabled, } } } }",1,1,"class { '::nova': \n rabbit_hosts => $rabbit_hosts,\n}, class { '::nova::migration::libvirt': \\n configure_libvirt => $libvirt_enabled,\\n configure_nova => $nova_compute_enabled,\\n}, if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false }, if $step >= 4 or (hiera('step') >= 3 and $sync_db) { class { '::nova' : rabbit_hosts => $rabbit_hosts, } include ::nova::config class { '::nova::cache': enabled => true, backend => 'oslo_cache.memcache_pool', memcache_servers => $memcache_servers, } }, if $step >= 4 { if $manage_migration { class { '::nova::migration::libvirt': configure_libvirt => $libvirt_enabled, configure_nova => $nova_compute_enabled, } } }","CWE-248, CWE-384, CWE-835","{'reason': 'This misconfiguration is related to the provided CWE, as it can lead to an out-of-band information disclosure (CWE-248) and an SQL injection attack (CWE-384, CWE-835).', 'related_cwe': 'CWE-248, CWE-384, CWE-835', 'is_misconfiguration_related': 'Yes'}"
897,"class ironic::client ( $package_ensure = present ) { include ::ironic::params package { 'python-ironicclient': ensure => $package_ensure, name => $::ironic::params::client_package, tag => 'openstack', } }",1,1,"package { 'python-ironicclient': ensure => $package_ensure, name => $::ironic::params::client_package, tag => 'openstack', }","CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-20: Improper Input Validation, CWE-22: Improper Limitation of a Pathname to a Restricted Directory (\u2018Path Traversal'), CWE-295: Other Weakness, CWE-326: Incorrect Permission Assignment for Critical Resource, CWE-347: Improper Restriction of Excessive Authentication-Subtending Communication, CWE-77: Improper Neutralization of Special Elements used in a SQL Command (\u2018SQL Injection'), CWE-78: Improper Neutralization of Special Elements used in an OS Command (\\u2018OS Command Injection'), CWE-798: Use of Hard-coded Credentials, CWE-89: Improper Neutralization of Special Elements used in a Command (���Command Injection')","{'reason': 'This script is used to set the version of Ironic Client on the server and to add it to the Puppet manifest. This client is used for API communication between the server and other OpenStack components. This module should use Puppet functions to validate the input and prevent misconfiguration.\\n\\nThe script does not ensure the input is secure, which may allow an attacker to execute arbitrary code on the server.', 'related_cwe': 'CWE-200, CWE-20, CWE-22, CWE-295, CWE-326, CWE-347, CWE-78, CWE-798, CWE-77', 'is_misconfiguration_related': 'Yes'}"
898,"class swift::proxy::bulk( $max_containers_per_extraction = '10000', $max_failed_extractions = '1000', $max_deletes_per_request = '10000', $yield_frequency = '60', ) { include ::swift::deps concat::fragment { 'swift_bulk': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/bulk.conf.erb'), order => '110', } }",0,1,"class swift::proxy::bulk( $max_containers_per_extraction = '10000', $max_failed_extractions = '1000', $max_deletes_per_request = '10000', $yield_frequency = '60', ) { include ::swift::deps concat::fragment {'swift_bulk': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/bulk.conf.erb'), order => '110', } }, concat::fragment {'swift_bulk': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/bulk.conf.erb'), order => '110', }",CWE-20,"{'reason': 'The issue is related to CWE-20, which is about Improper Error Handling.  This is due to the improper error handling in this code, which could lead to potential security vulnerabilities.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
899,"class tripleo::profile::base::manila::api ( $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) { if $step >= 4 { class { '::manila' : rabbit_hosts => $rabbit_hosts, } include ::manila::api } }",0,1,"class { '::manila' : rabbit_hosts => $rabbit_hosts, }, include ::manila::api, rabbit_hosts => $rabbit_hosts,","CWE-117, CWE-352, CWE-732","{'reason': 'The original defect label is incorrect; this error can be caused by CWE-352. However, the LLM misconfiguration label matches the original defect label; this error can be caused by CWE-732. The original defect label and LLM misconfiguration label may both be correct, depending on the scope and context of the script.', 'related_cwe': 'CWE-117, CWE-352, CWE-732', 'is_misconfiguration_related': 'Yes'}"
900,"class octavia::keystone::authtoken( $password, $username = 'octavia', $auth_url = 'http://localhost:35357', $project_name = 'services', $user_domain_name = $::os_service_default, $project_domain_name = $::os_service_default, $insecure = $::os_service_default, $auth_section = $::os_service_default, $auth_type = 'password', $auth_uri = 'http://localhost:5000', $auth_version = $::os_service_default, $cache = $::os_service_default, $cafile = $::os_service_default, $certfile = $::os_service_default, $check_revocations_for_cached = $::os_service_default, $delay_auth_decision = $::os_service_default, $enforce_token_bind = $::os_service_default, $hash_algorithms = $::os_service_default, $http_connect_timeout = $::os_service_default, $http_request_max_retries = $::os_service_default, $include_service_catalog = $::os_service_default, $keyfile = $::os_service_default, $memcache_pool_conn_get_timeout = $::os_service_default, $memcache_pool_dead_retry = $::os_service_default, $memcache_pool_maxsize = $::os_service_default, $memcache_pool_socket_timeout = $::os_service_default, $memcache_pool_unused_timeout = $::os_service_default, $memcache_secret_key = $::os_service_default, $memcache_security_strategy = $::os_service_default, $memcache_use_advanced_pool = $::os_service_default, $memcached_servers = $::os_service_default, $region_name = $::os_service_default, $revocation_cache_time = $::os_service_default, $signing_dir = $::os_service_default, $token_cache_time = $::os_service_default, ) { keystone::resource::authtoken { 'octavia_config': username => $username, password => $password, project_name => $project_name, auth_url => $auth_url, auth_uri => $auth_uri, auth_version => $auth_version, auth_type => $auth_type, auth_section => $auth_section, user_domain_name => $user_domain_name, project_domain_name => $project_domain_name, insecure => $insecure, cache => $cache, cafile => $cafile, certfile => $certfile, check_revocations_for_cached => $check_revocations_for_cached, delay_auth_decision => $delay_auth_decision, enforce_token_bind => $enforce_token_bind, hash_algorithms => $hash_algorithms, http_connect_timeout => $http_connect_timeout, http_request_max_retries => $http_request_max_retries, include_service_catalog => $include_service_catalog, keyfile => $keyfile, memcache_pool_conn_get_timeout => $memcache_pool_conn_get_timeout, memcache_pool_dead_retry => $memcache_pool_dead_retry, memcache_pool_maxsize => $memcache_pool_maxsize, memcache_pool_socket_timeout => $memcache_pool_socket_timeout, memcache_secret_key => $memcache_secret_key, memcache_security_strategy => $memcache_security_strategy, memcache_use_advanced_pool => $memcache_use_advanced_pool, memcache_pool_unused_timeout => $memcache_pool_unused_timeout, memcached_servers => $memcached_servers, region_name => $region_name, revocation_cache_time => $revocation_cache_time, signing_dir => $signing_dir, token_cache_time => $token_cache_time, } }",1,1,", cache =>, cafile =>, certfile =>, http_request_max_retries =>, include_service_catalog => $include_service_catalog,, insecure =>, keyfile =>, memcached_servers =>",CWE-319,"{'reason': 'CWE-319: The cache argument is used to prevent unnecessary authentication requests. It is a security mechanism that is enabled by default in the authtoken module. Misconfiguring this argument will cause security issues. We can see that this argument is not set to its default value. If it is set to a non-default value, the vulnerability will exist.', 'related_cwe': 'CWE-319, CWE-601', 'is_misconfiguration_related': 'Yes'}"
901,"class bmm::httpd { include ::httpd httpd::config { ""bmm_httpd.conf"" : content => template(""bmm/bmm_httpd.conf.erb""); } file { ""/opt/bmm/www"": ensure => directory; ""/opt/bmm/www/scripts"": ensure => directory; ""/opt/bmm/www/squashfs"": recurse => true, purge => true, source => [ ""puppet:///bmm/squashfs"", ""puppet:///bmm/private/squashfs"" ], sourceselect => all, ensure => directory, show_diff => false; ""/opt/bmm/www/artifacts"": recurse => true, purge => true, source => [ ""puppet:///bmm/artifacts"", ""puppet:///bmm/private/artifacts"" ], sourceselect => all, ensure => directory, show_diff => false; } bmm::script { ""liveutil.sh"": ; ""android-second-stage.sh"": ; ""b2g-second-stage.sh"": ; ""maintenance-second-stage.sh"": ; ""selftest-second-stage.sh"": ; ""selftest-second-stage.py"": ; ""panda_selftest.1.json"": ; ""fix-boot-scr.sh"": ; } }",0,1,"bmm::script { \\, bmm::script { \\\\\\\\, bmm::script { \\\\\\\\\\\\\\\\\\\\, bmm::script { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, bmm::script {file { \, file { \\, file { \\\\, file {template(\",CWE-306,"{'reason': 'The first set of misconfigurations related to improper script handling, as it appears that this script handles various stages of BMM updates. This is related to CWE-306, Insufficient Modification of Execution Attributes, which occurs when an executable is allowed to be modified in any way after it is loaded for execution.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
902,"class shipit_notifier { include ::config include dirs::builds include users::builder include shipit_notifier::settings include shipit_notifier::services include packages::mozilla::python27 python::virtualenv { ""${shipit_notifier::settings::root}"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""mozillapulse==1.0"", ""amqp==1.4.3"", ""anyjson==0.3.3"", ""certifi==0.0.8"", ""kombu==3.0.12"", ""python-dateutil==2.2"", ""pytz==2013.7"", ""six==1.8.0"", ]; } file { ""${shipit_notifier::settings::root}/shipit_notifier.ini"": require => python::virtualenv[""${shipit_notifier::settings::root}""], mode => 0600, owner => ""${users::builder::username}"", group => ""${users::builder::group}"", content => template(""shipit_notifier/shipit_notifier.ini.erb""), show_diff => false; } mercurial::repo { ""shipit_notifier_tools"": require => python::virtualenv[""${shipit_notifier::settings::root}""], hg_repo => ""${config::shipit_notifier_tools}"", dst_dir => ""${shipit_notifier::settings::tools_dst}"", user => ""${users::builder::username}"", branch => ""${config::shipit_notifier_tools_branch}"", } }",1,0,"python::virtualenv { \, python::virtualenv { \\, python::virtualenv { \\\\, python::virtualenv { \\\\\, python::virtualenv { \\\\\\\\, python::virtualenv { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, python::virtualenv {{'reason': 'This vulnerability is relevant in the case that there is any code that can be used for a remote attack or local privilege escalation.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
903,"define osnailyfacter::mysql_grant ( $network = $title, $user = 'root', $password_hash = '', $database = '*', $table = '*', $options = ['grant'], $privileges = ['all'] ) { $user_title = ""${user}@${network}"" $database_table = ""${database}.${table}"" mysql_user { $user_title: password_hash => $password_hash } -> mysql_grant { ""${user_title}/${database_table}"": user => $user_title, table => $database_table, options => $options, privileges => $privileges, } }",1,1,"grant, options => $options,, password_hash => $password_hash,, privileges => $privileges,, table => $database_table,, user => $user_title,","CWE-250, CWE-320","{'reason': 'This is the reason that explains why the misconfiguration is related to the CWE.', 'related_cwe': 'CWE-250, CWE-320', 'is_misconfiguration_related': 'Yes'}"
904,"class cdh::hive( $metastore_host, $zookeeper_hosts = $cdh::hive::defaults::zookeeper_hosts, $support_concurrency = $cdh::hive::defaults::support_concurrency, $jdbc_database = $cdh::hive::defaults::jdbc_database, $jdbc_username = $cdh::hive::defaults::jdbc_username, $jdbc_password = $cdh::hive::defaults::jdbc_password, $jdbc_host = $cdh::hive::defaults::jdbc_host, $jdbc_port = $cdh::hive::defaults::jdbc_port, $jdbc_driver = $cdh::hive::defaults::jdbc_driver, $jdbc_protocol = $cdh::hive::defaults::jdbc_protocol, $variable_substitute_depth = $cdh::hive::defaults::variable_substitute_depth, $auxpath = $cdh::hive::defaults::auxpath, $parquet_compression = $cdh::hive::defaults::parquet_compression, $exec_parallel_thread_number = $cdh::hive::defaults::exec_parallel_thread_number, $optimize_skewjoin = $cdh::hive::defaults::optimize_skewjoin, $skewjoin_key = $cdh::hive::defaults::skewjoin_key, $skewjoin_mapjoin_map_tasks = $cdh::hive::defaults::skewjoin_mapjoin_map_tasks, $stats_enabled = $cdh::hive::defaults::stats_enabled, $stats_dbclass = $cdh::hive::defaults::stats_dbclass, $stats_jdbcdriver = $cdh::hive::defaults::stats_jdbcdriver, $stats_dbconnectionstring = $cdh::hive::defaults::stats_dbconnectionstring, $hive_site_template = $cdh::hive::defaults::hive_site_template, $hive_log4j_template = $cdh::hive::defaults::hive_log4j_template, $hive_exec_log4j_template = $cdh::hive::defaults::hive_exec_log4j_template ) inherits cdh::hive::defaults { class['cdh::hadoop'] -> class['cdh::hive'] package { 'hive': ensure => 'installed', } $config_directory = ""/etc/hive/conf.${cdh::hadoop::cluster_name}"" file { $config_directory: ensure => 'directory', require => package['hive'], } cdh::alternative { 'hive-conf': link => '/etc/hive/conf', path => $config_directory, } package { 'hive-hcatalog': ensure => 'installed', require => package['hive'], } $hive_site_mode = $metastore_host ? { $::fqdn => '0440', default => '0444', } file { ""${config_directory}/hive-site.xml"": content => template($hive_site_template), mode => $hive_site_mode, owner => 'hive', group => 'hive', require => package['hive'], } file { ""${config_directory}/hive-log4j.properties"": content => template($hive_log4j_template), require => package['hive'], } file { ""${config_directory}/hive-exec-log4j.properties"": content => template($hive_exec_log4j_template), require => package['hive'], } }",1,1,", xxxx",xxxx,"{'reason': '1', 'related_cwe': '1', 'is_misconfiguration_related': 'Yes'}"
905,class { '::openstack_tasks::openstack_network::server_nova' :} warning('osnailyfacter/modular/./openstack-network/server-nova.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/server-nova.pp'),1,1,"class { '::openstack_tasks::openstack_network::server_nova' :}, warning('osnailyfacter/modular/./openstack-network/server-nova.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/server-nova.pp')","CWE-116, CWE-117","{'reason': 'A warning has been placed into the openstack network class that openstack-network/server-nova.pp should be used instead of openstack-network/server-nova.pp in newton. this is consistent with the cwe, as the misconfiguration could lead to confusion in regards to the correct file to use.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
906,"class nova::db::sync( $extra_params = undef, ) { include ::nova::deps include ::nova::params exec { 'nova-db-sync': command => ""/usr/bin/nova-manage ${extra_params} db sync"", refreshonly => true, logoutput => on_failure, subscribe => [ anchor['nova::install::end'], anchor['nova::config::end'], anchor['nova::dbsync::begin'] ], notify => anchor['nova::dbsync::end'], } }",0,1,"anchor['nova::config::end'], anchor['nova::dbsync::end'], include \u0026::nova::deps, nova-manage",CWE-20,"{'reason': 'I would like to explain why this issue is related to the CWE.', 'related_cwe': 'This misconfiguration can cause an attacker to access the system without authorization.', 'is_misconfiguration_related': 'Yes'}"
907,"$value = false file { ""/tmp/falsevalues$value"": ensure => file }",0,1,"ensure => file, file { \","CWE-124, CWE-125","{'reason': ""The misconfiguration is related to CWE-125. The presence of a file with the value 'false' is not common in the configuration of a system. This file may contain sensitive information that should be protected."", 'related_cwe': 'CWE-125', 'is_misconfiguration_related': 'Yes'}"
908,"class contrail::compute::nova { $cgroup_acl_string='[""/dev/null"", ""/dev/full"", ""/dev/zero"",""/dev/random"", ""/dev/urandom"",""/dev/ptmx"",""/dev/kvm"", ""/dev/kqemu"",""/dev/rtc"",""/dev/hpet"", ""/dev/vfio/vfio"",""/dev/net/tun""]' ini_setting { 'set_cgroup_acl_string': ensure => present, path => '/etc/libvirt/qemu.conf', setting => 'cgroup_device_acl', value => $cgroup_acl_string, } ~> service { $contrail::libvirt_name : ensure => 'running', enable => true } nova_config { 'default/network_api_class': value => 'nova.network.neutronv2.api.api'; 'default/neutron_url_timeout': value => '300'; 'default/firewall_driver': value => 'nova.virt.firewall.noopfirewalldriver'; 'default/security_group_api': value => 'neutron'; 'default/heal_instance_info_cache_interval': value => '0'; } if $contrail::compute_dpdk_enabled or $contrail::compute_sriov_enabled { nova_config { 'libvirt/virt_type': value => 'kvm'; 'contrail/use_userspace_vhost': value => true; } file { '/etc/nova/nova-compute.conf': ensure => present, content => '', } } nova_config <||> ~> service { 'nova-compute': ensure => running, enable => true, } }",1,1,"file { '/etc/nova/nova-compute.conf': ensure => present, content => '', }, nova_config <||> ~> service { 'nova-compute': ensure => running, enable => true, }, nova_config { 'default/neutron_url_timeout': value => '300';, service { $contrail::libvirt_name : ensure => 'running', enable => true }, service { 'nova-compute': ensure => running, enable => true, }","CWE-22, CWE-352","{'reason': 'The given misconfiguration allows a malicious user to launch a host-based denial of service (DoS) attack by flooding system resources such as CPU, disk, and memory. When the system resources are exhausted, an attacker can potentially disrupt services, leading to a Denial of Service (DoS) or a Remote Code Execution (RCE) attack. It is important to protect against such attacks because they can lead to data leakage, data manipulation, and even data loss.', 'related_cwe': 'CWE-22, CWE-352', 'is_misconfiguration_related': 'Yes'}"
909,"notice('modular: ironic/network-ovs.pp') $network_scheme = hiera('network_scheme', {}) prepare_network_config($network_scheme) $baremetal_int = get_network_role_property('ironic/baremetal', 'interface') $sdn = generate_network_config() class { 'l23network': use_ovs => true, } -> l23network::l2::bridge { 'br-ironic': provider => 'ovs' } -> l23network::l2::patch { ""patch__${baremetal_int}--br-ironic"": bridges => ['br-ironic', $baremetal_int], provider => 'ovs', mtu => 65000, }",0,1,"provider => 'ovs', mtu => 65000,, use_ovs => true,",CWE-732,"{'reason': 'CWE-732: Incorrect permission reference to external library', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
910,"class cobbler::packages { case $::operatingsystem { /(?i)(centos|redhat)/: { $cobbler_package = 'cobbler' $cobbler_web_package = 'cobbler-web' $dnsmasq_package = 'dnsmasq' $django_package = 'python-django' $openssh_package = 'openssh-clients' $pexpect_package = 'pexpect' case $::operatingsystemrelease { /6.+/: { $cobbler_additional_packages = ['xinetd', 'tftp-server', 'syslinux', 'wget', 'python-ipaddr','fence-agents', 'bind-utils'] } /7.+/: { $cobbler_additional_packages = ['xinetd', 'tftp-server', 'syslinux', 'wget', 'python-ipaddr','fence-agents-all', 'bind-utils'] } } } /(?i)(debian|ubuntu)/: { $cobbler_package = 'cobbler' $cobbler_web_package = 'cobbler-web' $dnsmasq_package = 'dnsmasq' $cobbler_additional_packages = ['tftpd-hpa', 'syslinux', 'wget','python-ipaddr', 'fence-agents', 'dnsutils', 'bind9-host'] $django_package = 'python-django' $django_version = '1.3.1-4ubuntu1' $openssh_package = 'openssh-client' $pexpect_package = 'python-pexpect' } } ensure_packages($cobbler_additional_packages) package { $django_package : ensure => present } package { $cobbler_package : require => [ package[$dnsmasq_package], package[$cobbler_additional_packages], package[$django_package], ], } package { $cobbler_web_package : require => package[$cobbler_package] } package { $dnsmasq_package: ensure => installed } package { $openssh_package: ensure => installed } package { $pexpect_package: ensure => installed } package<||> }",1,1,"class cobbler::packages, ensure_packages($cobbler_additional_packages), package { $cobbler_package : require => [ package[$dnsmasq_package], package[$cobbler_additional_packages], package[$django_package], ], }, package { $django_package : ensure => present }, package { $dnsmasq_package: ensure => installed }, package { $openssh_package : ensure => installed }, package { $openssh_package: ensure => installed }, package { $pexpect_package : ensure => installed }, package { $pexpect_package: ensure => installed }, package<||>","CWE-16, CWE-601","{'reason': 'The given defect could lead to an injection attack by misconfiguring the script.', 'related_cwe': 'CWE-16,CWE-601', 'is_misconfiguration_related': 'Yes'}"
911,"class {{cookiecutter.project_name}}::keystone::auth ( $password, $auth_name = '{{cookiecutter.project_name}}', $email = '{{cookiecutter.project_name}}@localhost', $tenant = 'services', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = '{{cookiecutter.project_name}}', $service_description = '{{cookiecutter.project_name}} fixme service', $service_type = 'fixme', $region = 'regionone', $public_url = 'http://127.0.0.1:fixme', $admin_url = 'http://127.0.0.1:fixme', $internal_url = 'http://127.0.0.1:fixme', ) { if $configure_user_role { keystone_user_role[""${auth_name}@${tenant}""] ~> service <| name == '{{cookiecutter.project_name}}-server' |> } keystone_endpoint[""${region}/${service_name}::${service_type}""] ~> service <| name == '{{cookiecutter.project_name}}-server' |> keystone::resource::service_identity { '{{cookiecutter.project_name}}': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $service_name, service_type => $service_type, service_description => $service_description, region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",0,1,keystone::resource::service_identity { '{{cookiecutter.project_name}}':,CWE-502,"{'reason': 'Reasoning', 'related_cwe': 'CWE-Related', 'is_misconfiguration_related': 'Yes/No'}"
912,"class nova::objectstore( $enabled = true, $manage_service = true, $ensure_package = 'present', $bind_address = '0.0.0.0' ) { include ::nova::deps include ::nova::params nova::generic_service { 'objectstore': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::objectstore_package_name, service_name => $::nova::params::objectstore_service_name, ensure_package => $ensure_package, } nova_config { 'default/s3_listen': value => $bind_address; } }",0,1,"nova::generic_service { 'objectstore':, nova::objectstore( $enabled = true, $manage_service = true, $ensure_package = 'present', $bind_address = '0.0.0.0' ) {, nova_config { 'default/s3_listen': value => $bind_address; }",CWE-732,"{'reason': ""The Nova objectstore service is listening on an IP address that can be resolved to multiple networks.  It is a potential vulnerability to expose services on multiple networks and expose the service to hosts outside of it's intended scope.  The Nova objectstore service could be bound to a more specific network or subnetwork to restrict access to hosts outside of the intended service scope."", 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
913,include ::openstack_tasks::heat::cfn_keystone warning('osnailyfacter/modular/./heat/cfn_keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./heat/cfn_keystone.pp'),0,1,"include ::openstack_tasks::heat::cfn_keystone, warning('osnailyfacter/modular/./heat/cfn_keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./heat/cfn_keystone.pp')","CWE-200, CWE-480","{'reason': 'The error warning is caused by a deprecated file, and its functionality should be moved to a new file. This means that the warning is not an exploitable issue and it should not be related to a CWE. Instead, it should be reported as a minor warning. The warning itself is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
914,"class puppet::agent( $ensure, $enable, ) { service { 'puppet': ensure => $ensure, enable => $enable, } }",0,1,"class puppet::agent( $ensure, $enable,) { service { 'puppet': ensure => $ensure, enable => $enable, } }, class puppet::agent($ensure, $enable) { service { 'puppet': ensure => $ensure, enable => $enable, } }, class puppet::agent($ensure, $enable, ) { service { 'puppet': ensure => $ensure, enable => $enable, } }, class puppet::agent($ensure, $enable,) { service { 'puppet': ensure => $ensure, enable => $enable, } }, class puppet::agent(\\n $ensure, \\n $enable, \\n)\\n {service { 'puppet': ensure => $ensure, enable => $enable, }\\n}, class puppet::agent(\n $ensure, \n $enable, \n)\n {service { 'puppet': ensure => $ensure, enable => $enable, }\n}",CWE-89,"{'reason': ""The vulnerability described by CWE-89 involves insufficiently encoded input in a web application, where attacker-controlled data is not properly sanitized before being displayed to the user. This is related to the potential misconfiguration vulnerability observed in Puppet's 'ensure' and 'enable' attributes in the 'class puppet::agent'. While this issue may not affect every Puppet instance, it could allow an adversary to compromise the Puppet agent service in a worst-case scenario. The reason this is related to CWE-89 is because, like the vulnerability in the 'class puppet::agent', this vulnerability could allow an attacker to inject arbitrary data into the Puppet agent service."", 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
915,"class osnailyfacter::astute::upload_cirros { notice('modular: astute/upload_cirros.pp') $test_vm_images = hiera('test_vm_image') $glance_images = generate_glance_images(flatten([$test_vm_images])) $defaults = { 'ensure' => 'present', } include ::osnailyfacter::wait_for_glance_backends create_resources(glance_image, $glance_images, $defaults) class['osnailyfacter::wait_for_glance_backends'] -> glance_image<||> }",1,1,"class['osnailyfacter::wait_for_glance_backends'] -> glance_image<||>, create_resources(glance_image, $glance_images, $defaults), include ::osnailyfacter::wait_for_glance_backends",CWE-732,"{'reason': 'The misconfiguration involves resource management and is not related to the provided CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
916,"class bacula_client($cert, $key) { include ::config include packages::bacula_enterprise_client include bacula_client::settings case $operatingsystem { centos, darwin: { $bacula_director = $::config::bacula_director $bacula_fd_port = $::config::bacula_fd_port $bacula_director_password = secret(""bacula_director_password"") file { ""${bacula_client::settings::confpath}/bacula-fd.conf"": ensure => file, owner => $bacula_client::settings::owner, group => $bacula_client::settings::group, mode => '0640', notify => service[$bacula_client::settings::servicename], show_diff => false, require => class['packages::bacula_enterprise_client'], content => template('bacula_client/bacula-fd.conf.erb'); '/opt/bacula/ssl': ensure => directory, owner => $bacula_client::settings::owner, group => $bacula_client::settings::group, mode => '0640', purge => true, recurse => true, require => class['packages::bacula_enterprise_client']; '/opt/bacula/ssl/cacert.pem': ensure => file, owner => $bacula_client::settings::owner, group => $bacula_client::settings::group, mode => '0640', notify => service[$bacula_client::settings::servicename], require => file['/opt/bacula/ssl'], content => $::config::bacula_cacert; ""/opt/bacula/ssl/${fqdn}-crt.pem"": ensure => file, owner => $bacula_client::settings::owner, group => $bacula_client::settings::group, mode => '0640', notify => service[$bacula_client::settings::servicename], require => file['/opt/bacula/ssl'], content => $cert; ""/opt/bacula/ssl/${fqdn}-key.pem"": ensure => file, owner => $bacula_client::settings::owner, group => $bacula_client::settings::group, mode => '0600', notify => service[$bacula_client::settings::servicename], show_diff => false, require => file['/opt/bacula/ssl'], content => $key; } service { $bacula_client::settings::servicename: ensure => running, enable => true, require => class['packages::bacula_enterprise_client']; } } default: { fail(""bacula not supported on $operatingsystem"") } } }",1,1,"class['packages::bacula_enterprise_client'], content => $::config::bacula_cacert, content => $cert, content => $key, mode => '0600', notify => service[$bacula_client::settings::servicename], show_diff => false,, notify => service[$bacula_client::settings::servicename],, show_diff => false,","CWE-117, CWE-120, CWE-798","{'reason': 'Bacula, being a backup solution, could allow attackers to gain a foothold into the system and manipulate files and data in the client nodes, as it is a client/server architecture. To prevent this, files should be only readable by the daemon user. As for the other CWE, it is relevant because the code is not properly sanitizing the user input in the template content, which is dangerous.', 'related_cwe': 'CWE-117, CWE-120, CWE-798', 'is_misconfiguration_related': 'Yes'}"
917,class toplevel::mixin::releaserunner { include ::releaserunner },0,1,class toplevel::mixin::releaserunner { include ::releaserunner },CWE-352,"{'reason': ""The class'releaserunner' in module 'toplevel' has an include declaration in module'mixin'. This is bad because classes that have an include declaration inside another class (module) should not be changed or overwritten. When you include a class, that class cannot be removed or altered by other users. By including a class inside another class, a user's modifications to that included class can be undone. This makes it impossible to tell if a class's modifications are yours or someone else's. The best practice is to include classes outside other classes. If a class is already included inside a module, it can be included from outside a module without issue. A good solution for this would be to delete the include declaration and to move the"", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
918,"class sysfs::install inherits sysfs::params { file { owner => 'root', group => 'root', mode => '0755', } if $::osfamily == 'redhat' { file { 'sysfsutils.init' : ensure => 'present', name => ""/etc/init.d/${service}"", source => 'puppet:///modules/sysfs/centos-sysfsutils.init.sh', } } package { 'sysfsutils' : ensure => 'installed', name => $package, } file { 'sysfs.d' : ensure => 'directory', name => $config_dir, } }",1,1,"file { owner => 'root', group => 'root', mode => '0755', }, file { owner => 'root', group => 'root', mode => '0755', } if $::osfamily =='redhat' { file {'sysfsutils.init' : ensure => 'present', name =>, file {'sysfs.d' : ensure => 'directory', name => $config_dir, }, file {'sysfsutils.init' : ensure => 'present', name =>, if $::osfamily =='redhat' { file {'sysfsutils.init' : ensure => 'present', name =>, package {'sysfsutils' : ensure => 'installed', name => $package, }",CWE-250,"{'reason': 'The provided misconfiguration is related to the given CWE. The file directive contains permissions set that grant full access for users. This could lead to an increased likelihood of exploitation as attackers would not be required to authenticate themselves to obtain full access to a file.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
919,"class role::mobileapp { include ::role::mobilefrontend include ::role::cite mediawiki::extension { 'mobileapp': require => mediawiki::extension['mobilefrontend'], } }",0,1,"class role::mobileapp {, include ::role::cite, include ::role::mobileapp, include ::role::mobilefrontend, mediawiki::extension {'mobileapp': require => mediawiki::extension['mobilefrontend'], }, mediawiki::extension {'mobilefrontend': }",CWE-284,"{'reason': 'There is a reference to a class, class::role::mobileapp, that is not defined anywhere. In this instance, it is assumed that it is a valid class as it is being referenced in other sections of the Puppet manifest. It should be defined or removed in order to avoid security vulnerabilities.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
920,"class neutron::plugins::midonet ( $midonet_api_ip = '127.0.0.1', $midonet_api_port = '8080', $keystone_username = 'neutron', $keystone_password = $::os_service_default, $keystone_tenant = 'services', $sync_db = false, $purge_config = false, $package_ensure = 'present' ) { include ::neutron::deps include ::neutron::params ensure_resource('file', '/etc/neutron/plugins/midonet', { ensure => directory, owner => 'root', group => 'neutron', mode => '0640'} ) resources { 'neutron_plugin_midonet': purge => $purge_config, } package { 'python-networking-midonet': ensure => $package_ensure, name => $::neutron::params::midonet_server_package, tag => ['neutron-package', 'openstack'], } neutron_plugin_midonet { 'midonet/midonet_uri': value => ""http://${midonet_api_ip}:${midonet_api_port}/midonet-api""; 'midonet/username': value => $keystone_username; 'midonet/password': value => $keystone_password, secret =>true; 'midonet/project_id': value => $keystone_tenant; } if $::osfamily == 'debian' { file_line { '/etc/default/neutron-server:neutron_plugin_config': path => '/etc/default/neutron-server', match => '^neutron_plugin_config=(.*)$', line => ""neutron_plugin_config=${::neutron::params::midonet_config_file}"", tag => 'neutron-file-line', } } if defined(file['/etc/neutron/plugin.ini']) { file <| path == '/etc/neutron/plugin.ini' |> { target => $::neutron::params::midonet_config_file } } else { file {'/etc/neutron/plugin.ini': ensure => link, target => $::neutron::params::midonet_config_file, tag => 'neutron-config-file' } } if $sync_db { package<| title == 'python-networking-midonet' |> ~> exec['midonet-db-sync'] exec { 'midonet-db-sync': command => 'neutron-db-manage --subproject networking-midonet upgrade head', path => '/usr/bin', subscribe => [ anchor['neutron::install::end'], anchor['neutron::config::end'], anchor['neutron::dbsync::begin'], exec['neutron-db-sync'] ], notify => anchor['neutron::dbsync::end'], refreshonly => true } } }",1,1,"keystone_password, keystone_tenant, keystone_username, midonet_api_ip, midonet_api_port, package_ensure, purge_config, python-networking-midonet, sync_db",CWE-522,"{'reason': 'keystone_username, keystone_tenant, keystone_password, midonet_api_ip, midonet_api_port, python-networking-midonet, sync_db are all parameters for neutron_plugin_midonet. midonet is a specific plugin type, which is a neutron Plugin Class. All the parameters for this plugin type will be included in this plugin class. Therefore, the misconfiguration is related to the provided CWE.', 'related_cwe': 'CWE-522', 'is_misconfiguration_related': 'Yes'}"
921,"define cluster::corosync::cs_service ( $ocf_script, $service_name, $service_title = undef, $package_name = undef, $csr_complex_type = undef, $csr_ms_metadata = undef, $csr_parameters = undef, $csr_metadata = undef, $csr_mon_intr = 20, $csr_mon_timeout = 20, $csr_timeout = 60, $primary = true, $hasrestart = true, ) { $service_true_title = $service_title ? { undef => $service_name, default => $service_title } if $primary { pcmk_resource { ""p_${service_true_title}"": ensure => 'present', primitive_class => 'ocf', primitive_provider => 'fuel', primitive_type => $ocf_script, complex_type => $csr_complex_type, complex_metadata => $csr_ms_metadata, parameters => $csr_parameters, metadata => $csr_metadata, name => $service_name, operations => { 'monitor' => { 'interval' => $csr_mon_intr, 'timeout' => $csr_mon_timeout }, 'start' => { 'interval' => '0', 'timeout' => $csr_timeout }, 'stop' => { 'interval' => '0', 'timeout' => $csr_timeout } } } pcmk_resource[""p_${service_true_title}""] -> service<| title == $service_true_title |> } if ! $package_name { warning('cluster::corosync::cs_service: without package definition can\'t protect service for autostart correctly.') } else { tweaks::ubuntu_service_override { ""${service_name}"": package_name => $package_name, } -> service<| title==""${service_true_title}"" |> } service<| title==""${service_true_title}"" |> { name => $service_name, provider => 'pacemaker', } }",1,1,puppet code snippet,CWE-,"{'reason': 'Misconfiguration is related to the CVE because of issue with improper user validation. Since this code does not have sufficient validations to prevent SQL injection, an attacker can exploit the code through a SQL injection vulnerability.', 'related_cwe': 'CWE-113, CWE-119, CWE-352', 'is_misconfiguration_related': 'Yes'}"
922,"class congress::keystone::authtoken( $password, $username = 'congress', $auth_url = 'http://localhost:35357', $project_name = 'services', $user_domain_name = $::os_service_default, $project_domain_name = $::os_service_default, $insecure = $::os_service_default, $auth_section = $::os_service_default, $auth_type = 'password', $auth_uri = 'http://localhost:5000', $auth_version = $::os_service_default, $cache = $::os_service_default, $cafile = $::os_service_default, $certfile = $::os_service_default, $check_revocations_for_cached = $::os_service_default, $delay_auth_decision = $::os_service_default, $enforce_token_bind = $::os_service_default, $hash_algorithms = $::os_service_default, $http_connect_timeout = $::os_service_default, $http_request_max_retries = $::os_service_default, $include_service_catalog = $::os_service_default, $keyfile = $::os_service_default, $memcache_pool_conn_get_timeout = $::os_service_default, $memcache_pool_dead_retry = $::os_service_default, $memcache_pool_maxsize = $::os_service_default, $memcache_pool_socket_timeout = $::os_service_default, $memcache_pool_unused_timeout = $::os_service_default, $memcache_secret_key = $::os_service_default, $memcache_security_strategy = $::os_service_default, $memcache_use_advanced_pool = $::os_service_default, $memcached_servers = $::os_service_default, $region_name = $::os_service_default, $revocation_cache_time = $::os_service_default, $signing_dir = $::os_service_default, $token_cache_time = $::os_service_default, ) { keystone::resource::authtoken { 'congress_config': username => $username, password => $password, project_name => $project_name, auth_url => $auth_url, auth_uri => $auth_uri, auth_version => $auth_version, auth_type => $auth_type, auth_section => $auth_section, user_domain_name => $user_domain_name, project_domain_name => $project_domain_name, insecure => $insecure, cache => $cache, cafile => $cafile, certfile => $certfile, check_revocations_for_cached => $check_revocations_for_cached, delay_auth_decision => $delay_auth_decision, enforce_token_bind => $enforce_token_bind, hash_algorithms => $hash_algorithms, http_connect_timeout => $http_connect_timeout, http_request_max_retries => $http_request_max_retries, include_service_catalog => $include_service_catalog, keyfile => $keyfile, memcache_pool_conn_get_timeout => $memcache_pool_conn_get_timeout, memcache_pool_dead_retry => $memcache_pool_dead_retry, memcache_pool_maxsize => $memcache_pool_maxsize, memcache_pool_socket_timeout => $memcache_pool_socket_timeout, memcache_secret_key => $memcache_secret_key, memcache_security_strategy => $memcache_security_strategy, memcache_use_advanced_pool => $memcache_use_advanced_pool, memcache_pool_unused_timeout => $memcache_pool_unused_timeout, memcached_servers => $memcached_servers, region_name => $region_name, revocation_cache_time => $revocation_cache_time, signing_dir => $signing_dir, token_cache_time => $token_cache_time, } }",1,1,"auth_section => $auth_section,, auth_type => $auth_type,, auth_uri => $auth_uri,, auth_version => $auth_version,, project_domain_name => $project_domain_name,, project_name => $project_name,, region_name => $region_name,, signing_dir => $signing_dir,, token_cache_time => $token_cache_time,, user_domain_name => $user_domain_name,",CWE-798,"{'reason': ""User input of a variable to a secret key or other private value should never occur, as this represents a potential vulnerability where that key is stored in the puppet config file, allowing anyone who gains access to the file to access sensitive information.  In this case, the value in question is the password used by the Congress service, which would be used to access the Keystone service's API to retrieve information.  This represents a significant privacy vulnerability if a miscreant were to gain access to the Puppet configuration file containing the secrets of the Congress service."", 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
923,class { '::openstack_tasks::glance::keystone' :} warning('osnailyfacter/modular/./glance/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./glance/keystone.pp'),0,1,"class { '::openstack_tasks::glance::keystone' :}, warning('osnailyfacter/modular/./glance/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./glance/keystone.pp')","CWE-252: Missing Encryption of Sensitive Data, CWE-255: Cryptographic Errors, CWE-256: Privilege Challenging, CWE-257: Missing Authentication for Critical Function, CWE-258: Improper Access Control, CWE-259: Other Information Disclosure, CWE-260: Missing Encryption of Sensitive System Information, CWE-261: Missing Authorization","{'reason': ""the provided script is a warning message, and it doesn't contain any errors. it is not related to CWE"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
924,"class packages::mozilla::mig_agent { anchor { 'packages::mozilla::mig_agent::begin': ; 'packages::mozilla::mig_agent::end': ; } case $::operatingsystem { 'centos', 'redhat': { realize(packages::yumrepo['mig-agent']) anchor['packages::mozilla::mig_agent::begin'] -> package { 'mig-agent': ensure => '20150330+e3f41a6.prod-1' } -> anchor['packages::mozilla::mig_agent::end'] } 'ubuntu': { realize(packages::aptrepo['mig-agent']) anchor['packages::mozilla::mig_agent::begin'] -> package { 'mig-agent': ensure => '20150330+e3f41a6.prod' } -> anchor['packages::mozilla::mig_agent::end'] } 'darwin': { anchor['packages::mozilla::mig_agent::begin'] -> packages::pkgdmg { 'mig-agent': version => '20150402+1c880e7.prod-x86_64', os_version_specific => false; } -> anchor['packages::mozilla::mig_agent::end'] } default: { fail(""mig is not supported on ${::operatingsystem}"") } } }",1,1,"case $::operatingsystem { 'centos','redhat': {","CWE-19, CWE-20, CWE-25, CWE-26","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
925,"class swift::proxy::proxy_logging { include ::swift::deps concat::fragment { 'swift_proxy-logging': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/proxy-logging.conf.erb'), order => '270', } }",0,1,"class swift::proxy::proxy_logging {\\ninclude ::swift::deps\\n\\nconcat::fragment {\\n'swift_proxy-logging':\\n\\n, concat::fragment {'swift_proxy-logging':\n, content => template('swift/proxy/proxy-logging.conf.erb'),, order => '270',\\\\n}, order => '270',\\n}, order => '270',\n}, target => '/etc/swift/proxy-server.conf',",CWE-1005,"{'reason': 'I chose Yes because the issue is a possible file inclusion and the attacker could write code to include the file', 'related_cwe': 'CWE-1005', 'is_misconfiguration_related': 'Yes'}"
926,class { '::osnailyfacter::globals::globals' :},1,1,class { '::osnailyfacter::globals::globals' :},"CWE-116: Improper Encoding or Escaping of Output, CWE-16: Improper Handling of Unique Names, CWE-200: Exposure of Sensitive Information to an Unauthorized Actor, CWE-74: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-78: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","{'reason': 'The misconfiguration is related to CWE-78', 'related_cwe': 'CWE-78', 'is_misconfiguration_related': 'Yes'}"
927,"class haproxy::config inherits haproxy { if $caller_module_name != $module_name { fail(""use of private class ${name} by ${caller_module_name}"") } concat { $haproxy::config_file: owner => '0', group => '0', mode => '0644', } concat::fragment { '00-header': target => $haproxy::config_file, order => '01', content => "" } concat::fragment { 'haproxy-base': target => $haproxy::config_file, order => '10', content => template('haproxy/haproxy-base.cfg.erb'), } if $haproxy::global_options['chroot'] { file { $haproxy::global_options['chroot']: ensure => directory, owner => $haproxy::global_options['user'], group => $haproxy::global_options['group'], } } }",1,1,"concat { $haproxy::config_file: owner => '0', group => '0', mode => '0644', }, concat { $haproxy::config_file: owner => '0', group => '0', mode => '0644', } concat::fragment { '00-header': target => $haproxy::config_file, order => '01', content =>, concat::fragment { '00-header': target => $haproxy::config_file, order => '01', content =>, concat::fragment { 'haproxy-base': target => $haproxy::config_file, order => '10', content => template('haproxy/haproxy-base.cfg.erb'), } if $haproxy::global_options['chroot'] { file { $haproxy::global_options['chroot']: ensure => directory, owner => $haproxy::global_options['user'], group => $haproxy::global_options['group'], } } }, file { $haproxy::global_options['chroot']: ensure => directory, owner => $haproxy::global_options['user'], group => $haproxy::global_options['group'], } }, if $haproxy::global_options['chroot'] { file { $haproxy::global_options['chroot']: ensure => directory, owner => $haproxy::global_options['user'], group => $haproxy::global_options['group'], } }, if $haproxy::global_options['chroot'] { file { $haproxy::global_options['chroot']: ensure => directory, owner => $haproxy::global_options['user'], group => $haproxy::global_options['group'], } } }, template('haproxy/haproxy-base.cfg.erb'), } if $haproxy::global_options['chroot'] { file { $haproxy::global_options['chroot']: ensure => directory, owner => $haproxy::global_options['user'], group => $haproxy::global_options['group'], } } }","CWE-200:Information Exposure, CWE-668:Use of Potentially Dangerous Function","{'reason': 'The use of the function is dangerous because it creates the directory under which the user has permissions.', 'related_cwe': 'CWE-668, CWE-200', 'is_misconfiguration_related': 'Yes'}"
928,"class gnocchi::db::postgresql( $password, $dbname = 'gnocchi', $user = 'gnocchi', $encoding = undef, $privileges = 'all', ) { class['gnocchi::db::postgresql'] -> service<| title == 'gnocchi' |> ::openstacklib::db::postgresql { 'gnocchi': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } ::openstacklib::db::postgresql['gnocchi'] ~> exec<| title == 'gnocchi-db-sync' |> }",0,1,"class['gnocchi::db::postgresql'], class['gnocchi::db::postgresql'] -> service<| title == 'gnocchi' |>, exec<| title == 'gnocchi-db-sync' |>}, openstacklib::db::postgresql { 'gnocchi': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, }, service<| title == 'gnocchi' |>",CWE-295,"{'reason': 'the provided password hash value and database user credentials (\\', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
929,class { '::osnailyfacter::cluster_haproxy::cluster_haproxy' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,"class { '::osnailyfacter::cluster_haproxy::cluster_haproxy' :}, class { '::osnailyfacter::upgrade::restart_services' :}","CWE-19, CWE-20, CWE-21, CWE-22, CWE-23","{'reason': 'CWE-19, CWE-20, CWE-21, CWE-22, CWE-23 are all related to the issue here because the vulnerability is related to the overprivileged user.', 'related_cwe': 'CWE-19, CWE-20, CWE-21, CWE-22, CWE-23', 'is_misconfiguration_related': 'Yes'}"
930,"class neutron::plugins::nvp ( $default_tz_uuid, $nvp_controllers, $nvp_user, $nvp_password, $default_l3_gw_service_uuid = $::os_service_default, $package_ensure = 'present', $purge_config = false, ) { include ::neutron::deps include ::neutron::params package['neutron'] -> package['neutron-plugin-nvp'] package { 'neutron-plugin-nvp': ensure => $package_ensure, name => $::neutron::params::nvp_server_package, tag => ['neutron-package', 'openstack'], } validate_array($nvp_controllers) resources { 'neutron_plugin_nvp': purge => $purge_config, } neutron_plugin_nvp { 'default/default_tz_uuid': value => $default_tz_uuid; 'default/nvp_controllers': value => join($nvp_controllers, ','); 'default/nvp_user': value => $nvp_user; 'default/nvp_password': value => $nvp_password, secret => true; 'default/default_l3_gw_service_uuid': value => $default_l3_gw_service_uuid; 'nvp/metadata_mode': value => 'access_network'; } if $::neutron::core_plugin != 'neutron.plugins.nicira.neutronplugin.nvppluginv2' { fail('nvp plugin should be the core_plugin in neutron.conf') } file {'/etc/neutron/plugin.ini': ensure => link, target => '/etc/neutron/plugins/nicira/nvp.ini', tag => 'neutron-config-file', } }",1,1,file {'/etc/neutron/plugin.ini':,CWE-798,"{'reason': 'The file resource used to configure the nvp plugin has not set an owner on the file. The file should be owned by the neutron user and group, in addition to being readable by other users. This misconfiguration is related to CWE-798 because misconfigured files such as this file resource can lead to privilege escalation attacks.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
931,"class keystone::db ( $database_db_max_retries = $::os_service_default, $database_connection = 'sqlite:////var/lib/keystone/keystone.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, ) { include ::keystone::deps $database_connection_real = pick($::keystone::database_connection, $database_connection) $database_idle_timeout_real = pick($::keystone::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::keystone::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::keystone::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::keystone::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::keystone::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::keystone::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'keystone_config': db_max_retries => $database_db_max_retries, connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, } }",0,1,"database_connection, database_connection_real, database_db_max_retries, database_max_overflow, database_max_overflow_real, database_max_retries, database_max_retries_real, database_retry_interval, database_retry_interval_real, validate_re(database_connection_real, '^(sqlite|mysql(\\+pymysql)?|postgresql):\\/\\/(:\\s+:@\\s+\\/\\s+)?')","CWE-20, CWE-287, CWE-502","{'reason': 'CWE-502', 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
932,"class instance_metadata::disable { file { ""/etc/init.d/instance_metadata"": ensure => absent; ""/etc/instance_metadata.json"": ensure => absent; ""/usr/local/bin/instance_metadata.py"": ensure => absent; } service { ""instance_metadata"": ensure => stopped, enable => false; } }",0,1,"\, class instance_metadata::disable {, file { \\, file { \\\\, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\, service { \, service { \\",CWE-937,"{'reason': 'CWE-937: This misconfiguration is related to the removal of unnecessary services.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
933,"class nova::deps { anchor { 'nova::install::begin': } -> package<| tag == 'nova-package'|> ~> anchor { 'nova::install::end': } -> anchor { 'nova::config::begin': } -> nova_config<||> ~> anchor { 'nova::config::end': } -> anchor { 'nova::db::begin': } -> anchor { 'nova::db::end': } ~> anchor { 'nova::dbsync::begin': } -> anchor { 'nova::dbsync::end': } ~> anchor { 'nova::dbsync_api::begin': } -> anchor { 'nova::dbsync_api::end': } ~> anchor { 'nova::service::begin': } ~> service<| tag == 'nova-service' |> ~> anchor { 'nova::service::end': } anchor['nova::config::begin'] -> nova_paste_api_ini<||> ~> anchor['nova::config::end'] anchor['nova::install::begin'] -> package<| tag == 'nova-support-package'|> -> anchor['nova::install::end'] anchor['nova::dbsync::end'] -> anchor['nova::dbsync_api::end'] -> nova_cells<||> anchor['nova::dbsync::end'] -> anchor['nova::dbsync_api::end'] -> nova_floating<||> anchor['nova::dbsync::end'] -> anchor['nova::dbsync_api::end'] -> nova_network<||> anchor['nova::install::end'] ~> anchor['nova::service::begin'] anchor['nova::config::end'] ~> anchor['nova::service::begin'] anchor { 'nova-start': require => anchor['nova::install::end'], before => anchor['nova::config::begin'], } }",0,1,"anchor { 'nova-start':\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\trequire => anchor['nova::install::end'],\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tbefore => anchor['nova::config::begin'], }, anchor { 'nova-start':\\\\n\\t\\\\t\\\\t\\\\trequire => anchor['nova::install::end'],\\\\n\\t\\\\t\\\\t\\\\tbefore => anchor['nova::config::begin'], }, anchor { 'nova::service::end': }\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t-> service<| tag == 'nova-service' |\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t-> anchor { 'nova::service::end': }, anchor { 'nova::service::end': }\\\\n\\t\\t\\t\\t\\t-> service<| tag == 'nova-service' |\\n\\t\\t\\t\\t\\t-> anchor { 'nova::service::end': }, anchor { 'nova::service::end': }\n\t\t\t\t\t-> service<| tag == 'nova-service' |\n\t\t\t\t\t-> anchor { 'nova::service::end': }, anchor['nova::config::end']\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\t-> anchor['nova::service::begin'], anchor['nova::config::end']\\\\n\\\\t\\\\t\\\\t\\\\t-> anchor['nova::service::begin'], anchor['nova::config::end']\\n\\t\\t\\t\\t-> anchor['nova::service::begin'], nova_network<||>\\\\\\\\\\\\n\\\\\\\\\\\\t\\\\\\\\\\\\t\\\\\\\\\\\\t-> anchor['nova::service::begin'], nova_network<||>\\\\n\\\\t\\\\t\\\\t-> anchor['nova::service::begin']","CWE-19, CWE-20, CWE-22","{'reason': 'The use of the anchor resource can help ensure services are correctly restarted and services that should be disabled are in fact disabled. In this case the use of the anchor resource is to ensure that the nova cells service is not started until after all the required services are started. Since nova cells has some unique functionality it may be important that it is started after the required dependencies are in place. It may also be important that nova cells is disabled while not in use to ensure all the relevant services are started. Therefore, the anchor resource is being used in a secure manner to ensure that the correct order of operations occurs and that the system is only put into a dangerous state (i.e., starting a service that is not ready) when necessary. The anchor resource can', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
934,"class mistral::policy ( $policies = {}, $policy_path = '/etc/mistral/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'mistral_config': policy_file => $policy_path } }",0,1,"class mistral::policy ( $policies = {}, $policy_path = '/etc/mistral/policy.json', ) { validate_hash($policies), class mistral::policy ( $policies = {}, $policy_path = '/etc/mistral/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy {'mistral_config': policy_file => $policy_path } }, openstacklib::policy::base { file_path => $policy_path, }, oslo::policy {'mistral_config': policy_file => $policy_path }",CWE-1028: Lack of Resource Pooling in Cloud Environments,"{'reason': 'The configuration allows the policy of the service to be changed by other services. This is related to a lack of isolation and separation of duties. However, it is not a misconfiguration itself.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
935,class neutron {} class { 'neutron' :} class { '::openstack_tasks::openstack_network::agents::l3' :} warning('osnailyfacter/modular/./openstack-network/agents/l3.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/agents/l3.pp'),0,1,"class { '::openstack_tasks::openstack_network::agents::l3' :}, class { 'neutron' :}, warning('osnailyfacter/modular/./openstack-network/agents/l3.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/agents/l3.pp')","CWE-259, CWE-352","{'reason': 'The misconfiguration is not related to CWE-352, it is only a warning message that suggests the use of a different resource file', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
936,"define virtualenv::package ( $path, $package = $title, $python_module = $title, ) { virtualenv::environment[$path] -> virtualenv::package[$title] exec { ""pip_install_${package}_in_${path}"": command => ""${path}/bin/pip install ${package}"", cwd => $path, unless => ""${path}/bin/python -c 'import ${python_module}'"", } }",1,1,"command => \\\, cwd => $path, \\, cwd => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\, define virtualenv::package ( $path, $package = $title, $python_module = $title, ) { virtualenv::environment[$path] -> virtualenv::package[$title] exec { \, exec { \\, unless => \\\\\\, unless => \\\\\\\\\\\\\, unless => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, virtualenv::environment[$path] -> virtualenv::package[$title] \",CWE-352,"{'reason': 'The vulnerability lies in the use of an undefined variable in the \\\\\\\\ in the \\\\\\\\ string. This issue could allow an attacker to perform a path traversal attack. This issue is described in CWE-352.', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
937,"class magnum::db::mysql( $password, $dbname = 'magnum', $user = 'magnum', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ) { validate_string($password) ::openstacklib::db::mysql { 'magnum': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['magnum'] ~> exec<| title == 'magnum-db-sync' |> }",1,1,"allowed_hosts => \\$allowed_hosts,\\n, host => \\\\\, host => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, hostpassword_hash => mysql_password(\$password),\n, password_hash => mysql_password(\\$password),\\n, password_hash => mysql_password(\\\$password),\\n, password_hash => mysql_password(\\\\\\\\\\\\\\$password),\\\\n, password_hash => mysql_password(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$password),\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, user => \\\","CWE-310, CWE-321, CWE-345, CWE-522","{'reason': 'The vulnerability is related to both CWE-345 and CWE-522', 'related_cwe': '345, 522', 'is_misconfiguration_related': 'Yes'}"
938,"class slave_secrets::google_oauth_api_key($ensure=present) { include config include users::builder include dirs::builds $google_oauth_api_key = $::operatingsystem ? { windows => 'c:/builds/google-oauth-api.key', default => ""/builds/google-oauth-api.key"" } if ($ensure == 'present' and $config::install_google_oauth_api_key) { case $::operatingsystem { windows: { file { 'c:/builds/google-oauth-api.key': content => secret(""google_oauth_api_key""), show_diff => false; } acl { 'c:/builds/google-oauth-api.key': purge => true, inherit_parent_permissions => false, permissions => [ { identity => 'root', rights => ['full'] }, { identity => 'system', rights => ['full'] }, ]; } } default: { file { $google_oauth_api_key: content => secret(""google_oauth_api_key""), owner => $::users::builder::username, group => $::users::builder::group, mode => 0600, show_diff => false; } } } } else { file { $google_oauth_api_key: ensure => absent; } } }",1,1,"content => secret(\\, content => secret(\\\, file {\n    $google_oauth_api_key:\n      content => secret(\, group => $::users::builder::group, mode => 0600, show_diff => false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, group => $::users::builder::group, mode => 0600, show_diff => false;\\\\\\\\\\\\\\\\n}, owner => $::users::builder::username, group => $::users::builder::group, mode => 0600, show_diff => false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, owner => $::users::builder::username, group => $::users::builder::group, mode => 0600, show_diff => false;\\\\\\n}, show_diff => false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, show_diff => false;\\\\n    }\\\\n  }\\\\n}, show_diff => false;\\n    }\\n  }\\n}",CWE-284,"{'reason': 'The content should be secret(\\', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
939,"class tripleo::profile::base::neutron::plumgrid ( $step = hiera('step'), ) { if $step >= 4 { sysctl::value { 'net.ipv4.ip_forward': value => '1' } file { '/etc/sudoers.d/ifc_ctl_sudoers': ensure => file, owner => root, group => root, mode => '0440', content => ""nova all=(root) nopasswd: /opt/pg/bin/ifc_ctl_pp *\n"", } } }",0,1,"class tripleo::profile::base::neutron::plumgrid ( $step = hiera('step'), ) {, file { '/etc/sudoers.d/ifc_ctl_sudoers': ensure => file, owner => root, group => root, mode => '0440', content => \, file { '/etc/sudoers.d/ifc_ctl_sudoers': ensure => file, owner => root, group => root, mode => '0440', content => \\, sysctl::value { 'net.ipv4.ip_forward': value => '1' }",CWE-798,"{'reason': 'The misconfiguration is related to the use of Sudo in the script', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
940,"class openstack::firewall::novachains() { firewallchain {'nova-api-input:filter:ipv4': ensure => present, } firewallchain {'nova-api-forward:filter:ipv4': ensure => present, } firewallchain {'nova-api-output:filter:ipv4': ensure => present, } firewallchain {'nova-api-local:filter:ipv4': ensure => present, } firewallchain {'nova-filter-top:filter:ipv4': ensure => present, } firewallchain {'nova-api-output:nat:ipv4': ensure => present, } firewallchain {'nova-api-postrouting:nat:ipv4': ensure => present, } firewallchain {'nova-api-prerouting:nat:ipv4': ensure => present, } firewallchain {'nova-api-float-snat:nat:ipv4': ensure => present, } firewallchain {'nova-api-snat:nat:ipv4': ensure => present, } firewallchain {'nova-api-postrouting-bottom:nat:ipv4': ensure => present, } }",0,1,"firewallchain {'nova-api-float-snat:nat:ipv4': ensure => present,, firewallchain {'nova-api-output:nat:ipv4': ensure => present,, firewallchain {'nova-api-postrouting-bottom:nat:ipv4': ensure => present,, firewallchain {'nova-api-postrouting:nat:ipv4': ensure => present,, firewallchain {'nova-api-prerouting:nat:ipv4': ensure => present,, firewallchain {'nova-api-snat:nat:ipv4': ensure => present,, firewallchain {'nova-filter-top:filter:ipv4': ensure => present,",CWE-502: Deserialization of Untrusted Data,"{'reason': ""Puppet uses the JSON file as a configuration, not an execution environment. Any code execution vulnerabilities would have to be introduced by code written by the developer, not by the parser. In this case, the misconfiguration could be described as CWE-502 since it's allowing an untrusted user to modify the configuration, which could lead to a vulnerable configuration, but in itself does not represent a vulnerability. However, it's important to note that this vulnerability would only be present if there were already a vulnerability in the code written by the developer."", 'related_cwe': 'CWE-502: Deserialization of Untrusted Data', 'is_misconfiguration_related': 'Yes'}"
941,"class powermanagement::setup { include config case $::operatingsystem { darwin : { osxutils::systemsetup { sleep : setting => ""never"" ; restartpowerfailure : setting => ""on"" ; wakeonnetworkaccess : setting => ""on"" ; allowpowerbuttontosleepcomputer : setting => ""off"" ; } case $::macosx_productversion_major { '10.6': {} default: { osxutils::systemsetup { restartfreeze: setting => ""on""; } } } } centos, ubuntu : { } windows: { } default : { fail("" cannot install on $::operatingsystem"") } } }",1,1,"fail(\, fail(\\, fail(\\\, fail(\\\\, include config, osxutils::systemsetup { allowpowerbuttontosleepcomputer : setting => \\, osxutils::systemsetup { restartfreeze: setting => \\, osxutils::systemsetup { sleep : setting => \, osxutils::systemsetup { wakeonnetworkaccess : setting => \\","CWE-284, CWE-285","{'reason': 'The misconfiguration was not related to any CWE. The provided CWEs refer to input validation failures, which was not present in the provided script.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
942,"class buildslave::startup::windows { include users::builder include dirs::programdata::puppetagain $builder_username = $users::builder::username $puppet_semaphore = 'c:\programdata\puppetagain\puppetcomplete.semaphore' case $::fqdn { /.*\.releng\.(use1|usw2)\.mozilla\.com$/: { include instance_metadata file { 'c:/programdata/puppetagain/start-buildbot.bat': content => template(""${module_name}/ec2_start-buildbot.bat.erb""), require => class[instance_metadata]; } } default: { file { 'c:/programdata/puppetagain/start-buildbot.bat': content => template(""${module_name}/start-buildbot.bat.erb""); } } } file { ""c:/programdata/puppetagain/start-buildbot.xml"": content => template(""buildslave/start-buildbot.xml.erb""); } $schtasks = 'c:\windows\system32\schtasks.exe' shared::execonce { ""startbuildbot"": command => ""$schtasks /create /xml c:\\programdata\\puppetagain\\start-buildbot.xml /tn startbuildbot"", require => file['c:/programdata/puppetagain/start-buildbot.xml'], } }",0,1,"file { 'c:/programdata/puppetagain/start-buildbot.xml': content => template(\, file { 'c:/programdata/puppetagain/start-buildbot.xml': content => template(\\, file { 'c:/programdata/puppetagain/start-buildbot.xml': content => template(\\\\, include dirs::programdata::puppetagain, include users::builder, shared::execonce { \","CWE-22, CWE-257, CWE-264","{'reason': 'Puppet does not perform any input validation for user-inputted values; thus, misconfigurations such as file location errors will always be misconfigurations because there is no input validation. In this case, the misconfiguration is not related to the CWE because there is no code to prevent malicious inputs.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
943,"class cinder::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/cinder', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } $use_syslog_real = pick($::cinder::use_syslog,$use_syslog) $use_stderr_real = pick($::cinder::use_stderr,$use_stderr) $log_facility_real = pick($::cinder::log_facility,$log_facility) $log_dir_real = pick($::cinder::log_dir,$log_dir) $debug_real = pick($::cinder::debug,$debug) oslo::log { 'cinder_config': debug => $debug_real, use_syslog => $use_syslog_real, use_stderr => $use_stderr_real, log_dir => $log_dir_real, syslog_log_facility => $log_facility_real, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, } }",1,1,"debug, default_log_levels, fatal_deprecations, log_dir, logging_context_format_string, logging_debug_format_suffix, logging_default_format_string, logging_exception_prefix, publish_errors, use_syslog",CWE-476,"{'reason': ""I would use a misconfiguration analysis tool, that way you won't need to waste your time on the analysis."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
944,"class cinder::volume::rbd ( $rbd_pool, $rbd_user, $rbd_ceph_conf = '/etc/ceph/ceph.conf', $rbd_flatten_volume_from_snapshot = $::os_service_default, $rbd_secret_uuid = $::os_service_default, $rbd_max_clone_depth = $::os_service_default, $rados_connect_timeout = $::os_service_default, $rados_connection_interval = $::os_service_default, $rados_connection_retries = $::os_service_default, $rbd_store_chunk_size = $::os_service_default, $extra_options = {}, $volume_tmp_dir = false, ) { warning('usage of cinder::volume::rbd is deprecated, please use cinder::backend::rbd instead.') cinder::backend::rbd { 'default': rbd_pool => $rbd_pool, rbd_user => $rbd_user, rbd_ceph_conf => $rbd_ceph_conf, rbd_flatten_volume_from_snapshot => $rbd_flatten_volume_from_snapshot, rbd_secret_uuid => $rbd_secret_uuid, volume_tmp_dir => $volume_tmp_dir, rbd_max_clone_depth => $rbd_max_clone_depth, rados_connect_timeout => $rados_connect_timeout, rados_connection_interval => $rados_connection_interval, rados_connection_retries => $rados_connection_retries, rbd_store_chunk_size => $rbd_store_chunk_size, extra_options => $extra_options, } }",1,1,"extra_options => $extra_options,, rados_connect_timeout => $rados_connect_timeout,, rados_connection_interval => $rados_connection_interval,, rados_connection_retries => $rados_connection_retries,, rbd_flatten_volume_from_snapshot => $rbd_flatten_volume_from_snapshot,, rbd_max_clone_depth => $rbd_max_clone_depth,, rbd_secret_uuid => $rbd_secret_uuid,, rbd_store_chunk_size => $rbd_store_chunk_size,, rbd_user => $rbd_user,, volume_tmp_dir => $volume_tmp_dir,","CWE-311, CWE-312, CWE-319, CWE-502","{'reason': ""The script contains a variable named extra_options, which stores information about an rbd user's access rights and other options."", 'related_cwe': 'CWE-311, CWE-312, CWE-319, CWE-502', 'is_misconfiguration_related': 'Yes'}"
945,"class osnailyfacter::virtual_ips::public_vip_ping { notice('modular: virtual_ips/public_vip_ping.pp') $network_scheme = hiera_hash('network_scheme', {}) prepare_network_config($network_scheme) $run_ping_checker = hiera('run_ping_checker', true) $public_iface = get_network_role_property('public/vip', 'interface') $ping_host_list = $network_scheme['endpoints'][$public_iface]['gateway'] if $run_ping_checker { $vip = 'vip__public' cluster::virtual_ip_ping { $vip : host_list => $ping_host_list, } } }",0,1,"class osnailyfacter, class osnailyfacter::virtual_ips, class osnailyfacter::virtual_ips::public_vip_ping, class virtual_ips, cluster::virtual_ip_ping { $vip, get_network_role_property('public/vip', 'interface'), host_list => $ping_host_list, notice('modular: virtual_ips/public_vip_ping.pp'), ping_host_list = $network_scheme['endpoints'][$public_iface]['gateway'], vip = 'vip__public'",CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': ""CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
946,"class hhvm { include apt file { '/tmp/wikimedia.key': source => 'puppet:///modules/hhvm/wikimedia.key', } exec { 'apt-key-wikimedia': command => '/usr/bin/apt-key add /tmp/wikimedia.key', require => file['/tmp/wikimedia.key'], } apt::source { 'wikimedia': location => 'http://apt.wikimedia.org/wikimedia', release => ""${::lsbdistcodename}-wikimedia"", repos => 'main universe', require => exec['apt-key-wikimedia'], } package { [ 'hhvm', 'hhvm-dev' ]: ensure => latest, before => service['hhvm'], require => apt::source['wikimedia'], } file { '/etc/hhvm': ensure => directory, } file { '/etc/init/hhvm.conf': source => 'puppet:///modules/hhvm/upstart', require => package['hhvm'], notify => service['hhvm'], } file { '/etc/hhvm/php.ini': source => 'puppet:///modules/hhvm/php.ini', require => package['hhvm'], notify => service['hhvm'], } file { '/etc/hhvm/server.ini': source => 'puppet:///modules/hhvm/server.ini', require => package['hhvm'], notify => service['hhvm'], } service { 'hhvm': ensure => running, enable => true, provider => upstart, require => file['/etc/init/hhvm.conf'], } file { '/etc/init/hhvm-development.conf': source => 'puppet:///modules/hhvm/upstart-development', require => package['hhvm'], notify => service['hhvm-development'], } file { '/etc/hhvm/development.ini': source => 'puppet:///modules/hhvm/development.ini', require => package['hhvm'], notify => service['hhvm-development'], } service { 'hhvm-development': ensure => running, enable => true, provider => upstart, require => file['/etc/init/hhvm-development.conf'], } }",1,1,"apt::source { 'wikimedia':, file { '/etc/hhvm':, file { '/etc/hhvm/development.ini':, file { '/etc/hhvm/php.ini':, file { '/etc/hhvm/server.ini':, file { '/etc/init/hhvm-development.conf':, file { '/etc/init/hhvm.conf':, file { '/tmp/wikimedia.key':, include apt, package { [ 'hhvm', 'hhvm-dev' ]:",CWE-937,"{'reason': ""The script is designed to install a package and set up a Wikimedia repository for hhvm, a programming language for the hhvm PHP engine. The Wikimedia repository will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all packages will be added to the script's APT module, ensuring that all"", 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
947,"class talos::settings { $apachedocumentroot = ""/builds/slave/talos-data/talos"" $requireall = $::macosx_productversion_major ? { 10.10 => ""require all granted"", default => """" } }",1,1,"$requireall = $::macosx_productversion_major? { 10.10 => \, class talos::settings { $apachedocumentroot = \, class talos::settings { $apachedocumentroot = \\, class talos::settings { $apachedocumentroot = \\\\, class talos::settings { $apachedocumentroot = \\\\\\\, class talos::settings { $apachedocumentroot = \\\\\\\\\\\\\\\\\\, class talos::settings { $apachedocumentrootdefault => \\, } }",CWE-22,"{'reason': 'This misconfiguration is related to CWE-22, because it can cause an information leak, which is exactly what the CWE aims to prevent. The information leak could allow an attacker to discover the location of important data stored on the target machine, such as secrets and other sensitive information.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
948,"define motd::script( $ensure = present, $priority = 50, $content = undef, $source = undef, ) { include ::motd if $priority !~ /^\d?\d$/ { fail('""priority"" must be between 0 - 99') } if $ensure !~ /^(present|absent)$/ { fail('""ensure"" must be ""present"" or ""absent""') } $safe_name = regsubst($title, '[\w_]', '-', 'g') $script = sprintf('%02d-%s', $priority, $safe_name) file { ""/etc/update-motd.d/${script}"": ensure => $ensure, mode => '0555', content => $content, source => $source, notify => exec['update_motd'], } }",0,1,"file { \, file { \\, if $ensure!~ /^(present|absent)$/ {, if $priority!~ /^(0?[0-9])|(1?[0-9])|(2?[0-4])|(25)$/ {, if $priority!~ /^\d?\d$/ {, if $source!~ /^(undef|absent|present)$/ {","CWE-22, CWE-601, CWE-602, CWE-603, CWE-604, CWE-605, CWE-606, CWE-607","{'reason': '0, the priority should be between 0 - 99', 'related_cwe': 'CWE-602', 'is_misconfiguration_related': 'Yes'}"
949,"define openstack::firewall::multi_net ( $action = undef, $chain = undef, $iniface = undef, $port = undef, $proto = undef, $rule_name = $title, $source_nets = undef, ) { validate_string($rule_name) if ! is_array($source_nets) { fail('this provider should only be used for multiple source_nets.') } $firewall_rule_hashes = prepare_firewall_rules($source_nets, $rule_name, $action, $chain, $port, $proto) create_resources('firewall', $firewall_rule_hashes) }",0,1,"create_resources('firewall', $firewall_rule_hashes), define openstack::firewall::multi_net (\n $action = undef, \n $chain = undef, \n $iniface = undef, \n $port = undef, \n $proto = undef, \n $rule_name = $title, \n $source_nets = undef, \n ) {\n validate_string($rule_name) \n if! is_array($source_nets) {\n fail('this provider should only be used for multiple source_nets.') \n }\n $firewall_rule_hashes = prepare_firewall_rules($source_nets, $rule_name, $action, $chain, $port, $proto) \n create_resources('firewall', $firewall_rule_hashes) \n }, firewall_rule_hashes = prepare_firewall_rules($source_nets, $rule_name, $action, $chain, $port, $proto) create_resources('firewall', $firewall_rule_hashes), if! is_array($source_nets) {\\\\\\\\\\\\\\\\n fail('this provider should only be used for multiple source_nets.')\\\\\\\\\\\\\\\\n}, if! is_array($source_nets) {\\\\\\n fail('this provider should only be used for multiple source_nets.')\\\\\\n}, if! is_array($source_nets) {\\\\n fail('this provider should only be used for multiple source_nets.')\\\\n}, if! is_array($source_nets) {\\n fail('this provider should only be used for multiple source_nets.')\\n}","CWE-1027, CWE-1200, CWE-1290, CWE-1295, CWE-1358, CWE-1503, CWE-1532, CWE-1554, CWE-1599, CWE-835","{'reason': ""CWE-1027 is used to identify the incorrect use of a resource. In this case, create_resources(\\')' is used for multiple source_nets. This is a resource management error."", 'related_cwe': 'CWE-1027', 'is_misconfiguration_related': 'Yes'}"
950,"class packages::mozilla::signing_test_files { anchor { 'packages::mozilla::signing_test_files::begin': ; 'packages::mozilla::signing_test_files::end': ; } case $::operatingsystem { centos: { anchor['packages::mozilla::signing_test_files::begin'] -> package { ""mozilla-signing-test-files"": ensure => '1.2-1'; } -> anchor['packages::mozilla::signing_test_files::end'] } darwin: { anchor['packages::mozilla::signing_test_files::begin'] -> packages::pkgdmg { signing_test_files: version => ""1.0-1"", os_version_specific => false; } -> anchor['packages::mozilla::signing_test_files::end'] } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"os_version_specific => false, packages::mozilla::signing_test_files::begin, packages::mozilla::signing_test_files::begin -> package { \, packages::mozilla::signing_test_files::end, packages::pkgdmg, version => \","CWE-117, CWE-118","{'reason': 'The misconfiguration here is related to CWE-117, as the signing_test_files package is being configured to be distributed to all versions of the operating system. This may cause incompatibility between different versions of the operating system and the signing_test_files package, leading to security issues.', 'related_cwe': 'CWE-117, CWE-118', 'is_misconfiguration_related': 'Yes'}"
951,"class runner::tasks::cleanslate_task($runlevel=1) { include runner include cleanslate include buildslave::install runner::task { ""${runlevel}-cleanslate"": require => [ class['cleanslate'], class['buildslave::install'] ], content => template(""${module_name}/tasks/cleanslate.erb""); } }",0,1,"class runner::tasks::cleanslate_task($runlevel=1) { include runner include cleanslate include buildslave::install runner::task { \, content => template(, include buildslave::install runner::task { \\, require => [ class['cleanslate'], class['buildslave::install'] ], content => template(, runner::task {","CWE-22, CWE-89","{'reason': 'The script may be misconfigured if the task \\n content is not correctly templated, allowing unintended execution.\\n Additionally, the content parameter may be incorrectly templated, introducing new vulnerabilities such as CWE-89: SQL Injection.', 'related_cwe': 'CWE-22, CWE-89', 'is_misconfiguration_related': 'Yes'}"
952,"class tripleo::certmonger::ca::local( $ca_pem = '/etc/pki/ca-trust/source/anchors/cm-local-ca.pem', ){ $ca_pkcs12 = '/var/lib/certmonger/local/creds' $extract_cmd = ""openssl pkcs12 -in ${ca_pkcs12} -out ${ca_pem} -nokeys -nodes -passin pass:''"" $trust_ca_cmd = 'update-ca-trust extract' exec { 'extract-and-trust-ca': command => ""${extract_cmd} && ${trust_ca_cmd}"", path => '/usr/bin', creates => $ca_pem, require => package['certmonger'], } }",0,1,"command => \\\, command => \\\\\\\, command => \\\\\\\\\\\\\\, command => \\u0027openssl pkcs12 -in /var/lib/certmonger/local/creds -out /etc/pki/ca-trust/source/anchors/cm-local-ca.pem -nokeys -nodes -passin pass:\\\\\\\\\\\, creates => /etc/pki/ca-trust/source/anchors/cm-local-ca.pem\\\\n, exec {\n, path => /usr/bin,\\\\\\\\\\\\n, path => /usr/bin,\\\\\\n, requires => package[\\u0027certmonger\\u0027],, update-ca-trust extract\\n","CWE-200, CWE-22, CWE-732, CWE-78","{'reason': 'No', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
953,"class tripleo::profile::base::horizon ( $step = hiera('step'), ) { if $step >= 4 { include ::apache::mod::remoteip include ::apache::mod::status if 'cisco_n1kv' in hiera('neutron::plugins::ml2::mechanism_drivers') { $_profile_support = 'cisco' } else { $_profile_support = 'none' } $neutron_options = {'profile_support' => $_profile_support } $memcached_ipv6 = hiera('memcached_ipv6', false) if $memcached_ipv6 { $horizon_memcached_servers = hiera('memcached_node_ips_v6', '[::1]') } else { $horizon_memcached_servers = hiera('memcached_node_ips', '127.0.0.1') } class { '::horizon': cache_server_ip => $horizon_memcached_servers, neutron_options => $neutron_options, } } }",0,1,"class { \'::horizon\': cache_server_ip => $horizon_memcached_servers,, class { \\'::horizon\\': cache_server_ip => $horizon_memcached_servers,, class { \\\\'::horizon\\\\': cache_server_ip => $horizon_memcached_servers,, class { \\\\\\\\'::horizon\\\\\\\\': cache_server_ip => $horizon_memcached_servers,, class { \\\\\\\\\\\\\\\\\\\\'::horizon\\\\\\\\\\\\\\\\\\\\': cache_server_ip => $horizon_memcached_servers,, if $step >= 4 { include ::apache::mod::remoteip include ::apache::mod::status, if 'cisco_n1kv' in hiera('neutron::plugins::ml2::mechanism_drivers') { $_profile_support = 'cisco' } else { $_profile_support = 'none' }",CWE-22,"{'reason': 'The misconfiguration is related to the provided CWE because it includes a template literal in a string context, which could lead to SQL injection if untrusted user input is concatenated with a string in the cache_server_ip parameter.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
954,"define contrail::create_network ( $netdata, $tenant_name = 'admin', ) { if $netdata['l3']['floating'] { $alloc = split($netdata['l3']['floating'], ':') $allocation_pools = ""start=${alloc[0]},end=${alloc[1]}"" } notify {""${name} ::: router_ext ${netdata['l2']['router_ext']}"":} notify {""${name} ::: tenant ${netdata['tenant']}"":} notify {""${name} ::: shared ${netdata['shared']}"":} neutron_network { $name: ensure => present, router_external => $netdata['l2']['router_ext'], tenant_name => $tenant_name, shared => $netdata['shared'] } neutron_subnet { ""${name}__subnet"": ensure => present, cidr => $netdata['l3']['subnet'], network_name => $name, tenant_name => $tenant_name, gateway_ip => $netdata['l3']['gateway'], enable_dhcp => $netdata['l3']['enable_dhcp'], dns_nameservers => $netdata['l3']['nameservers'], allocation_pools => $allocation_pools, } }",0,1,"if $netdata[\\, if $netdata[\\\\'l3\\\\'][\\\\'floating\\\\'] { $alloc = split($netdata[\\\\'l3\\\\'][\\\\'floating\\\\'], \\\\\':\\\\') $allocation_pools = \\\\\, neutron_network { $name: ensure => present, router_external => $netdata[\'l2\'][\'router_ext\'], tenant_name => $tenant_name, shared => $netdata[\'shared\'] }, neutron_network { \\, neutron_subnet { ${name}__subnet: \\\\, neutron_subnet { ${name}__subnet: ensure => present, cidr => $netdata[\\'l3\\'][\\'subnet\\'], network_name => $name, tenant_name => $tenant_name, gateway_ip => $netdata[\\'l3\\'][\\'gateway\\'], enable_dhcp => $netdata[\\'l3\\'][\\'enable_dhcp\\'], dns_nameservers => $netdata[\\'l3\\'][\\'nameservers\\'], allocation_pools => $allocation_pools, }, neutron_subnet { ${name}__subnet: ensure => present, cidr => $netdata[\\\\, neutron_subnet { ${name}__subnet: ensure => present, cidr => $netdata[\\\\\\\\'l3\\\\\\\\'][\\\\\\\\, neutron_subnet { ${name}__subnet: ensure => present, cidr => $netdata[\\\\\\\\\\\\\\\\\\\, neutron_subnet { \","CWE-20, CWE-25","{'reason': 'Explanation of reasoning', 'related_cwe': 'CWE numbers', 'is_misconfiguration_related': 'Yes/No'}"
955,class role::torblock { mediawiki::extension { 'torblock': } },0,1,"mediawiki::extension { \, torblock: \, }","CWE-119, CWE-20, CWE-732","{'reason': 'The misconfiguration CWE-732: Restriction of Shell Access\\nThe Puppet snippet does not define the `mediawiki::extension` resource correctly. It does not use a proper value for the `name` argument. The resource does not properly use the `name` attribute. This can be solved by providing a value for the `name` attribute. Using the `name` attribute can help restrict shell access and reduce the risk of security vulnerabilities.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n', 'related_cwe': 'CWE-119, CWE-732', 'is_misconfiguration_related': 'Yes'}"
956,"class osnailyfacter::wait_for_nova_backends ( $backends = ['nova-api', 'nova-metadata-api', 'nova-novncproxy'], $management_vip = hiera('management_vip'), $service_endpoint = hiera('service_endpoint'), $external_lb = hiera('external_lb', false), $ssl_hash = hiera_hash('use_ssl', {}), ) { $nova_api_protocol = get_ssl_property($ssl_hash, {}, 'nova', 'internal', 'protocol', 'http') $nova_api_address = get_ssl_property($ssl_hash, {}, 'nova', 'internal', 'hostname', [$service_endpoint, $management_vip]) $nova_api_url = ""${nova_api_protocol}://${nova_api_address}:8774"" $nova_metadata_api_url = ""${nova_api_protocol}://${nova_api_address}:8775"" $nova_novncproxy_url = ""${nova_api_protocol}://${nova_api_address}:6080"" $haproxy_stats_url = ""http://${service_endpoint}:10000/;csv"" $lb_defaults = { step => 6, count => 200, provider => 'haproxy', url => $haproxy_stats_url } if $external_lb { $lb_nova_api = { provider => 'http', url => $nova_api_url } $lb_nova_metadata_api = { provider => 'http', url => $nova_metadata_api_url, } $lb_nova_novncproxy = { provider => 'http', url => $nova_novncproxy_url, } } $all_backend_hash = { 'nova-api' => merge( { name => 'nova-api' }, $lb_nova_api ), 'nova-metadata-api' => merge( { name => 'nova-metadata-api' }, $lb_nova_metadata_api ), 'nova-novncproxy' => merge ( { name => 'nova-novncproxy' }, $lb_nova_novncproxy ) } $keys_to_remove = difference(keys($all_backend_hash), $backends) $lb_hash = delete($all_backend_hash, $keys_to_remove) if empty($lb_hash) { fail('no nova backends to monitor') } ::osnailyfacter::wait_for_backend { 'nova-api': lb_hash => $lb_hash, lb_defaults => $lb_defaults } }",1,1,"class osnailyfacter::wait_for_nova_backends, if $external_lb {, if empty($lb_hash) {, lb_defaults = {, lb_defaults => $lb_defaults,, lb_hash = delete($all_backend_hash, $keys_to_remove), lb_hash => $lb_hash,, nova-api_address = get_ssl_property($ssl_hash, {}, 'nova', 'internal', 'hostname', [$service_endpoint, $management_vip]), nova_novncproxy_url = \",CWE-20,"{'reason': 'the lb_hash hash in osnailyfacter::wait_for_nova_backends fails to be populated. This causes puppet run to fail, preventing the creation of the nova-api service. The code block is vulnerable to CWE-20 - Uncontrolled Resource Consumption because of the missing lb_hash hash, which causes the nova-api service to not be created.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
957,"class cinder::cron::db_purge ( $minute = 1, $hour = 0, $monthday = '*', $month = '*', $weekday = '*', $user = 'cinder', $age = 30, $destination = '/var/log/cinder/cinder-rowsflush.log' ) { cron { 'cinder-manage db purge': command => ""cinder-manage db purge ${age} >>${destination} 2>&1"", environment => 'path=/bin:/usr/bin:/usr/sbin shell=/bin/sh', user => $user, minute => $minute, hour => $hour, monthday => $monthday, month => $month, weekday => $weekday, require => package['cinder'], } }",0,1,cron { 'cinder-manage db purge':...,"CWE-117:Improper Output Neutralization for Logs, CWE-120:Buffer Copy Without Checking Size of Input ('Classic Buffer Overflow'), CWE-122:Heap-Based Buffer Overflow, CWE-126:Buffer Overread, CWE-127:Buffer Underflow, CWE-129:Improper Validation of Array Index, CWE-134:Use of Externally-Controlled Format String, CWE-20:Improper Input Validation, CWE-78:Improper Neutralization of Special Elements used in a Command ('Command Injection'), CWE-89:Improper Neutralization of Special Elements Used in a Command ('Command Injection')","{'reason': 'Reason', 'related_cwe': 'Related CWE', 'is_misconfiguration_related': 'Yes/No'}"
958,"notice('modular: midonet-install-agent.pp') $network_metadata = hiera_hash('network_metadata') $neutron_config = hiera_hash('neutron_config') $segmentation_type = $neutron_config['l2']['segmentation_type'] $nsdb_hash = get_nodes_hash_by_roles($network_metadata, ['nsdb']) $nsdb_mgmt_ips = get_node_to_ipaddr_map_by_network_role($nsdb_hash, 'management') $zoo_ips_hash = generate_api_zookeeper_ips(values($nsdb_mgmt_ips)) $cass_ips = values($nsdb_mgmt_ips) $api_ip = hiera('management_vip') $access_data = hiera_hash('access') $username = $access_data['user'] $password = $access_data['password'] $tenant_name = $access_data['tenant'] $ovsdb_service_name = $operatingsystem ? { 'centos' => 'openvswitch', 'ubuntu' => 'openvswitch-switch' } $openvswitch_package_neutron = $operatingsystem ? { 'centos' => 'openstack-neutron-openvswitch', 'ubuntu' => 'neutron-plugin-openvswitch-agent' } $openvswitch_package = $operatingsystem ? { 'centos' => 'openvswitch', 'ubuntu' => 'openvswitch-switch' } package {$openvswitch_package_neutron: ensure => purged } -> package {$openvswitch_package: ensure => purged } -> class {'::midonet::midonet_agent': zk_servers => $zoo_ips_hash, cassandra_seeds => $cass_ips } -> class {'::midonet::midonet_cli': api_endpoint => ""http://${api_ip}:8081/midonet-api"", username => $username, password => $password, tenant_name => $tenant_name, } class { 'firewall': } if $segmentation_type =='tun' { firewall {'6677 vxlan port': port => '6677', proto => 'udp', action => 'accept', } } exec {'/usr/bin/mm-dpctl --delete-dp ovs-system': path => ""/usr/bin:/usr/sbin:/bin"", onlyif => '/usr/bin/mm-dpctl --show-dp ovs-system', require => class['::midonet::midonet_agent'] }",1,1,"class { 'firewall': }, class {'::midonet::midonet_agent': zk_servers => $zoo_ips_hash, cassandra_seeds => $cass_ips }, class {'::midonet::midonet_cli': api_endpoint =>, exec {'/usr/bin/mm-dpctl --delete-dp ovs-system': path =>, firewall {'6677 vxlan port': port => '6677', proto => 'udp', action => 'accept', }, onlyif => '/usr/bin/mm-dpctl --show-dp ovs-system', require => class['::midonet::midonet_agent'] }, package {$openvswitch_package_neutron: ensure => purged } -> package {$openvswitch_package: ensure => purged }, username => $username, password => $password, tenant_name => $tenant_name, }","CWE-284, CWE-285","{'reason': 'The misconfiguration is related to the CWE as it represents a cross-site scripting vulnerability that could allow an attacker to perform operations on a node within an affected network.', 'related_cwe': 'CWE-285', 'is_misconfiguration_related': 'Yes'}"
959,"class plumgrid::repo ( $ensure = 'present', $os_release = 'icehouse', $repo_baseurl, $repo_component, ) { if $ensure == 'present' { case $::osfamily { 'redhat', 'linux': { if $repo_baseurl and $repo_baseurl != '' { yumrepo { 'plumgrid': baseurl => ""${repo_baseurl}/${repo_component}/el${operatingsystemmajrelease}/${architecture}"", descr => ""plumgrid repo"", enabled => 1, gpgcheck => 1, gpgkey => ""${repo_baseurl}/gpg-key"", } } } 'debian': { apt::source { 'openstack': location => 'http://ubuntu-cloud.archive.canonical.com/ubuntu', release => ""${::lsbdistcodename}-updates/${os_release}"", repos => 'main', key => 'ecd76e3e', key_server => 'keyserver.ubuntu.com', include_src => false, } apt::source['openstack'] -> package['plumgrid-lxc'] } default: { fail(""unsupported repository for osfamily: ${::osfamily}, os: ${::operatingsystem}, module ${module_name}"") } } } else { case $::osfamily { 'redhat', 'linux': { if $repo_baseurl and $repo_baseurl != '' { yumrepo { 'plumgrid': ensure => absent, } } } 'debian': { apt::source { 'openstack': ensure => absent, } } } } }",0,1,"apt::source { 'openstack': key => 'ecd76e3e',, apt::source['openstack'] -> package['plumgrid-lxc'], package['plumgrid-lxc'] -> package['plumgrid-lxc'], yumrepo { 'plumgrid': gpgcheck => 1,",CWE-476,"{'reason': ""The vulnerability that can lead to unpatched components is CWE-476. It is used to create apt::source that could install packages from untrusted repository. The repository may contain old version of packages and also malware. This misconfiguration creates package['plumgrid-lxc'] -> package['plumgrid-lxc'] -> apt::source['openstack'] -> package['plumgrid-lxc'] dependency loop. This leads to unpatched components."", 'related_cwe': 'CWE-476', 'is_misconfiguration_related': 'Yes'}"
960,"class magnum::db ( $database_connection = 'mysql://magnum:magnum@localhost:3306/magnum', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { validate_re($database_connection, '^(mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'magnum_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_pool_size => $database_max_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_overflow => $database_max_overflow, db_max_retries => $database_db_max_retries, } }",0,1,"connection => $database_connection, idle_timeout => $database_idle_timeout,, db_max_retries => $database_db_max_retries, }, max_overflow => $database_max_overflow,, max_pool_size => $database_max_pool_size,, max_pool_size => $database_max_pool_size, max_retries => $database_max_retries,, max_pool_size => $database_max_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_overflow => $database_max_overflow, db_max_retries => $database_db_max_retries, }, max_retries => $database_max_retries,, retry_interval => $database_retry_interval,, retry_interval => $database_retry_interval, max_overflow => $database_max_overflow,, validate_re($database_connection, '^(mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?')","CWE-22, CWE-798, CWE-829","{'reason': 'The misconfiguration is related to the database configuration details.', 'related_cwe': 'CWE-22, CWE-798, CWE-829', 'is_misconfiguration_related': 'Yes'}"
961,"class designate::params { include ::openstacklib::defaults $state_path = '/var/lib/designate' $log_dir = '/var/log/designate' $client_package_name = 'python-designateclient' $agent_service_name = 'designate-agent' $api_service_name = 'designate-api' $central_service_name = 'designate-central' $sink_service_name = 'designate-sink' $mdns_service_name = 'designate-mdns' $pool_manager_service_name = 'designate-pool-manager' case $::osfamily { 'redhat': { $common_package_name = 'openstack-designate-common' $api_package_name = 'openstack-designate-api' $central_package_name = 'openstack-designate-central' $agent_package_name = 'openstack-designate-agent' $sink_package_name = 'openstack-designate-sink' $pymysql_package_name = undef $mdns_package_name = 'openstack-designate-mdns' $pool_manager_package_name = 'openstack-designate-pool-manager' } 'debian': { $common_package_name = 'designate-common' $api_package_name = 'designate-api' $central_package_name = 'designate-central' $agent_package_name = 'designate-agent' $sink_package_name = 'designate-sink' $pymysql_package_name = 'python-pymysql' $pool_manager_package_name = 'designate-pool-manager' $mdns_package_name = 'designate-mdns' } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem"") } } }",1,nan,nan,nan,"{'reason': '', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
962,"class cluster::ceilometer_central ( ) { include ceilometer::agent::central pacemaker::service { $::ceilometer::params::agent_central_service_name : primitive_type => 'ceilometer-agent-central', metadata => { 'resource-stickiness' => '1' }, parameters => { 'user' => 'ceilometer' }, operations => { 'monitor' => { 'interval' => '20', 'timeout' => '30', }, 'start' => { 'interval' => '0', 'timeout' => '360', }, 'stop' => { 'interval' => '0', 'timeout' => '360', }, }, } }",0,1,"operations => {'monitor' => { 'interval' => '20', 'timeout' => '30', },'start' => { 'interval' => '0', 'timeout' => '360', },'stop' => { 'interval' => '0', 'timeout' => '360', }, }, }},, pacemaker::service { $::ceilometer::params::agent_central_service_name :",CWE-522,"{'reason': 'The misconfiguration relates to improper restrictions by default, which allows unauthenticated access to the host.', 'related_cwe': 'CWE-522', 'is_misconfiguration_related': 'Yes'}"
963,"class lma_collector::collectd::haproxy ( $socket, $proxy_ignore = [], $proxy_names = {}, ) { include lma_collector::params validate_array($proxy_ignore) validate_hash($proxy_names) $real_proxy_ignore = suffix(prefix($proxy_ignore, '""'), '""') $proxy_names_keys = suffix(prefix(keys($proxy_names), '""'), '""') $proxy_names_values = suffix(prefix(values($proxy_names), '""'), '""') $real_proxy_names = hash(flatten(zip($proxy_names_keys, $proxy_names_values))) lma_collector::collectd::python { 'haproxy': config => { 'socket' => ""\""${socket}\"""", 'mapping' => $real_proxy_names, 'proxyignore' => $real_proxy_ignore, }, } }",0,1,"class lma_collector::collectd::haproxy (\n $socket, $proxy_ignore = [], $proxy_names = {}, \n), include lma_collector::params\\\\n, include lma_collector::params\\n, lma_collector::collectd::python { 'haproxy': config => {'mapping' => $real_proxy_names, '\\\\, lma_collector::collectd::python { 'haproxy': config => {'mapping' => $real_proxy_names, '\\\\\\, lma_collector::collectd::python { 'haproxy': config => {'socket' => '\\\, validate_hash($proxy_names)\\n",CWE-798,"{'reason': 'The provided misconfiguration is related to CWE-798 because it relates to the validation of array and hash in Puppet. The misconfiguration is caused because Puppet does not handle null values in the array and hash validation of the argument `proxy_ignore` and `proxy_names`.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
964,"define lma_collector::afd_nagios( $server, $http_port, $http_path, $user, $password, $http_scheme = 'http', $ensure = present, $hostname = $::hostname, $service_template = '%{node_role}.%{source}', $message_type = 'afd_node_metric', ){ include lma_collector::params include lma_collector::service::metric validate_integer($http_port) $lua_modules_dir = $lma_collector::params::lua_modules_dir $url = ""${http_scheme}://${server}:${http_port}/${http_path}"" $config = {'nagios_host' => $hostname, 'service_template' => $service_template} heka::encoder::sandbox { ""nagios_afd_${title}"": ensure => $ensure, config_dir => $lma_collector::params::metric_config_dir, filename => ""${lma_collector::params::plugins_dir}/encoders/status_nagios.lua"", config => $config, module_directory => $lua_modules_dir, notify => class['lma_collector::service::metric'], } heka::output::http { ""nagios_afd_${title}"": ensure => $ensure, config_dir => $lma_collector::params::metric_config_dir, url => $url, message_matcher => ""fields[${lma_collector::params::aggregator_flag}] == nil && type == 'heka.sandbox.${message_type}'"", username => $user, password => $password, encoder => ""nagios_afd_${title}"", timeout => $lma_collector::params::nagios_timeout, headers => { 'content-type' => 'application/x-www-form-urlencoded' }, use_buffering => $lma_collector::params::buffering_enabled, max_buffer_size => $lma_collector::params::buffering_max_buffer_size_for_nagios, max_file_size => $lma_collector::params::buffering_max_file_size_for_nagios, queue_full_action => $lma_collector::params::queue_full_action_for_nagios, require => heka::encoder::sandbox[""nagios_afd_${title}""], notify => class['lma_collector::service::metric'], } }",1,1,"headers => \'{ \'content-type\' => \'application/x-www-form-urlencoded\' }\', heka::output::http { \\, include lma_collector::params\ninclude lma_collector::service::metric, max_file_size => $lma_collector::params::buffering_max_file_size_for_nagios,, message_matcher => \, message_matcher => \\, queue_full_action => $lma_collector::params::queue_full_action_for_nagios,, queue_full_action => $lma_collector::params::queue_full_action_for_nagios,\\n\nrequire => heka::encoder::sandbox[\\\\, require => heka::encoder::sandbox[\\\, validate_integer($http_port)","CWE-306: Missing Authentication for Critical Function, CWE-327: Use of a Broken or Risky Cryptographic Algorithm","{'reason': 'Insecure HTTP API Endpoint', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
965,"notice('modular: rabbitmq.pp') $fuel_settings = parseyaml($astute_settings_yaml) class { 'fuel::rabbitmq': astute_user => $::fuel_settings['astute']['user'], astute_password => $::fuel_settings['astute']['password'], bind_ip => $::fuel_settings['admin_network']['ipaddress'], mco_user => $::fuel_settings['mcollective']['user'], mco_password => $::fuel_settings['mcollective']['password'], env_config => { 'rabbitmq_server_erl_args' => ""+k true +p 1048576"", 'erl_epmd_address' => $::fuel_settings['admin_network']['ipaddress'], 'nodename' => ""rabbit@${::fuel_settings['hostname']}"", }, }",0,1,"erl_epmd_address => $::fuel_settings['admin_network']['ipaddress'], mco_password => $::fuel_settings['mcollective']['password'], mco_user => $::fuel_settings['mcollective']['user'], nodename => \, notice('modular: rabbitmq.pp') $fuel_settings = parseyaml($astute_settings_yaml), rabbit@${::fuel_settings['hostname']}",CWE-352,"{'reason': ""This misconfiguration is a CWE-352 because the user does not have the proper access controls. If a user has the ability to modify the value of the epmd_address attribute, then that user can cause the host to fail by pointing it to an address that does not exist. Additionally, the user can compromise the host's ability to resolve DNS hostnames, which could lead to a man-in-the-middle attack if the DNS server was compromised. The erl_epmd_address attribute is the address that the Erlang distribution service uses for its lookup. If an attacker modifies the value of this attribute, then it can cause the host to fail and make it vulnerable to attacks. If an attacker can modify the value of this attribute, then they can also"", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
966,"class packages::gcc { case $operatingsystem { centos: { package { ""gcc"": ensure => latest; } } default: { fail(""cannot install on $operatingsystem"") } } }",0,1,"cannot install on $operatingsystem, case $operatingsystem, case $operatingsystem { centos: { package { \, class packages::gcc, ensure => latest; } } default: { fail(\\, fail(\\\\, package { \, }","CWE-22, CWE-77, CWE-89","{'reason': 'This is related to CWE-22 due to the use of hardcoded strings.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
967,"class kitanonl { include fcgiwrap file { '/etc/nginx/sites/kitano.nl': source => 'puppet:///modules/kitanonl/kitano.nl', require => [package['nginx'], service['fcgiwrap']], notify => service['nginx'], } }",1,1,"class kitanonl { include fcgiwrap file { \\, class kitanonl { include fcgiwrap file { \\\\, file { \, file { \\, file { \\\\, file { \\\\\\\\, notify => service['nginx'], } } }",CWE-1203,"{'reason': 'CWE-1203 can also be described as \\', 'related_cwe': 'CWE-1203', 'is_misconfiguration_related': 'Yes'}"
968,"class openstack::ha::keystone ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = undef, $admin_ssl = false, $admin_ssl_path = undef, $federation_enabled = false, ) { $base_options = { 'option' => ['httpchk get /v3', 'httplog', 'httpclose', 'http-buffer-request', 'forwardfor'], 'timeout' => 'http-request 10s', 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', } if $federation_enabled { $session_options = { 'stick' => ['on src'], 'stick-table' => ['type ip size 200k expire 2m'], } } else { $session_options = { } } $config_options = merge($base_options, $session_options) openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, haproxy_config_options => $config_options, balancermember_options => 'check inter 10s fastinter 2s downinter 2s rise 30 fall 3', } openstack::ha::haproxy_service { 'keystone-1': order => '020', listen_port => 5000, public => true, public_ssl => $public_ssl, } openstack::ha::haproxy_service { 'keystone-2': order => '030', listen_port => 35357, public => false, internal_ssl => $admin_ssl, internal_ssl_path => $admin_ssl_path, } }",1,1,"admin_ssl => false,, admin_ssl_path => undef,, federation_enabled => false,, internal_ssl => $admin_ssl,, internal_ssl_path => $admin_ssl_path,, internal_ssl_path => $internal_ssl_path,, listen_port => 35357, public => false, internal_ssl => $admin_ssl,, listen_port => 5000, public => true,, public => true,, public_ssl_path => $public_ssl_path,",CWE-310,"{'reason': 'As mentioned in the documentation, the service should run as unencrypted for the admin and the non-admin endpoint. However, the misconfiguration is not related to CWE-310. The default value for the internal_ssl and public_ssl variables is set to false. Hence, when the user leaves them to the default value, they are not using SSL/TLS certificates and the misconfiguration does not pose any threat to the server security.\\n\\nHowever, if the user sets the misconfiguration values to true and the SSL/TLS certificate is not configured correctly, it could lead to the unauthorized access of the certificates or the server.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
969,"class heat::keystone::auth ( $password = false, $email = 'heat@localhost', $auth_name = 'heat', $service_name = 'heat', $service_type = 'orchestration', $service_description = 'openstack orchestration service', $region = 'regionone', $tenant = 'services', $configure_endpoint = true, $configure_service = true, $configure_user = true, $configure_user_role = true, $trusts_delegated_roles = ['heat_stack_owner'], $configure_delegated_roles = false, $public_url = 'http://127.0.0.1:8004/v1/%(tenant_id)s', $admin_url = 'http://127.0.0.1:8004/v1/%(tenant_id)s', $internal_url = 'http://127.0.0.1:8004/v1/%(tenant_id)s', $heat_stack_user_role = 'heat_stack_user', $manage_heat_stack_user_role = true, ) { include ::heat::deps validate_string($password) keystone::resource::service_identity { 'heat': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, configure_service => $configure_service, service_type => $service_type, service_description => $service_description, service_name => $service_name, region => $region, auth_name => $auth_name, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, } if $configure_user_role { keystone_user_role[""${auth_name}@${tenant}""] ~> service <| name == 'heat-api' |> } if $manage_heat_stack_user_role { keystone_role { $heat_stack_user_role: ensure => present, } } if $configure_delegated_roles { keystone_role { $trusts_delegated_roles: ensure => present, } } }",1,1,"keystone_role {\n  $trusts_delegated_roles: ensure => present,\n}, keystone_user_role[\, keystone_user_role[\\, keystone_user_role[\\\\,\\\\n  \\, keystone_user_rolekeystone_user_role[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, keystone_user_role[\\\\\\\\\\\\\\\\n  \\\\, keystone_user_role[\\\\\\n  \\, keystone_user_role[{\\n  \, validate_string($password)","CWE-668, CWE-676, CWE-679","{'reason': 'the vulnerability is caused by invalid string input (e.g., a single backslash followed by a backslash). It would have caused a vulnerability if it were used correctly.', 'related_cwe': 'CWE-668, CWE-676, CWE-679', 'is_misconfiguration_related': 'Yes'}"
970,"class plugin_zabbix::monitoring::horizon_mon { include plugin_zabbix::params include apache::params if defined_in_state(class['horizon']) { plugin_zabbix_template_link { ""${plugin_zabbix::params::host_name} template app openstack horizon"": host => $plugin_zabbix::params::host_name, template => 'template app openstack horizon', api => $plugin_zabbix::monitoring::api_hash, } plugin_zabbix_usermacro { 'apache bin name': host => $plugin_zabbix::params::host_name, macro => '{$apache_name}', value => $apache::params::apache_name, api => $plugin_zabbix::monitoring::api_hash, } plugin_zabbix_usermacro { 'apache user': host => $plugin_zabbix::params::host_name, macro => '{$apache_user}', value => $apache::params::user, api => $plugin_zabbix::monitoring::api_hash, } } }",0,1,"apache::params::apache_name, api => $plugin_zabbix::monitoring::api_hash, api => $plugin_zabbix::monitoring::api_hash,, if defined_in_state(class['horizon']), include plugin_zabbix::params, value => $apache::params::user, value => $apache::params::user,","CWE-1035, CWE-1038","{'reason': 'In this case, the `apache bin name` macro and `apache user` macro are used for Zabbix API calls.', 'related_cwe': 'CWE-1035, CWE-1038', 'is_misconfiguration_related': 'Yes'}"
971,class buildmaster::release_runner_access { users::builder::extra_authorized_key { 'release-runner': ; } },0,1,"class buildmaster::release_runner_access, class users::builder, release-runner, users::builder::extra_authorized_key, users::builder::extra_authorized_key {'release-runner': ; }","CWE-306, CWE-772, CWE-798","{'reason': 'The misconfiguration is related to CWE-772, CWE-798.', 'related_cwe': 'CWE-772, CWE-798', 'is_misconfiguration_related': 'Yes'}"
972,"class packages::binscope{ packages::pkgmsi { ""sdl binscope"": msi => ""binscopesetup.msi"", install_options => ['/quiet']; } }",1,1,"class packages::binscope{ packages::pkgmsi { \, install_options => ['/quiet']; } } }],, install_options => \",CWE-20,"{'reason': 'The misconfiguration is not related to CWE-20 because the misconfiguration is not due to a lack of authentication, but instead is caused by an issue with authentication credentials.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
973,"class barbican::db::sync( $extra_params = undef, ) { exec { 'barbican-db-manage': command => ""barbican-manage db upgrade ${extra_params}"", path => '/usr/bin', user => 'barbican', refreshonly => true, } barbican_config <| title == 'database/connection' |> ~> exec['barbican-db-manage'] barbican_config <| title == 'default/sql_connection' |> ~> exec['barbican-db-manage'] package <| tag == 'barbican-package' |> ~> exec['barbican-db-manage'] package <| tag == 'openstack' |> -> exec['barbican-db-manage'] exec['barbican-db-manage'] ~> service<| title == 'barbican-api' |> }",1,1,"barbican_config <| title == 'database/connection' |> ~> exec['barbican-db-manage'], barbican_config <| title == 'default/sql_connection' |> ~> exec['barbican-db-manage'], class barbican::db::sync( $extra_params = undef, ) { exec { 'barbican-db-manage': command => \, exec { 'barbican-db-manage': command => \\, exec['barbican-db-manage'] ~> service<| title == 'barbican-api' |> }, package <| tag == 'barbican-package' |> ~> exec['barbican-db-manage'], package <| tag == 'openstack' |> -> exec['barbican-db-manage'], service<| title == 'barbican-api' |> }","CWE-89, CWE-937","{'reason': 'The barbican service is vulnerable to SQL injections and should not be accessible to public. The configuration allows the public to access the API. By changing the barbican configuration, one can inject malicious sql commands and escalate privileges.', 'related_cwe': 'CWE-89, CWE-937', 'is_misconfiguration_related': 'Yes'}"
974,"class tripleo::profile::pacemaker::gnocchi::metricd ( $pacemaker_master = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { include ::gnocchi::params include ::tripleo::profile::pacemaker::gnocchi if $step >= 4 and downcase($::hostname) == $pacemaker_master { include ::gnocchi::metricd pacemaker::resource::service { $::gnocchi::params::metricd_service_name : clone_params => 'interleave=true', } } }",0,1,"include ::gnocchi::params, include ::tripleo::profile::pacemaker::gnocchi, pacemaker::resource::service { $::gnocchi::params::metricd_service_name : clone_params => 'interleave=true', }","CWE-352, CWE-384","{'reason': ""This vulnerability relates to CWE-352 and CWE-384. There are two issues in this code. First, the code declares the resource without any attributes. This allows for a resource to be declared with any attributes, without the Puppeteer engine checking it. This is because the Puppeteer engine checks for the attributes when declaring the resource. Second, the code doesn't specify a unique name. This can lead to the metricd service being declared multiple times. This causes the Puppeteer engine to overwrite the previous declaration and cause confusion when the service is restarted. This is because the Puppeteer engine checks if the service already exists."", 'related_cwe': 'CWE-352,CWE-384', 'is_misconfiguration_related': 'Yes'}"
975,"$acls = hiera_hash('acls', {}) notify { $acls: } create_resources(acl, $acls) $tempacl = acl['tempdir'] file {'c:/temp': ensure => 'directory', } acl { 'c:\temp': permissions => [ { identity => 'administrators', rights => [full] } ], owner => 'administrators', inherit_parent_permissions => true } acl { 'temp_dir_module_name': target => 'c:/temp', permissions => [ { identity => 'bob', rights => [read,execute] }, { identity => 'tim', rights => [read,execute] } ], } acl { 'temp_dir_module2_name': target => 'c:/temp', permissions => [ { identity => 'bill', rights => [full], affects => self_only } , { identity => 'tim', rights => [read,execute] } ], } $tempacl2 = acl['c:/temp']",0,1,"acl { 'temp_dir_module2_name':\\\\n target => 'c:/temp',\\\\n permissions => [\\\\n {\\\\n identity => 'bill',\\\\n rights => [full],\\\\n affects => self_only\\\\n },\\\\n, acl { 'temp_dir_module_name': target => 'c:/temp', permissions => [ { identity => 'bob', rights => [read,execute] }, { identity => 'tim', rights => [read,execute] } ], }, acl {\\n 'temp_dir_module2_name':\\n target => 'c:/temp',\\n permissions => [\\n {\\n identity => 'bill',\\n rights => [full],\\n affects => self_only\\n },\\n, file {\n 'c:/temp':\n ensure => 'directory',\n}","CWE-312: Missing Required Cryptographic Step, CWE-320: Improper Use of Permission Checks, CWE-326: Weak Encryption, CWE-327: Use of a Broken or Risky Cryptographic Algorithm","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-312 Missing Required Cryptographic Step, CWE-320 Improper Use of Permission Checks, CWE-326 Weak Encryption, CWE-327 Use of a Broken or Risky Cryptographic Algorithm', 'is_misconfiguration_related': 'Yes'}"
976,"class plugin_purestorage_cinder::compute ( $nova_multipath, ){ include plugin_purestorage_cinder::common include ::nova::params service { 'nova-compute': ensure => 'running', name => $::nova::params::compute_service_name, enable => true, hasstatus => true, hasrestart => true, } nova_config { 'libvirt/iscsi_use_multipath': value => ""${nova_multipath}""; 'libvirt/hw_disk_discard': value => 'unmap' } nova_config<||> ~> service['nova-compute'] }",0,1,"nova_config { 'libvirt/iscsi_use_multipath': value => \, nova_config<||> ~> service['nova-compute']",CWE-250,"{'reason': 'The misconfiguration is related to CWE-250, as this script will create a service of nova-compute with the configuration of libvirt/iscsi_use_multipath and libvirt/hw_disk_discard. This service can cause the issue of Nova Compute disk corruption.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
977,"class barbican::keystone::notification ( $enable_keystone_notification = $::os_service_default, $keystone_notification_control_exchange = $::os_service_default, $keystone_notification_topic = $::os_service_default, $keystone_notification_allow_requeue = $::os_service_default, $keystone_notification_thread_pool_size = $::os_service_default, ) { barbican_config { 'keystone_notifications/enable': value => $enable_keystone_notification; 'keystone_notifications/control_exchange': value => $keystone_notification_control_exchange; 'keystone_notifications/topic': value => $keystone_notification_topic; 'keystone_notifications/allow_requeue': value => $keystone_notification_allow_requeue; 'keystone_notifications/thread_pool_size': value => $keystone_notification_thread_pool_size; } }",0,1,"barbican_config { 'keystone_notifications/enable': value => $enable_keystone_notification;, keystone_notification_control_exchange = $::os_service_default, $keystone_notification_topic = $::os_service_default, $keystone_notification_allow_requeue = $::os_service_default, $keystone_notification_thread_pool_size = $::os_service_default, )","CWE-351, CWE-352","{'reason': 'The provided script is susceptible to CWE-351: Use of Hard-Coded Cryptographic Key.  The script is storing credentials in plaintext which is dangerous.', 'related_cwe': 'CWE-351, CWE-352', 'is_misconfiguration_related': 'Yes'}"
978,"notice('modular: mcollective.pp') $fuel_settings = parseyaml($astute_settings_yaml) class { 'fuel::mcollective': mco_host => $::fuel_settings['admin_network']['ipaddress'], mco_user => $::fuel_settings['mcollective']['user'], mco_password => $::fuel_settings['mcollective']['password'], }",0,1,"class { 'fuel::mcollective':, mco_host => $::fuel_settings['admin_network']['ipaddress'],, mco_password => $::fuel_settings['mcollective']['password'],, mco_user => $::fuel_settings['mcollective']['user'],","CWE-20, CWE-22","{'reason': ""modular: mcollective.pp' contains a single statement class { 'fuel::mcollective': mco_host => $::fuel_settings['admin_network']['ipaddress'], mco_password => $::fuel_settings['mcollective']['password'], mco_user => $::fuel_settings['mcollective']['user'], } in which mco_user is set. In this statement, mco_password is not required to have a value. The only reason that the statement is executed, which is for testing purposes, is when there is a value for mco_password. For any other case, the statement fails to execute, which is not expected. Therefore, it is likely that the author of the statement has not taken care of this and"", 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
979,"class barbican::plugins::dogtag ( $dogtag_plugin_ensure_package = 'present', $dogtag_plugin_pem_path = $::os_service_default, $dogtag_plugin_dogtag_host = $::os_service_default, $dogtag_plugin_dogtag_port = $::os_service_default, $dogtag_plugin_nss_db_path = $::os_service_default, $dogtag_plugin_nss_password = undef, $dogtag_plugin_simple_cmc_profile = $::os_service_default, $dogtag_plugin_ca_expiration_time = $::os_service_default, $dogtag_plugin_plugin_working_dir = $::os_service_default, ) { include ::barbican::params if $dogtag_plugin_nss_password == undef { fail('dogtag_plugin_nss_password must be defined') } package {'dogtag-client': ensure => $dogtag_plugin_ensure_package, name => $::barbican::params::dogtag_client_package, tag => ['openstack', 'barbican-package'] } barbican_config { 'dogtag_plugin/pem_path': value => $dogtag_plugin_pem_path; 'dogtag_plugin/dogtag_host': value => $dogtag_plugin_dogtag_host; 'dogtag_plugin/dogtag_port': value => $dogtag_plugin_dogtag_port; 'dogtag_plugin/nss_db_path': value => $dogtag_plugin_nss_db_path; 'dogtag_plugin/nss_password': value => $dogtag_plugin_nss_password; 'dogtag_plugin/simple_cmc_profile': value => $dogtag_plugin_simple_cmc_profile; 'dogtag_plugin/ca_expiration_time': value => $dogtag_plugin_ca_expiration_time; 'dogtag_plugin/plugin_working_dir': value => $dogtag_plugin_plugin_working_dir; } package['dogtag-client'] -> barbican_config<||> }",0,1,"barbican_config { 'dogtag_plugin/pem_path': value => $dogtag_plugin_pem_path, class barbican::plugins::dogtag (\\n $dogtag_plugin_ensure_package = 'present',\\n $dogtag_plugin_pem_path = $::os_service_default,\\n $dogtag_plugin_dogtag_host = $::os_service_default,\\n $dogtag_plugin_dogtag_port = $::os_service_default,\\n $dogtag_plugin_nss_db_path = $::os_service_default,\\n $dogtag_plugin_nss_password = undef,\\n $dogtag_plugin_simple_cmc_profile = $::os_service_default,\\n $dogtag_plugin_ca_expiration_time = $::os_service_default,\\n $dogtag_plugin_plugin_working_dir = $::os_service_default,\\n), class barbican::plugins::dogtag (\n $dogtag_plugin_ensure_package = 'present',\n $dogtag_plugin_pem_path = $::os_service_default,\n $dogtag_plugin_dogtag_host = $::os_service_default,\n $dogtag_plugin_dogtag_port = $::os_service_default,\n $dogtag_plugin_nss_db_path = $::os_service_default,\n $dogtag_plugin_nss_password = undef,\n $dogtag_plugin_simple_cmc_profile = $::os_service_default,\n $dogtag_plugin_ca_expiration_time = $::os_service_default,\n $dogtag_plugin_plugin_working_dir = $::os_service_default,\n), if $dogtag_plugin_nss_password == undef { fail('dogtag_plugin_nss_password must be defined') }, if $dogtag_plugin_nss_password == undef { fail('dogtag_plugin_nss_password must be defined')}, include ::barbican::params, package {'dogtag-client': ensure => $dogtag_plugin_ensure_package, package['dogtag-client'] -> barbican_config<||>","CWE-120, CWE-1253, CWE-1262","{'reason': ""The 'dogtag_plugin/nss_password' parameter is used in the BarBican configuration. The provided value for this parameter is vulnerable to the CWE-120 misconfiguration."", 'related_cwe': 'CWE-120, CWE-1253, CWE-1262', 'is_misconfiguration_related': 'Yes'}"
980,"notice('modular: scaleio: nova') $scaleio = hiera('scaleio') if $scaleio['metadata']['enabled'] { $all_nodes = hiera('nodes') $nodes = filter_nodes($all_nodes, 'name', $::hostname) if empty(filter_nodes($nodes, 'role', 'compute')) { fail(""compute role is not found on the host ${::hostname}"") } if $scaleio['provisioning_type'] and $scaleio['provisioning_type'] != '' { $provisioning_type = $scaleio['provisioning_type'] } else { $provisioning_type = undef } $gateway_ip = $scaleio['existing_cluster'] ? { true => $scaleio['gateway_ip'], default => hiera('management_vip') } $password = $scaleio['password'] if $scaleio['existing_cluster'] { $client_password = $password } else { $client_password_str = base64('encode', pw_hash($password, 'sha-512', 'scaleio.client.access')) $client_password = inline_template('sio-<%= @client_password_str[33..40] %>-<%= @client_password_str[41..48] %>') } if $::scaleio_sds_with_protection_domain_list and $::scaleio_sds_with_protection_domain_list != '' { $scaleio_sds_to_pd_map = hash(split($::scaleio_sds_with_protection_domain_list, ',')) } else { $scaleio_sds_to_pd_map = {} } if $::hostname in $scaleio_sds_to_pd_map { $pd_name = $scaleio_sds_to_pd_map[$::hostname] } else { $pd_name = $scaleio['protection_domain'] } class {'::scaleio_openstack::nova': ensure => present, gateway_user => $::gateway_user, gateway_password => $client_password, gateway_ip => $gateway_ip, gateway_port => $::gateway_port, protection_domains => $pd_name, storage_pools => $::storage_pools, provisioning_type => $provisioning_type, } }",0,1,"class { '::scaleio_openstack::nova': ensure => present, gateway_user => $::gateway_user, gateway_password => $client_password, gateway_ip => $gateway_ip, gateway_port => $::gateway_port, protection_domains => $pd_name, storage_pools => $::storage_pools, provisioning_type => $provisioning_type, }, if $::hostname in $scaleio_sds_to_pd_map { $pd_name = $scaleio_sds_to_pd_map[$::hostname] } else { $pd_name = $scaleio['protection_domain'] }",CWE-601,"{'reason': 'Providing multiple values for a parameter is inconsistent and therefore a misconfiguration.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
981,"class vmwaretools::config { if $vmwaretools::params::deploy_files { file { $vmwaretools::working_dir: ensure => directory, owner => 'root', group => 'root', mode => '0700', } } }",0,1,"file { $vmwaretools::working_dir: ensure => directory, owner => 'root', group => 'root', mode => '0700', }, if $vmwaretools::params::deploy_files {, if $vmwaretools::params::deploy_files { file { $vmwaretools::working_dir: ensure => directory, owner => 'root', group => 'root', mode => '0700', } }",CWE-732,"{'reason': 'Misconfigurations in the Puppet code for the vmwaretools::config class can lead to file permissions being set incorrectly. Setting permissions to 0700 can restrict access to files to only the owner, allowing the owner to modify or delete those files. While this may not be a severe threat, misconfigurations such as this can reduce the integrity and availability of files, making them more vulnerable to other threats.\\n\\nAdditionally, if the misconfigured file has been used for sensitive tasks (such as storing passwords), then the incorrect file permissions could potentially lead to an attacker being able to read the password. If this is the case, this misconfiguration could lead to privilege escalation attacks, as the attacker could gain access to the system with the privileges of', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
982,class { '::osnailyfacter::vmware::compute_vmware' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,"class { '::osnailyfacter::upgrade::restart_services' :}, class { '::osnailyfacter::vmware::compute_vmware' :}",CWE-352,"{'reason': 'The puppet class that contains the misconfiguration is related to the VMWARE software, so the misconfiguration is related to the misconfiguration', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
983,"class cdh::hive::metastore::mysql::jar { package['hive'] -> class['cdh::hive::metastore::mysql::jar'] if (!defined(package['libmysql-java'])) { package { 'libmysql-java': ensure => 'installed', } } file { '/usr/lib/hive/lib/libmysql-java.jar': ensure => 'link', target => '/usr/share/java/mysql.jar', require => package['libmysql-java'], } }",0,1,"class cdh::hive::metastore::mysql::jar { package['hive'] ->, class['cdh::hive::metastore::mysql::jar'] if (!defined(package['libmysql-java'])) { package {, ensure => 'link', target => '/usr/share/java/mysql.jar',, file { '/usr/lib/hive/lib/libmysql-java.jar':, file { '/usr/lib/hive/lib/libmysql-java.jar': ensure => 'link',, if (!defined(package['libmysql-java'])) { package { 'libmysql-java':, package['hive'] -> class['cdh::hive::metastore::mysql::jar'], package['hive'] -> class['cdh::hive::metastore::mysql::jar'] if (!defined(package['libmysql-java']), package['libmysql-java'] }, require => package['libmysql-java'], }","CWE-248, CWE-249","{'reason': 'The vulnerability in this script can be exploited to cause damage to the system. This can be avoided by using proper access controls.', 'related_cwe': 'CWE-248, CWE-249', 'is_misconfiguration_related': 'Yes'}"
984,"class role::titleblacklist { mediawiki::extension { 'titleblacklist': settings => { wgtitleblacklistloghits => true, wgtitleblacklistsources => [ { type => 'localpage', src => 'mediawiki:titleblacklist', }, { type => 'url', src => 'https://meta.wikimedia.org/w/index.php?title=title_blacklist&action=raw', }, ], }, } mediawiki::import::text { 'vagrantroletitleblacklist': source => 'puppet:///modules/role/titleblacklist/vagrantroletitleblacklist.wiki', } }",1,1,"mediawiki::extension, mediawiki::import::text",CWE-22,"{'reason': 'mediawiki::extension can be leveraged to enable any MediaWiki extension that is not already deployed. mediawiki::import::text can be used to upload MediaWiki pages directly to Wikimedia infrastructure. These are considered critical infrastructure.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
985,"class swift::dispersion ( $auth_url = 'http://127.0.0.1:5000/v2.0/', $auth_user = 'dispersion', $auth_tenant = 'services', $auth_pass = 'dispersion_password', $auth_version = '2.0', $endpoint_type = 'publicurl', $swift_dir = '/etc/swift', $coverage = 1, $retries = 5, $concurrency = 25, $dump_json = 'no' ) { include ::swift::deps include ::swift::params swift_dispersion_config<||> ~> exec['swift-dispersion-populate'] file { '/etc/swift/dispersion.conf': ensure => file, owner => 'swift', group => 'swift', } swift_dispersion_config { 'dispersion/auth_url': value => $auth_url; 'dispersion/auth_user': value => ""${auth_tenant}:${auth_user}""; 'dispersion/auth_key': value => $auth_pass; 'dispersion/auth_version': value => $auth_version; 'dispersion/endpoint_type': value => $endpoint_type; 'dispersion/swift_dir': value => $swift_dir; 'dispersion/dispersion_coverage': value => $coverage; 'dispersion/retries': value => $retries; 'dispersion/concurrency': value => $concurrency; 'dispersion/dump_json': value => $dump_json; } exec { 'swift-dispersion-populate': path => ['/bin', '/usr/bin'], subscribe => file['/etc/swift/dispersion.conf'], timeout => 0, onlyif => ""swift -a ${auth_url} --os-username ${auth_user} --os-project-name ${auth_tenant} --os-password ${auth_pass} -v ${auth_version} stat | grep 'account: '"", unless => ""swift -a ${auth_url} --os-username ${auth_user} --os-project-name ${auth_tenant} --os-password ${auth_pass} -v ${auth_version} list | grep dispersion_"", require => package['swiftclient'], } }",1,1,"swift_dispersion_config { 'dispersion/auth_key': value => $auth_pass;, swift_dispersion_config { 'dispersion/auth_url': value => $auth_url;, swift_dispersion_config { 'dispersion/auth_user': value =>, swift_dispersion_config { 'dispersion/auth_version': value => $auth_version;, swift_dispersion_config { 'dispersion/concurrency': value => $concurrency;, swift_dispersion_config { 'dispersion/dispersion_coverage': value => $coverage;, swift_dispersion_config { 'dispersion/dump_json': value => $dump_json;, swift_dispersion_config { 'dispersion/endpoint_type': value => $endpoint_type;, swift_dispersion_config { 'dispersion/retries': value => $retries;, swift_dispersion_config { 'dispersion/swift_dir': value => $swift_dir;","CWE-321, CWE-322, CWE-521, CWE-522","{'reason': 'The swift_dispersion_config resource uses the value of a secret as a variable, which is vulnerable to information disclosure. This can be solved by storing the variable in a secure way, such as a secret key or a hashed value. This vulnerability may lead to unauthorized access, information disclosure, and even privilege escalation. A good practice is to use encryption techniques, such as AES or RSA, to store sensitive data. Additionally, proper access controls should be implemented to prevent unauthorized users from accessing the secrets. In summary, the swift_dispersion_config resource uses the value of a secret as a variable, which is vulnerable to information disclosure. The vulnerability can be mitigated by storing the variable in a secure way, such as a secret key or a hashed value.', 'related_cwe': 'CWE-321, CWE-322, CWE-521, CWE-522', 'is_misconfiguration_related': 'Yes'}"
986,"class contrail::package ( $install, $remove = undef, $pip_install = undef, ) { define contrail::package::exec_pip ( $path ){ exec { ""install-pip-package-${name}"": path => '/usr/local/bin/:/usr/bin:/bin', command => ""pip install --upgrade --no-deps --index-url='' ${path}/${name}.tar.gz"", } } if ($install) { package { $install: ensure => present, } if ($pip_install) { contrail::package::exec_pip { $pip_install: path => '/opt/contrail/python_packages', require => package[$install], } } } if ($remove) { package { $remove: ensure => purged, } } }",1,1,"class contrail::package ( $install, $remove = undef, $pip_install = undef, ) { define contrail::package::exec_pip ( $path ){ exec { \, if ($remove) { package { $remove: ensure => purged, } }, package { $remove: ensure => purged, }",CWE-122,"{'reason': 'In the provided example, the script is a module containing a define class that includes an exec command to install a package via pip.\\n\\nIn the given example, the pip install command is used in a module, which includes an exec command that is provided as an argument to the define class that is used as a template. While the script is vulnerable to the CWE, it should be noted that the provided example does not include a way to retrieve the value of the pip install command, which is not specified in the script, either in the script itself or provided as a variable to the module. As such, the script does not include a way to install a package via pip, and does not include a mechanism to install the same package via pip.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
987,class toplevel::slave::qa::tps_ci inherits toplevel::slave::qa { },0,1,class toplevel::slave::qa::tps_ci inherits toplevel::slave::qa { },"CWE-16, CWE-20, CWE-22, CWE-89, CWE-90","{'reason': 'Description of CWE', 'related_cwe': 'CWE-1', 'is_misconfiguration_related': 'Yes'}"
988,"class lma_collector::collectd::dbi { include lma_collector::params if $::osfamily == 'redhat' { package { 'collectd-dbi': ensure => present, } } package { $lma_collector::params::collectd_dbi_package: ensure => present, } collectd::plugin { 'dbi': require => package[$lma_collector::params::collectd_dbi_package], } }",0,1,"collectd::plugin { 'dbi': require => package[$lma_collector::params::collectd_dbi_package], }, if $::osfamily =='redhat', package { $lma_collector::params::collectd_dbi_package: ensure => present, }, package { 'collectd-dbi': ensure => present, }","CWE-295, CWE-502, CWE-532","{'reason': 'lma_collector::collectd::dbi does not follow best practices by including the lma_collector::params class and referencing a local parameter. This may lead to unnecessary class dependencies when using this module in a larger system.', 'related_cwe': 'CWE-295, CWE-502, CWE-532', 'is_misconfiguration_related': 'Yes'}"
989,"class role::confirmedit { require ::role::mediawiki require_package('fonts-dejavu') require_package('python-imaging') require_package('wbritish-small') $font = '/usr/share/fonts/truetype/dejavu/dejavusans.ttf' $wordlist = '/usr/share/dict/words' $output = ""${::mediawiki::dir}/images/temp/captcha"" $key = 'foo' mediawiki::extension { 'confirmedit': settings => [ '$wggrouppermissions[""emailconfirmed""][""skipcaptcha""] = true;', '$ceallowconfirmedemail = true;', ], } mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension( ""confirmedit/fancycaptcha"" ); $wmvactiveextensions[] = ""fancycaptcha"";', values => { wgcaptchaclass => 'fancycaptcha', wgcaptchadirectory => '$ip/images/temp/captcha', wgcaptchadirectorylevels => 0, wgcaptchasecret => $key, }, priority => 11, require => mediawiki::extension['confirmedit'], notify => exec['generate_captchas'], } file { [ ""${::mediawiki::dir}/images/temp"", $output ]: ensure => directory, before => exec['generate_captchas'], require => git::clone['mediawiki/core'], } exec { 'generate_captchas': command => ""/usr/bin/python captcha.py --font=${font} --wordlist=${wordlist} --key=${key} --output=${output}"", cwd => ""${::mediawiki::dir}/extensions/confirmedit"", require => [ package['wbritish-small'], package['fonts-dejavu'], ], refreshonly => true, } }",1,1,"mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension( \, mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension( \\, mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension( \\\\, mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension( \\\\ \\\\, mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension( \\\\\\\\\\\\\\\\\\\\\\, mediawiki::settings { 'confirmedit fancycaptcha': header => 'wfloadextension{'reason': 'The misconfiguration is not related to the given CWE. The reason behind the misconfiguration is a mistake in escaping a single quote. The given misconfiguration does not fit with any known CWEs. It is a misconfiguration that occurs when we make an escape character with a single quote, which is not a security issue.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
990,"class packages::openssl { case $::operatingsystem { centos: { case $::operatingsystemrelease { 6.2: { package { [""openssl"", ""openssl-devel""]: ensure => ""1.0.0-20.el6_2.2""; } } 6.5: { realize(packages::yumrepo['openssl']) package { [""openssl"", ""openssl-devel""]: ensure => ""1.0.1e-30.el6_5.2""; } } default: { warning(""unrecognized centos version $::operatingsystemrelease"") package { [""openssl"", ""openssl-devel""]: ensure => present; } } } } darwin: { } ubuntu: { realize(packages::aptrepo['openssl']) case $::operatingsystemrelease { 12.04: { package { [""openssl"", ""libssl1.0.0"", ""libssl-dev""]: ensure => '1.0.1-4ubuntu5.20'; } } 14.04: { package { [""openssl"", ""libssl1.0.0"", ""libssl-dev""]: ensure => '1.0.1f-1ubuntu2.7'; } } default: { warning(""unrecognized ubuntu version $::operatingsystemrelease"") package { [""openssl"", ""libssl1.0.0"", ""libssl-dev""]: ensure => present; } } } } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"package { \, package { \\, package { \\\, package { \\\\, package { \\\\\\\, package { \\\\\\\\, package { \\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\, package {{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
991,"class packages::mozilla::gittool { case $::operatingsystem { darwin,centos: { file { ""/usr/local/bin/gittool.py"": source => ""puppet:///modules/packages/gittool.py"", owner => ""$users::root::username"", group => ""$users::root::group"", mode => 0755; } } windows: { } default: { fail(""don't know where to put gittool on this platform"") } } }",0,1,"class packages::mozilla::gittool { case $::operatingsystem { darwin,centos: { file {, file {, file { \, file {,, group => \\\\, mode => 0755; \\\\, owner => \\, puppet:///modules/packages/gittool.py, puppet:///modules/packages/gittool.py \\\\, source => \\",CWE-601,"{'reason': 'The script provides the owner and group for each of the files, while the CWE describes the vulnerability where an attacker might be able to modify the group and owner of a file in a system', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
992,"define swift::ring( $ring_type, $cfg_file, $storage_dir, $ring_port ) { file { $cfg_file: ensure => present, group => 'www-data', content => template('swift/ring.conf.erb'), mode => '0644', notify => exec[""${ring_type}/create_ring""], } exec { ""${ring_type}/create_ring"": command => ""swift-ring-builder ${ring_type}.builder create 18 3 1"", user => 'swift', cwd => '/etc/swift', notify => exec[""${ring_type}/add_ring""], refreshonly => true, require => package['swift'], } exec { ""${ring_type}/add_ring"": command => ""swift-ring-builder ${ring_type}.builder add z1-127.0.0.1:${ring_port}/1 1"", user => 'swift', cwd => '/etc/swift', notify => exec[""${ring_type}/rebalance""], refreshonly => true, require => package['swift'], } exec { ""${ring_type}/rebalance"": command => ""swift-ring-builder ${ring_type}.builder rebalance"", user => 'swift', cwd => '/etc/swift', refreshonly => true, require => package['swift'], } }",1,1,"package['swift'], refreshonly => true, require => package['swift']","CWE-19, CWE-20","{'reason': ""Not a misconfiguration related to CWE-19 because Puppet cannot provide an initial value for the ring\\_type variable. The swift::ring resource uses the ring\\_type variable as an argument when creating the ring configuration files, but no value is given by Puppet for that variable, thus it doesn't make sense to say that ring\\_type is set to its own value (it's not set in the first place). Furthermore, the only thing we can do about it in this situation is to return an error (which we're doing as we speak), not a misconfiguration. A misconfiguration would mean that there is an error somewhere else in the code (i.e. the error is related to another part of the code), but in this case the"", 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'No'}"
993,"define lma_collector::collectd::python ( $config = {}, ) { include lma_collector::params include lma_collector::collectd::python_base validate_hash($config) $real_config = adapt_collectd_python_plugin_config($config) collectd::plugin::python::module { ""module_${title}"": module => $title, modulepath => $lma_collector::collectd::python_base::modulepath, script_source => ""puppet:///modules/lma_collector/collectd/${title}.py"", config => $real_config, } }",0,1,"config => $real_config,}, module => $title, modulepath => $lma_collector::collectd::python_base::modulepath, script_source => \, modulepath => $lma_collector::collectd::python_base::modulepath, script_source => \, modulepath => $lma_collector::collectd::python_base::modulepath, script_source => \\, modulepath => $lma_collector::collectd::python_base::modulepath, script_source => \\\\",CWE-284,"{'reason': ""This misconfiguration is not related to the provided CWE. While it's possible that a puppet code snippet could potentially lead to the issue described by the CWE, it's important to recognize that there are many factors that may influence a code's security. Therefore, we cannot definitively say that this misconfiguration is related to the provided CWE. However, if you find that there are other instances of this misconfiguration in the code that match the requirements described by the CWE, please be sure to document and provide additional context to the results of this evaluation."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
994,"class ssh::service { case $::operatingsystem { centos : { service { ""sshd"": enable => ""true"", ensure => ""running""; } } windows : { include packages::kts shared::execonce { ""install-ssh-service"": command => '""c:\program files\kts\daemon.exe"" -install', require => class[""packages::kts""]; } service { ""kts"": ensure => running, enable => true, require => [shared::execonce[""install-ssh-service""], class[""ssh::config""] ]; } } darwin : { exec { ""turn-on-ssh"" : command => ""/bin/launchctl load -w /system/library/launchdaemons/ssh.plist"", unless => ""/usr/sbin/netstat -na | /usr/bin/grep -q 'tcp4.*\\*.22.*listen'""; } group { 'com.apple.access_ssh': ensure => absent; } } } }",0,0,"case $::operatingsystem {\n centos : {\n service { \, ensure => absent; \\, exec { \\\, group { \\\\\\, if $::osfamily {\\\\\, require => [shared::execonce[\\\, require => [shared::execonce[\\\\\\, shared::execonce { \\, unless => \, unless => \\\\\\",CWE-264,"{'reason': 'Explanation here', 'related_cwe': 'Related CWE number(s) here', 'is_misconfiguration_related': 'Yes/No'}"
995,"notice('modular: scaleio: mdm_package') $scaleio = hiera('scaleio') if $scaleio['metadata']['enabled'] { if ! $scaleio['existing_cluster'] { $node_ips = split($::ip_address_array, ',') if ! empty(intersection(split($::controller_ips, ','), $node_ips)) { notify {'mdm server installation': } -> class {'::scaleio::mdm_server': ensure => 'present', } } else { notify{'skip deploying mdm server because it is not controller': } } } else { notify{'skip deploying mdm server because of using existing cluster': } } }",1,1,"if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ips', '), $node_ips)) { notify{'mdm server installation': } ->, if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ips,', '), $node_ips)) { notify{'mdm server installation': } ->, if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ips,\\, if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ips,\\\\, if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ips,\\\\\\\\\\\\, if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ips,\\\\\\\\\\\\\\\\\\\\\\\\\\\\, if! $scaleio['existing_cluster'] { if! empty(intersection(split($::controller_ipsif! $scaleio[\, if! $scaleio[\\",CWE-252,"{'reason': 'In this example, we can see that the value returned by hiera is being used in a conditional expression as part of an if statement. If the value returned by hiera contains a null value, the script will execute the else block of code. This is a classic example of a null dereference, which is a common way to exploit a program to execute arbitrary code. This type of attack is a form of injection, and it is called a null dereference injection. The script is vulnerable to a null dereference injection attack because it will execute arbitrary code in the event that the value returned by hiera is null. The script is vulnerable to a null dereference injection because it contains a conditional expression that relies on the value returned by hiera', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
996,"class role::globalblocking( $db_host, $db_user, $db_pass, $db_name, ) { require ::role::mediawiki mysql::db { $db_name: ensure => present, } mysql::sql { ""grant all privileges on ${db_name}.* to ${db_user}@${db_host}"": unless => ""select 1 from information_schema.schema_privileges where table_schema = '${db_name}' and grantee = \""'${db_user}'@'${db_host}'\"" limit 1"", require => mysql::user[$db_user], } mysql::sql { 'create globalblocking tables': sql => ""use ${db_name}; source ${::mediawiki::dir}/extensions/globalblocking/globalblocking.sql;"", unless => ""select count(*) from information_schema.tables where table_schema = '${db_name}' and table_name = 'globalblocks';"", require => [ mysql::db[$db_name], mediawiki::extension['globalblocking'] ], before => exec['update_all_databases'], } mediawiki::extension { 'globalblocking': needs_update => true, settings => { wgglobalblockingdatabase => $db_name, } } }",1,1,"mediawiki::extension, wgglobalblockingdatabase =>, wgglobalblockingdatabase => $db_name,","CWE-269, CWE-732","{'reason': 'The misconfiguration is related to CWE-732, because the connection to the database does not follow secure communication and encryption protocols. This can lead to unauthorized access to sensitive data stored in the database. The use of unencrypted communication can expose the connection to interception and tampering, which can compromise the integrity of the data.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
997,"class tripleo::profile::base::swift::storage ( $enable_swift_storage = true, $step = hiera('step'), ) { if $step >= 4 { if $enable_swift_storage { include ::swift::storage::disks include ::swift::storage::all if(!defined(file['/srv/node'])) { file { '/srv/node': ensure => directory, owner => 'swift', group => 'swift', require => package['openstack-swift'], } } $swift_components = ['account', 'container', 'object'] swift::storage::filter::recon { $swift_components : } swift::storage::filter::healthcheck { $swift_components : } } } }",0,1,"if(!defined(file['/srv/node'])) { file { '/srv/node': ensure => directory, owner =>'swift', group =>'swift', require => package['openstack-swift'], } }, include ::swift::storage::all, include ::swift::storage::disks, swift::storage::disks { }, swift::storage::filter::healthcheck { $swift_components : }, swift::storage::filter::recon { $swift_components : }",CWE-20: Improper Input Validation,"{'reason': 'swift::storage::filter::healthcheck and swift::storage::filter::recon checks if the swift components (e.g., object, container, account) are present on the node and ensure they are working by validating swift health, recon, and replication. It also ensures that each component is mounted on the node, which is a necessary condition to store objects there.', 'related_cwe': 'CWE-20: Improper Input Validation', 'is_misconfiguration_related': 'Yes'}"
998,"class l23network::examples::run_network_scheme ( $settings_yaml ){ include ::l23network::params if $::l23network::params::network_manager_name != undef { package<| title == $::l23network::params::network_manager_name |> { provider => apt } } class {'::l23network': } $config = parseyaml($settings_yaml) prepare_network_config($config['network_scheme']) $sdn = generate_network_config() notice(""sdn ${sdn}"") }",0,1,"class l23network::examples::run_network_scheme { class {'::l23network': }, class l23network::examples::run_network_scheme { include ::l23network::params, class {'::l23network': }, if $::l23network::params::network_manager_name!= undef { package<| title == $::l23network::params::network_manager_name |> { provider => apt } }, include ::l23network::params",CWE-732: Incorrect Permission Assignment for Critical Resource,"{'reason': 'This misconfiguration is not related to the CWE. The error is related to the Puppet syntax instead. The Puppet syntax is wrong, and this code fails to run. However, the code does not open up any misconfiguration vulnerabilities.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
999,if false { } else { } if true { },0,1,if false { } else { } if true { },CWE-252,"{'reason': 'Reason', 'related_cwe': 'CWE', 'is_misconfiguration_related': 'Yes'}"
1000,"class role::globaluserpage { require ::role::mediawiki mediawiki::extension { 'globaluserpage': settings => { wgglobaluserpagedbname => 'gupwiki', wgglobaluserpageapiurl => ""http://gup${::mediawiki::multiwiki::base_domain}${::port_fragment}/w/api.php"", } } mediawiki::wiki { 'gup': } }",0,1,"mediawiki::wiki { 'gup': }, wgglobaluserpageapiurl => \, wgglobaluserpageapiurl => \\, wgglobaluserpageapiurl => \\\\, wgglobaluserpageapiurl => \\\\\\, wgglobaluserpageapiurl => \\\\\\\\, wgglobaluserpagedbname => 'gupwiki'","CWE-20, CWE-22, CWE-89, CWE-93, CWE-94","{'reason': 'The misconfiguration is not related to CWE-20, because [Please provide detailed reasoning].', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1001,"define haproxy::balancermember::collect_exported { if $caller_module_name != $module_name { fail(""use of private class ${name} by ${caller_module_name}"") } haproxy::balancermember <<| listening_service == $name |>> }",0,1,"if $caller_module_name!= $module_name { fail(, listening_service== $name |>>}, name|>>}","CWE-274, CWE-276","{'reason': ""The code could potentially be abused by unauthorized callers using the 'define haproxy::balancermember::collect_exported' method. This could result in a system crash."", 'related_cwe': 'CWE-274, CWE-276', 'is_misconfiguration_related': 'Yes'}"
1002,"class cinder::backup::ceph ( $backup_driver = 'cinder.backup.drivers.ceph', $backup_ceph_conf = '/etc/ceph/ceph.conf', $backup_ceph_user = 'cinder', $backup_ceph_chunk_size = '134217728', $backup_ceph_pool = 'backups', $backup_ceph_stripe_unit = '0', $backup_ceph_stripe_count = '0' ) { cinder_config { 'default/backup_driver': value => $backup_driver; 'default/backup_ceph_conf': value => $backup_ceph_conf; 'default/backup_ceph_user': value => $backup_ceph_user; 'default/backup_ceph_chunk_size': value => $backup_ceph_chunk_size; 'default/backup_ceph_pool': value => $backup_ceph_pool; 'default/backup_ceph_stripe_unit': value => $backup_ceph_stripe_unit; 'default/backup_ceph_stripe_count': value => $backup_ceph_stripe_count; } }",1,1,cinder_config { 'default/backup_driver': value => $backup_driver;,CWE-248,"{'reason': 'CWE-248', 'related_cwe': 'CWE-248', 'is_misconfiguration_related': 'Yes'}"
1003,class { '::openstack_tasks::murano::murano' :} class { '::osnailyfacter::upgrade::restart_services' :} class openstack::firewall {} include openstack::firewall,0,1,include openstack::firewall,CWE-264,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
1004,"class osnailyfacter::dns::dns_client { notice('modular: dns/dns_client.pp') $management_vip = hiera('management_vrouter_vip') class { '::osnailyfacter::resolvconf': management_vip => $management_vip, } }",0,1,"class { '::osnailyfacter::resolvconf': management_vip => $management_vip, }",CWE-918,"{'reason': 'This is a module parameter. It is not considered an injection, because it is expected for users to specify parameters, and it is also documented. The parameter value is passed to an internal module variable (the management_vip variable) that is then used to create a resource (the resolvconf class resource), but the value itself does not need to be trusted by the internal module variable.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1005,class sysfs::params { $package = 'sysfsutils' $service = 'sysfsutils' $config_dir = '/etc/sysfs.d' },0,1,"class sysfs::params { $package ='sysfsutils' $service ='sysfsutils' $config_dir = '/etc/sysfs.d' }, class sysfs::params {\\n  $package ='sysfsutils'\\n  $service ='sysfsutils'\\n  $config_dir = '/etc/sysfs.d'\\n}, sysfs::params { $package ='sysfsutils' $service ='sysfsutils' $config_dir = '/etc/sysfs.d' }, sysfs::params {\\n  $package ='sysfsutils'\\n  $service ='sysfsutils'\\n  $config_dir = '/etc/sysfs.d'\\n}, sysfs::params {\n  $package ='sysfsutils'\n  $service ='sysfsutils'\n  $config_dir = '/etc/sysfs.d'\n}",CWE-732,"{'reason': 'The vulnerability is related to improper permission assignment in Puppet code. The use of incorrect permissions can lead to the exposure of sensitive information, which is covered by the provided CWE.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1006,"class fcgiwrap { package { 'fcgiwrap': ensure => present, } service { 'fcgiwrap': ensure => running, enable => true, hasstatus => true, hasrestart => true, require => package['fcgiwrap'], } }",0,1,"class fcgiwrap { package { 'fcgiwrap': ensure => present, } service { 'fcgiwrap': ensure => running, enable => true, hasstatus => true, hasrestart => true, require => package['fcgiwrap'], } }, package { 'fcgiwrap': ensure => present, }, package { 'fcgiwrap': ensure => present, } service { 'fcgiwrap': ensure => running, enable => true, hasstatus => true, hasrestart => true, require => package['fcgiwrap'], }, service { 'fcgiwrap': ensure => running, enable => true, hasstatus => true, hasrestart => true, require => package['fcgiwrap'], }","CWE-20, CWE-703","{'reason': 'The script can allow users to execute arbitrary system commands as root (CWE-703) and modify critical system files (CWE-20) by using the fcgiwrap package to add a non-privileged user to a sudo group that has been granted the ability to modify critical system files.', 'related_cwe': 'CWE-20, CWE-703', 'is_misconfiguration_related': 'Yes'}"
1007,"class tripleo::selinux ( $mode = 'enforcing', $directory = '/usr/share/selinux/', $booleans = [], $modules = [], ) { if $::osfamily != 'redhat' { fail(""os family unsuppored yet (${::osfamily}), selinux support is only limited to redhat family os"") } selboolean { persistent => true, value => 'on', } selmodule { ensure => present, selmoduledir => $directory, } file { '/etc/selinux/config': ensure => present, mode => '0444', content => template('tripleo/selinux/sysconfig_selinux.erb') } $current_mode = $::selinux? { false => 'disabled', default => $::selinux_current_mode, } if $current_mode != $mode { case $mode { /^(disabled|permissive)$/: { if $current_mode == 'enforcing' { exec { '/sbin/setenforce 0': } } } 'enforcing': { exec { '/sbin/setenforce 1': } } default: { fail('you must specify a mode (enforcing, permissive, or disabled)') } } } selboolean { $booleans : persistent => true, } selmodule { $modules: } }",0,1,"file { '/etc/selinux/config': ensure => present, mode => '0444', content => template('tripleo/selinux/sysconfig_selinux.erb') }, file { '/etc/selinux/config':\n ensure => present,\n mode => '0444',\n content => template('tripleo/selinux/sysconfig_selinux.erb')\n}, selboolean { $booleans : persistent => true, }, selboolean { persistent => true, value => 'on', }, selmodule { $modules: }, selmodule { $modules:}, selmodule { ensure => present, selmoduledir => $directory, }","CWE-22, CWE-284","{'reason': 'The misconfiguration can be identified by analyzing the difference in logic between the provided script and an ideal configuration file.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
1008,"class tripleo::profile::base::neutron::dhcp ( $step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::neutron include ::neutron::agents::dhcp service<| title == 'neutron-server' |> -> service <| title == 'neutron-dhcp' |> } }",0,1,"class tripleo::profile::base::neutron::dhcp ($step = hiera('step'), ) { if $step >= 4 { include ::tripleo::profile::base::neutron include ::neutron::agents::dhcp service<| title == 'neutron-server' |> -> service <| title == 'neutron-dhcp' |> } }, if $step >= 4 {, include ::neutron::agents::dhcp, include ::tripleo::profile::base::neutron, service<| title == 'neutron-dhcp' |>, service<| title == 'neutron-server' |> -> service <| title == 'neutron-dhcp' |>","CWE-119, CWE-120, CWE-125, CWE-20","{'reason': 'The misconfiguration is related to CWE 120. The operator has declared an unbounded cardinality for the Neutron service. This indicates that the default cardinality for a service is being used, which is `default to 0. This is known as a misconfiguration. Without further analysis, it can be determined that the misconfiguration can lead to the exposure of a service.', 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
1009,class { '::openstack_tasks::murano::murano' :} class openstack::firewall {} include openstack::firewall warning('osnailyfacter/modular/./murano/murano.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/murano.pp'),1,1,"class openstack::firewall {} include openstack::firewall, class { '::openstack_tasks::murano::murano' :, warning('osnailyfacter/modular/./murano/murano.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./murano/murano.pp')",CWE-250,"{'reason': 'The misconfiguration is related to the CWE because...', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
1010,"class packages::mozilla::ccache { case $::operatingsystem { centos: { package { ""ccache"": ensure => '3.1.9-3moz0'; } } darwin: { packages::pkgdmg { ccache: version => ""3.1.7""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"package { \, packages::pkgdmg { \\, packages::pkgdmg { \\ \\, packages::pkgdmg { \\ \\\\\\\\\\, packages::pkgdmg { \\\\, packages::pkgdmg { \\\\\, packages::pkgdmg { \\\\\\\","CWE-117, CWE-120","{'reason': 'In line 3, the author uses a default value, however, the Puppet script should provide some kind of checks to make sure that the specified packages exist in that OS. Also, in line 5, the author used a default value, however, the Puppet script should provide some kind of checks to make sure that the specified version of packages exist in that OS.', 'related_cwe': 'CWE-117, CWE-120', 'is_misconfiguration_related': 'Yes'}"
1011,"class monasca::thresh ( $blobmirror = undef, $kafka_brokers = undef, $mon_thresh_build_ver = undef, $mon_thresh_deb = undef, $zookeeper_servers = undef, ) { include ::monasca include ::monasca::params $sql_host = $::monasca::params::sql_host $sql_user = $::monasca::params::sql_user $sql_password = $::monasca::params::sql_password $sql_port = $::monasca::params::sql_port $thresh_fetch_url = ""http://${blobmirror}/repos/monasca/monasca_thresh"" $latest_thresh_deb = ""/tmp/${mon_thresh_deb}"" $thresh_cfg_file = '/etc/monasca/thresh-config.yml' $startup_script = '/etc/init.d/monasca-thresh' $startup_script_src = 'puppet:///modules/monasca/monasca-thresh' wget::fetch { ""${thresh_fetch_url}/${mon_thresh_build_ver}/${mon_thresh_deb}"": destination => $latest_thresh_deb, timeout => 300, before => [package['install-thresh'], file[$latest_thresh_deb]], } ~> service['monasca-thresh'] file { $latest_thresh_deb: ensure => present, } file { $thresh_cfg_file: ensure => file, content => template('monasca/thresh-config.yml.erb'), mode => '0644', owner => 'root', group => $::monasca::group, require => [group[$::monasca::group], file[$::monasca::log_dir]], } package { 'monasca-thresh': ensure => latest, provider => dpkg, source => $latest_thresh_deb, alias => 'install-thresh', tag => ['openstack', 'monasca-package'], } service { 'monasca-thresh': ensure => running, require => [file[$thresh_cfg_file], file[$latest_thresh_deb], file[$startup_script], user['thresh']], tag => 'monasca-service', } user { 'thresh': ensure => present, groups => $::monasca::group, require => group[$::monasca::group], } file { $startup_script: ensure => file, source => $startup_script_src, mode => '0755', owner => 'root', group => 'root', require => package['install-thresh'], } }",0,1,"class monasca::thresh ($blobmirror = undef, $kafka_brokers = undef, $mon_thresh_build_ver = undef, $mon_thresh_deb = undef, $zookeeper_servers = undef, ) {, include ::monasca, include ::monasca::params, monasca::thresh::blobmirror = undef, monasca::thresh::kafka_brokers = undef, monasca::thresh::mon_thresh_build_ver = undef, monasca::thresh::mon_thresh_deb = undef, monasca::thresh::zookeeper_servers = undef","CWE-259, CWE-352","{'reason': 'Explanation', 'related_cwe': 'CWE-259, CWE-352', 'is_misconfiguration_related': 'No'}"
1012,"define manila::type ( $os_password, $driver_handles_share_servers, $set_key = undef, $set_value = undef, $os_tenant_name = 'admin', $os_username = 'admin', $os_auth_url = 'http://127.0.0.1:5000/v2.0/', $os_region_name = undef, ) { $volume_name = $name include ::manila::client $manila_env = [ ""os_tenant_name=${os_tenant_name}"", ""os_username=${os_username}"", ""os_password=${os_password}"", ""os_auth_url=${os_auth_url}"", ] if $os_region_name { $region_env = [""os_region_name=${os_region_name}""] } else { $region_env = [] } exec {""manila type-create ${volume_name} ${driver_handles_share_servers}"": command => ""manila type-create ${volume_name} ${driver_handles_share_servers}"", unless => ""manila type-list | grep ${volume_name}"", environment => concat($manila_env, $region_env), require => package['python-manilaclient'], path => ['/usr/bin', '/bin'], } if ($set_value and $set_key) { exec[""manila type-create ${volume_name} ${driver_handles_share_servers}""] -> manila::type_set { $set_value: type => $volume_name, key => $set_key, os_password => $os_password, os_tenant_name => $os_tenant_name, os_username => $os_username, os_auth_url => $os_auth_url, os_region_name => $os_region_name, } } }",0,1,"driver_handles_share_servers = $driver_handles_share_servers, os_auth_url = $os_auth_url, os_password = $os_password, os_region_name = $os_region_name, os_tenant_name = $os_tenant_name, os_username = $os_username, set_key = $set_key, set_value = $set_value, volume_name = $name","CWE-20, CWE-22, CWE-25","{'reason': 'The Puppet code provides the default values for multiple arguments. The default values are used by default and can be overridden by users. One such example is the os_password argument. In this code snippet, we can see that the os_password argument is given a default value. As soon as a user defines the os_password argument in the Puppet code, the default value of the argument is no longer used. This is a security vulnerability because the user can accidentally change the default value of the os_password argument to something that is not secure. Another example is the set_value argument. Here, we can see that the set_value argument has been given a default value. This means that if the user defines the set_value argument, they are expected to provide a value.', 'related_cwe': 'CWE-20, CWE-22, CWE-25', 'is_misconfiguration_related': 'Yes'}"
1013,"class magnum::api( $package_ensure = 'present', $enabled = true, $port = '9511', $host = '127.0.0.1', $max_limit = '1000', $sync_db = true, $auth_strategy = 'keystone', ) { include ::magnum::params include ::magnum::policy if $sync_db { include ::magnum::db::sync } magnum_config<||> ~> service['magnum-api'] class['magnum::policy'] ~> service['magnum-api'] magnum_config { 'api/port' : value => $port; 'api/host' : value => $host; 'api/max_limit' : value => $max_limit; } if $::magnum::params::api_package { package['magnum-api'] -> class['magnum::policy'] package['magnum-api'] -> service['magnum-api'] package { 'magnum-api': ensure => $package_ensure, name => $::magnum::params::api_package, tag => ['openstack', 'magnum-package'], } } if $enabled { $ensure = 'running' } else { $ensure = 'stopped' } service { 'magnum-api': ensure => $ensure, name => $::magnum::params::api_service, enable => $enabled, hasstatus => true, tag => ['magnum-service', 'magnum-db-sync-service'], } if $auth_strategy == 'keystone' { include ::magnum::keystone::authtoken } }",0,1,"class['magnum::policy'] ~> service['magnum-api'], if $auth_strategy == 'keystone' { include ::magnum::keystone::authtoken }, magnum_config { 'api/host' : value => $host;, magnum_config { 'api/max_limit' : value => $max_limit;, magnum_config { 'api/port' : value => $port;, magnum_config<||> ~> service['magnum-api'], package {'magnum-api': ensure => $package_ensure, name => $::magnum::params::api_package, tag => ['openstack','magnum-package'], }, service {'magnum-api': ensure => $ensure, name => $::magnum::params::api_service, enable => $enabled, hasstatus => true, tag => ['magnum-service','magnum-db-sync-service'], }",CWE-295,"{'reason': 'CWE-295 is a generic vulnerability describing an assumption that something exists or will always be there. There are multiple ways to fix this vulnerability. A good fix is to use a function that will return an empty string when no file can be found. Another is to use a conditional statement that will check the file’s existence and then conditionally execute a piece of code. This example provides a way to fix the vulnerability by using an if statement that only executes code when the file exists.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1014,class { '::openstack_tasks::ironic::ironic' :} warning('osnailyfacter/modular/./ironic/ironic.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/ironic.pp'),1,1,class { '::openstack_tasks::ironic::ironic' :} warning('osnailyfacter/modular/./ironic/ironic.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/ironic.pp'),CWE-120,"{'reason': ""Puppet 4 removed the ability to specify parameters for a class in an external namespace. You can no longer use Puppet::Resource::Class.new(...) to declare resources.\\n\\nThe warning message is generated because you're still using this method. You should refactor your code to declare resources by using the Class.new_resource(...) method instead."", 'related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
1015,"notice('fuel-plugin-nsx-t: gem-install.pp') package { ['ruby-json', 'ruby-rest-client']: ensure => latest, }",0,1,"notice('fuel-plugin-nsx-t: gem-install.pp') package { ['ruby-json', 'ruby-rest-client']: ensure => latest, }, package { ['ruby-json', 'ruby-rest-client']: ensure => latest, }",CWE-798,"{'reason': 'The misconfiguration does not contain any issues that would make it possible to inject arbitrary code. If it were a misconfiguration related to the CWE, it would have to contain at least one string injection vulnerability. Since it does not contain any string injection vulnerabilities, this misconfiguration is not related to the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1016,"class sahara::config ( $sahara_config = {}, $sahara_api_paste_ini = {}, ) { validate_hash($sahara_config) validate_hash($sahara_api_paste_ini) create_resources('sahara_config', $sahara_config) create_resources('sahara_api_paste_ini', $sahara_api_paste_ini) }",0,1,"class sahara::config ( $sahara_config = {}, $sahara_api_paste_ini = {}, ) {, create_resources('sahara_api_paste_ini', $sahara_api_paste_ini), create_resources('sahara_config', $sahara_config), sahara::config {, }","CWE-20, CWE-22","{'reason': 'The vulnerability CWE-20 could lead to a malicious attacker having access to internal server configurations and other misconfiguration vulnerabilities.', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
1017,class { '::osnailyfacter::dns::dns_client' :},0,1,class { '::osnailyfacter::dns::dns_client':},CWE-798,"{'reason': 'This misconfiguration is related to CWE-798 because it can allow attackers to obtain unprivileged access to a system and gain control over its network traffic.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1018,"class nova::config ( $nova_config = {}, $nova_paste_api_ini = {}, ) { include ::nova::deps validate_hash($nova_config) validate_hash($nova_paste_api_ini) create_resources('nova_config', $nova_config) create_resources('nova_paste_api_ini', $nova_paste_api_ini) }",1,1,"class nova::config (\\n, class nova::config (\n, create_resources('nova_config', $nova_config)\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, create_resources('nova_config', $nova_config)\\\\n, create_resources('nova_paste_api_ini', $nova_paste_api_ini)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, create_resources('nova_paste_api_ini', $nova_paste_api_ini)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, include ::nova::depsinclude ::nova::deps\\\\\\\\n, validate_hash($nova_config)\\\\\\\\n, validate_hash($nova_config)\\n",CWE-1031,"{'reason': 'The misconfiguration here is related to a security vulnerability, which would allow an attacker to inject malicious code, causing the puppet script to run as expected but not to provide the correct functionality, i.e., this would result in a denial-of-service attack.', 'related_cwe': 'CWE-1031', 'is_misconfiguration_related': 'Yes'}"
1019,"class neutron::plugins::ovs::opendaylight ( $tunnel_ip, $odl_username = 'admin', $odl_password = 'admin', $odl_check_url = 'http://127.0.0.1:8080/restconf/operational/network-topology:network-topology/topology/netvirt:1', $odl_ovsdb_iface = 'tcp:127.0.0.1:6640', $provider_mappings = false, $retry_interval = 60, $retry_count = 20, ) { include ::neutron::deps service<| title == 'opendaylight' |> -> exec <| title == 'wait for netvirt ovsdb to come up' |> exec { 'wait for netvirt ovsdb to come up': command => ""curl -o /dev/null --fail --silent --head -u ${odl_username}:${odl_password} ${odl_check_url}"", tries => $retry_count, try_sleep => $retry_interval, path => '/usr/sbin:/usr/bin:/sbin:/bin', } -> exec { 'set ovs manager to opendaylight': command => ""ovs-vsctl set-manager ${odl_ovsdb_iface}"", unless => ""ovs-vsctl show | grep 'manager \""${odl_ovsdb_iface}\""'"", path => '/usr/sbin:/usr/bin:/sbin:/bin', } -> exec { 'set local_ip other option': command => ""ovs-vsctl set open_vswitch $(ovs-vsctl get open_vswitch . _uuid) other_config:local_ip=${tunnel_ip}"", unless => ""ovs-vsctl list open_vswitch | grep 'local_ip=\""${tunnel_ip}\""'"", path => '/usr/sbin:/usr/bin:/sbin:/bin', } if $provider_mappings { exec { 'set provider_mappings other option': command => ""ovs-vsctl set open_vswitch $(ovs-vsctl get open_vswitch . _uuid) other_config:provider_mappings=${provider_mappings}"", unless => ""ovs-vsctl list open_vswitch | grep 'provider_mappings' | grep ${provider_mappings}"", path => '/usr/sbin:/usr/bin:/sbin:/bin', } } }",0,1,"curl -o /dev/null --fail --silent --head -u ${odl_username}:${odl_password} ${odl_check_url}, ovs-vsctl set open_vswitch $(ovs-vsctl get open_vswitch. _uuid) other_config:local_ip=${tunnel_ip}, ovs-vsctl set open_vswitch $(ovs-vsctl get open_vswitch. _uuid) other_config:provider_mappings=${provider_mappings}, ovs-vsctl set-manager ${odl_ovsdb_iface}","CWE-352, CWE-601","{'reason': 'ODL_username and ODL_password are hardcoded credentials that are not secure. CWE-601', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
1020,"class gnocchi::db ( $database_connection = 'sqlite:////var/lib/gnocchi/gnocchi.sqlite', $ensure_package = 'present', ) inherits gnocchi::params { $database_connection_real = pick($::gnocchi::database_connection, $database_connection) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') if $database_connection_real { case $database_connection_real { /^mysql(\+pymysql)?:\/\//: { require '::mysql::bindings' require '::mysql::bindings::python' if $database_connection_real =~ /^mysql\+pymysql/ { $backend_package = $::gnocchi::params::pymysql_package_name } else { $backend_package = false } } /^postgresql:\/\//: { $backend_package = false require '::postgresql::lib::python' } /^sqlite:\/\//: { $backend_package = $::gnocchi::params::sqlite_package_name } default: { fail('unsupported backend configured') } } if $backend_package and !defined(package[$backend_package]) { package {'gnocchi-backend-package': ensure => present, name => $backend_package, tag => 'openstack', } } gnocchi_config { 'indexer/url': value => $database_connection_real, secret => true; } package { 'gnocchi-indexer-sqlalchemy': ensure => $ensure_package, name => $::gnocchi::params::indexer_package_name, tag => ['openstack', 'gnocchi-package'], } } }",1,1,"\\\\n], gnocchi_config {\\\\\\\\n, gnocchi_config {\\\\n, gnocchi_config {\\n, gnocchi_config {\n, name => $::gnocchi::params::indexer_package_name,, secret => true;, tag => [\\n","CWE-16, CWE-19","{'reason': ""CWE-16 is related to 'name => $::gnocchi::params::indexer_package_name'.\\nThe package parameter is used to install, update, uninstall and list packages on the machine.\\nThis parameter can be used to install, update, uninstall and list packages on the machine.\\nCWE-19 is related to'secret => true'.\\n\\n\\nThe secret attribute is used to mask the secret value, by default the secret value will be written to the Puppet master’s log.\\nCWE-16 is related to 'gnocchi_config {\\n, gnocchi_config {\\n, gnocchi_config {\\n, gnocchi_config {\\n, gnocchi_config {\\n, gnoc"", 'related_cwe': 'CWE-16, CWE-19', 'is_misconfiguration_related': 'Yes'}"
1021,"class swift::ringserver( $local_net_ip, $max_connections = 5 ) { include ::swift::deps class['swift::ringbuilder'] -> class['swift::ringserver'] if !defined(class['rsync::server']) { class { '::rsync::server': use_xinetd => true, address => $local_net_ip, use_chroot => 'no', } } rsync::server::module { 'swift_server': path => '/etc/swift', lock_file => '/var/lock/swift_server.lock', uid => 'swift', gid => 'swift', max_connections => $max_connections, read_only => true, } }",1,1,"gid =>'swift',, lock_file => '/var/lock/swift_server.lock',, max_connections => $max_connections,, path => '/etc/swift',, read_only => true,, uid =>'swift',, use_chroot => 'no',","CWE-119, CWE-255, CWE-732, CWE-798","{'reason': ""This misconfiguration could allow a remote attacker to access the Swift server's contents, including the /etc/swift directory. Although the script uses Xinetd to limit remote connections, this does not fully protect the Swift server's data. Furthermore, this could be used as a stepping stone for further exploitation, as it is possible for remote attackers to execute arbitrary code on the server. This misconfiguration violates the CWEs provided, specifically CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), CWE-255 (Improper Enforcement of Cardinality Restriction), CWE-732 (Exposure of Resource Identifier to an Offending Control Sphere), and CWE-798 (Use of Hard-coded Credentials)."", 'related_cwe': 'CWE-119, CWE-255, CWE-732, CWE-798', 'is_misconfiguration_related': 'Yes'}"
1022,class role::greystuff { mediawiki::skin { 'greystuff': } },0,1,class role::greystuff { mediawiki::skin { 'greystuff': } },"CWE-1200, CWE-1210, CWE-1220, CWE-1230, CWE-1240, CWE-1250, CWE-1260, CWE-1270, CWE-1280, CWE-1290","{'reason': 'The misconfiguration is related to CWE-1200. It is a case of CWE-1200 as the `mediawiki::skin` resource contains a misconfigured name value. In Puppet, a class defined resource must have the resource type capitalized. Therefore, `mediawiki::skin` should be `mediawiki_skin`.', 'related_cwe': 'CWE-1200', 'is_misconfiguration_related': 'Yes'}"
1023,"class changeprop( $port, $log_level = undef, ) { $restbase_port = defined(class['restbase']) ? { true => $::restbase::port, default => 7231, } $restbase_uri = ""http://localhost:${restbase_port}"" service::node { 'changeprop': port => $port, module => 'hyperswitch', log_level => $log_level, git_remote => 'https://github.com/wikimedia/change-propagation.git', config => template('changeprop/config.yaml.erb'), } }",1,1,"changeprop/config.yaml.erb',}, class changeprop(\$port, \u0026\{log_level = undef, \}) {\u0026\{restbase_port = defined(class['restbase'])? {\u0026\{true => \u0026\{::restbase::port, default => 7231, \}}, \u0026\{restbase_uri = \, class['restbase'])? {\\\\u0026\\\\{true => \\\\u0026\\\\{::restbase::port, default => 7231, \\}, \\\}, \\u0026\\{restbase_uri = \\, git_remote => 'https://github.com/wikimedia/change-propagation.git', config => template('changeprop/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\}, module => 'hyperswitch', log_level => \\\\\\\\\\\\${log_level, git_remote => 'https://github.com/wikimedia/change-propagation.git', config => template('changeprop/\\\\\\\\}, node { 'changeprop': port => \\\\\\${port, module => 'hyperswitch', log_level => \\\\\\${log_level, git_remote => 'https://github.com/wikimedia/change-propagation.git', config => template('changeprop/\\\\}, node { 'changeprop': port => \\u0026\\{port, module => 'hyperswitch', log_level => \\u0026\\{log_level, git_remote => 'https://github.com/wikimedia/change-propagation.git', config => template('changeprop/\\}, restbase_uri = \\, service::node { 'changeprop': port => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, ttp://localhost:\\\\${restbase_port}'\\\\}, } }\\r\\n",CWE-601,"{'reason': 'Change-propagation is an application to propagate changes from one wiki to another', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
1024,"define ruby::bundle( $directory = $title, $gemfile = undef, $missing_ok = false, $ruby = $ruby::default_version, $user = 'vagrant', ) { include ::ruby $bundle = ""ruby${ruby} -- ${ruby::gem_bin_dir}/bundle"" $bundle_gemfile = $gemfile ? { undef => ""${directory}/gemfile"", default => $gemfile, } $guard = $missing_ok ? { false => '', default => ""test ! -e '${bundle_gemfile}' || "", } file { ""${directory}/.bundle/config"": ensure => absent, } exec { ""bundle_install_${title}"": command => ""${bundle} install"", provider => 'shell', cwd => $directory, environment => ""bundle_gemfile=${bundle_gemfile}"", user => $user, unless => ""${guard}${bundle} check"", timeout => 60 * 20, require => [ file[""${directory}/.bundle/config""], ruby::ruby[$ruby], ], } }",0,1,"bundle, bundleGemfile, bundle_check, bundle_install, check, ruby, ruby::default_version, ruby::gem_bin_dir",CWE-476,"{'reason': 'Not an attack surface', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1025,"notice('fuel-plugin-lma-infrastructure-alerting: nagios_dashboard_url.pp') $deployment_id = hiera('deployment_id') $master_ip = hiera('master_ip') $nagios_ui = hiera_hash('lma::infrastructure_alerting::nagios_ui') $vip = $nagios_ui['vip'] $tls_enabled = $nagios_ui['tls_enabled'] if $tls_enabled { $host_name = $nagios_ui['hostname'] $link = ""https://${$host_name}/"" $text = ""dashboard for visualizing alerts (${host_name}: https://${vip})"" } else { $link = ""http://${vip}/"" $text = 'dashboard for visualizing alerts' } $nagios_link_data = ""{\""title\"":\""nagios\"",\ \""description\"":\""${text}\"",\ \""url\"":\""${link}\""}"" $nagios_link_created_file = '/var/cache/nagios_link_created' exec { 'notify_nagios_url': creates => $nagios_link_created_file, command => ""/usr/bin/curl -sl -w \""%{http_code}\"" \ -h 'content-type: application/json' -x post -d '${nagios_link_data}' \ http://${master_ip}:8000/api/clusters/${deployment_id}/plugin_links \ -o /dev/null | /bin/grep 201 && /usr/bin/touch ${nagios_link_created_file}"", }",0,1,"if $tls_enabled {, notice('fuel-plugin-lma-infrastructure-alerting: nagios_dashboard_url.pp')","CWE-16, CWE-23","{'reason': 'Reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
1026,"class buildmaster::db_maintenance { include users::builder include packages::mozilla::python27 include buildmaster::settings $db_maintenance_dir = ""${buildmaster::settings::master_root}/db_maint"" mercurial::repo { ""buildmaster::db_maintenance::tools"": require => file[$db_maintenance_dir], hg_repo => ""${config::buildbot_tools_hg_repo}"", dst_dir => ""${db_maintenance_dir}/tools"", user => ""${users::builder::username}"", branch => ""default""; } python::virtualenv { ""$db_maintenance_dir"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""sqlalchemy==0.7.9"", ""mysql-python==1.2.3"", ]; } file { ""/etc/cron.d/buildbot_db_maintenance"": require => [python::virtualenv[$db_maintenance_dir], mercurial::repo[""buildmaster::db_maintenance::tools""]], mode => 600, content => template(""buildmaster/buildmaster-db-maintenance.erb""); ""$db_maintenance_dir/config.ini"": owner => ""${users::builder::username}"", group => ""${users::builder::group}"", mode => 600, content => template(""buildmaster/buildmaster-db-maintenance-config.erb""), show_diff => false; } }",0,1,"file { \, file { \\, file { \\\\, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file {{'reason': 'This issue is not a misconfiguration because it is not a flaw in the design of the Puppet code itself. This issue is a bug in the template that is used by the Puppet code. The bug was introduced by hardcoding a new line between every character in the file { line in the template file. When a user wants to update the cron file in the future, it will be difficult to maintain and edit the file correctly. This issue is an example of a misconfiguration in the template file, not a flaw in the Puppet code itself. The Puppet code is intended to create the file { line in the cron file. However, due to the bug in the template file, the file { line contains a lot of characters that do not belong to', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1027,"class tripleo::profile::base::keepalived ( $enable_load_balancer = hiera('enable_load_balancer', true), $step = hiera('step'), ) { if $step >= 1 { if $enable_load_balancer and hiera('enable_keepalived', true){ include ::tripleo::keepalived } } }",0,1,"class tripleo::profile::base::keepalived ($enable_load_balancer = hiera(\'enable_load_balancer\', true), $step = hiera(\'step\'), ) { if $step >= 1 { if $enable_load_balancer and hiera(\'enable_keepalived\', true){ include ::tripleo::keepalived } } }, if $enable_load_balancer and hiera(\\'enable_keepalived\\', true), if $enable_load_balancer and hiera(\\'enable_keepalived\\', true){ include ::tripleo::keepalived }, if $enable_load_balancer and hiera(\\\\'enable_keepalived\\\\', true), if $enable_load_balancer and hiera(\\\\\\\\\\\\\\\\\\\\\\\\\\\\'enable_keepalived\\\\\\\\\\\\\\\\\\\\\\\\\\\\', true), if $enable_load_balancer and hiera(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'enable_keepalived\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', true), if $step >= 1 { if $enable_load_balancer and hiera(\\'enable_keepalived\\', true){ include ::tripleo::keepalived } }, include ::tripleo::keepalived",CWE-732,"{'reason': 'In puppet, the if statement is used for branching. The if and unless keywords are used for branching. A comparison is done on the right side of the condition. The first part of the if statement consists of one or more conditions. The conditions are separated by either an and or or keyword. The value on the left side of the condition is the variable that is being tested against the value on the right. In this case, if the value of the enable_load_balancer variable is true, and the value of the enable_keepalived variable is true, then the ::tripleo::keepalived class will be included in the configuration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1028,"class tripleo::profile::base::snmp ( $snmpd_password = hiera('snmpd_readonly_user_password'), $snmpd_user = hiera('snmpd_readonly_user_name'), $step = hiera('step'), ) { if $step >= 4 { snmp::snmpv3_user { $snmpd_user: authtype => 'md5', authpass => $snmpd_password, } class { '::snmp': agentaddress => ['udp:161','udp6:[::1]:161'], snmpd_config => [ join(['createuser ', $snmpd_user, ' md5 ""', $snmpd_password, '""']), join(['rouser ', $snmpd_user]), 'proc cron', 'includealldisks 10%', 'master agentx', 'trapsink localhost public', 'iquerysecname internaluser', 'rouser internaluser', 'defaultmonitors yes', 'linkupdownnotifications yes' ], } } }",0,1,"class { '::snmp': agentaddress => ['udp:161','udp6:[::1]:161'], snmpd_config => [ join(['createuser ', $snmpd_user,'md5, snmp::snmpv3_user { $snmpd_user: authtype =>'md5', authpass => $snmpd_password,\\n}, snmp::snmpv3_user {\\n $snmpd_user:\\n authtype =>'md5',\\n authpass => $snmpd_password,\\n\\n}, snmp::snmpv3_user {\n $snmpd_user:\n authtype =>'md5',\n authpass => $snmpd_password,\n\n}",CWE-284: Improper Access Control,"{'reason': ""The misconfiguration allows for unauthorized users to execute commands by creating a new snmp user named 'internaluser' with an insecure password. This new user can then be used to view system information through snmpwalk or snmpget."", 'related_cwe': '284', 'is_misconfiguration_related': 'Yes'}"
1029,"class dirs::installersource::puppetagain_pub_build_mozilla_org::zips { include dirs::installersource::puppetagain_pub_build_mozilla_org file { ""$env_systemdrive/installersource/puppetagain.pub.build.mozilla.org/zips"": ensure => directory, } }",0,1,"ensure => directory, \\, ensure => directory, \\\\, file { \, file { \\, path: \, path: \\, path: \\\\, }",CWE-252,"{'reason': 'the issue could be linked to a path traversal', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1030,"class cgroups( $cgroups_set = {}, $packages = $cgroups::params::packages, ) inherits cgroups::params { validate_hash($cgroups_set) ensure_packages($packages, { tag => 'cgroups' }) file { ensure => file, owner => 'root', group => 'root', mode => '0644', } file { '/etc/cgconfig.conf': content => template('cgroups/cgconfig.conf.erb'), notify => service['cgconfigparser'], tag => 'cgroups', } file { '/etc/cgrules.conf': content => template('cgroups/cgrules.conf.erb'), notify => service['cgrulesengd'], tag => 'cgroups', } class { '::cgroups::service': cgroups_settings => $cgroups_set, } package <| tag == 'cgroups' |> ~> service['cgrulesengd'] package <| tag == 'cgroups' |> -> file <| tag == 'cgroups' |> file <| tag == 'cgroups' |> -> service['cgroup-lite'] service['cgroup-lite'] -> service['cgconfigparser'] service['cgconfigparser'] -> cgclassify <||> cgclassify <||> -> service['cgrulesengd'] }",0,1,cgroup,"CWE-294, CWE-295","{'reason': 'Inconsistent configuration of Puppet code between the provided file and module classes (class { cgroups::service: cgroups_settings => \\$cgroups_set, }) and (validate_hash(\\$cgroups_set)) causes misconfiguration in configuration of cgconfig.conf. CWE-295', 'related_cwe': 'CWE-294, CWE-295', 'is_misconfiguration_related': 'Yes'}"
1031,"class misc { file { '/etc/profile.d': ensure => directory, recurse => true, purge => true, force => true, source => 'puppet:///modules/misc/etc_profile.d', } motd::script { 'mediawiki_vagrant': source => 'puppet:///modules/misc/mediawiki_vagrant_motd', } file { '/usr/local/sbin/isfresh': source => 'puppet:///modules/misc/isfresh', mode => '0755', } package { [ 'ack-grep', 'curl', 'htop', 'httpie', 'jq', 'nano', ]: ensure => present, } file { '/etc/ackrc': require => package['ack-grep'], source => 'puppet:///modules/misc/ackrc', } exec { 'fix_root_profile': command => '/bin/sed -i -e ""s/^mesg n/tty -s \&\& mesg n/"" /root/.profile', onlyif => '/bin/grep -q ""^mesg n"" /root/.profile', } env::profile_script { 'xdebug': content => template('misc/xdebug.erb'), } file { '/vagrant/.idea': source => '/vagrant/support/idea-dist', recurse => true, replace => false, } }",1,1,"env::profile_script { 'xdebug': content => template('misc/xdebug.erb'), }, exec { 'fix_root_profile': command => '/bin/sed -i -e, file { '/etc/ackrc': require => package['ack-grep'], source => 'puppet:///modules/misc/ackrc', }, file { '/etc/profile.d': ensure => directory, recurse => true, purge => true, force => true, source => 'puppet:///modules/misc/etc_profile.d', }, file { '/usr/local/sbin/isfresh': source => 'puppet:///modules/misc/isfresh', mode => '0755', }, file { '/vagrant/.idea': source => '/vagrant/support/idea-dist', recurse => true, replace => false, }, motd::script {'mediawiki_vagrant': source => 'puppet:///modules/misc/mediawiki_vagrant_motd', }","CWE-20, CWE-269, CWE-272, CWE-502, CWE-78","{'reason': ""This script contains a command injection vulnerability in the 'fix_root_profile' exec. Puppet users are vulnerable to remote execution of arbitrary commands with root privileges, including deletion of important system files or execution of system commands.\\n \\nThe Puppet language has been specifically designed to avoid security vulnerabilities. It is the authors' responsibility to avoid creating security vulnerabilities with their own code. In this case, the script author uses an unsafe'require' conditional to enable command execution. It is also important to note that Puppet users are responsible for the maintenance of the code within Puppet manifests. If the author has not updated the script, the execution condition in 'fix_root_profile' will remain true, and a command injection vulnerability will persist.\\n \\n[CWE-20]"", 'related_cwe': 'CWE-20, CWE-269, CWE-272, CWE-502, CWE-78', 'is_misconfiguration_related': 'Yes'}"
1032,"class network { include ::config include network::resolv host { ['puppet', 'repos']: ensure => absent; } case $::operatingsystem { centos: { file { ""/etc/sysconfig/network"": content => ""networking=yes\nhostname=$fqdn\n"", notify => exec['run-hostname-centos']; } exec { ""run-hostname-centos"": command => ""/bin/hostname $fqdn"", refreshonly => true; } } darwin: { } } if ($::config::manage_ifcfg) { case $::operatingsystem { centos: { file { ""/etc/sysconfig/network-scripts/ifcfg-eth0"": content => template(""network/centos6-ifcfg-eth0.erb""); } } darwin: { } } } case $::operatingsystem { centos: { } darwin: { if ($::macaddress_en1 != """") { exec { ""disable-wifi"": command => ""/usr/sbin/networksetup -setairportpower en1 off"", unless => ""/usr/sbin/networksetup -getairportpower en1 | egrep 'off'""; } } if ($::macosx_productversion_major == ""10.10"") { exec { ""disable multicast"": command => ""/usr/libexec/plistbuddy -c \""add :programarguments: string --no-multicast\"" /system/library/launchdaemons/com.apple.discoveryd.plist"", unless => ""/usr/bin/defaults read /system/library/launchdaemons/com.apple.discoveryd.plist | egrep 'no-multicast'"" } } } } }",1,1,"case $::operatingsystem { centos: { file { \\, case $::operatingsystem { centos: { file { \\\\, class network { include ::config include network::resolv host { ['puppet','repos']: ensure => absent; }, class network { include ::config include network::resolv host { ['puppet','repos']: ensure => absent; } case $::operatingsystem { centos: { file { \\, file { \, file { \\, file { \\\\",CWE-22,"{'reason': 'The code contains several files being manipulated, and the content of the file being set appears to be coming from a template, which can be malicious.  The code is also utilizing the host resource in order to make sure the IP addresses are gone.  The code also checks to see if the system is a Mac, in order to disable wireless functionality.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1033,"class packstack::nova::neutron () { $nova_neutron_cfg_ctrl_host = hiera('config_keystone_host_url') $neutron_auth_url = hiera('config_keystone_admin_url') class { '::nova::network::neutron': neutron_password => hiera('config_neutron_ks_pw'), neutron_auth_plugin => 'v3password', neutron_url => ""http://${nova_neutron_cfg_ctrl_host}:9696"", neutron_project_name => 'services', neutron_auth_url => ""${neutron_auth_url}/v3"", neutron_region_name => hiera('config_keystone_region'), neutron_url_timeout => '60', } class { '::nova::compute::neutron': libvirt_vif_driver => hiera('config_nova_libvirt_vif_driver'), } }",1,1,"neutron_auth_plugin, neutron_auth_url, neutron_password, neutron_project_name, neutron_region_name, neutron_url, neutron_url_timeout, nova_neutron_cfg_ctrl_host","CWE-259, CWE-522, CWE-732","{'reason': ""I don't know why to select this CWE"", 'related_cwe': '1', 'is_misconfiguration_related': 'No'}"
1034,class { '::osnailyfacter::cluster_vrouter::cluster_vrouter' :} class { '::osnailyfacter::upgrade::restart_services' :},0,1,"class { '::osnailyfacter::cluster_vrouter::cluster_vrouter' :}, class { '::osnailyfacter::cluster_vrouter::cluster_vrouter' :} class { '::osnailyfacter::upgrade::restart_services' :}, class { '::osnailyfacter::upgrade::restart_services' :}","CWE-264:Content Spoofing, CWE-295:Improper Certificate Validation","{'reason': 'Reason', 'related_cwe': 'CWE Number', 'is_misconfiguration_related': 'Yes/No'}"
1035,"class watcher::params { include ::openstacklib::defaults case $::osfamily { 'redhat': { $api_service_name = 'openstack-watcher-api' $api_package_name = 'openstack-watcher-api' $common_package_name = 'openstack-watcher-common' $applier_package_name = 'openstack-watcher-applier' $applier_service_name = 'openstack-watcher-applier' $decision_engine_package_name = 'openstack-watcher-decision-engine' $decision_engine_service_name = 'openstack-watcher-decision-engine' } 'debian': { $api_service_name = 'watcher-api' $api_package_name = 'watcher-api' $common_package_name = 'watcher-common' $applier_package_name = 'watcher-applier' $applier_service_name = 'watcher-applier' $decision_engine_package_name = 'watcher-decision-engine' $decision_engine_service_name = 'watcher-decision-engine' } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem"") } } }",0,1,"# Openstack W... $decision_engine_package_name = 'openstack-watcher-decision-engine' $decision_engine_service_name = 'openstack-watcher-decision-engine' } \n, \, default: { fail(\, fail(\\, fail(\\\, fail(\\\\\\\\, fail(\\\\\\\\\\\\\\\, fail(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, fail{'reason': ""There's nothing in the script that could indicate a missing include or import.\\n"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1036,"class ssh::authorized_keys { $keys = hiera_hash('ssh::authorized_keys::keys', {}) create_resources(ssh_authorized_key, $keys, { ensure => present, user => 'root' } ) }",0,1,"class ssh::authorized_keys {, create_resources(ssh_authorized_key,, user => 'root' } ) }, }",CWE-829,"{'reason': 'This is a misconfiguration related to CWE-829', 'related_cwe': 'CWE-829', 'is_misconfiguration_related': 'Yes'}"
1037,"define designate::pool_target ( $options, $type, $masters = ['127.0.0.1:5354'], ) { if target == 'powerdns' { include ::powerdns include ::powerdns::mysql } validate_re($name, '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}') validate_array($masters) if is_hash($options) { $options_real = join(join_keys_to_values($options,':'),',') } else { warning('passing a string to options is now deprecated, use a hash instead.') $options_real = $options } designate_config { ""pool_target:${name}/options"": value => $options_real; ""pool_target:${name}/type"": value => $type; ""pool_target:${name}/masters"": value => join($masters,','); } if $type == 'powerdns' { exec { ""designate-powerdns-dbsync ${name}"": command => ""${::designate::params::designate_manage} powerdns sync ${name}"", path => '/usr/bin', user => 'root', refreshonly => true, logoutput => on_failure, } designate_config<||> -> exec[""designate-powerdns-dbsync ${name}""] exec[""designate-powerdns-dbsync ${name}""] ~> service<| title == 'designate-pool-manager' |> } }",0,1,"command => \\\, exec { \, if is_hash(\$options), if target == \\\\\\, include ::powerdns include ::powerdns::mysql, refreshonly => true, logoutput => on_failure, \\, service<| title == \\\\\\\, warnin, } design, }\n}","CWE-120, CWE-89","{'reason': 'The given script is not related to the misconfiguration CWE 120', 'related_cwe': 'CWE 120', 'is_misconfiguration_related': 'No'}"
1038,"class contrail::control { package { ensure => present } file { ensure => present, mode => '0644', owner => 'contrail', group => 'contrail', require => package['contrail-openstack-control'], } exec { provider => 'shell', path => '/usr/bin:/bin:/sbin', } tweaks::ubuntu_service_override { 'supervisor-control': package_name => 'contrail-control', } package { 'contrail-dns': } package { 'contrail-control': } package { 'contrail-openstack-control': } contrail_control_config { 'default/hostip': value => $contrail::address; 'default/hostname': value => $::fqdn; 'default/log_file': value => '/var/log/contrail/contrail-control.log'; 'default/log_level': value => 'sys_notice'; 'default/log_local': value => '1'; 'discovery/server': value => $contrail::contrail_private_vip; 'ifmap/certs_store': value => ' '; 'ifmap/password': value => $contrail::address; 'ifmap/user': value => $contrail::address; } contrail_dns_config { 'default/hostip': value => $contrail::address; 'default/hostname': value => $::fqdn; 'default/log_file': value => '/var/log/contrail/contrail-dns.log'; 'default/log_level': value => 'sys_notice'; 'default/log_local': value => '1'; 'discovery/server': value => $contrail::contrail_private_vip; 'ifmap/certs_store': value => ' '; 'ifmap/password': value => ""${contrail::address}.dns""; 'ifmap/user': value => ""${contrail::address}.dns""; } file { '/etc/contrail/dns/contrail-named.conf': content => template('contrail/contrail-named.conf.erb'), require => package['contrail-dns'], } file { '/etc/contrail/dns/contrail-rndc.conf': source => 'puppet:///modules/contrail/contrail-rndc.conf', require => package['contrail-dns'], } contrail_control_nodemgr_config { 'discovery/server': value => $contrail::contrail_private_vip; 'discovery/port': value => '5998'; } service { 'contrail-named': ensure => running, require => package['contrail-dns'], subscribe => [ file['/etc/contrail/dns/contrail-named.conf'], file['/etc/contrail/dns/contrail-rndc.conf'], ] } service { 'supervisor-control': ensure => $contrail::service_ensure, enable => true, require => [ package['contrail-openstack-control'], package['contrail-control'] ], } contrail_control_config <||> ~> service['supervisor-control'] contrail_dns_config <||> ~> service['supervisor-control'] }",1,1,"contrail_control_config <||> ~> service['supervisor-control'], contrail_control_config\ncontrail_dns_config, contrail_dns_config <||> ~> service['supervisor-control'], service['supervisor-control']","CWE-264, CWE-312","{'reason': 'A security issue can occur if someone is able to edit the contrail_control_config or contrail_dns_config files, then the contrail control and DNS services may become unresponsive, possibly causing service outages. To mitigate this, the configuration of these two services must be set in puppet so that the contrail_control_config and contrail_dns_config files cannot be modified. This can be done by setting the contrail_control_config and contrail_dns_config files to have immutable permissions (via puppet), or by restricting the permissions of the users that may be able to edit these files.', 'related_cwe': 'CWE-264, CWE-312', 'is_misconfiguration_related': 'Yes'}"
1039,"define osnailyfacter::generate_vms::vm_config ( $details, $template_dir = '/var/lib/nova', ) { file { ""${template_dir}/template_${name}_vm.xml"": owner => 'root', group => 'root', content => template('osnailyfacter/vm_libvirt.erb'), } }",0,1,"content => template('osnailyfacter/vm_libvirt.erb'), \\\\\\\\\\\, content => template('osnailyfacter/vm_libvirt.erb'), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, content => template('osnailyfacter/vm_libvirt.erb'), } \\, file { \, group => 'root', \\\\, owner => 'root', \\, owner => 'root', group => 'root', content => template('osnailyfacter/vm_libvirt.erb'), \\, owner => 'root', group => 'root', content => template('osnailyfacter/vm_libvirt.erb'), \\\\, owner => 'root', group => 'root', content => template('osnailyfacter/vm_libvirt.erb'), \\\\\\\\\\\\\\\\\\\\\\, owner => 'root', group => 'root', content => template('osnailyfacter/vm_libvirt.erb{'reason': 'The provided file will be accessible to the public since there is no file permission set for it.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
1040,"class swift::proxy::gatekeeper( $log_name = 'gatekeeper', $log_facility = 'log_local0', $log_level = 'info', $log_headers = false, $log_address = '/dev/log' ) { include ::swift::deps concat::fragment { 'swift_gatekeeper': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/gatekeeper.conf.erb'), order => '20', } }",0,1,"content => template('swift/proxy/gatekeeper.conf.erb'),, order => '20',, target => '/etc/swift/proxy-server.conf',, },",CWE-19,"{'reason': ""The content => template('swift/proxy/gatekeeper.conf.erb'),, order => '20',, target => '/etc/swift/proxy-server.conf',, }, is misconfigured because it can be used to overwrite the original configuration file, allowing attackers to overwrite the file with arbitrary configurations."", 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
1041,"class nginx( $ensure = 'present', $managed = true, $variant = 'full', ) { validate_re($ensure, ['^present$', '^absent$']) if $variant !~ /^(full|extras|light$)/ { fail(""'variant' must be 'full', 'extras', or 'light' (got: '${variant}')."") } package { [ ""nginx-${variant}"", 'nginx-common' ]: ensure => $ensure, } if ! $managed and ($ensure == 'present') { exec { 'stop-default-nginx': command => '/usr/sbin/service nginx stop', subscribe => package[""nginx-${variant}""], refreshonly => true, before => service['nginx'], } } service { 'nginx': ensure => ensure_service($ensure), enable => ($ensure == 'present'), provider => 'debian', hasrestart => true, } exec { 'nginx-reload': command => '/usr/sbin/service nginx reload', refreshonly => true, } file { [ '/etc/nginx/conf.d', '/etc/nginx/sites-available', '/etc/nginx/sites-enabled' ]: ensure => ensure_directory($ensure), recurse => true, purge => true, force => true, tag => 'nginx', } package[""nginx-${variant}""] -> file <| tag == 'nginx' |> if $managed { file <| tag == 'nginx' |> ~> service['nginx'] file <| tag == 'ssl' |> ~> service['nginx'] } else { file <| tag == 'nginx' |> -> service['nginx'] file <| tag == 'ssl' |> -> service['nginx'] } if os_version('debian >= jessie') and $::realm == 'production' { mount { '/var/lib/nginx': ensure => ensure_mounted($ensure), device => 'tmpfs', fstype => 'tmpfs', options => 'defaults,noatime,uid=0,gid=0,mode=755,size=1g', pass => 0, dump => 0, before => service['nginx'], require => package[""nginx-${variant}""], } } }",1,1,"ensure_directory($ensure), recurse => true, purge => true, force => true, tag => 'nginx',, if $managed { file <| tag == 'nginx' |> ~> service['nginx'] file <| tag =='ssl' |> ~> service['nginx'] } else { file <| tag == 'nginx' |> -> service['nginx'] file <| tag =='ssl' |> -> service['nginx'] }, if os_version('debian >= jessie') and $::realm == 'production', if! $managed and ($ensure == 'present'), mount { '/var/lib/nginx': ensure => ensure_mounted($ensure), device => \\, package { [ \, package[, validate_re($ensure, ['^present$', '^absent$']) if $variant!~ /^(full|extras|light$)/","CWE-319, CWE-732","{'reason': 'The misconfiguration relates to the inability of the Puppet user to enforce the correct ownership of the files and directories associated with the nginx package installation. While Puppet can ensure that the packages are installed, Puppet cannot modify ownership of the files within the packages themselves.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1042,"$file = ""/tmp/defineoverrides1"" define myfile($mode) { file { $name: ensure => file, mode => $mode } } class base { myfile { $file: mode => 644 } } class sub inherits base { myfile[$file] { mode => 755, } } include sub",1,1,"class base { myfile { $name: ensure => file, mode => $mode } }, class sub inherits base { myfile[$file] { mode => 755, } }, myfile { $name: ensure => file, mode => $mode }, myfile[$file] { mode => 755, }",CWE-20,"{'reason': 'The user can modify the mode, and therefore permissions, of the file. This can potentially lead to privilege escalation.', 'related_cwe': 'CWE-20: Improper Input Validation', 'is_misconfiguration_related': 'Yes'}"
1043,"class neutron::logging ( $debug = $::os_service_default, $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_file = $::os_service_default, $log_dir = '/var/log/neutron', $log_config_append = $::os_service_default, $log_date_format = $::os_service_default, $watch_log_file = $::os_service_default, $syslog_log_facility = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $logging_user_identity_format = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $fatal_deprecations = $::os_service_default, $verbose = undef, $log_facility = undef, ) { include ::neutron::deps $debug_real = pick($::neutron::debug,$debug) $use_syslog_real = pick($::neutron::use_syslog,$use_syslog) $use_stderr_real = pick($::neutron::use_stderr,$use_stderr) $log_file_real = pick($::neutron::log_file,$log_file) $log_dir_real = pick($::neutron::log_dir,$log_dir) if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } if $log_facility { warning('log_facility is deprecated, has no effect and will be removed after newton cycle. please use syslog_log_facility instead.') } oslo::log { 'neutron_config': debug => $debug_real, use_stderr => $use_stderr_real, use_syslog => $use_syslog_real, syslog_log_facility => $syslog_log_facility, log_file => $log_file_real, log_dir => $log_dir_real, log_config_append => $log_config_append, log_date_format => $log_date_format, watch_log_file => $watch_log_file, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, logging_user_identity_format => $logging_user_identity_format, default_log_levels => $default_log_levels, publish_errors => $publish_errors, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, fatal_deprecations => $fatal_deprecations, } }",0,1,"neutron::logging { instance_format => \\, neutron::logging { log_date_format => \\, neutron::logging { log_dir => /tmp/log\\n, neutron::logging { log_file => /tmp/test.log\n, neutron::logging { log_file => \, neutron::logging { logging_context_format_string => \, neutron::logging { syslog_log_facility => \, neutron::logging { syslog_log_facility => \\, neutron::logging { watch_log_file => \\","CWE-248, CWE-263, CWE-264","{'reason': 'CWE-264', 'related_cwe': 'CWE-264', 'is_misconfiguration_related': 'Yes'}"
1044,"class cdh::hue::defaults { $http_host = '0.0.0.0' $http_port = 8888 $secret_key = undef $app_blacklist = ['hbase', 'impala', 'search', 'spark', 'rdbms', 'zookeeper'] $hive_server_host = undef if (defined(class['cdh::oozie'])) { $oozie_url = $cdh::oozie::url $oozie_proxy_regex = ""$cdh::oozie::oozie_host:(11000|11443)"" } else { $oozie_url = undef $oozie_proxy_regex = '' } $oozie_security_enabled = false $namenode_hosts = $cdh::hadoop::namenode_hosts $proxy_whitelist = [ inline_template(""(<%= @namenode_hosts.join('|') %>):(50070|50470|8088|19888)""), $oozie_proxy_regex, '.+:(50075|8042)', ] $proxy_blacklist = undef $smtp_host = 'localhost' $smtp_port = 25 $smtp_user = undef $smtp_password = undef $smtp_from_email = undef $ssl_private_key = '/etc/ssl/private/hue.key' $ssl_certificate = '/etc/ssl/certs/hue.cert' $ldap_url = undef $ldap_cert = undef $ldap_nt_domain = undef $ldap_bind_dn = undef $ldap_base_dn = undef $ldap_bind_password = undef $ldap_username_pattern = undef $ldap_user_filter = undef $ldap_user_name_attr = undef $ldap_group_filter = undef $ldap_group_name_attr = undef $ldap_group_member_attr = undef $hue_ini_template = 'cdh/hue/hue.ini.erb' $hue_log4j_template = 'cdh/hue/log4j.properties.erb' $hue_log_conf_template = 'cdh/hue/log.conf.erb' }",1,1,"hbase, impala, rdbms, search, spark, zookeeper",CWE-345,"{'reason': ""I can't evaluate that right now. I need more information."", 'related_cwe': ""I can't evaluate that right now. I need more information."", 'is_misconfiguration_related': ""I can't evaluate that right now. I need more information.""}"
1045,"class role::wikitech { include ::role::cite include ::role::codeeditor include ::role::echo include ::role::gadgets include ::role::parserfunctions include ::role::scribunto include ::role::wikieditor include ::role::wikilove mediawiki::extension { 'ldapauthentication': needs_update => true, settings => template('role/wikitech/ldapauth.php.erb'), } mediawiki::settings { 'wikitechlocalsettings': values => template('role/wikitech/local.php.erb'), } mediawiki::settings { 'wikitechprivatesettings': values => template('role/wikitech/private.php.erb'), } mediawiki::settings { 'wikitechdebugsettings': values => template('role/wikitech/debug.php.erb'), } mediawiki::extension { [ 'categorytree', 'checkuser', 'collection', 'dynamicsidebar', 'nuke', 'oathauth', 'openstackmanager', 'renameuser', 'titleblacklist', ]: needs_update => true, } mediawiki::import::dump { 'wikitech_content': xml_dump => '/vagrant/puppet/modules/role/files/wikitech/initial-pages.xml', dump_sentinel_page => 'shell_request/andrew', } }",0,1,"mediawiki::extension { [ 'categorytree', 'checkuser', 'collection', 'dynamicsidebar', 'nuke', 'oathauth', 'openstackmanager','renameuser', 'titleblacklist', ]: needs_update => true, }, mediawiki::settings { 'wikitechdebugsettings': values => template('role/wikitech/debug.php.erb'), }",CWE-937: Use of Obsolete Function,"{'reason': ""The mediawiki::extension is not related to the Use of Obsolete Function. It is related to the use of obsolete functions and modules, like in mediawiki::settings. The 'titleblacklist' is not related to Use of Obsolete Function. However, the 'titleblacklist' is a known attack vector that is associated with 'titleblacklist'. The mediawiki::settings does not use the 'titleblacklist' function, but is related to the use of obsolete functions and modules, such as mediawiki::settings."", 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
1046,"class gui( $on_gpu, $screen_width, $screen_height, $screen_depth, $refresh ) { include config include users::builder include gui::appearance $nvidia_version = '310.32' $gpu_bus_id = ""pci:01:00:0"" $use_nvidia = $on_gpu and $::virtual == ""physical"" case $::operatingsystem { darwin: { class { 'screenresolution': width => $screen_width, height => $screen_height, depth => $screen_depth, refresh => $refresh; } } ubuntu: { include packages::linux_desktop include packages::gnome_settings_daemon include packages::xrestop if (!$on_gpu) { include packages::mesa } if ($use_nvidia) { include packages::nvidia_drivers } file { ""/etc/init/x11.conf"": content => template(""${module_name}/x11.conf.erb""), notify => service['x11']; ""/etc/init.d/x11"": ensure => link, target => ""/lib/init/upstart-job""; ""/etc/init/xvfb.conf"": content => template(""${module_name}/xvfb.conf.erb""), notify => service['xvfb']; ""/etc/init.d/xvfb"": ensure => link, target => ""/lib/init/upstart-job""; ""/etc/x11/xorg.conf"": ensure => $use_nvidia ? { true => present, default => absent }, content => template(""${module_name}/xorg.conf.erb""), notify => service['x11']; ""/etc/x11/xwrapper.config"": content => template(""${module_name}/xwrapper.config.erb""), notify => service['x11']; ""/etc/x11/edid.bin"": source => ""puppet:///modules/${module_name}/edid.bin""; ""/etc/x11/xsession.d/98nvidia"": ensure => $use_nvidia ? { true => present, default => absent }, content => ""export __gl_yield=nothing\n"", notify => service['x11']; ""/etc/xdg/autostart/jockey-gtk.desktop"": content => template(""${module_name}/jockey-gtk.desktop""); ""/etc/xdg/autostart/deja-dup-monitor.desktop"": content => template(""${module_name}/deja-dup-monitor.desktop""); } service { 'x11': ensure => $on_gpu ? { true => undef, default => stopped }, enable => $on_gpu ? { true => true, default => false }, require => file['/etc/init.d/x11'], notify => service['xsession']; 'xvfb': ensure => $on_gpu ? { true => stopped, default => undef }, enable => $on_gpu ? { true => false, default => true }, require => file['/etc/init.d/xvfb'], notify => service['xsession']; } file { ""/etc/init/xsession.conf"": content => template(""${module_name}/xsession.conf.erb""), notify => service['xsession']; ""/etc/init.d/xsession"": ensure => link, target => ""/lib/init/upstart-job""; ""${users::builder::home}/.xsessionrc"": content => ""desktop_session=ubuntu\n"", owner => $::users::builder::username, group => $::users::builder::group, mode => 0644, notify => service['x11']; [""${users::builder::home}/.xsession"", ""${users::builder::home}/.xinitrc"", ""${users::builder::home}/.xsession""]: ensure => absent; } service { 'xsession': enable => true, require => file['/etc/init.d/xsession']; } } default: { fail(""gui is not supported on $::operatingsystem"") } } }",1,1,"if (!$on_gpu) { include packages::mesa }, if ($use_nvidia) { include packages::nvidia_drivers }, include packages::gnome_settings_daemon, include packages::mesa, include packages::nvidia_drivers, include packages::xrestop",CWE-284,"{'reason': 'The module is not supporting the darwin, ubuntu and others, but the default in the script is not supporting for the rest of the system and also does not explain what this default fail() is', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
1047,include ::monasca::apiserver,0,1,include ::monasca::apiserver,CWE-22,"{'reason': 'The misconfiguration is not related to the provided CWE. This is because...', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1048,"class watcher::applier ( $package_ensure = 'present', $enabled = true, $manage_service = true, $applier_workers = $::os_service_default, $applier_conductor_topic = $::os_service_default, $applier_status_topic = $::os_service_default, $applier_publisher_id = $::os_service_default, $applier_workflow_engine = $::os_service_default, ) { include ::watcher::params include ::watcher::deps watcher_config<||> ~> service['watcher-applier'] package['watcher-applier'] -> service['watcher-applier'] package { 'watcher-applier': ensure => $package_ensure, name => $::watcher::params::applier_package_name, tag => ['openstack', 'watcher-package'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'watcher-applier': ensure => $service_ensure, name => $::watcher::params::applier_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => ['watcher-service'], } watcher_config { 'watcher_applier/workers': value => $applier_workers; 'watcher_applier/conductor_topic': value => $applier_conductor_topic; 'watcher_applier/status_topic': value => $applier_status_topic; 'watcher_applier/publisher_id': value => $applier_publisher_id; 'watcher_applier/workflow_engine': value => $applier_workflow_engine; } }",0,1,"if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure ='stopped' } }, include ::watcher::params, service { 'watcher-applier': ensure => $service_ensure, name => $::watcher::params::applier_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => ['watcher-service'], }, watcher_config { 'watcher_applier/conductor_topic': value => $applier_conductor_topic;, watcher_config { 'watcher_applier/publisher_id': value => $applier_publisher_id;, watcher_config { 'watcher_applier/status_topic': value => $applier_status_topic;, watcher_config { 'watcher_applier/workers': value => $applier_workers;, watcher_config { 'watcher_applier/workflow_engine': value => $applier_workflow_engine;","CWE-294: Improper Control Flow Error, CWE-295: Improper Certificate Validation","{'reason': 'the misconfiguration is not related to the provided CWE because this is a control flow error (CWE-294) rather than improper certificate validation (CWE-295)', 'related_cwe': 'CWE-294', 'is_misconfiguration_related': 'No'}"
1049,"class tripleo::profile::base::sahara::engine ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } include ::tripleo::profile::base::sahara if $step >= 3 and $sync_db { include ::sahara::db::mysql } if $step >= 4 or ($step >= 3 and $sync_db) { include ::sahara::service::engine } }",0,1,"if $step >= 3 and $sync_db {, include ::sahara::service::engine",CWE-732,"{'reason': 'If $step >= 3 and $sync_db {, include ::sahara::service::engine', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1050,"$var = ""value"" case $var { ""nope"": { file { ""/tmp/fakefile"": mode => 644, ensure => file } } ""value"": { file { ""/tmp/existsfile"": mode => 755, ensure => file } } } $ovar = ""yayness"" case $ovar { ""fooness"": { file { ""/tmp/nostillexistsfile"": mode => 644, ensure => file } } ""booness"", ""yayness"": { case $var { ""nep"": { file { ""/tmp/noexistsfile"": mode => 644, ensure => file } } ""value"": { file { ""/tmp/existsfile2"": mode => 755, ensure => file } } } } } case $ovar { ""fooness"": { file { ""/tmp/nostillexistsfile"": mode => 644, ensure => file } } default: { file { ""/tmp/existsfile3"": mode => 755, ensure => file } } } $bool = true case $bool { true: { file { ""/tmp/existsfile4"": mode => 755, ensure => file } } } $yay = yay $a = yay $b = boo case $yay { $a: { file { ""/tmp/existsfile5"": mode => 755, ensure => file } } $b: { file { ""/tmp/existsfile5"": mode => 644, ensure => file } } default: { file { ""/tmp/existsfile5"": mode => 711, ensure => file } } } $regexvar = ""exists regex"" case $regexvar { ""no match"": { file { ""/tmp/existsfile6"": mode => 644, ensure => file } } /(.*) regex$/: { file { ""/tmp/${1}file6"": mode => 755, ensure => file } } default: { file { ""/tmp/existsfile6"": mode => 711, ensure => file } } }",1,1,"$var = \, file { \, file { \\, file { \\\\, file { \\\\\\\\, file { \\\\\\\\\\\\\\\\\\\\\\\\\\\\, file {{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1051,"class ceilometer::agent::notification ( $manage_service = true, $enabled = true, $ack_on_event_error = true, $store_events = false, $disable_non_metric_meters = $::os_service_default, $notification_workers = $::os_service_default, $messaging_urls = $::os_service_default, $package_ensure = 'present', $manage_event_pipeline = false, $event_pipeline_publishers = ['notifier://'], ) { include ::ceilometer::params ceilometer_config<||> ~> service['ceilometer-agent-notification'] package[$::ceilometer::params::agent_notification_package_name] -> service['ceilometer-agent-notification'] ensure_resource('package', [$::ceilometer::params::agent_notification_package_name], { ensure => $package_ensure, tag => 'openstack' } ) if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } package['ceilometer-common'] -> service['ceilometer-agent-notification'] service { 'ceilometer-agent-notification': ensure => $service_ensure, name => $::ceilometer::params::agent_notification_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => 'ceilometer-service' } if ($manage_event_pipeline) { validate_array($event_pipeline_publishers) file { 'event_pipeline': ensure => present, path => $::ceilometer::params::event_pipeline, content => template('ceilometer/event_pipeline.yaml.erb'), selinux_ignore_defaults => true } package<| tag == 'ceilometer-package' |> -> file['event_pipeline'] file['event_pipeline'] ~> service['ceilometer-agent-notification'] } ceilometer_config { 'notification/ack_on_event_error' : value => $ack_on_event_error; 'notification/store_events' : value => $store_events; 'notification/disable_non_metric_meters': value => $disable_non_metric_meters; 'notification/workers' : value => $notification_workers; 'notification/messaging_urls' : value => $messaging_urls; } }",1,1,"file['event_pipeline'] ~> service['ceilometer-agent-notification'], notification/disable_non_metric_meters': value => $disable_non_metric_meters;, notification/store_events' : value => $store_events;, package<| tag == 'ceilometer-package' |> -> file['event_pipeline'], service['ceilometer-agent-notification'] -> file['event_pipeline']",CWE-19,"{'reason': 'If the misconfiguration is related to CWE-19, it means that the misconfiguration is not properly configured, which will cause the configuration file to not be saved.', 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
1052,"class mistral::db ( $database_connection = 'sqlite:////var/lib/mistral/mistral.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { $database_connection_real = pick($::mistral::database_connection,$database_connection) $database_idle_timeout_real = pick($::mistral::database_idle_timeout,$database_idle_timeout) $database_min_pool_size_real = pick($::mistral::database_min_pool_size,$database_min_pool_size) $database_max_pool_size_real = pick($::mistral::database_max_pool_size,$database_max_pool_size) $database_max_retries_real = pick($::mistral::database_max_retries,$database_max_retries) $database_retry_interval_real = pick($::mistral::database_retry_interval,$database_retry_interval) $database_max_overflow_real = pick($::mistral::database_max_overflow,$database_max_overflow) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'mistral_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, db_max_retries => $database_db_max_retries, } }",0,1,"database_connection_real = pick($::mistral::database_connection,$database_connection), database_db_max_retries_real = pick($::mistral::database_db_max_retries,$database_db_max_retries), database_idle_timeout_real = pick($::mistral::database_idle_timeout,$database_idle_timeout), database_max_overflow_real = pick($::mistral::database_max_overflow,$database_max_overflow), database_max_pool_size_real = pick($::mistral::database_max_pool_size,$database_max_pool_size), database_max_retries_real = pick($::mistral::database_max_retries,$database_max_retries), database_min_pool_size_real = pick($::mistral::database_min_pool_size,$database_min_pool_size), database_retry_interval_real = pick($::mistral::database_retry_interval,$database_retry_interval), oslo::db {\n 'mistral_config':\n    connection => $database_connection_real,\n    idle_timeout => $database_idle_timeout_real,\n    min_pool_size => $database_min_pool_size_real,\n    max_pool_size => $database_max_pool_size_real,\n    max_retries => $database_max_retries_real,\n    retry_interval => $database_retry_interval_real,\n    max_overflow => $database_max_overflow_real,\n    db_max_retries => $database_db_max_retries,\n  }\n}, validate_re($database_connection_real, '^((sqlite|mysql(\+pymysql)?|postgresql)\\:\\/\\/)(\\s+:\\s+@\\s+\\/)')","CWE-189, CWE-19, CWE-200","{'reason': 'Explanation', 'related_cwe': 'CWE-189,CWE-19,CWE-200', 'is_misconfiguration_related': 'Yes'}"
1053,"class tripleo::profile::base::mistral::api ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } include ::tripleo::profile::base::mistral if $step >= 4 or ($step >= 3 and $sync_db) { include ::mistral::api } }",1,1,"class tripleo::profile::base::mistral::api ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ), if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false }, include ::mistral::api, include ::tripleo::profile::base::mistral::api","CWE-269, CWE-284, CWE-311, CWE-312, CWE-320, CWE-329, CWE-333, CWE-369","{'reason': 'The tripleo::profile::base::mistral::api class is a custom class, specific to tripleo profiles that configures the mistral API service. The custom class makes use of a parameter, $sync_db, that can be passed through hiera and used to control whether or not to include the ::mistral::api class. However, the class definition for $sync_db is defined within the conditional block, and outside of the scope of any conditional blocks that follow. By defining the class parameter within a conditional block, we have an issue with scope and visibility for $sync_db. Therefore, the conditional scope is limited to the inner conditional block in which the variable is defined. The scope is not defined outside of that conditional block,', 'related_cwe': 'CWE-269, CWE-284, CWE-311, CWE-312, CWE-320, CWE-329, CWE-333, CWE-369', 'is_misconfiguration_related': 'Yes'}"
1054,"define nginx::site( $ensure = present, $content = undef, $source = undef, ) { include ::nginx $basename = regsubst($title, '[\w_]', '-', 'g') file { ""/etc/nginx/sites-available/${basename}"": ensure => $ensure, content => $content, source => $source, tag => 'nginx', notify => exec['nginx-reload'], } file { ""/etc/nginx/sites-enabled/${basename}"": ensure => ensure_link($ensure), target => ""/etc/nginx/sites-available/${basename}"", tag => 'nginx', } }",1,1,"\\, content => $content, source => $source, tag => 'nginx', notify => exec['nginx-reload'], }, define nginx::site( $ensure = present, $content = undef, $source = undef, ) { include ::nginx $basename = regsubst($title, '[\w_]', '-', 'g') file { \, ensure => $ensure, content => $content, source => $source, tag => 'nginx', notify => exec['nginx-reload'], }, ensure => ensure_link($ensure), \\, file { \, include ::nginx, notify => exec['nginx-reload'], \\, tag => 'nginx', \\\\, target => \","CWE-20, CWE-22","{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
1055,"class osnailyfacter::resolvconf ( $management_vip ) { $file_path = $::osfamily ? { /(redhat|centos)/ => '/etc/resolv.conf', /(debian|ubuntu)/ => '/etc/resolvconf/resolv.conf.d/head', default => '/etc/resolv.conf', } file { $file_path: ensure => file, content => template('osnailyfacter/resolv.conf.erb') } if $::osfamily =~ /(debian|ubuntu)/ { package { 'resolvconf': ensure => present, } -> file { '/etc/resolv.conf': ensure => link, target => '/run/resolvconf/resolv.conf', } ~> exec { 'dpkg-reconfigure resolvconf': command => '/usr/sbin/dpkg-reconfigure -f noninteractive resolvconf', refreshonly => true, } file {'/etc/default/resolvconf': content => 'report_absent_symlink=""yes""', } service { 'resolvconf': ensure => running, enable => true, subscribe => [ file[$file_path], file['/etc/default/resolvconf'], ] } } }",1,1,"class osnailyfacter::resolvconf {\n\t$management_vip = \\, file { $file_path: ensure => link, target => '/run/resolvconf/resolv.conf', }, file { $file_path:\\n\\tensure => file,\\n\\tcontent => template('osnailyfacter/resolv.conf.erb')\\n}, file {'/etc/default/resolvconf': content =>'report_absent_symlink=, file {'/etc/resolv.conf': content => 'nameserver 149.112.112.112', }, file {'/etc/resolv.conf': content => 'nameserver 8.8.4.4', }, file {'/etc/resolv.conf': content => 'nameserver 8.8.8.8', }, file {'/etc/resolv.conf': content => 'nameserver 9.9.9.9', }, service {'resolvconf': ensure => running, enable => true, subscribe => [ file[$file_path], file['/etc/default/resolvconf'], ] }, service {'resolvconf':\\n\\tensure => running,\\n\\tenable => true,\\n\\tsubscribe => [ file[$file_path], file['/etc/default/resolvconf'], ]\\n}","CWE-19, CWE-20","{'reason': 'Reason: File content contains [sensitive_data] (CWE-19). [https://cwe.mitre.org/data/definitions/19.html] File content contains [CWE-20] (CWE-20). [https://cwe.mitre.org/data/definitions/20.html]', 'related_cwe': 'CWE-19, CWE-20', 'is_misconfiguration_related': 'Yes'}"
1056,"stage { ""init"": before => stage[""main""] } exec { timeout => hiera('default_exec_timeout') } package { allow_virtual => true } class {'::packstack::prereqs': stage => init, } create_resources(sshkey, hiera('ssh_keys', {})) if hiera('config_ntp_servers', undef) != undef { include '::packstack::chrony' } if hiera('config_ceilometer_install') == 'y' { include '::packstack::nova::ceilometer::rabbitmq' include '::packstack::nova::ceilometer' } include '::packstack::nova' include '::packstack::nova::common' include '::packstack::nova::compute' if hiera('config_vmware_backend') == 'y' { include '::packstack::nova::compute::vmware' } elsif hiera('config_ironic_install') == 'y' { include '::packstack::nova::compute::ironic' } else { include '::packstack::nova::compute::libvirt' } if hiera('config_vmware_backend') == 'y' and hiera('config_cinder_install') == 'y' { if 'gluster' in hiera_array('config_cinder_backend') { include '::packstack::nova::gluster' } if 'nfs' in hiera_array('config_cinder_backend') { include '::packstack::nova::nfs' } } if hiera('config_neutron_install') == 'y' { include '::packstack::nova::neutron' include '::packstack::neutron::rabbitmq' case hiera('config_neutron_l2_agent') { 'openvswitch': { include '::packstack::neutron::ovs_agent' } '': { include '::packstack::neutron::lb_agent' } default: { include '::packstack::neutron::ovs_agent' } } include '::packstack::neutron::bridge' if 'sriovnicswitch' in hiera_array('config_neutron_ml2_mechanism_drivers') and hiera ('config_neutron_l2_agent') == 'openvswitch' { include '::packstack::neutron::sriov' } } else { include '::packstack::nova::network::libvirt' $multihost = hiera('config_nova_network_multihost') $network_hosts = split(hiera('config_network_hosts'),',') if $multihost { if ! member($network_hosts, choose_my_ip(hiera('host_list'))) { include '::packstack::nova::metadata' } } if ! member($network_hosts, choose_my_ip(hiera('host_list'))) { include '::packstack::nova::compute::flat' } } if hiera('config_nagios_install') == 'y' { include '::packstack::nagios::nrpe' }",0,1,"class {'::packstack::prereqs': stage => init, }, create_resources(sshkey, hiera('ssh_keys', {})) if hiera('config_ntp_servers', undef)!= undef { include '::packstack::chrony' }, if 'gluster' in hiera_array('config_cinder_backend') { include '::packstack::nova::gluster' } if 'nfs' in hiera_array('config_cinder_backend') { include '::packstack::nova::nfs' }, if! member($network_hosts, choose_my_ip(hiera('host_list'))) { include '::packstack::nova::metadata' }, if'hiera('config_neutron_l2_agent') == 'openvswitch' { include '::packstack::neutron::ovs_agent' }, if'sriovnicswitch' in hiera_array('config_neutron_ml2_mechanism_drivers') and hiera ('config_neutron_l2_agent') == 'openvswitch' { include '::packstack::neutron::sriov' }, ifhiera('config_vmware_backend') == 'y' and hiera('config_cinder_install') == 'y' { if 'gluster' in hiera_array('config_cinder_backend') { include '::packstack::nova::gluster' } if 'nfs' in hiera_array('config_cinder_backend') { include '::packstack::nova::nfs' } }, include '::packstack::nagios::nrpe', include '::packstack::nova::compute::flat'","CWE-532, CWE-732","{'reason': 'Puppet code that is vulnerable to CVE-2021-44228', 'related_cwe': 'CWE-532', 'is_misconfiguration_related': 'Yes'}"
1057,"class role::checkuser { mediawiki::extension { 'checkuser': needs_update => true, } }",0,1,"class role::checkuser { mediawiki::extension { 'checkuser': needs_update => true, } }",CWE-22,"{'reason': 'CWE-22 is related to misconfiguration found in \\', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1058,"class git( $urlformat = 'https://gerrit.wikimedia.org/r/p/%s.git', $default_depth = undef, ) { include ::git::gerrit package { 'git': ensure => latest, } package { 'git-review': ensure => '1.24', provider => 'pip', } }",1,1,"class git( $urlformat = 'https://gerrit.wikimedia.org/r/p/%s.git', $default_depth = undef, ), include ::git::gerrit, package { 'git': ensure => latest, }, package { 'git-review': ensure => '1.24', provider => 'pip', }","CWE-21, CWE-22","{'reason': 'CWE-21 is an error caused by an improperly set depth.', 'related_cwe': 'CWE-21', 'is_misconfiguration_related': 'Yes'}"
1059,"class packages::bacula_enterprise_client { case $::operatingsystem { centos: { realize(packages::yumrepo['bacula-enterprise']) package { 'bacula-enterprise-client': ensure => ""8.0.7-1.el6""; 'bacula-common': ensure => absent; 'bacula-client': ensure => absent; } } darwin: { packages::pkgdmg { 'bacula-enterprise-client': version => '8.0.7', private => true, os_version_specific => false, dmgname => ""bacula_enterprise_file_daemon_8.0.7.dmg""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"case $::operatingsystem {\\\\n  centos: {\\\\n    realize(packages::yumrepo['bacula-enterprise'])\\\\n    package {\\\\n      'bacula-enterprise-client': ensure => \\, default: { fail(\\\\\\\\\, package {\\n  'bacula-enterprise-client': ensure => \, package {\n  'bacula-common': ensure => absent;\n  'bacula-client': ensure => absent;\n}\n, packages::pkgdmg { 'bacula-enterprise-client': version => '8.0.7', private => true, os_version_specific => false, dmgname => \\, packages::yumrepo { 'bacula-enterprise': ensure => 'present', enabled => false, baseurl => 'http://www.bacula.org/downloads/bacula/bacula-enterprise', gpgkey => 'http://www.bacula.org/downloads/bacula/Bacula-8.4.3-signing-key.asc', name => 'bacula-enterprise'; }\\\\\\\\\\\\\\\\\\\, packages::yumrepo { 'bacula-enterprise': ensure => 'present', enabled => false, baseurl => 'http://www.bacula.org/downloads/bacula/bacula-enterprise', gpgkey => 'http://www.bacula.org/downloads/bacula/Bacula-8.4.3-signing-key.asc', name => 'bacula-enterprise'; }packages::yumrepo { 'bacula-enterprise': ensure => 'present', enabled => false, baseurl => 'http://www.bacula.org/downloads/bacula/bacula-enterprise', gpgkey => 'http://www.bacula.org/downloads/bacula/Bacula-8.4.3-signing-key.asc', name => 'bacula-enterprise'; }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, packages::yumrepo { 'bacula-enterprise': ensure => 'present', enabled => false, baseurl => 'http://www.bacula.org/downloads/bacula/bacula-enterprise', gpgkey => 'http://www.bacula.org/downloads/bacula/Bacula-8.4.3-signing-key.asc', name => 'bacula-enterprise'; }\\\\\\\\n}, packages::yumrepo { 'bacula-enterprise': ensure => 'present', enabled => false, baseurl => 'http://www.bacula.org/downloads/bacula/bacula-enterprise', gpgkey => 'http://www.bacula.org/downloads/bacula/Bacula-8.4.3-signing-key.asc', name => 'bacula-enterprise'; }\\\\n}",CWE-306,"{'reason': 'Reason why misconfiguration is related to CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes or No'}"
1060,"define packages::pkgzip($package=$title, $zip, $private=false, $target_dir) { include dirs::installersource::puppetagain_pub_build_mozilla_org::zips include packages::7z920 $installersource_posix = 'c:/installersource/puppetagain.pub.build.mozilla.org' $installersource_win = 'c:\installersource\puppetagain.pub.build.mozilla.org' $quoted_7zip = '""c:\program files (x86)\7-zip\7z.exe""' $p = $private ? { true => ""/private"", false => """" } file { ""$installersource_posix/zips/$zip"": source => ""puppet:///repos$p/zips/$zip"", require => class[""dirs::installersource::puppetagain_pub_build_mozilla_org::zips""]; } shared::execonce { $zip : command => ""$quoted_7zip x $installersource_win\\zips\\$zip -o$target_dir -y"", require => [file[""$installersource_posix/zips/$zip""], class[""packages::7z920""] ]; } }",0,1,"file { '/tmp/test':, file { 'C:/installersource/puppetagain.pub.build.mozilla.org/zips/$zip': source => \\\\, file { 'C:/installersource/puppetagain.pub.build.mozilla.org/zips/$zip': source => \\\\\\\\, file { \, package { 'xvfb': ensure \\, shared::execonce { 'zip':",CWE-22,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1061,"class nova::network::flat ( $fixed_range, $flat_interface=undef, $public_interface = undef, $flat_network_bridge = 'br100' ) { include ::nova::deps if $public_interface { nova_config { 'default/public_interface': value => $public_interface } } nova_config { 'default/network_manager': value => 'nova.network.manager.flatmanager'; 'default/fixed_range': value => $fixed_range; 'default/flat_interface': value => $flat_interface; 'default/flat_network_bridge': value => $flat_network_bridge; } }",0,1,"class nova::network::flat ($fixed_range, $flat_interface=undef, $public_interface = undef, $flat_network_bridge = 'br100') {, include ::nova::deps, nova_config { 'default/fixed_range': value => $fixed_range;}, nova_config { 'default/flat_interface': value => $flat_interface;}, nova_config { 'default/flat_network_bridge': value => $flat_network_bridge; }, nova_config { 'default/network_manager': value => 'nova.network.manager.flatmanager';, nova_config { 'default/public_interface': value => $public_interface }",CWE-20,"{'reason': 'The script contains a flat interface misconfiguration', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1062,"class tripleo::profile::base::aodh::api ( $step = hiera('step'), $enable_combination_alarms = false, ) { include ::tripleo::profile::base::aodh if $step >= 4 { include ::aodh::api include ::aodh::wsgi::apache aodh_config { 'api/enable_combination_alarms' : value => $enable_combination_alarms; } } }",0,1,"aodh_config { 'api/enable_combination_alarms' : value => $enable_combination_alarms; }, include ::aodh::api",CWE-306: Missing Authentication for Critical Function,"{'reason': 'Since the provided misconfiguration is within aodh_config, it is possible that it is a parameter that controls a critical service within the profile.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
1063,"class role::vipsscaler { require_package('libvips-tools') mediawiki::extension { 'vipsscaler': settings => { wgvipsoptions => [ { conditions => { mimetype => 'image/png', minarea => 20000000, }, }, { conditions => { mimetype => 'image/tiff', minshrinkfactor => 1.2, minarea => 50000000, }, sharpen => { sigma => 0.8, }, }, ], wgmaxshellmemory => 1048576, wgmaxshelltime => 50, }, } mediawiki::settings { 'vipstest': values => template('vipsscaler/vipstest.php.erb'), } }",0,1,"mediawiki::extension { 'vipsscaler': settings => { wgvipsoptions => [ { conditions => { mimetype => 'image/png', minarea => 20000000, }, }, { conditions => { mimetype => 'image/tiff', minshrinkfactor => 1.2, minarea => 50000000, }, sharpen => { sigma => 0.8, }, }, ], wgmaxshellmemory => 1048576, wgmaxshelltime => 50, }, }, mediawiki::settings { 'vipstest': values => template('vipsscaler/vipstest.php.erb'), }",CWE-1021,"{'reason': 'Puppet code does not follow security best practices by defining a default of 1.2 for minshrinkfactor. This can lead to images being shrunk to very small sizes, which can have negative impacts on rendering performance, as well as exposing the underlying image to potential attackers who may be able to exploit the shrinkage of the image in order to gain unauthorized access to the system. Furthermore, the code includes a value for wgmaxshellmemory that is set to 1048576. This value is potentially much higher than the default value of 256K, which may cause the server to consume an excessive amount of memory and lead to system instability.', 'related_cwe': 'CWE-1021', 'is_misconfiguration_related': 'Yes'}"
1064,"class neutron::agents::metering ( $package_ensure = present, $enabled = true, $manage_service = true, $debug = false, $interface_driver = 'neutron.agent.linux.interface.ovsinterfacedriver', $driver = 'neutron.services.metering.drivers.noop.noop_driver.noopmeteringdriver', $measure_interval = $::os_service_default, $report_interval = $::os_service_default, $purge_config = false, ) { include ::neutron::deps include ::neutron::params resources { 'neutron_metering_agent_config': purge => $purge_config, } neutron_metering_agent_config { 'default/debug': value => $debug; 'default/interface_driver': value => $interface_driver; 'default/driver': value => $driver; 'default/measure_interval': value => $measure_interval; 'default/report_interval': value => $report_interval; } if $::neutron::params::metering_agent_package { package { 'neutron-metering-agent': ensure => $package_ensure, name => $::neutron::params::metering_agent_package, tag => ['openstack', 'neutron-package'], } } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'neutron-metering-service': ensure => $service_ensure, name => $::neutron::params::metering_agent_service, enable => $enabled, tag => 'neutron-service', } }",1,0,"if $::neutron::params::metering_agent_package, service { 'neutron-metering-service': ensure => $service_ensure, name => $::neutron::params::metering_agent_service, enable => $enabled, tag => 'neutron-service', }","CWE-16, CWE-17","{'reason': 'This issue is a good example of CWE-16. Here, we see a lack of boundary checking in the provided code.', 'related_cwe': 'CWE-16', 'is_misconfiguration_related': 'Yes'}"
1065,"class role::restbase ( $base_url, $domain, $ve_url, ) { require ::role::mediawiki include ::role::parsoid include ::restbase include ::apache::mod::proxy include ::apache::mod::proxy_http mediawiki::extension { 'restbaseupdatejobs': settings => { wgrestbaseserver => ""http://127.0.0.1:${::restbase::port}"", wgrestbasedomain => $::restbase::domain, }, wiki => $::mediawiki::wiki_db, } mediawiki::settings { 'restbase-vrs': values => template('role/restbase/vrs.php.erb'), priority => $::load_first, wiki => $::mediawiki::wiki_db, } apache::site_conf { 'restbase_proxy': site => 'devwiki', content => template('role/restbase/apache2.conf.erb'), } mediawiki::settings { 'restbase-visualeditor': values => { wgvisualeditorfullrestbaseurl => $base_url, wgvisualeditorrestbaseurl => $ve_url, }, priority => $::load_early, wiki => $::mediawiki::wiki_db, } }",0,1,"apache::site_conf {'restbase_proxy': site => 'devwiki', content => template('role/restbase/apache2.conf.erb'), }, class role::restbase ($base_url, $domain, $ve_url, ) { require ::role::mediawiki include ::role::parsoid include ::restbase include ::apache::mod::proxy include ::apache::mod::proxy_http mediawiki::extension, mediawiki::extension {'restbaseupdatejobs': settings => { wgrestbaseserver =>, mediawiki::settings {'restbase-visualeditor': values => { wgvisualeditorfullrestbaseurl => $base_url, wgvisualeditorrestbaseurl => $ve_url, }, priority => $::load_early, wiki => $::mediawiki::wiki_db, }, mediawiki::settings {'restbase-vrs': values => template('role/restbase/vrs.php.erb'), priority => $::load_first, wiki => $::mediawiki::wiki_db, }",CWE-295,"{'reason': 'CWE-295 relates to using or manipulating a hardcoded (default) password. This is one of the more common issues with misconfiguration. For example, if one were to review the code in detail, they might notice the password is used in various contexts. For instance, it is used to access certain resources, or to protect certain accounts. Any of these cases may be vulnerable to misconfiguration if the password is hardcoded.', 'related_cwe': 'CWE-295, CWE-257', 'is_misconfiguration_related': 'Yes'}"
1066,"node default { exec { path => ['/usr/bin', '/bin', '/usr/sbin', '/sbin'] } class { '::mysql::server': } class { '::heat::db::mysql': password => 'heat', } class { '::heat::keystone::authtoken': password => 'password', } class { '::heat': sql_connection => 'mysql+pymysql://heat:heat@localhost/heat' } class { '::heat::engine': auth_encryption_key => 'whatever-key-you-like', } class { '::heat::api': } }",1,1,"auth_encryption_key => 'whatever-key-you-like',, password => 'heat', password => 'password', path => ['/usr/bin', '/bin', '/usr/sbin', '/sbin'], sql_connection =>'mysql+pymysql://heat:heat@localhost/heat'","CWE-200, CWE-207, CWE-208, CWE-209","{'reason': 'This is a comment.', 'related_cwe': 'CWE-200, CWE-207, CWE-208, CWE-209', 'is_misconfiguration_related': 'Yes'}"
1067,"class nova::db::mysql( $password, $dbname = 'nova', $user = 'nova', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef, ) { include ::nova::deps ::openstacklib::db::mysql { 'nova': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } anchor['nova::db::begin'] ~> class['nova::db::mysql'] ~> anchor['nova::db::end'] }",1,1,"allowed_hosts => $allowed_hosts, anchor['nova::db::begin'], charset => $charset, class['nova::db::mysql'], collate => $collate, dbname => $dbname, host => $host, include ::nova::deps, password_hash => mysql_password($password), user => $user",CWE-668,"{'reason': 'The misconfiguration is related to CWE 668 because it allows the attacker to change the credentials of the database and obtain unauthorized access, which can lead to data loss or modification.', 'related_cwe': 'CWE-668', 'is_misconfiguration_related': 'Yes'}"
1068,"class tripleo::cluster::cassandra( $cassandra_servers, $cassandra_ip, $storage_port = '7000', $ssl_storage_port = '7001', $client_port = '9042', $client_port_thrift = '9160' ) { validate_ipv4_address($cassandra_ip) class {'::cassandra': cluster_name => 'tripleo', seeds => $cassandra_servers, listen_address => $cassandra_ip, storage_port => $storage_port, ssl_storage_port => $ssl_storage_port, native_transport_port => $client_port, rpc_port => $client_port_thrift } }",0,1,"cluster_name => 'tripleo',, listen_address => $cassandra_ip, listen_address => $cassandra_ip,, native_transport_port => $client_port,, rpc_port => $client_port_thrift,, seeds => $cassandra_servers,, ssl_storage_port => $ssl_storage_port,, storage_port => $storage_port,, validate_ipv4_address($cassandra_ip)","CWE-295, CWE-327","{'reason': 'The class declaration includes $storage_port, $ssl_storage_port, $client_port, and $client_port_thrift. This misconfiguration is related to CWE-295 due to the use of variables in the class declaration.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1069,"class tripleo::profile::base::neutron::agents::nuage ( $nova_auth_ip = hiera('keystone_public_api_virtual_ip', ''), $nova_metadata_ip = hiera('nova_metadata_node_ips', ''), $nova_os_password = hiera('nova_password', ''), $nova_os_tenant_name = hiera('nova::api::admin_tenant_name', ''), $step = hiera('step'), ) { if $step >= 4 { include ::nuage::vrs class { '::nuage::metadataagent': nova_os_tenant_name => $nova_os_tenant_name, nova_os_password => $nova_os_password, nova_metadata_ip => $nova_metadata_ip, nova_auth_ip => $nova_auth_ip, } } }",0,1,"include ::nuage::metadataagent, nova_auth_ip => $nova_auth_ip, nova_metadata_ip => $nova_metadata_ip, nova_os_password => $nova_os_password, nova_os_tenant_name => $nova_os_tenant_name","CWE-20, CWE-312","{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1070,"class role::mediawiki( $hostname, ){ include ::arcanist include ::mediawiki include ::postfix require ::misc require ::mwv require ::mysql require ::redis require_package('php5-tidy') require_package('tidy') require_package('mailutils') package['postfix'] -> package['mailutils'] }",1,1,"include ::arcanist, include ::mediawiki, include ::mwv, package['postfix'] -> package['mailutils'], require ::misc, require ::mwv, require ::mysql, require ::redis, require_package('mailutils'), require_package('tidy')","CWE-16, CWE-19, CWE-22, CWE-23","{'reason': 'The script contains unneeded, unnecessary, or unused code that is potentially exploitable by a hacker.', 'related_cwe': 'CWE-16, CWE-19, CWE-22, CWE-23', 'is_misconfiguration_related': 'Yes'}"
1071,"class cinder::volume::quobyte ( $quobyte_volume_url, $quobyte_client_cfg = undef, $quobyte_qcow2_volumes = undef, $quobyte_sparsed_volumes = undef, $quobyte_mount_point_base = undef, ) { warning('usage of cinder::volume::quobyte is deprecated, please use cinder::backend::quobyte instead.') cinder::backend::quobyte { 'default': quobyte_volume_url => $quobyte_volume_url, quobyte_client_cfg => $quobyte_client_cfg, quobyte_qcow2_volumes => $quobyte_qcow2_volumes, quobyte_sparsed_volumes => $quobyte_sparsed_volumes, quobyte_mount_point_base => $quobyte_mount_point_base, } }",0,1,"cinder::backend::quobyte { 'default':\\n, class cinder::volume::quobyte (\n $quobyte_volume_url, $quobyte_client_cfg = undef, $quobyte_qcow2_volumes = undef, $quobyte_sparsed_volumes = undef, $quobyte_mount_point_base = undef, ) {\n, quobyte_client_cfg => $quobyte_client_cfg,\\\\n, quobyte_mount_point_base => $quobyte_mount_point_base,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, quobyte_qcow2_volumes => $quobyte_qcow2_volumes,\\\\\\\\n, quobyte_sparsed_volumes => $quobyte_sparsed_volumes,\\\\\\\\\\\\\\\\n, quobyte_volume_url => $quobyte_volume_url,\\n, warning('usage of cinder::volume::quobyte is deprecated, please use cinder::backend::quobyte instead.')\\n, }","CWE-20, CWE-22","{'reason': 'The cinder::volume::quobyte class uses deprecated functionality.', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
1072,class { '::openstack_tasks::roles::compute' :} warning('osnailyfacter/modular/./roles/compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/compute.pp'),1,1,class {'::openstack_tasks::roles::compute':} warning('osnailyfacter/modular/./roles/compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./roles/compute.pp'),476,"{'reason': 'The provided misconfiguration refers to puppet modules in which the code is no longer being maintained. The Puppet module is deprecated in Mitaka and will be removed in Newton. The Puppet module is a module of deprecated code and should be moved to the examples directory in order to facilitate upgrading.', 'related_cwe': '476', 'is_misconfiguration_related': 'Yes'}"
1073,stage { 'network': before => stage['packagesetup']; 'packagesetup': before => stage['users']; 'users': before => stage['main']; },1,1,"stage { 'network': before => stage['packagesetup'];, stage { 'packagesetup': before => stage['users'];, stage { 'users': before => stage['main'];, stage {'main': before => stage['network'];, stage {'packagesetup': before => stage['users'];, stage {'users': before => stage['main'];, }",CWE-200,"{'reason': 'Because misconfiguration is not related to any security issues.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1074,"class mozpool::virtualenv { include packages::mozilla::python27 include mozpool::settings python::virtualenv { ""$mozpool::settings::root/frontend"": python => $::packages::mozilla::python27::python, require => class['packages::mozilla::python27'], packages => [ ""argparse==1.1"", ""sqlalchemy==0.7.9"", ""web.py==0.37"", ""requests==1.0.4"", ""lockfile==0.9.1"", ""python-daemon==1.5.5"", ""which==1.1.0"", ""tempita==0.5.1"", 'templeton==0.6.2', ""flup==1.0.3.dev-20110405"", ""pymysql==0.5"", ""mozdevice==0.18"", ""mozprocess==0.8"", ""mozinfo==0.4"", ""mozpool==${mozpool::settings::mozpool_version}"", ], notify => service['supervisord']; } shellprofile::file { ""mozpool_path"": content => ""export path=\$path:${mozpool::settings::root}/frontend/bin""; } }",1,1,"python::virtualenv { \, python::virtualenv { \\, python::virtualenv { \\\\, python::virtualenv { \\\\\\\\, shellprofile::file { \\\\",CWE-250,"{'reason': 'The script specifies an overly broad list of packages that are used to construct a Python virtual environment.\\nA well-designed set of packages should be based on specific requirements and not contain unnecessary items that might introduce vulnerabilities and complexity.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
1075,"class lma_collector::collectd::python_openstack_base { include collectd::params include lma_collector::collectd::python_base $modulepath = $lma_collector::collectd::python_base::modulepath file { 'openstack.script': ensure => 'present', path => ""${modulepath}/collectd_openstack.py"", owner => 'root', group => $collectd::params::root_group, mode => '0640', source => 'puppet:///modules/lma_collector/collectd/collectd_openstack.py', require => class['lma_collector::collectd::python_base'], notify => service['collectd'], } }",1,1,"class lma_collector::collectd::python_openstack_base { include collectd::params include lma_collector::collectd::python_base $modulepath = $lma_collector::collectd::python_base::modulepath file { 'openstack.script': ensure => 'present', path =>, group => $collectd::params::root_group, mode => '0640', source => 'puppet:///modules/lma_collector/collectd/collectd_openstack.py', require => class['lma_collector::collectd::python_base'], notify => service['collectd'], } }, path =>, source => 'puppet:///modules/lma_collector/collectd/collectd_openstack.py', require => class['lma_collector::collectd::python_base'], notify => service['collectd'], } }",CWE-25,"{'reason': ""The script is vulnerable to an injection attack, as it fails to sanitize user input and the data retrieved from the file 'openstack.script' may be used to execute arbitrary commands. The script is written in Python, and the openstack Python package may also be vulnerable to remote command execution. The openstack package has vulnerabilities related to remote command execution (CWE-78). By executing arbitrary commands, an attacker can gain a remote code execution vulnerability."", 'related_cwe': 'CWE-78, CWE-76', 'is_misconfiguration_related': 'Yes'}"
1076,"class buildbot_bridge::services { include ::config include buildbot_bridge::conf include buildbot_bridge::settings include packages::mozilla::supervisor supervisord::supervise { ""buildbot_bridge_bblistener"": command => ""${buildbot_bridge::settings::root}/bin/buildbot-bridge -c ${buildbot_bridge::settings::root}/config.json bblistener"", user => $::config::builder_username, require => [file[""${buildbot_bridge::settings::root}/config.json""], python::virtualenv[""${buildbot_bridge::settings::root}""]], extra_config => template(""${module_name}/bblistener_supervisor_config.erb""); ""buildbot_bridge_tclistener"": command => ""${buildbot_bridge::settings::root}/bin/buildbot-bridge -c ${buildbot_bridge::settings::root}/config.json tclistener"", user => $::config::builder_username, require => [file[""${buildbot_bridge::settings::root}/config.json""], python::virtualenv[""${buildbot_bridge::settings::root}""]], extra_config => template(""${module_name}/tclistener_supervisor_config.erb""); ""buildbot_bridge_reflector"": command => ""${buildbot_bridge::settings::root}/bin/buildbot-bridge -c ${buildbot_bridge::settings::root}/config.json reflector"", user => $::config::builder_username, require => [file[""${buildbot_bridge::settings::root}/config.json""], python::virtualenv[""${buildbot_bridge::settings::root}""]], extra_config => template(""${module_name}/reflector_supervisor_config.erb""); } }",0,1,"include ::config include buildbot_bridge::conf include buildbot_bridge::settings include packages::mozilla::supervisor, require => [file[",CWE-20: Improper Input Validation,"{'reason': 'The misconfiguration is related to CWE-20: Improper Input Validation. The buildbot-bridge command is used to start each listener, but does not include a list of which commands to start. This may cause the script to inadvertently start commands that should not be started.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1077,"define manila::backend::glusterfs ( $share_backend_name = $name, $glusterfs_volumes_config = '/etc/manila/glusterfs_volumes', $glusterfs_mount_point_base = '$state_path/mnt', ) { $share_driver = 'manila.share.drivers.glusterfs.glusterfssharedriver' manila_config { ""${name}/share_backend_name"": value => $share_backend_name; ""${name}/share_driver"": value => $share_driver; ""${name}/glusterfs_volumes_config"": value => $glusterfs_volumes_config; ""${name}/glusterfs_mount_point_base"": value => $glusterfs_mount_point_base; } }",0,1,", manila_config { \, manila_config { \\, manila_config { \\\\, manila_config { \\\\\\\\, manila_config { \\\\\\\\\\\\\\\\",CWE-200,"{'reason': 'CWE-200: Exposed Dangerous Code or Configuration File The configuration file is exposed on the web server in an easily readable format.', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
1078,"class toplevel::server::puppetmaster inherits toplevel::server { include ::security assert { 'puppetmaster-high-security': condition => $::security::high; } assert { 'puppetmaster-centos-6.5': condition => $::operatingsystem == ""centos"" and $::operatingsystemrelease == ""6.5""; } -> class { '::puppetmaster': } }",0,1,"assert { 'puppetmaster-centos-6.5': condition => $::operatingsystem == \, assert { 'puppetmaster-centos-6.5': condition => $::operatingsystem == \\, assert { 'puppetmaster-high-security': condition => $::security::high; }, class toplevel::server::puppetmaster inherits toplevel::server {, class { '::puppetmaster': }, include ::security",CWE-937,"{'reason': 'The provided misconfiguration is related to CWE-937 because the security variable being set is an instance variable, and the variable is being set without first checking the OS version. Instance variables are only available within the class definition, and not at runtime. The fact that there is no conditional check to validate that a specific OS version is being used suggests that the variable is being used to determine OS version information.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
1079,"class tripleo::profile::pacemaker::sahara ( $step = hiera('step'), ) { service <| tag == 'sahara-service' |> { hasrestart => true, restart => '/bin/true', start => '/bin/true', stop => '/bin/true', } include ::tripleo::profile::base::sahara }",0,1,"class tripleo::profile::pacemaker::sahara ( $step = hiera('step'), ) {\n    service <| tag =='sahara-service' |> {\n      hasrestart => true,\n      restart => '/bin/true',\n      start => '/bin/true',\n      stop => '/bin/true',\n    }\n, include ::tripleo::profile::base::sahara",CWE-798,"{'reason': 'Puppet does not allow service restart during puppet run so the restart option is ignored by Puppet', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1080,"class vitrage::policy ( $policies = {}, $policy_path = '/etc/vitrage/policy.json', ) { validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'vitrage_config': policy_file => $policy_path } }",1,1,"create_resources('openstacklib::policy::base', $policies), create_resources('openstacklib::policy::base', \, openstacklib::policy::base, openstacklib::policy::base\n{file_path => \, openstacklib::policy::base{file_path => /etc/vitrage/policy.json}, oslo::policy\\\\n{policy_file => \\, oslo::policy\\\\n{policy_file => \\\\, oslo::policy\\n{policy_file => \\, oslo::policy\\n{policy_file => \\\\, validate_hash($policies)","CWE-276, CWE-278, CWE-279, CWE-280, CWE-281, CWE-282, CWE-283, CWE-284, CWE-285, CWE-286","{'reason': 'A security issue related to the misconfiguration is the ability to set an arbitrary value for the file_path and/or policy_file variables without proper validation.', 'related_cwe': 'CWE-278, CWE-279, CWE-280, CWE-281, CWE-282, CWE-283, CWE-284, CWE-285, CWE-286', 'is_misconfiguration_related': 'Yes'}"
1081,"class tripleo::profile::base::neutron::plugins::opencontrail ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } include ::tripleo::profile::base::neutron if $step >= 4 or ( $step >= 3 and $sync_db ) { include ::neutron::plugins::opencontrail } }",1,1,"if $::hostname == downcase($bootstrap_node), include ::neutron::plugins::opencontrail, include ::tripleo::profile::base::neutron","CWE-284, CWE-732","{'reason': 'The code is checking if a specific hostname is a valid bootstrap host. It is then including the neutron plugin for that node. There is a potential for confusion here, because the host being checked could have been set by the user as part of the hostnames file. This is a type of security misconfiguration, because the neutron service could be enabled on a host that was not intended for that role. This could introduce vulnerabilities in the service.', 'related_cwe': 'CWE-284, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1082,"mcx { '/groups/mcx_dock': ensure => 'absent', content => 'absent' }",0,1,"mcx { '/groups/mcx_dock': ensure => 'absent', content => 'absent' }",CWE-22,"{'reason': 'The use of the mcx type is outdated. This is used to configure MAC Address Control Entries (MACEs) in Cisco Nexus devices. It is not secure and recommended to stop its usage', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1083,"class neutron::db::postgresql( $password, $dbname = 'neutron', $user = 'neutron', $encoding = undef, $privileges = 'all', ) { include ::neutron::deps ::openstacklib::db::postgresql { 'neutron': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } anchor['neutron::db::begin'] ~> class['neutron::db::postgresql'] ~> anchor['neutron::db::end'] }",0,1,"anchor['neutron::db::end'], class['neutron::db::postgresql'] ~> anchor['neutron::db::end'], include ::neutron::deps, user => $user, encoding => $encoding, privileges => $privileges, }","CWE-118, CWE-119, CWE-190, CWE-937","{'reason': 'The code is vulnerable to [CWE-118, CWE-119, CWE-190, CWE-937] by passing the DB credentials in plain text to an external script', 'related_cwe': 'CWE-118, CWE-119, CWE-190, CWE-937', 'is_misconfiguration_related': 'Yes'}"
1084,"class openstack::ha::ceilometer ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = undef, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, } openstack::ha::haproxy_service { 'ceilometer': order => '140', listen_port => 8777, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'ceilometer-api', haproxy_config_options => { 'option' => ['httplog', 'forceclose', 'http-buffer-request'], 'timeout' => 'http-request 10s', 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, } }",1,1,"class openstack::ha::ceilometer ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = undef, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, } openstack::ha::haproxy_service { 'ceilometer': order => '140', listen_port => 8777, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'ceilometer-api', haproxy_config_options => { 'option' => ['httplog', 'forceclose', 'http-buffer-request'], 'timeout' => 'http-request, option => ['httplog', 'forceclose', 'http-buffer-request'], 'timeout' => 'http-request 10s', 'http-request' =>'set-header x-forwarded-proto https if { ssl_fc }', },",CWE-22,"{'reason': ""This misconfiguration is related to CWE-22 because it sets a header called 'x-forwarded-for' which is potentially vulnerable to Header injection."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1085,class cdh::hive::defaults { $zookeeper_hosts = undef $jdbc_driver = 'com.mysql.jdbc.driver' $jdbc_protocol = 'mysql' $jdbc_database = 'hive_metastore' $jdbc_host = 'localhost' $jdbc_port = 3306 $jdbc_username = 'hive' $jdbc_password = 'hive' $db_root_username = undef $db_root_password = undef $auxpath = undef $exec_parallel_thread_number = 8 $optimize_skewjoin = false $skewjoin_key = 10000 $skewjoin_mapjoin_map_tasks = 10000 $skewjoin_mapjoin_min_split = 33554432 $stats_enabled = false $stats_dbclass = 'jdbc:derby' $stats_jdbcdriver = 'org.apache.derby.jdbc.embeddeddriver' $stats_dbconnectionstring = 'jdbc:derby:;databasename=tempstatsstore;create=true' $hive_site_template = 'cdh/hive/hive-site.xml.erb' $hive_log4j_template = 'cdh/hive/hive-log4j.properties.erb' $hive_exec_log4j_template = 'cdh/hive/hive-exec-log4j.properties.erb' },0,1,"$db_root_username = undef, class cdh::hive::core { $hive_bin_dir = '/usr/bin', class cdh::hive::core { $hive_exec_log4j_template = 'cdh/hive/hive-exec-log4j.properties.erb', class cdh::hive::core { $hive_hdfs_home = undef, class cdh::hive::core { $hive_libdir = '/usr/lib/hive/lib/', class cdh::hive::core { $hive_log4j_template = 'cdh/hive/hive-log4j.properties.erb', class cdh::hive::core { $hive_site_template = 'cdh/hive/hive-site.xml.erb', class cdh::hive::defaults { $zookeeper_hosts = undef, class cdh::hive::hdfs { $hdfs_hosts = undef",CWE-306,"{'reason': ""The 'zookeeper_hosts' variable should not be set to an empty value, as this can cause a denial of service attack if not properly defined."", 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
1086,"class {{cookiecutter.project_name}}::keystone::authtoken( $password, $username = '{{cookiecutter.project_name}}', $auth_url = 'http://localhost:35357', $project_name = 'services', $user_domain_name = $::os_service_default, $project_domain_name = $::os_service_default, $insecure = $::os_service_default, $auth_section = $::os_service_default, $auth_type = 'password', $auth_uri = 'http://localhost:5000', $auth_version = $::os_service_default, $cache = $::os_service_default, $cafile = $::os_service_default, $certfile = $::os_service_default, $check_revocations_for_cached = $::os_service_default, $delay_auth_decision = $::os_service_default, $enforce_token_bind = $::os_service_default, $hash_algorithms = $::os_service_default, $http_connect_timeout = $::os_service_default, $http_request_max_retries = $::os_service_default, $include_service_catalog = $::os_service_default, $keyfile = $::os_service_default, $memcache_pool_conn_get_timeout = $::os_service_default, $memcache_pool_dead_retry = $::os_service_default, $memcache_pool_maxsize = $::os_service_default, $memcache_pool_socket_timeout = $::os_service_default, $memcache_pool_unused_timeout = $::os_service_default, $memcache_secret_key = $::os_service_default, $memcache_security_strategy = $::os_service_default, $memcache_use_advanced_pool = $::os_service_default, $memcached_servers = $::os_service_default, $region_name = $::os_service_default, $revocation_cache_time = $::os_service_default, $signing_dir = $::os_service_default, $token_cache_time = $::os_service_default, ) { keystone::resource::authtoken { '{{cookiecutter.project_name}}_config': username => $username, password => $password, project_name => $project_name, auth_url => $auth_url, auth_uri => $auth_uri, auth_version => $auth_version, auth_type => $auth_type, auth_section => $auth_section, user_domain_name => $user_domain_name, project_domain_name => $project_domain_name, insecure => $insecure, cache => $cache, cafile => $cafile, certfile => $certfile, check_revocations_for_cached => $check_revocations_for_cached, delay_auth_decision => $delay_auth_decision, enforce_token_bind => $enforce_token_bind, hash_algorithms => $hash_algorithms, http_connect_timeout => $http_connect_timeout, http_request_max_retries => $http_request_max_retries, include_service_catalog => $include_service_catalog, keyfile => $keyfile, memcache_pool_conn_get_timeout => $memcache_pool_conn_get_timeout, memcache_pool_dead_retry => $memcache_pool_dead_retry, memcache_pool_maxsize => $memcache_pool_maxsize, memcache_pool_socket_timeout => $memcache_pool_socket_timeout, memcache_secret_key => $memcache_secret_key, memcache_security_strategy => $memcache_security_strategy, memcache_use_advanced_pool => $memcache_use_advanced_pool, memcache_pool_unused_timeout => $memcache_pool_unused_timeout, memcached_servers => $memcached_servers, region_name => $region_name, revocation_cache_time => $revocation_cache_time, signing_dir => $signing_dir, token_cache_time => $token_cache_time, } }",1,1,"cafile => $cafile,, certfile => $certfile,, keyfile => $keyfile,, keystone::resource::authtoken { '{{cookiecutter.project_name}}_config':, memcache_secret_key => $memcache_secret_key,, password => $password,, signing_dir => $signing_dir,, token_cache_time => $token_cache_time,, user_domain_name => $user_domain_name,, username => $username,","CWE-259, CWE-269","{'reason': 'The value of the variable certfile is directly taken from the configuration variable $certfile. $certfile is not sanitized, so it can be manipulated or tainted by the puppet user. This leads to an insecure value of certfile, which can lead to privilege escalation. This is a CWE-269 violation.', 'related_cwe': 'CWE-259, CWE-269', 'is_misconfiguration_related': 'Yes'}"
1087,"class monasca::checks::ovs( $admin_user = undef, $admin_password = undef, $admin_tenant_name = undef, $cache_dir = '/dev/shm', $check_router_ha = true, $identity_uri = undef, $included_interface_re = 'qg.*', $network_use_bits = true, $neutron_refresh = '14400', $ovs_cmd = 'sudo /usr/bin/ovs-vsctl', $region_name = undef, $use_absolute_metrics = true, $use_health_metrics = true, $use_rate_metrics = true, ){ $conf_dir = $::monasca::agent::conf_dir file[""${conf_dir}/ovs.yaml""] ~> service['monasca-agent'] file { ""${conf_dir}/ovs.yaml"": owner => 'root', group => $::monasca::group, mode => '0640', content => template('monasca/checks/ovs.yaml.erb'), require => file[$conf_dir], } }",0,1,file { ${conf_dir}/ovs.yaml,CWE-601,"{'reason': 'the `file` resource does not have any required attribute other than name. It is unclear what is the `file` is meant to be in this case.  The name attribute should be used to specify the file name.  It is unlikely that the provided template is responsible for this error.  It is likely that the `file` resource has been used incorrectly.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1088,"class swift::proxy::staticweb() { include ::swift::deps concat::fragment { 'swift-proxy-staticweb': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/staticweb.conf.erb'), order => '190', } }",1,1,"class swift::proxy::staticweb() {, concat::fragment {'swift-proxy-staticweb':, content => template('swift/proxy/staticweb.conf.erb'), include ::swift::deps, order => '190', target => '/etc/swift/proxy-server.conf'",CWE-306,"{'reason': 'The provided CWE relates to the handling of security-sensitive operations within a high-level or system-level configuration interface. As the script uses the concat::fragment module to create the configuration file for the SwiftProxy server, the related CWE reflects that the misconfiguration could be related to insecurely handling configuration-sensitive operations.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
1089,class { '::osnailyfacter::ceph::ceph_pools' :} class { '::osnailyfacter::upgrade::ceph_service' :},1,1,"class { '::osnailyfacter::ceph::ceph_pools' :}, class { '::osnailyfacter::upgrade::ceph_service' :}",CWE-16,"{'reason': ""The provided defect is related to a lack of proper access control, allowing anyone to modify Ceph's pool structure.\\nThis is a critical vulnerability as it could allow attackers to delete or modify important pool data, potentially leading to service disruption or data loss.\\n\\nThe provided defect label '1' maps to CWE-16: 'CWE-16: Component Misuse' \\n"", 'related_cwe': 'CWE-16', 'is_misconfiguration_related': 'Yes'}"
1090,"class manila::db ( $database_connection = 'sqlite:////var/lib/manila/manila.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { $database_connection_real = pick($::manila::sql_connection, $database_connection) $database_idle_timeout_real = pick($::manila::sql_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::manila::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::manila::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::manila::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::manila::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::manila::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'manila_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, db_max_retries => $database_db_max_retries, } }",0,1,"oslo::db {'manila_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real,..., oslo::db {'manila_config': database_connection =>'sqlite:///var/lib/manila/manila.sqlite',..., oslo::db {'manila_config': max_overflow => 10,..., oslo::db {'manila_config': max_retries => 10, retry_interval => 10,..., oslo::db {'manila_config': min_pool_size => 10, max_pool_size => 10,..., validate_re($database_connection_real, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?'), validate_re($database_connection_real, '^(sqlite|mysql(\\+pymysql)?|postgresql):\\/\\/(\\s+:\\s+@\\s+\\/\\s+)?')",CWE-682,"{'reason': 'This issue could possibly be related to CWE-682', 'related_cwe': 'CWE-682', 'is_misconfiguration_related': 'Yes'}"
1091,"define neutron::plugins::ml2::cisco::nexus_creds( $username, $password, $servers, $ssh_port, $ip_address, $nve_src_intf = undef, $physnet = undef, ) { include ::neutron::deps ensure_resource('file', '/var/lib/neutron/.ssh', { ensure => directory, owner => 'neutron', tag => 'neutron-config-file', } ) $check_known_hosts = ""/bin/cat /var/lib/neutron/.ssh/known_hosts | /bin/grep ${ip_address}"" exec {""ping_test_${name}"": unless => $check_known_hosts, command => ""/usr/bin/ping -c 1 ${ip_address}"", user => 'neutron' } exec {""nexus_creds_${name}"": unless => $check_known_hosts, command => ""/usr/bin/ssh-keyscan -t rsa ${ip_address} >> /var/lib/neutron/.ssh/known_hosts"", user => 'neutron', require => [exec[""ping_test_${name}""], anchor['neutron::config::end']] } }",1,1,"anchor['neutron::config::end'], ensure_resource('file', '/var/lib/neutron/.ssh', { ensure => directory, owner => 'neutron', tag => 'neutron-config-file', } ), include ::neutron::deps, user => 'neutron'","CWE-200, CWE-202","{'reason': 'This configuration is vulnerable to cross site scripting attacks. The script will execute commands with the neutron user which has root privileges. Because it uses the user’s ssh key to connect to the network device, the user can do what ever he wants on the device.', 'related_cwe': 'CWE-200, CWE-202', 'is_misconfiguration_related': 'Yes'}"
1092,"define nova::manage::cells ( $cell_type = 'parent', $cell_parent_name = undef, $rabbit_username = 'guest', $rabbit_password = 'guest', $rabbit_hosts = ['localhost'], $rabbit_port = '5672', $rabbit_virtual_host = '/', $weight_offset = '1.0', $weight_scale = '1.0' ) { include ::nova::deps nova_cells { $name: ensure => present, cell_type => $cell_type, cell_parent_name => $cell_parent_name, rabbit_username => $rabbit_username, rabbit_password => $rabbit_password, rabbit_hosts => $rabbit_hosts, rabbit_port => $rabbit_port, rabbit_virtual_host => $rabbit_virtual_host, weight_offset => $weight_offset, weight_scale => $weight_scale } }",1,1,"nova::deps, nova_cells { $name: ensure => present, rabbit_hosts => $rabbit_hosts, rabbit_password => $rabbit_password, rabbit_port => $rabbit_port, rabbit_username => $rabbit_username, rabbit_virtual_host => $rabbit_virtual_host, weight_offset => $weight_offset, weight_scale => $weight_scale","CWE-305, CWE-306","{'reason': 'Puppet script has the wrong password credentials that are not in sync with the OpenStack environment.\\nThe credentials entered for rabbit_password are not the same as the ones in the OpenStack environment, hence this is a potential attack vector.', 'related_cwe': '305,306', 'is_misconfiguration_related': 'Yes'}"
1093,"class midonet::cli( $api_endpoint='http://127.0.0.1:8181/midonet-api', $username='admin', $password='admin', $tenant_name='admin', ) { if $::osfamily == 'redhat' { package { 'epel-release': ensure => installed, before => package['python-midonetclient'] } } package { 'python-midonetclient': ensure => present, } midonet_client_conf { 'cli/api_url': value => $api_endpoint; 'cli/username': value => $username; 'cli/password': value => $password; 'cli/project_id': value => $tenant_name; } }",0,1,"class midonet::cli( $api_endpoint='http://127.0.0.1:8181/midonet-api', $username='admin', $password='admin', $tenant_name='admin', ) {, if $::osfamily =='redhat' { package { 'epel-release': ensure => installed, before => package['python-midonetclient'] } }, midonet_client_conf { 'cli/api_url': value => $api_endpoint; 'cli/username': value => $username; 'cli/password': value => $password; 'cli/project_id': value => $tenant_name; }, package { 'epel-release': ensure => installed, before => package['python-midonetclient'] }, package { 'python-midonetclient': ensure => present, }","CWE-778, CWE-798","{'reason': 'The user defined variables in the Puppet class are not properly validated in this example code, which allows users to introduce invalid values.', 'related_cwe': 'CWE-778, CWE-798', 'is_misconfiguration_related': 'Yes'}"
1094,"class cinder::backup::nfs ( $backup_share, $backup_driver = 'cinder.backup.drivers.nfs', $backup_file_size = $::os_service_default, $backup_sha_block_size_bytes = $::os_service_default, $backup_enable_progress_timer = $::os_service_default, $backup_mount_point_base = $::os_service_default, $backup_mount_options = $::os_service_default, $backup_container = $::os_service_default, $backup_compression_algorithm = $::os_service_default, ) { validate_string($backup_share) cinder_config { 'default/backup_mount_options': value => $backup_mount_options; 'default/backup_share': value => $backup_share; 'default/backup_driver': value => $backup_driver; 'default/backup_file_size': value => $backup_file_size; 'default/backup_sha_block_size_bytes': value => $backup_sha_block_size_bytes; 'default/backup_enable_progress_timer': value => $backup_enable_progress_timer; 'default/backup_mount_point_base': value => $backup_mount_point_base; 'default/backup_container': value => $backup_container; 'default/backup_compression_algorithm': value => $backup_compression_algorithm; } }",1,1,"cinder_config { 'default/backup_mount_options': value => $backup_mount_options;, cinder_config { 'default/backup_share': value => $backup_share;, validate_string($backup_compression_algorithm), validate_string($backup_container), validate_string($backup_driver), validate_string($backup_enable_progress_timer), validate_string($backup_file_size), validate_string($backup_mount_point_base), validate_string($backup_sha_block_size_bytes), validate_string($backup_share)",CWE-20,"{'reason': 'The vulnerable script snippet is vulnerable to information leak because the file can be written into by an unprivileged user which can cause the unprivileged user to inject arbitrary data into a file. The user can then read this file by using the cinder backup list and cinder backup show commands. Furthermore, the backup_mount_options can be changed through an unprivileged user in the nfs driver code path which can cause an unprivileged user to inject arbitrary data into the file. The user can then read this file by using the cinder backup list and cinder backup show commands. Furthermore, the backup_share can be changed through an unprivileged user in the nfs driver code path which can cause an unprivileged user to inject arbitrary data into the file. The user can', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1095,"define cinder::backend::rbd ( $rbd_pool, $rbd_user, $backend_host = undef, $volume_backend_name = $name, $rbd_ceph_conf = '/etc/ceph/ceph.conf', $rbd_flatten_volume_from_snapshot = $::os_service_default, $rbd_secret_uuid = $::os_service_default, $rbd_max_clone_depth = $::os_service_default, $rados_connect_timeout = $::os_service_default, $rados_connection_interval = $::os_service_default, $rados_connection_retries = $::os_service_default, $rbd_store_chunk_size = $::os_service_default, $manage_volume_type = false, $extra_options = {}, $volume_tmp_dir = false, ) { include ::cinder::params cinder_config { ""${name}/volume_backend_name"": value => $volume_backend_name; ""${name}/volume_driver"": value => 'cinder.volume.drivers.rbd.rbddriver'; ""${name}/rbd_ceph_conf"": value => $rbd_ceph_conf; ""${name}/rbd_user"": value => $rbd_user; ""${name}/rbd_pool"": value => $rbd_pool; ""${name}/rbd_max_clone_depth"": value => $rbd_max_clone_depth; ""${name}/rbd_flatten_volume_from_snapshot"": value => $rbd_flatten_volume_from_snapshot; ""${name}/rbd_secret_uuid"": value => $rbd_secret_uuid; ""${name}/rados_connect_timeout"": value => $rados_connect_timeout; ""${name}/rados_connection_interval"": value => $rados_connection_interval; ""${name}/rados_connection_retries"": value => $rados_connection_retries; ""${name}/rbd_store_chunk_size"": value => $rbd_store_chunk_size; } if $manage_volume_type { cinder_type { $volume_backend_name: ensure => present, properties => [""volume_backend_name=${volume_backend_name}""], } } if $backend_host { cinder_config { ""${name}/backend_host"": value => $backend_host; } } else { cinder_config { ""${name}/backend_host"": value => ""rbd:${rbd_pool}""; } } if $volume_tmp_dir { cinder_config {""${name}/volume_tmp_dir"": value => $volume_tmp_dir;} warning('the rbd volume_tmp_dir parameter is deprecated. please use image_conversion_dir in the cinder base class instead.') } create_resources('cinder_config', $extra_options) case $::osfamily { 'debian': { $override_line = ""env ceph_args=\""--id ${rbd_user}\"""" $override_match = '^env ceph_args=' } 'redhat': { $override_line = ""export ceph_args=\""--id ${rbd_user}\"""" $override_match = '^export ceph_args=' } default: { fail(""unsupported osfamily ${::osfamily}, currently debian and redhat are the only supported platforms"") } } ensure_resource('file', $::cinder::params::ceph_init_override, {'ensure' => 'present'}) file_line { ""set initscript env ${name}"": line => $override_line, path => $::cinder::params::ceph_init_override, notify => service['cinder-volume'], } }",1,1,"case $::osfamily {, create_resources('cinder_config', $extra_options), ensure_resource('file', $::cinder::params::ceph_init_override, {'ensure' => 'present'}), file_line { \, file_line { \\, file_line { \\\\, include ::cinder::params, path => $::cinder::params::ceph_init_override, notify => service['cinder-volume'],, service['cinder-volume']",nan,"{'reason': 'There is no obvious relationship between CWE 1137 and cinder/rbd.conf configuration file. cinder/rbd.conf can be used to pass in configuration details to cinder-volume service. The configuration data passed in to cinder-volume service is used to initialize cinder-volume service during its startup. This is different from CWE 1137. CWE 1137 is a more generic category covering an array of different attacks and misconfigurations. This task is not related to CWE 1137.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1096,"class releaserunner { include ::config include dirs::builds include users::builder include releaserunner::settings include releaserunner::services include packages::mozilla::python27 include packages::gcc include packages::make include packages::mysql_devel $env_config = $config::releaserunner_env_config[$releaserunner_env] python::virtualenv { ""${releaserunner::settings::root}"": python => ""${packages::mozilla::python27::python}"", require => class['packages::mozilla::python27'], user => ""${users::builder::username}"", group => ""${users::builder::group}"", packages => [ ""fabric==1.5.1"", ""jinja2==2.6"", ""sqlalchemy==0.8.0b2"", ""tempita==0.5.1"", ""twisted==12.3.0"", ""buildbot==0.8.7p1"", ""certifi==0.0.8"", ""decorator==3.4.0"", ""paramiko==1.9.0"", ""pycrypto==2.6"", ""python-dateutil==1.5"", ""simplejson==2.6.2"", ""sqlalchemy-migrate==0.7.2"", ""wsgiref==0.1.2"", ""zope.interface==4.0.2"", ]; } file { ""${releaserunner::settings::root}/release-runner.ini"": require => python::virtualenv[""${releaserunner::settings::root}""], mode => 0600, owner => ""${users::builder::username}"", group => ""${users::builder::group}"", content => template(""releaserunner/release-runner.ini.erb""), show_diff => false; ""${users::builder::home}/.ssh/release-runner"": mode => 0600, owner => ""${users::builder::username}"", group => ""${users::builder::group}"", content => secret('releaserunner_ssh_key'), show_diff => false; } mercurial::repo { ""releaserunner-tools"": require => python::virtualenv[""${releaserunner::settings::root}""], hg_repo => ""${config::releaserunner_tools}"", dst_dir => ""${releaserunner::settings::tools_dst}"", user => ""${users::builder::username}"", branch => ""${config::releaserunner_tools_branch}"", } }",0,1,"class releaserunner { include ::config, include dirs::builds, include packages::gcc, include packages::make, include packages::mozilla::python27, include packages::mysql_devel, include releaserunner::services, include releaserunner::settings, python::virtualenv {, require => class['packages::mozilla::python27'],","CWE-116, CWE-16, CWE-78, CWE-79","{'reason': 'This misconfiguration is due to the fact that the include statement is a non idempotent operation. This can lead to undefined behavior if the same include statement is called more than once. When using include statements, there must be one or more include statements in the class block that are executed only once. The include operation in class releaserunner does not meet this criteria because all of the include operations are executed twice. If the operation in question is not executed twice, the misconfiguration would not occur, as the operation is only executed once.', 'related_cwe': 'CWE-79, CWE-78', 'is_misconfiguration_related': 'Yes'}"
1097,"class manila::backends ( $enabled_share_backends = undef ) { manila_config { 'default/enabled_share_backends': value => join($enabled_share_backends, ','); } }",0,1,"class manila::backends ( $enabled_share_backends = undef ) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  manila_config {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    'default/enabled_share_backends':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      value => join($enabled_share_backends, ',');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, class manila::backends ( $enabled_share_backends = undef ) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  manila_config {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    'default/enabled_share_backends':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n      value => join($enabled_share_backends, ',');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}, class manila::backends ( $enabled_share_backends = undef ) {\\\\\\\\\\\\\\\\\\\\\\\\n  manila_config {\\\\\\\\\\\\\\\\\\\\\\\\n    'default/enabled_share_backends':\\\\\\\\\\\\\\\\\\\\\\\\n      value => join($enabled_share_backends, ',');\\\\\\\\\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\\\\\\\\\n}, class manila::backends ( $enabled_share_backends = undef ) {\\\\\\\\\\\\n  manila_config {\\\\\\\\\\\\n    'default/enabled_share_backends':\\\\\\\\\\\\n      value => join($enabled_share_backends, ',');\\\\\\\\\\\\n  }\\\\\\\\\\\\n}, class manila::backends ( $enabled_share_backends = undef ) {\\\\\\n  manila_config {\\\\\\n    'default/enabled_share_backends':\\\\\\n      value => join($enabled_share_backends, ',');\\\\\\n  }\\\\\\n}, class manila::backends ( $enabled_share_backends = undef ) {\\\\n  manila_config {\\\\n    'default/enabled_share_backends':\\\\n      value => join($enabled_share_backends, ',');\\\\n  }\\\\n}, class manila::backends ( $enabled_share_backends = undef ) {\\n  manila_config {\\n    'default/enabled_share_backends':\\n      value => join($enabled_share_backends, ',');\\n  }\\n}, manila::backends\\n\\n  manila_config {\\n    'default/enabled_share_backends':\\n      value => join($enabled_share_backends, ',');\\n  }\\n\\n, manila::backends\n\n  manila_config {\n    'default/enabled_share_backends':\n      value => join($enabled_share_backends, ',');\n  }\n\n",CWE-1190,"{'reason': ""Manila config is not related to the CWE. CWE-1190 indicates that an attacker can gain unauthorized access to a system by using a non-existent user name. But the script used in the code will not make the system accept the non-existent user name. In the script,'manila_config' is used to configure the user name, which is not related to CWE. So the CWE and the misconfiguration are not related."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1098,"class tripleo::profile::base::glance::api ( $glance_backend = downcase(hiera('glance_backend', 'swift')), $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) { if $step >= 4 { case $glance_backend { 'swift': { $backend_store = 'glance.store.swift.store' } 'file': { $backend_store = 'glance.store.filesystem.store' } 'rbd': { $backend_store = 'glance.store.rbd.store' } default: { fail('unrecognized glance_backend parameter.') } } $http_store = ['glance.store.http.store'] $glance_store = concat($http_store, $backend_store) include ::glance include ::glance::config class { '::glance::api': stores => $glance_store, } class { '::glance::notify::rabbitmq' : rabbit_hosts => $rabbit_hosts, } include join(['::glance::backend::', $glance_backend]) } }",1,1,"class { '::glance::api': stores => $glance_store, }, class { '::glance::notify::rabbitmq' : rabbit_hosts => $rabbit_hosts, }, if $step >= 4 {, include ::glance, include join(['::glance::backend::', $glance_backend])",CWE-306,"{'reason': 'The vulnerability being exploited in this case is due to the use of unsafe functions in the program. The issue with the program is that it uses unsafe functions without proper checks and sanitizations, which can lead to security vulnerabilities such as buffer overflow, memory corruption, and information disclosure. This can be mitigated by ensuring proper checks and sanitizations before using unsafe functions in the program. Additionally, developers should review and update their programs periodically to ensure they are using the latest version of any libraries and frameworks that may contain security vulnerabilities. This is especially important for programs that handle sensitive data, such as passwords or credit card information. By following these guidelines, developers can help ensure that their programs are secure and that they are not vulnerable to attacks such as buffer overflow,', 'related_cwe': 'CWE-306, Buffer Overflow (Classic)', 'is_misconfiguration_related': 'Yes'}"
1099,"class {{cookiecutter.project_name}}::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $syslog_log_facility = $::os_service_default, $log_dir = '/var/log/{{cookiecutter.project_name}}', $log_file = '/var/log/{{cookiecutter.project_name}}/{{cookiecutter.project_name}}.log', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, ) { oslo::log { '{{cookiecutter.project_name}}_config': use_stderr => $use_stderr, use_syslog => $use_syslog, log_dir => $log_dir, log_file => $log_file, debug => $debug, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, log_date_format => $log_date_format, syslog_log_facility => $syslog_log_facility, } }",1,1,"default_log_levels => $default_log_levels,, instance_format => $instance_format,, instance_uuid_format => $instance_uuid_format,, logging_exception_prefix => $logging_exception_prefix,, oslo::log { '{{cookiecutter.project_name}}_config': default_log_levels => $default_log_levels,, oslo::log { '{{cookiecutter.project_name}}_config': log_file => $log_file,, oslo::log { '{{cookiecutter.project_name}}_config': publish_errors => $publish_errors,, oslo::log { '{{cookiecutter.project_name}}_config': syslog_log_facility => $syslog_log_facility,, oslo::log { '{{cookiecutter.project_name}}_config': use_syslog => $use_syslog,, publish_errors => $publish_errors,",CWE-20,"{'reason': 'The code snippet demonstrates a common mistake when working with sensitive data in applications. The lack of proper data sanitization can lead to sensitive information being leaked and potentially exploited by attackers. The use of hard-coded passwords and API keys, combined with insecure input validation, can leave the system vulnerable to credential harvesting and other attacks.', 'related_cwe': 'CWE-20, CWE-276', 'is_misconfiguration_related': 'Yes'}"
1100,"class opendaylight::quagga ( ){ package { ['opnfv-quagga', 'libcapnp-0.5.99', 'python-pycapnp', 'python-thriftpy']: ensure => installed, } service {'opnfv-quagga': ensure => running } $config_path = '/usr/lib/quagga/qthrift/bgpd.conf' ini_setting { 'bgp_password': ensure => present, setting => 'password', value => 'sdncbgpc', path => $config_path, key_val_separator => ' ', require => package['opnfv-quagga'], notify => service['opnfv-quagga'] } }",1,1,"ini_setting { 'bgp_password': ensure => present, setting => 'password', value =>'sdncbgpc', path => '/usr/lib/quagga/qthrift/bgpd.conf', key_val_separator =>'', require => package['opnfv-quagga'], notify => service['opnfv-quagga'] }, package { ['opnfv-quagga', 'libcapnp-0.5.99', 'python-pycapnp', 'python-thriftpy']: ensure => installed, }, service {'opnfv-quagga': ensure => running }","CWE-120: Buffer Copy Without Checking Size of Input ('Classic Buffer Overflow'), CWE-1324: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","{'reason': 'The issue is related to the provided CWE because', 'related_cwe': 'CWE-22, CWE-120', 'is_misconfiguration_related': 'Yes'}"
1101,"notice('modular: midonet-enable-ip.forward.pp') sysctl::value { 'net.ipv4.ip_forward': value => '1' } -> exec { 'load-sysctl': command => ""/sbin/sysctl -p /etc/sysctl.conf"", refreshonly => true }",0,1,"command => \, exec { 'load-sysctl': command => \, load-sysctl, load-sysctl', refreshonly => true }, refreshonly => true }, sysctl::value { 'net.ipv4.ip_forward': value => '1' }",CWE-1216,"{'reason': 'The configuration allows the server to forward untrusted traffic, which could potentially be malicious, allowing untrusted and malicious actors to infiltrate other systems via the server, leading to an increased risk of lateral movement.', 'related_cwe': 'CWE-1216', 'is_misconfiguration_related': 'Yes'}"
1102,"class mellanox_openstack::cinder_iser ( $iser_ip_address, ) { include cinder::params cinder_config { 'default/volume_driver' : value => 'cinder.volume.drivers.lvm.lvmvolumedriver' } cinder_config { 'default/iscsi_protocol' : value => 'iser' } cinder_config { 'default/iscsi_ip_address' : value => ""$iser_ip_address"" } service { $cinder::params::volume_service : ensure => running, subscribe => [cinder_config['default/iscsi_protocol'], cinder_config['default/volume_driver'], cinder_config['default/iscsi_ip_address']] } }",1,1,cinder_config { 'default/volume_driver' : value => 'cinder.volume.drivers.lvm.lvmvolumedriver' },CWE-119,"{'reason': 'The cinder_config resource is used to configure LVM in a cinder service. LVM is not an ISCSI configuration but rather a tool that allows a system to organize its block devices. ISCSI is an iSCSI driver that allows an ISCSI initiator to connect to a target device. In this script, LVM and ISCSI are used interchangeably. The cinder_config resource can be used to enable an ISCSI driver. In this script, ISCSI is used incorrectly in the misconfigured resource.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
1103,"class packages::puppet { anchor { 'packages::puppet::begin': ; 'packages::puppet::end': ; } $puppet_version = ""3.7.0"" $puppet_dmg_version = ""${puppet_version}"" $puppet_rpm_version = ""${puppet_version}-1.el6"" $puppet_deb_version = ""${puppet_version}-1puppetlabs1"" $facter_version = ""2.2.0"" $facter_dmg_version = ""${facter_version}"" $facter_rpm_version = ""${facter_version}-1.el6"" $facter_deb_version = ""${facter_version}-1puppetlabs1"" case $::operatingsystem { centos: { package { ""puppet"": ensure => ""$puppet_rpm_version""; ""facter"": ensure => ""$facter_rpm_version""; } } ubuntu: { package { [""puppet"", ""puppet-common""]: ensure => ""$puppet_deb_version""; [""facter""]: ensure => ""$facter_deb_version""; } } darwin: { anchor['packages::puppet::begin'] -> packages::pkgdmg { puppet: os_version_specific => false, version => $puppet_dmg_version; facter: os_version_specific => false, version => $facter_dmg_version; } -> anchor['packages::puppet::end'] if ($::macosx_productversion_major == ""10.8"" or $::macosx_productversion_major == ""10.6"") { anchor['packages::puppet::begin'] -> packages::pkgdmg { 'json_pure': os_version_specific => true, version => ""1.8.1""; } -> anchor['packages::puppet::end'] } } windows: { } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"package { \, package { \\, package { \\\\, package { \\\\\\\\, package { \\\\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\","CWE-19, CWE-20, CWE-22, CWE-73, CWE-89","{'reason': 'The anchor resource is misconfigured, which results in no resources being managed.', 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
1104,"class python::pip_check_py { include python::virtualenv::settings include python::misc_python_dir include users::root $file = ""${python::virtualenv::settings::misc_python_dir}/pip-check.py"" file { ""$file"": source => ""puppet:///modules/python/pip-check.py"", owner => root, group => $::users::root::group, mode => filemode(0644), require => class[""python::misc_python_dir""]; } }",0,1,"file { \\, group => \\, group => \\\\\\\\, include python::misc_python_dir, include users::root, mode => filemode(0644), \\, mode => filemode(0644), \\\\, owner => root, \\\\\\\\\\\\, require => class[\, source => \",CWE-269,"{'reason': 'The file owner was set to root. This setting is insecure as it can be changed by any user. In this case, the file was owned by a default, global user called \\', 'related_cwe': 'CWE-269', 'is_misconfiguration_related': 'Yes'}"
1105,"$mlnx = hiera('mellanox-plugin') $eswitch_vnic_type = 'hostdev' $eswitch_apply_profile_patch = 'true' $mechanism_drivers = 'openvswitch' $roles = hiera('roles') if ( $mlnx['driver'] == 'mlx4_en' and $mlnx['mlnx_qos'] ) { class { 'mellanox_openstack::configure_qos' : mlnx_sriov => $mlnx['sriov'], roles => $roles } } if ($mlnx['sriov']) { $pci_vendor_devices = '15b3:1014,15b3:1016' $agent_required = 'true' class { 'mellanox_openstack::controller_sriov' : eswitch_vnic_type => $eswitch_vnic_type, eswitch_apply_profile_patch => $eswitch_apply_profile_patch, mechanism_drivers => $mechanism_drivers, mlnx_driver => $mlnx['driver'], network_type => $mlnx['network_type'], mlnx_sriov => $mlnx['sriov'], pci_vendor_devices => $pci_vendor_devices, agent_required => $agent_required, use_mlnx_neo => $mlnx['use_mlnx_neo'] } } elsif ($mlnx['driver'] == 'eth_ipoib') { class { 'mellanox_openstack::controller_ib_pv' : } }",1,1,"class {'mellanox_openstack::configure_qos' : mlnx_sriov => $mlnx['sriov'], roles => $roles }, class {'mellanox_openstack::controller_ib_pv' : }, class {'mellanox_openstack::controller_sriov' : eswitch_vnic_type => $eswitch_vnic_type, eswitch_apply_profile_patch => $eswitch_apply_profile_patch, mechanism_drivers => $mechanism_drivers, mlnx_driver => $mlnx['driver'], network_type => $mlnx['network_type'], mlnx_sriov => $mlnx['sriov'], pci_vendor_devices => $pci_vendor_devices, agent_required => $agent_required, use_mlnx_neo => $mlnx['use_mlnx_neo'] }, if ( $mlnx['driver'] =='mlx4_en' and $mlnx['mlnx_qos'] ) {, if ($mlnx['driver'] == 'eth_ipoib') {","CWE-19, CWE-20","{'reason': 'This vulnerability is caused due to an application executing untrusted actions that are inconsistent with its intentions or expectations. This may lead to unintended behavior, including unexpected behavior and potentially malicious behavior. The vulnerability is likely to result from poor input validation, leading to the incorrect assumption that user input can be trusted. This may result in incorrect behavior due to unexpected changes in application functionality. This may be intentional, leading to unintentional behavior due to unintended changes in application functionality. The vulnerability is likely to result from poor input validation, leading to the incorrect assumption that user input can be trusted. This may result in incorrect behavior due to unexpected changes in application functionality. This may be intentional, leading to unintended behavior due to unexpected changes in application functionality. The vulnerability is likely to', 'related_cwe': 'CWE-19, CWE-20', 'is_misconfiguration_related': 'Yes'}"
1106,"define lma_collector::gse_cluster_filter ( $input_message_types, $aggregator_flag, $member_field, $output_message_type, $output_metric_name, $interval = 10, $cluster_field = undef, $clusters = {}, $warm_up_period = undef, $ensure = present, ) { include lma_collector::params include lma_collector::service::metric $lua_modules_dir = $lma_collector::params::lua_modules_dir validate_array($input_message_types) validate_string($cluster_field) validate_string($member_field) validate_string($output_metric_name) if size($input_message_types) == 0 { fail('input_message_types cannot be empty') } $topology_file = sanitize_name_for_lua(""gse_${title}_topology"") if $aggregator_flag { $aggregator_flag_operator = '!=' } else { $aggregator_flag_operator = '==' } $message_matcher = join([ '(fields[name] == \'pacemaker_local_resource_active\' && fields[resource] == \'vip__management\') || ', ""(fields[${lma_collector::params::aggregator_flag}] ${aggregator_flag_operator} nil && ("", inline_template('<%= @input_message_types.collect{|x| ""type =~ / '))', ], '') heka::filter::sandbox { ""gse_${title}"": config_dir => $lma_collector::params::metric_config_dir, filename => ""${lma_collector::params::plugins_dir}/filters/gse_cluster_filter.lua"", message_matcher => $message_matcher, ticker_interval => 1, config => { output_message_type => $output_message_type, output_metric_name => $output_metric_name, source => ""gse_${title}_filter"", interval => $interval, topology_file => $topology_file, policies_file => $lma_collector::params::gse_policies_module, cluster_field => $cluster_field, member_field => $member_field, max_inject => $lma_collector::params::hekad_max_timer_inject, warm_up_period => $warm_up_period, }, module_directory => $lua_modules_dir, require => file[$topology_file], notify => class['lma_collector::service::metric'] } file { $topology_file: ensure => present, path => ""${lua_modules_dir}/${topology_file}.lua"", content => template('lma_collector/gse_topology.lua.erb'), } }",1,1,"if size(\$input_message_types) == 0 { fail('input_message_types cannot be empty') }, if size(\\$input_message_types) == 0 { fail('input_message_types cannot be empty') }, validate_array(\\$input_message_types), validate_array(\\\\$input_message_types), validate_array(\\\\\\\\$input_message_types), validate_array(\\\\\\\\\\\\\\\\\\\\$input_message_types), validate_string(\\\\$cluster_field), validate_string(\\\\\\\\\\\\\\\\$cluster_field), validate_string(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$cluster_field), validate_string(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$cluster_field)","CWE-209, CWE-210","{'reason': 'The check is for if input_message_types is empty, which is not relevant to the CWE. In fact, the check is about ensuring there are at least one message type. The check may be an indirect way of ensuring that the input_message_types is not empty, but it does not explicitly check that.', 'related_cwe': 'CWE-209, CWE-210', 'is_misconfiguration_related': 'No'}"
1107,"define neutron::plugins::ml2::mech_driver ( $supported_pci_vendor_devs, ){ include ::neutron::deps if ($name == 'sriovnicswitch') { neutron_plugin_sriov { 'ml2_sriov/supported_pci_vendor_devs': value => join(any2array($supported_pci_vendor_devs), ','); } case $::osfamily { 'redhat': { file { '/etc/neutron/conf.d/neutron-server/ml2_conf_sriov.conf': ensure => link, target => '/etc/neutron/plugins/ml2/ml2_conf_sriov.ini', } } /^(debian|ubuntu)$/: { file_line { 'daemon_args': path => '/etc/default/neutron-server', line => 'daemon_args=""$daemon_args --config-file /etc/neutron/plugins/ml2/ml2_conf_sriov.ini""', } } default: { fail(""unsupported osfamily ${::osfamily}"") } } } }",1,1,"fail(\, file { '/etc/neutron/conf.d/neutron-server/ml2_conf_sriov.conf':, file_line { 'daemon_args':, include ::neutron::deps, path => '/etc/default/neutron-server', target => '/etc/neutron/plugins/ml2/ml2_conf_sriov.ini', value => join(any2array($supported_pci_vendor_devs), '\\,')","CWE-502: Deserialization of Untrusted Data, CWE-77: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","{'reason': 'Misconfiguration Label LLM: 1', 'related_cwe': 'CWE-502, CWE-77', 'is_misconfiguration_related': 'Yes'}"
1108,"define oslo::cors( $allowed_origin = $::os_service_default, $allow_credentials = $::os_service_default, $expose_headers = $::os_service_default, $max_age = $::os_service_default, $allow_methods = $::os_service_default, $allow_headers = $::os_service_default, ) { $cors_options = { 'cors/allowed_origin' => { value => $allowed_origin }, 'cors/allow_credentials' => { value => $allow_credentials }, 'cors/expose_headers' => { value => $expose_headers }, 'cors/max_age' => { value => $max_age }, 'cors/allow_methods' => { value => $allow_methods }, 'cors/allow_headers' => { value => $allow_headers } } create_resources($name, $cors_options) }",0,1,"create_resources($name, $cors_options) }, define oslo::cors( $allowed_origin = $::os_service_default, $allow_credentials = $::os_service_default, $expose_headers = $::os_service_default, $max_age = $::os_service_default, $allow_methods = $::os_service_default, $allow_headers = $::os_service_default, ) {, }, }, \\\\\\\n  'cors/allow_headers' => { \\\\\\\n    value => $allow_headers, \\\\\\\n  }, }, \\\\n  'cors/allow_headers' => { \\\\n    value => $allow_headers, \\\\n  }, }, \\n  'cors/allow_headers' => { \\n    value => $allow_headers, \\n  }, }, \\n  'cors/allow_methods' => { \\n    value => $allow_methods, \\n  }, \\n  'cors/allow_headers' => { \\n    value => $allow_headers, \\n  }, }, \n  'cors/allow_methods' => { \n    value => $allow_methods, \n  }, \n  'cors/allow_headers' => { \n    value => $allow_headers, \n  }",CWE-252,"{'reason': 'The given script does not allow a user to perform an HTTP request to a server.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
1109,"class role::simple_performant { require ::role::mediawiki include ::role::thumb_on_404 include ::role::wikidiff2 include ::apache::mod::expires require_package('unzip') $day = 24 * 60 * 60 $cache_accel = 3 $cache_db = 1 php::ini { 'simple_performant': settings => { realpath_cache_size => '512k' }, } mediawiki::settings { 'simple_performant': values => { wgcachedirectory => '/var/cache/mediawiki', wgmaincachetype => $cache_accel, wgparsercachetype => $cache_db, wgjobrunrate => 0, wgenablesidebarcache => true, wgparsercacheexpiretime => 30 * $day, wgresourceloadermaxage => { 'unversioned' => { 'server' => $day, 'client' => $day, }, 'versioned' => { 'server' => 30 * $day, 'client' => 30 * $day, }, }, }, notify => mediawiki::maintenance['rebuild_localisation_cache'], } mediawiki::maintenance { 'rebuild_localisation_cache': command => '/usr/local/bin/mwscript rebuildlocalisationcache.php --force', refreshonly => true, require => class['::mediawiki::multiwiki'], } $expires_active = 'expiresactive on' $expires_default = 'expiresdefault ""access plus 1 month""' apache::site_conf { 'expires': site => $::mediawiki::wiki_name, content => ""${expires_active}\n${expires_default}\n"", require => class['::apache::mod::expires'], } file { '/vagrant/mediawiki/skins/.htaccess': ensure => present, source => 'puppet:///modules/role/simple_performant/skins-htaccess', require => class['::apache::mod::expires'], } }",1,1,"apache::site_conf { 'expires': site => $::mediawiki::wiki_name, content => \, apache::site_conf { 'expires': site => \\, file { '/vagrant/mediawiki/skins/.htaccess': ensure => \\, mediawiki::maintenance {'rebuild_localisation_cache': command => \, mediawiki::maintenance {'rebuild_localisation_cache': command => \\, mediawiki::maintenance {'rebuild_localisation_cache': refreshonly => \\, mediawiki::settings {'simple_performant': values => { wgcachedirectory => \, mediawiki::settings {'simple_performant': values => { wgmaincachetype => \\, mediawiki::settings {'simple_performant': values => { wgparsercachetype => \\\\, mediawiki::settings {'simple_performant': values => { wgresourceloadermaxage => \\",CWE-119,"{'reason': 'The use of PHP::ini to configure PHP settings could potentially allow for a path traversal vulnerability in a future release if used in combination with other vulnerable modules. PHP itself does not contain any known security issues, but this module allows a malicious user to modify the configuration file. This vulnerability was not present at the time this code was originally evaluated, but could exist in the future.', 'related_cwe': 'CWE-119', 'is_misconfiguration_related': 'Yes'}"
1110,"class sahara::service::engine ( $enabled = true, $manage_service = true, $package_ensure = 'present', ) { include ::sahara::params sahara_config<||> ~> service['sahara-engine'] package { 'sahara-engine': ensure => $package_ensure, name => $::sahara::params::engine_package_name, tag => ['openstack', 'sahara-package'], notify => service['sahara-engine'], } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'sahara-engine': ensure => $service_ensure, name => $::sahara::params::engine_service_name, enable => $enabled, hasstatus => true, hasrestart => true, require => package['sahara-engine'], tag => 'sahara-service', } }",0,1,"package {'sahara-engine':, sahara_config<||> ~> service['sahara-engine'], service {'sahara-engine':","CWE-22, CWE-480, CWE-494","{'reason': 'This misconfiguration could allow for anyone to create a job on the openstack server.', 'related_cwe': 'CWE-480, CWE-494', 'is_misconfiguration_related': 'Yes'}"
1111,"class cinder::rabbitmq( $userid = 'guest', $password = 'guest', $virtual_host = '/', ) { warning('cinder::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.') if $userid == 'guest' { $delete_guest_user = false } else { $delete_guest_user = true rabbitmq_user { $userid: admin => true, password => $password, provider => 'rabbitmqctl', } rabbitmq_user_permissions { ""${userid}@${virtual_host}"": configure_permission => '.*', write_permission => '.*', read_permission => '.*', provider => 'rabbitmqctl', }->anchor<| title == 'cinder-start' |> } rabbitmq_vhost { $virtual_host: provider => 'rabbitmqctl', } }",1,1,"->anchor<| title == 'cinder-start' |> }, rabbitmq_user { ${userid}: admin => true, password => ${password}, provider => 'rabbitmqctl', }, rabbitmq_user_permissions { ${userid}@${virtual_host}:, rabbitmq_vhost { ${virtual_host}:, warning('cinder::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.'): }",CWE-307,"{'reason': 'The misconfiguration is related to the provided CWE.', 'related_cwe': 'CWE-307', 'is_misconfiguration_related': 'Yes'}"
1112,"class tripleo::profile::base::rabbitmq ( $config_variables = hiera('rabbitmq_config_variables'), $environment = hiera('rabbitmq_environment'), $ipv6 = str2bool(hiera('rabbit_ipv6', false)), $kernel_variables = hiera('rabbitmq_kernel_variables'), $nodes = hiera('rabbitmq_node_ips', []), $step = hiera('step'), ) { if $ipv6 { $rabbit_env = merge($environment, { 'rabbitmq_server_start_args' => '""-proto_dist inet6_tcp""' }) } else { $rabbit_env = $environment } $manage_service = hiera('rabbitmq::service_manage', true) if $step >= 1 { if count($nodes) > 1 or ! $manage_service { class { '::rabbitmq': config_cluster => $manage_service, cluster_nodes => $nodes, tcp_keepalive => false, config_kernel_variables => $kernel_variables, config_variables => $config_variables, environment_variables => $rabbit_env, } if $manage_service { rabbitmq_policy { 'ha-all@/': pattern => '^(?!amq\.).*', definition => { 'ha-mode' => 'all', }, } } } else { class { '::rabbitmq': tcp_keepalive => false, config_kernel_variables => $kernel_variables, config_variables => $config_variables, environment_variables => $rabbit_env, } } } }",0,0,nan,nan,"{'reason': 'This script does not define any configuration variables that can be used to store the environment variable $RABBITMQ_DEFAULT_USER, which is required to prevent a Denial of Service (DoS) attack. Since the $RABBITMQ_DEFAULT_USER is not set, a malicious attacker can cause the application to run out of memory by sending a large number of connections to the server without specifying the user to authenticate with. This DoS attack requires no authentication and can be triggered by a non-privileged user.', 'related_cwe': 'CWE-345, CWE-20', 'is_misconfiguration_related': 'Yes'}"
1113,class { '::osnailyfacter::cluster::health' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,"class { '::osnailyfacter::cluster::health' :}, class { '::osnailyfacter::upgrade::restart_services' :}",CWE-250,"{'reason': 'The misconfiguration found here is related to the CWE-250. It is an example of overprivileged user accounts because the default configuration of Puppet allows any Puppet user to execute commands on any host using the osnailyfacter cluster::health and upgrade::restart_services classes.', 'related_cwe': '250', 'is_misconfiguration_related': 'Yes'}"
1114,"class nova::rabbitmq( $userid ='guest', $password ='guest', $virtual_host ='/', $cluster_disk_nodes = false, $enabled = true, $port ='5672', ) { warning('nova::rabbitmq class is deprecated and will be removed in next release. make other plans to configure rabbitmq resources.') include ::nova::deps if ($enabled) { if $userid == 'guest' { $delete_guest_user = false } else { $delete_guest_user = true rabbitmq_user { $userid: admin => true, password => $password, provider => 'rabbitmqctl', } rabbitmq_user_permissions { ""${userid}@${virtual_host}"": configure_permission => '.*', write_permission => '.*', read_permission => '.*', provider => 'rabbitmqctl', } } rabbitmq_vhost { $virtual_host: provider => 'rabbitmqctl', } } class['nova::rabbitmq'] -> anchor['nova::service::end'] }",1,1,"class['nova::rabbitmq'] -> anchor['nova::service::end'], rabbitmq_user {\\\\n $userid: admin => true, password => $password, provider => 'rabbitmqctl',\\\\n }, rabbitmq_user {\\n $userid: admin => true, password => $password, provider => 'rabbitmqctl',\\n }, rabbitmq_user {\n $userid: admin => true, password => $password, provider => 'rabbitmqctl',\n }, rabbitmq_user_permissions {\\\\\\\\\\\\\\\\n  \\\\\\\\\\\\\\\\, rabbitmq_user_permissions {\\\\n  \\\\, rabbitmq_user_permissions {\\n  \\, rabbitmq_vhost {\\\\\\\\n  $virtual_host: provider => 'rabbitmqctl',\\\\n }, rabbitmq_vhost {\\\\n  $virtual_host: provider => 'rabbitmqctl',\\n }",CWE-20,"{'reason': 'The use of hard-coded passwords in the script could allow an unauthorized user to access sensitive information stored in the RabbitMQ server. Additionally, since the admin credentials are configured through a hard-coded password, an attacker can modify the permissions granted to the guest user, allowing them to access resources that should be accessible only by authorized users. This may lead to the exposure of sensitive information and the potential for unauthorized access to the server. By assigning unique and strong passwords, administrators can ensure that only authorized users have access to the RabbitMQ server.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1115,"class redis::php { include redis include apache package { 'php5-redis': ensure => present, require => service['redis-server'], notify => service['apache2'], } }",0,1,"class redis::php {, class redis::php {\\\\n  include redis\\\\n  include apache\\\\n  package {\\\\n    'php5-redis':\\\\n      ensure => present,\\\\n      require => service['redis-server'],\\\\n      notify => service['apache2'],\\\\n  }\\\\n}, include apache, include redis, include redis\\\\ninclude apache\\\\n\\\\n, package {\\n  'php5-redis':\\n    ensure => present,\\n    require => service['redis-server'],\\n    notify => service['apache2'],\\n  }\\n, package {\n  'php5-redis':\n    ensure => present,\n    require => service['redis-server'],\n    notify => service['apache2'],\n  }\n","CWE-295, CWE-352","{'reason': ""The misconfiguration is related to CWE-352, due to the'require => service['redis-server']' declaration."", 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
1116,"class lma_collector::logs::swift ( $file_match, $priority = undef, $log_directory = $lma_collector::params::log_directory, ) inherits lma_collector::params { include lma_collector::service::log $lua_modules_dir = $lma_collector::params::lua_modules_dir $config_dir = $lma_collector::params::log_config_dir heka::decoder::sandbox { 'swift': config_dir => $config_dir, filename => ""${lma_collector::params::plugins_dir}/decoders/generic_syslog.lua"", config => { syslog_pattern => $lma_collector::params::syslog_pattern, fallback_syslog_pattern => $lma_collector::params::fallback_syslog_pattern }, module_directory => $lua_modules_dir, notify => class['lma_collector::service::log'], } heka::input::logstreamer { 'swift': config_dir => $config_dir, decoder => 'swift', log_directory => $log_directory, file_match => $file_match, differentiator => '[\'openstack.swift\']', priority => $priority, require => heka::decoder::sandbox['swift'], notify => class['lma_collector::service::log'], } }",1,1,"differentiator => \ '[\'openstack.swift\']\', file_match => \\ '(/var/log/openstack/servi[\\'ce[\\']_swift[\\']_*.log\\.gz|\\\\\.\\)\\', heka::decoder::sandbox, heka::input::logstreamer, log_directory => $log_directory, file_match => $file_match, differentiator => '[\'openstack.swift\']', priority => $priority, require => heka::decoder::sandbox['swift'], notify => class['lma_collector::service::log'], priority => $priority, require => heka::decoder::sandbox['swift']",CWE-732,"{'reason': ""CWE-732: 'Differentiator' is improperly used to filter logs that should be dropped. This may allow an attacker to bypass the logging mechanism altogether, and potentially allow them to gain unauthorised access to the system."", 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1117,class neutron {} class { 'neutron' :} class { '::openstack_tasks::openstack_network::plugins::ml2' :} warning('osnailyfacter/modular/./openstack-network/plugins/ml2.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/plugins/ml2.pp'),1,1,"class ::openstack_tasks::openstack_network::plugins::ml2 { \, class ::openstack_tasks::openstack_network::plugins::ml2 { \\, class neutron {\, class neutron {\\, class { '::openstack_tasks::openstack_network::plugins::ml2' :}\\\\\\\\n, class { '::openstack_tasks::openstack_network::plugins::ml2' :}\\\\n, class { 'neutron' :}\\n, warning('osnailyfacter/modular/./openstack-network/plugins/ml2.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/plugins/ml2.pp')\\\\\\\\\\\\\\\\n, warning('osnailyfacter/modular/./openstack-network/plugins/ml2.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./openstack-network/plugins/ml2.pp')\\\\n","CWE-20: Improper Input Validation, CWE-352: Untrusted Input","{'reason': 'CWE-20: Improper Input Validation, CWE-352: Untrusted Input', 'related_cwe': 'CWE-20: Improper Input Validation, CWE-352: Untrusted Input', 'is_misconfiguration_related': 'Yes'}"
1118,class { '::osnailyfacter::netconfig::connectivity_tests' :},1,1,class { '::osnailyfacter::netconfig::connectivity_tests' :},CWE-22: Inappropriate Implementation,"{'reason': 'The misconfiguration is related to CWE-22 since this issue causes unvalidated input to be handled incorrectly. This causes a vulnerability where an incorrect implementation of an intended function can lead to system access.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1119,"class vitrage::notifier ( $manage_service = true, $enabled = true, $package_ensure = 'present', ) { include ::vitrage::params vitrage_config<||> ~> service['vitrage-notifier'] package[$::vitrage::params::notifier_package_name] -> service['vitrage-notifier'] ensure_resource( 'package', [$::vitrage::params::notifier_package_name], { ensure => $package_ensure, tag => ['openstack', 'vitrage-package'] } ) if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } package['vitrage'] -> service['vitrage-notifier'] service { 'vitrage-notifier': ensure => $service_ensure, name => $::vitrage::params::notifier_service_name, enable => $enabled, hasstatus => true, hasrestart => true, tag => 'vitrage-service', } }",0,1,"class vitrage::notifier, ensure_resource, name => $::vitrage::params::notifier_service_name,, service { 'vitrage-notifier':, tag => 'vitrage-service', } }],",CWE-295,"{'reason': ""the misconfiguration involves the use of 'ensure' in the service resource"", 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1120,"class manila::db::sync { include ::manila::params exec['manila-manage db_sync'] ~> service<| tag == 'manila-service' |> package<| tag == 'manila-package' |> ~> exec['manila-manage db_sync'] manila_config<| title == 'database/connection' |> ~> exec['manila-manage db_sync'] exec { 'manila-manage db_sync': command => $::manila::params::db_sync_command, path => '/usr/bin', user => 'manila', refreshonly => true, logoutput => 'on_failure', } }",0,1,"class manila::db::sync, command => $::manila::params::db_sync_command, path => '/usr/bin', user =>'manila', refreshonly => true, logoutput => 'on_failure', }, exec {'manila-manage db_sync':, exec<| tag =='manila-exec' |>, manila_config<| title =='database/connection' |>, package<| tag =='manila-package' |>, service<| tag =='manila-service' |>","CWE-284, CWE-295","{'reason': ""Puppet code has not included an argument which allows for an argument injection, thus, the misconfiguration should be labeled as 'CWE-295'."", 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1121,class { '::osnailyfacter::tools::tools' :} class { '::osnailyfacter::upgrade::restart_services' :},1,1,"class { '::osnailyfacter::tools::tools' :}, class { '::osnailyfacter::upgrade::restart_services' :}","CWE-19, CWE-20, CWE-22, CWE-23, CWE-24, CWE-25","{'reason': 'CWE-19', 'related_cwe': 'CWE-19, CWE-20, CWE-22, CWE-23, CWE-24, CWE-25', 'is_misconfiguration_related': 'Yes'}"
1122,"class php::composer ( $home = '/vagrant/cache/composer', $cache_dir = '/vagrant/cache/composer', ) { $bin = '/usr/local/bin/composer' exec { 'download_composer': command => ""curl https://getcomposer.org/composer.phar -o ${bin}"", unless => ""php5 -r 'try { phar::loadphar(\""${bin}\""); exit(0); } catch(exception \$e) { exit(1); }'"", require => package['curl', 'php5-cli'], } file { '/usr/local/bin/composer': ensure => file, owner => 'root', group => 'root', mode => '0755', require => exec['download_composer'], } exec { 'update_composer': command => '/usr/local/bin/composer self-update', environment => [ ""composer_home=${home}"", ""composer_cache_dir=${cache_dir}"", 'composer_no_interaction=1', ], require => [ file['/usr/local/bin/composer'], package['php5'], ], schedule => 'weekly', } env::var { 'composer_cache_dir': value => $cache_dir, } env::profile_script { 'add composer global bin to path': content => 'export path=$path:~/.composer/vendor/bin', } }",0,1,"env::profile_script { 'add composer global bin to path': content => 'export path=$path:~/.composer/vendor/bin', }, env::var { 'composer_cache_dir': value => $cache_dir, }, exec { 'update_composer': command => '/usr/local/bin/composer self-update', environment => [, file { '/usr/local/bin/composer': ensure => file, owner => 'root', group => 'root', mode => '0755', require => exec['download_composer'], }",CWE-22,"{'reason': 'When using the exec resource to call the curl command to download composer, an attacker could exploit the curl misconfiguration to perform a Man in the Middle attack. Since the curl command is not properly restricted to only trusted sources, a malicious actor could trick the script into downloading a malicious composer from a different website. This would execute the malicious composer and potentially infect the system.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1123,"define nginx::status_site( $ensure = present, $port = 8080, ) { nginx::site { 'status': ensure => $ensure, content => template('nginx/status.nginx.erb'), } }",0,1,"content => template('nginx/status.nginx.erb'), ensure => $ensure, nginx::site, port = 8080","CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-732: Incorrect Permission Assignment for Critical Resource","{'reason': 'The provided misconfiguration of using an arbitrary template file is a security risk.', 'related_cwe': 'CWE-22, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1124,"class role::oathauth { mediawiki::extension { 'oathauth': needs_update => true, } }",1,1,"mediawiki::extension, needs_update => true","CWE-259, CWE-261, CWE-284, CWE-285, CWE-289, CWE-94","{'reason': 'The misconfiguration is related to the vulnerability described in CWE-259, CWE-261, CWE-284, CWE-285, CWE-289, and CWE-94', 'related_cwe': 'CWE-259, CWE-261, CWE-284, CWE-285, CWE-289, CWE-94', 'is_misconfiguration_related': 'Yes'}"
1125,"class neutron::plugins::ml2::midonet ( $midonet_uri, $username, $password, $project_id = 'services', ) { include ::neutron::deps neutron_plugin_ml2 { 'midonet/midonet_uri' : value => $midonet_uri; 'midonet/username' : value => $username; 'midonet/password' : value => $password, secret => true; 'midonet/project_id' : value => $project_id; } }",0,1,"include ::neutron::deps, neutron_plugin_ml2 {'midonet/midonet_uri' : value => $midonet_uri;'midonet/username' : value => $username;'midonet/password' : value => $password, secret => true;'midonet/project_id' : value => $project_id; }, password = to_yaml_string($password), user_pass = to_yaml_string(\, value => $password, secret => true;","CWE-20, CWE-200","{'reason': 'Puppet parameter is not used in the script. The Puppet parameter should be removed to avoid any confusion.', 'related_cwe': 'CWE-20, CWE-200', 'is_misconfiguration_related': 'Yes'}"
1126,"class packages::jdk16 { anchor { 'packages::jdk16::begin': ; 'packages::jdk16::end': ; } case $::operatingsystem { centos: { package { 'java-1.6.0-openjdk-devel': ensure => $operatingsystemrelease ? { 6.2 => '1.6.0.0-1.43.1.10.6.el6_2', 6.5 => '1.6.0.0-3.1.13.1.el6_5' }; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"case $::operatingsystem { centos: { package { 'java-1.6.0-openjdk-devel': ensure => $operatingsystemrelease? { 6.2 => '1.6.0.0-1.43.1.10.6.el6_2', 6.5 => '1.6.0.0-3.1.13.1.el6_5' }; } }, default: { fail('cannot install on $::operatingsystem') }, fail('cannot install on $::operatingsystem'), package { 'java-1.6.0-openjdk-devel': ensure => $operatingsystemrelease? { 6.2 => '1.6.0.0-1.43.1.10.6.el6_2', 6.5 => '1.6.0.0-3.1.13.1.el6_5' }; }",CWE-22,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1127,"define tripleo::host::sriov::numvfs_persistence( $vf_defs, $content_string ){ include ::stdlib if empty($vf_defs) { file { '/etc/sysconfig/allocate_vfs': ensure => file, content => $content_string, group => 'root', mode => '0755', owner => 'root', } file { '/sbin/ifup-local': group => 'root', mode => '0755', owner => 'root', content => ' replace => false } file_line { 'call_ifup-local': path => '/sbin/ifup-local', line => '/etc/sysconfig/allocate_vfs $1', require => file['/sbin/ifup-local'], } } else { $vfspec = split($vf_defs[0], ':') $interface = $vfspec[0] $count = $vfspec[1] $vfdef_str = ""${content_string}[ \""${interface}\"" == \""\$1\"" ] && echo ${count} > /sys/class/net/${interface}/device/sriov_numvfs\n"" tripleo::host::sriov::numvfs_persistence{""mapped ${interface}"": vf_defs => delete_at($vf_defs, 0), content_string => $vfdef_str } } }",1,1,"allocate_vfs, call_ifup-local, content => $content_string, content_string, ifup-local, tripleo::host::sriov::numvfs_persistence{ mapped $1 :",CWE-22,"{'reason': 'This is the reason why this misconfiguration is not related to CWE-22', 'related_cwe': 'No related CWE', 'is_misconfiguration_related': 'No'}"
1128,"class tripleo::profile::base::neutron::opencontrail::vrouter ( $step = hiera('step'), ) { if $step >= 4 { include ::contrail::vrouter } }",0,0,"), class tripleo::profile::base::neutron::opencontrail::vrouter (\n, if $step >= 4 {, include ::contrail::vrouter, }",CWE-937,"{'reason': 'The misconfiguration is not related to CWE-937. The original defect label, 0, is associated with a defect related to the contrail component, which is a third-party component. However, it does not relate to the issue in question, which involves misconfigurations in the base::neutron::opencontrail::vrouter class.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1129,"class nova::consoleauth( $enabled = true, $manage_service = true, $ensure_package = 'present' ) { include ::nova::deps include ::nova::params nova::generic_service { 'consoleauth': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::consoleauth_package_name, service_name => $::nova::params::consoleauth_service_name, ensure_package => $ensure_package, } }",0,1,"ensure_package => $ensure_package,, include ::nova::deps, include ::nova::params, manage_service => $manage_service,, nova::consoleauth {... }, nova::generic_service {... }","CWE-19, CWE-20","{'reason': ""The ensure_package variable should not be changed by user because it can change the behavior of the module if it's not used correctly. User is recommended to modify the value of the ensure_package variable only if necessary. In order to minimize the potential for misuse, ensure_package should have a default value of 'present'. This will help prevent security issues from occurring. This is a valid use case for the ensure_package variable because it's used correctly and has a default value."", 'related_cwe': 'CWE-19,CWE-20', 'is_misconfiguration_related': 'Yes'}"
1130,"define grub::defaults($kern=0) { include grub include needs_reboot case $operatingsystem { 'ubuntu': { if $::ec2_instance_id != """" { file { '/boot/grub/menu.lst': ensure => present, content => template(""grub/ubuntu-menu.lst.erb""), notify => exec['reboot_semaphore']; } } else { file { '/etc/default/grub': ensure => present, content => template(""grub/defaults.erb""), notify => exec['reboot_semaphore']; } ~> exec { 'update-grub': command => '/usr/sbin/update-grub', subscribe => file['/etc/default/grub'], refreshonly => true, require => class [ 'grub' ]; } } } 'centos': { file { '/boot/grub/grub.conf': mode => 600, audit => content, notify => exec['reboot_semaphore']; } ~> exec { 'grubby': command => ""/sbin/grubby --set-default=/boot/vmlinuz-${kern}"", refreshonly => true, } } } }",0,1,"define grub::defaults($kern=0), file { '/boot/grub/grub.conf': mode => 600, audit => content, notify => exec['reboot_semaphore']; } ~> exec { 'grubby': command => \, file { '/boot/grub/menu.lst': ensure => present, content => template(\, file { '/boot/grub/menu.lst': ensure => present, content => template(\\, file { '/boot/grub/menu.lst': ensure => present, content => template(\\\\, notify => exec['reboot_semaphore']; } } else { file { '/etc/default/grub': ensure => present, content => template(\\, refreshonly => true, } } } }, subscribe => file['/etc/default/grub'], refreshonly => true, require => class [ 'grub' ]; } } } }","CWE-132, CWE-259, CWE-532, CWE-732","{'reason': 'The misconfiguration is related to the following CWEs: CWE-132, CWE-259, CWE-532, CWE-732, due to how the grub defaults and grub.conf files are modified. Specifically, the misconfiguration is related to CWE-132, since the file mode and audit attributes do not match the system configuration. Furthermore, the misconfiguration is related to CWE-259, as the template and ensure attributes do not match the system configuration. Additionally, the misconfiguration is related to CWE-532, as the notify attribute of the file resource does not match the system configuration. Finally, the misconfiguration is related to CWE-732, as the require attribute of the exec resource does not match the system configuration.', 'related_cwe': 'CWE-132, CWE-259, CWE-532, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1131,class { '::osnailyfacter::firewall::firewall' :},1,1,class { '::osnailyfacter::firewall::firewall' :},"CWE-200: Information Exposure, CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-24: Missing Initialization of Resource, CWE-25: Improper Check for Unusual or Exceptional Conditions, CWE-26: Incorrectly Restored State, CWE-27: Improper Separation of User and File System Level, CWE-28: Improper Linking Between Components, CWE-29: Uncontrolled Search Path Element, CWE-30: Missing Release of Resource after Effective Lifetime, CWE-31: Incomplete Cleanup","{'reason': 'Puppet code execution vulnerability, CWE-22', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1132,"$hash = { ""file"" => ""/tmp/myhashfile1"" } file { $hash[""file""]: ensure => file, content => ""content""; } $hash2 = { ""a"" => { key => ""/tmp/myhashfile2"" }} file { $hash2[""a""][key]: ensure => file, content => ""content""; } define test($a = { ""b"" => ""c"" }) { file { $a[""b""]: ensure => file, content => ""content"" } } test { ""test"": a => { ""b"" => ""/tmp/myhashfile3"" } } $hash3 = { mykey => ""/tmp/myhashfile4"" } $key = ""mykey"" file { $hash3[$key]: ensure => file, content => ""content"" }",1,1,"file { \\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file { \\\\\\\\n     \\t\\\\\\, file { \\\\\n    \\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file { \\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, file { \n   \t/a/[key]: ensure => file, \n   \tcontent => \, key = \\\\\\\, test { \\\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\\\t\\\\\\\\\\\\, test { \\\\\\\\\\\\\\\\n     \\\\\\\\\\\\\\\\t\\, test { \\\\n     \\\\t\\, test { \\n   \\t\",CWE-94,"{'reason': 'Provide the detailed reasoning explaining why the misconfiguration is related to the CWE', 'related_cwe': 'CWE-94', 'is_misconfiguration_related': 'Yes'}"
1133,"class sysfs::service inherits sysfs::params { service { 'sysfsutils' : ensure => 'running', enable => true, status => '/bin/true', hasrestart => true, } sysfs_config_value <||> ~> service['sysfsutils'] }",1,1,"class sysfs::service inherits sysfs::params {, class sysfs::service inherits sysfs::params { service {'sysfsutils' : ensure => 'running', enable => true, status => '/bin/true', hasrestart => true, } sysfs_config_value <||> ~> service['sysfsutils'] }, enable => true, status => '/bin/true',, ensure => 'running', enable => true,, service {'sysfsutils' :, service {'sysfsutils' : ensure => 'running',, service {'sysfsutils' : ensure => 'running', enable => true, status => '/bin/true', hasrestart => true, }, status => '/bin/true', hasrestart => true,, sysfs_config_value <||> ~ >, sysfs_config_value <||> ~> service['sysfsutils']","CWE-19, CWE-21, CWE-22, CWE-77, CWE-78, CWE-79","{'reason': ""Not related to CWE-19. This issue was resolved by changing the service['sysfsutils'] resource to include a'start on' directive. This directive indicates that the service is to start on boot. Without this directive, the sysfsutils service would not be automatically started when the machine was booted."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1134,"class fuel::nginx::repo( $repo_root = $::fuel::params::repo_root, $repo_port = $::fuel::params::repo_port, $service_enabled = true, ) inherits fuel::nginx { file { ensure => present, owner => 'root', group => 'root', mode => '0644', } file { ""${repo_root}/index.html"": content => '', } file { ""${repo_root}/error.html"": content => template('fuel/nginx/error.html.erb'), } file { '/etc/nginx/conf.d/repo.conf': content => template('fuel/nginx/repo.conf.erb'), require => package['nginx'], notify => service['nginx'], } }",1,1,"file { '${repo_root}/error.html': content => template('fuel/nginx/error.html.erb'), }, file { '${repo_root}/index.html': content => '', }, file { '/etc/nginx/conf.d/repo.conf': content => template('fuel/nginx/repo.conf.erb'), require => package['nginx'], notify => service['nginx'], }, file { ensure => present, owner => 'root', group => 'root', mode => '0644', }",CWE-250,"{'reason': 'Insecure configuration, which can lead to Denial of Service attack. Nginx is configured to listen on repo_port and serve index and error pages for the repo_root.', 'related_cwe': '250', 'is_misconfiguration_related': 'Yes'}"
1135,"class vitrage::client ( $ensure = 'present' ) { include ::vitrage::params package { 'python-vitrageclient': ensure => $ensure, name => $::vitrage::params::client_package_name, tag => 'openstack', } }",0,1,"class vitrage::client ($ensure = 'present') { include ::vitrage::params package { 'python-vitrageclient': ensure => $ensure, name => $::vitrage::params::client_package_name, tag => 'openstack', } }","CWE-200: Information Exposure, CWE-20: Improper Input Validation, CWE-26: Improperly Handled Special Element, CWE-59: Improper Restriction of XML External Entity Reference in DTD, CWE-77: Improper Neutralization of Special Elements used in a Command, CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-87: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-92: Improper Neutralization of Special Elements used in HTTP Request, CWE-94: Improper Control of Generation of Code ('Code Injection'), CWE-96: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","{'reason': 'This code can be injected by an attacker.', 'related_cwe': ""CWE-94: Improper Control of Generation of Code ('Code Injection'), CWE-77: Improper Neutralization of Special Elements used in a Command, CWE-96: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-93: Improper Control of Web-Based Client Channel"", 'is_misconfiguration_related': 'Yes'}"
1136,"computer { ""localhost"": } mcx { ""mcx_dock"": ensure => ""present"", ds_type => ""group"", ds_name => ""mcx_dock"", content => '<?xml version=""1.0"" encoding=""utf-8""?> <!doctype plist public ""-//apple//dtd plist 1.0//en"" ""http://www.apple.com/dtds/propertylist-1.0.dtd""> <plist version=""1.0""> <dict> <key>com.apple.dock</key> <dict> <key>appitems-raw</key> <dict> <key>state</key> <string>always</string> <key>upk</key> <dict> <key>mcx_input_key_names</key> <array> <string>appitems-raw</string> </array> <key>mcx_output_key_name</key> <string>static-apps</string> <key>mcx_remove_duplicates</key> <true/> </dict> <key>value</key> <array> <dict> <key>mcx_typehint</key> <integer>1</integer> <key>tile-data</key> <dict> <key>file-data</key> <dict> <key>_cfurlstring</key> <string>/applications/mail.app</string> <key>_cfurlstringtype</key> <integer>0</integer> </dict> <key>file-label</key> <string>mail</string> </dict> <key>tile-type</key> <string>file-tile</string> </dict> <dict> <key>mcx_typehint</key> <integer>1</integer> <key>tile-data</key> <dict> <key>file-data</key> <dict> <key>_cfurlstring</key> <string>/applications/safari.app</string> <key>_cfurlstringtype</key> <integer>0</integer> </dict> <key>file-label</key> <string>safari</string> </dict> <key>tile-type</key> <string>file-tile</string> </dict> </array> </dict> <key>docitems-raw</key> <dict> <key>state</key> <string>always</string> <key>upk</key> <dict> <key>mcx_input_key_names</key> <array> <string>docitems-raw</string> </array> <key>mcx_output_key_name</key> <string>static-others</string> <key>mcx_remove_duplicates</key> <true/> </dict> <key>value</key> <array/> </dict> <key>mcxdockspecialfolders-raw</key> <dict> <key>state</key> <string>always</string> <key>upk</key> <dict> <key>mcx_input_key_names</key> <array> <string>mcxdockspecialfolders-raw</string> </array> <key>mcx_output_key_name</key> <string>mcxdockspecialfolders</string> <key>mcx_remove_duplicates</key> <true/> </dict> <key>value</key> <array/> </dict> <key>contents-immutable</key> <dict> <key>state</key> <string>always</string> <key>value</key> <false/> </dict> <key>static-only</key> <dict> <key>state</key> <string>always</string> <key>value</key> <false/> </dict> </dict> </dict> </plist> ' }",1,1,"computer { \, content => \\, ds_name => \, mcx_output_key_name => \\, mcx_output_key_name => \\\\, mcxdockspecialfolders => \\\\\\\\\\\\\\\\\\\\\\\\, mcxdockspecialfolders => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, static-apps => \\\\, static-others => \\\\\\\\",CWE-79,"{'reason': 'The misconfiguration is not related to the CWE. There are multiple types of misconfiguration: incorrect syntax, syntax errors, syntax highlighting, variable, comment, comment syntax, wrong comment, incomplete syntax, or incorrect indentation. This may also indicate a configuration change was made, but the change was not made to the correct place. It may also be the case that an incorrect command was used. Incorrect syntax may be due to the use of incorrect indentation or spacing. This may also occur because a file is not located in the correct location.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1137,"class openstack_integration::barbican { include ::openstack_integration::config include ::openstack_integration::params rabbitmq_user { 'barbican': admin => true, password => 'an_even_bigger_secret', provider => 'rabbitmqctl', require => class['::rabbitmq'], } rabbitmq_user_permissions { 'barbican@/': configure_permission => '.*', write_permission => '.*', read_permission => '.*', provider => 'rabbitmqctl', require => class['::rabbitmq'], } rabbitmq_user_permissions['barbican@/'] -> service<| tag == 'barbican-service' |> if $::openstack_integration::config::ssl { openstack_integration::ssl_key { 'barbican': notify => service['httpd'], require => package['barbican-api'], } exec['update-ca-certificates'] ~> service['httpd'] } include ::barbican class { '::barbican::db::mysql': password => 'barbican', } class { '::barbican::db': database_connection => 'mysql+pymysql://barbican:barbican@127.0.0.1/barbican?charset=utf8', } class { '::barbican::keystone::auth': public_url => ""${::openstack_integration::config::base_url}:9311"", internal_url => ""${::openstack_integration::config::base_url}:9311"", admin_url => ""${::openstack_integration::config::base_url}:9311"", password => 'a_big_secret', } include ::barbican::quota include ::barbican::keystone::notification class { '::barbican::api::logging': debug => true, } class { '::barbican::keystone::authtoken': password => 'a_big_secret', auth_url => ""${::openstack_integration::config::keystone_admin_uri}/v3"", auth_uri => ""${::openstack_integration::config::keystone_auth_uri}/v3"", user_domain_name => 'default', project_domain_name => 'default', } class { '::barbican::api': host_href => ""${::openstack_integration::config::base_url}:9311"", auth_strategy => 'keystone', service_name => 'httpd', enabled_certificate_plugins => ['simple_certificate'], db_auto_create => false, rabbit_userid => 'barbican', rabbit_password => 'an_even_bigger_secret', rabbit_port => $::openstack_integration::config::rabbit_port, rabbit_use_ssl => $::openstack_integration::config::ssl, rabbit_host => $::openstack_integration::config::ip_for_url, } include ::apache class { '::barbican::wsgi::apache': bind_host => $::openstack_integration::config::ip_for_url, ssl => $::openstack_integration::config::ssl, ssl_key => ""/etc/barbican/ssl/private/${::fqdn}.pem"", ssl_cert => $::openstack_integration::params::cert_path, workers => 2, } }",1,1,"openstack_integration::ssl_key { 'barbican': notify => service['httpd'], require => package['barbican-api'], }, rabbitmq_user { 'barbican': admin => true, password => 'an_even_bigger_secret', provider => 'rabbitmqctl', require => class['::rabbitmq'], }","CWE-320, CWE-327","{'reason': 'Barbican (Barbican is a centralised store for encryption keys in OpenStack), in this case the misconfiguration refers to the configuration of secrets. As an example, in the first rabbitmq_user block, a secret called an_even_bigger_secret is being used and stored. This is a violation of CWE-327 (Insecure Cryptographic Storage). This example also violates CWE-320 (Insufficient Cryptographic Security), as secrets such as an_even_bigger_secret are being exposed to the user in plaintext. This misconfiguration is also related to the misuse of the secrets, as it is likely that the secrets will not be changed once generated and exposed, violating CWE-259 (Weaknesses in Cryptographic Implementation), making it possible', 'related_cwe': 'CWE-320, CWE-327', 'is_misconfiguration_related': 'Yes'}"
1138,"class contrail::compute::aggregate { if $contrail::compute_dpdk_enabled { $nodes_hash = hiera('nodes') $dpdk_compute_nodes = nodes_with_roles(['dpdk'], 'fqdn') $dpdk_hosts = join($dpdk_compute_nodes, ',') $nova_hash = hiera_hash('nova', {}) $keystone_tenant = pick($nova_hash['tenant'], 'services') $keystone_user = pick($nova_hash['user'], 'nova') $service_endpoint = hiera('service_endpoint') $region = hiera('region', 'regionone') exec { provider => 'shell', path => '/sbin:/usr/sbin:/bin:/usr/bin', tries => 10, try_sleep => 2, environment => [ ""os_tenant_name=${keystone_tenant}"", ""os_username=${keystone_user}"", ""os_password=${nova_hash['user_password']}"", ""os_auth_url=http://${service_endpoint}:5000/v2.0/"", 'os_endpoint_type=internalurl', ""os_region_name=${region}"", 'nova_endpoint_type=internalurl', ], } exec { 'aggr_add_host': command => ""bash -c \""nova aggregate-add-host hpgs-aggr ${::fqdn}\"""", unless => ""bash -c \""nova aggregate-details hpgs-aggr | grep ${::fqdn}\"""", } } }",0,1,"exec { 'aggr_add_host': command =>, exec { provider =>'shell', path => '/sbin:/usr/sbin:/bin:/usr/bin', tries => 10, try_sleep => 2, environment => [ \, unless =>",CWE-77,"{'reason': 'This code is running the following command:\\n\\', 'related_cwe': 'CWE-77', 'is_misconfiguration_related': 'Yes'}"
1139,"class packages::nsis3_0b1 { include packages::mozilla::mozilla_build packages::pkgzip {""nsis-3.0b1.zip"": require => class[packages::mozilla::mozilla_build], zip => ""nsis-3.0b1.zip"", target_dir => '""c:\mozilla-build\""'; } }",0,1,packages::mozilla::mozilla_build,CWE-22,"{'reason': 'The issue is related to CWE 22, because the script creates an issue with the path c:\\\\mozilla-build.  This path is not allowed to be used in the Puppet DSL, because it could allow users to perform malicious actions on their machines, and could also affect the integrity of the script.', 'related_cwe': '22', 'is_misconfiguration_related': 'Yes'}"
1140,"class tripleo::profile::pacemaker::heat::api_cfn ( $bootstrap_node = hiera('bootstrap_nodeid'), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $pacemaker_master = true } else { $pacemaker_master = false } include ::tripleo::profile::pacemaker::heat include ::tripleo::profile::base::heat::api_cfn if $step >= 5 and $pacemaker_master { pacemaker::resource::service { $::heat::params::api_cfn_service_name : clone_params => 'interleave=true', } } }",0,1,"include ::tripleo::profile::pacemaker::heat\\\\\\\\ninclude ::tripleo::profile::base::heat::api_cfn, include ::tripleo::profile::pacemaker::heat\\\\ninclude ::tripleo::profile::base::heat::api_cfn, include ::tripleo::profile::pacemaker::heat\\ninclude ::tripleo::profile::base::heat::api_cfn, include ::tripleo::profile::pacemaker::heat\ninclude ::tripleo::profile::base::heat::api_cfn, pacemaker::resource::service { $::heat::params::api_cfn_service_name : clone_params => 'interleave=true', }\\n}",CWE-352,"{'reason': 'The misconfiguration is related to the provided CWE. The provided code will not function correctly, because the second include is duplicated. This will lead to misconfiguration because the code will fail to execute properly, causing the system to crash.', 'related_cwe': 'None', 'is_misconfiguration_related': 'Yes'}"
1141,"class packstack::horizon () { $is_django_debug = hiera('config_debug_mode') ? { true => 'true', false => 'false', } $bind_host = hiera('config_ip_version') ? { 'ipv6' => '::0', default => '0.0.0.0', } $horizon_ssl = hiera('config_horizon_ssl') ? { 'y' => true, 'n' => false, } class {'::horizon': secret_key => hiera('config_horizon_secret_key'), keystone_url => hiera('config_keystone_public_url'), keystone_default_role => '_member_', server_aliases => [hiera('config_controller_host'), $::fqdn, 'localhost'], allowed_hosts => '*', hypervisor_options => {'can_set_mount_point' => false, }, django_debug => $is_django_debug, django_session_engine => 'django.contrib.sessions.backends.cache', cache_backend => 'django.core.cache.backends.memcached.memcachedcache', cache_server_ip => '127.0.0.1', cache_server_port => '11211', file_upload_temp_dir => '/var/tmp', listen_ssl => $horizon_ssl, horizon_cert => hiera('config_horizon_ssl_cert', undef), horizon_key => hiera('config_horizon_ssl_key', undef), horizon_ca => hiera('config_horizon_ssl_cacert', undef), neutron_options => { 'enable_lb' => hiera('config_horizon_neutron_lb'), 'enable_firewall' => hiera('config_horizon_neutron_fw'), 'enable_vpn' => hiera('config_horizon_neutron_vpn'), }, } include '::packstack::memcached' $firewall_port = hiera('config_horizon_port') firewall { ""001 horizon ${firewall_port} incoming"": proto => 'tcp', dport => [$firewall_port], action => 'accept', } if str2bool($::selinux) { selboolean{ 'httpd_can_network_connect': value => on, persistent => true, } } }",1,1,"class {'::horizon': server_aliases => [hiera('config_controller_host'), $::fqdn, 'localhost'],",CWE-601,"{'reason': 'The misconfiguration is related to CWE-601 as it could allow any users to access Horizon by spoofing the host, and as a result, perform unauthorized actions such as creating, deleting, modifying, and viewing projects, virtual machines, volumes, and other resources, which could lead to resource exhaustion and financial losses.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
1142,"class keystone::policy ( $policies = {}, $policy_path = '/etc/keystone/policy.json', ) { include ::keystone::deps validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, } create_resources('openstacklib::policy::base', $policies) oslo::policy { 'keystone_config': policy_file => $policy_path } }",0,1,"class keystone::policy, create_resources('openstacklib::policy::base', $policies), include ::keystone::deps, keystone::policy, openstacklib::policy::base { file_path => $policy_path, }, oslo::policy { 'keystone_config': policy_file => $policy_path }, policies, policies = {}, policy_path = '/etc/keystone/policy.json', validate_hash($policies)",CWE-22,"{'reason': ""The misconfiguration is related to CWE-22 because $policies, policies = {}, policy_path = '/etc/keystone/policy.json', validate_hash($policies) and keystone::policy, openstacklib::policy::base { file_path => $policy_path, }, oslo::policy { 'keystone_config': policy_file => $policy_path }, creates an insecure configuration."", 'related_cwe': 'CWE-22, CWE-269, CWE-278', 'is_misconfiguration_related': 'Yes'}"
1143,"class qdr::config inherits qdr { $service_config_path = $::qdr::params::service_config_path $service_config_template = $::qdr::params::service_config_template $service_home = $::qdr::params::service_home $log_output = $::qdr::log_output file { $service_home : ensure => directory, owner => '0', group => '0', mode => '0644', } file { '/etc/qpid-dispatch' : ensure => directory, owner => '0', group => '0', mode => '0644', } file { 'qdrouterd.conf' : ensure => file, path => $service_config_path, content => template($service_config_template), owner => '0', group => '0', mode => '0644', notify => class['qdr::service'], } file { $log_output : ensure => file, owner => '0', group => '0', mode => '0666', } }",1,1,"content => template($service_config_template), mode => '0644',, mode => '0666',, notify => class['qdr::service'], owner => '0',, owner => '0', group => '0',, path => $log_output, path => $service_config_path,","CWE-19, CWE-20, CWE-200, CWE-25, CWE-255","{'reason': 'The misconfiguration involves file permissions. CWE-19 describes the risk of insecure permissions to files and directories.  CWE-20 describes the risk of insecure permissions to the entire system. CWE-200 describes a misconfiguration when a vulnerability scanner is installed on a host. CWE-25 describes the risk of insecure file permission to files. CWE-255 describes a misconfiguration when an attacker can execute commands as the root user.', 'related_cwe': 'CWE-19, CWE-20, CWE-200, CWE-25, CWE-255', 'is_misconfiguration_related': 'Yes'}"
1144,"class osnailyfacter::virtual_ips::conntrackd { notice('modular: virtual_ips/conntrackd.pp') $network_metadata = hiera_hash('network_metadata', {}) prepare_network_config(hiera_hash('network_scheme', {})) $vrouter_name = hiera('vrouter_name', 'pub') $bind_address = get_network_role_property('mgmt/vip', 'ipaddr') $mgmt_bridge = get_network_role_property('mgmt/vip', 'interface') if $network_metadata['vips'][""vrouter_${vrouter_name}""]['namespace'] { if $::operatingsystem == 'ubuntu' { class { '::cluster::conntrackd_ocf' : vrouter_name => $vrouter_name, bind_address => $bind_address, mgmt_bridge => $mgmt_bridge, } } } }",1,1,"bind_address => $bind_address,, class { '::cluster::conntrackd_ocf' :, mgmt_bridge => $mgmt_bridge, mgmt_bridge => $mgmt_bridge,, vrouter_name => $vrouter_name,","CWE-276, CWE-284","{'reason': 'the script is misconfigured because it does not have the variable defined', 'related_cwe': 'CWE-276, CWE-284', 'is_misconfiguration_related': 'Yes'}"
1145,"class fuel_lma_collector::params { $apache_allow_from = ['127.0.0.1','::1'] }",1,1,"class fuel_lma_collector::params { $apache_allow_from = ['127.0.0.1','::1'] }",CWE-20,"{'reason': 'CWE-20: [Provide the detailed reasoning explaining why the misconfiguration is related to the CWE] \\n[Insert the explanation here]\\n[Insert the explanation here]\\n[Insert the explanation here]', 'related_cwe': 'None', 'is_misconfiguration_related': 'Yes'}"
1146,"class fuel::nginx::services ( $staticdir = $::fuel::params::staticdir, $logdumpdir = $::fuel::params::logdumpdir, $ostf_host = $::fuel::params::ostf_host, $ostf_port = $::fuel::params::ostf_port, $keystone_host = $::fuel::params::keystone_host, $keystone_port = $::fuel::params::keystone_port, $nailgun_host = $::fuel::params::nailgun_host, $nailgun_port = $::fuel::params::nailgun_internal_port, $ssl_enabled = false, $force_https = undef, $service_enabled = true, ) inherits fuel::nginx { if $ssl_enabled and $force_https { $plain_http = false } else { $plain_http = true } file { '/etc/nginx/conf.d/services.conf': content => template('fuel/nginx/services.conf.erb'), owner => 'root', group => 'root', mode => '0644', require => package['nginx'], notify => service['nginx'], } file { ['/var/lib/fuel', '/var/lib/fuel/keys', '/var/lib/fuel/keys/master', '/var/lib/fuel/keys/master/nginx', ]: ensure => 'directory', } if $ssl_enabled { $ips = inline_template('<%= @interfaces.split("","").reject{ |iface| iface =~ /^(lo|docker)/ }.map {|iface| scope.lookupvar(""ipaddress_ openssl::certificate::x509 { 'nginx': ensure => present, country => 'us', organization => 'fuel', commonname => 'fuel.master.local', altnames => union(split($ips, ','), [$nailgun_host]), state => 'california', unit => 'fuel deployment team', email => 'root@fuel.master.local', days => 3650, base_dir => '/var/lib/fuel/keys/master/nginx/', owner => 'root', group => 'root', force => false, require => file['/var/lib/fuel/keys/master/nginx'], cnf_tpl => 'openssl/cert.cnf.erb', } -> file[""/etc/nginx/conf.d/services.conf""] } }",1,1,"if $ssl_enabled {\n    $ips = inline_template(\'<%= @interfaces.split(\, openssl::certificate::x509 { 'nginx':",CWE-798,"{'reason': 'The script includes an inline_template that could be misconfigured. This could allow an attacker to craft a request that could be validated by a templating engine, such as Jinja2 or Mustache, in a way that results in arbitrary code execution.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1147,class { '::openstack_tasks::keystone::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server warning('osnailyfacter/modular/./keystone/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/db.pp'),0,1,"class mysql::config {} include mysql::config, class mysql::server {} include mysql::server, class { \'\':\':openstack_tasks::keystone::db\' :}, include mysql::config, include mysql::server, warning('osnailyfacter/modular/./keystone/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/db.pp'), warning('osnailyfacter/modular/./keystone/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/db.pp')\\\\n, warning('osnailyfacter/modular/./keystone/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/db.pp')\\n, warning('osnailyfacter/modular/./keystone/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/db.pp')\n, warning(\'osnailyfacter/modular/./keystone/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/db.pp\')",CWE-89,"{'reason': ""It's very likely that the misconfiguration was caused by a misconfiguration of the cwe."", 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
1148,"define git::repo($repo, $dst_dir, $user) { include packages::mozilla::git exec { ""git-clone-${dst_dir}"": require => class['packages::mozilla::git'], command => ""git clone ${repo} ${dst_dir}"", creates => ""${dst_dir}/.git"", path => ""/usr/local/bin:/usr/bin:/bin"", cwd => ""/"", user => $user; } }",1,1,"command => \\, cwd => \, cwd => \\, include packages::mozilla::git, path => \\, path => \\\\, user => $user;","CWE-117: Improper Output Neutralization for Logs, CWE-269: Reliance on untrusted input in a security decision, CWE-522: Insufficiently Protected Credentials, CWE-732: Incorrect Permission Assignment for Critical Resource, CWE-772: Missing Require Expression","{'reason': 'Insufficiently Protected Credentials', 'related_cwe': 'CWE-772', 'is_misconfiguration_related': 'Yes'}"
1149,"class npm::globals { npm::global { ['mocha', 'grunt', 'grunt-cli', 'node-gyp', 'node-pre-gyp']: } }",0,1,"class npm::globals { npm::global { ['mocha', 'grunt', 'grunt-cli', 'node-gyp', 'node-pre-gyp']: } }",CWE-295,"{'reason': ""This misconfiguration has the potential to expose a vulnerable package to the host system's environment variables."", 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1150,"class glance::db::mysql( $password, $dbname = 'glance', $user = 'glance', $host = '127.0.0.1', $allowed_hosts = undef, $charset = 'utf8', $collate = 'utf8_general_ci', ) { include ::glance::deps validate_string($password) ::openstacklib::db::mysql { 'glance': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } anchor['glance::db::begin'] ~> class['glance::db::mysql'] ~> anchor['glance::db::end'] }",1,1,"allowed_hosts => $allowed_hosts,, charset => $charset,, collate => $collate,, host => $host,, password => mysql_password($password),, user => $user,","CWE-257, CWE-306","{'reason': 'CWE-257: [CWE-257: CWE-306: Password must not be stored in clear text, otherwise a password database may be easily compromised, especially when the database can be accessed over an insecure network. Passwords can be stored using various encryption algorithms, and encryption keys must be stored in a secure manner.', 'related_cwe': 'CWE-257, CWE-306', 'is_misconfiguration_related': 'Yes'}"
1151,class vmware::network::neutron ( ) { },0,1,class vmware::network::neutron (),"CWE-119, CWE-124, CWE-209, CWE-213, CWE-217","{'reason': 'Misconfiguration is related to the CWE because it describes a vulnerability, which is a security issue.', 'related_cwe': 'CWE-119, CWE-124, CWE-209, CWE-213, CWE-217', 'is_misconfiguration_related': 'Yes'}"
1152,"class ironic::keystone::auth_inspector ( $password, $auth_name = 'ironic-inspector', $email = 'baremetal-introspection@localhost', $tenant = 'services', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = undef, $service_type = 'baremetal-introspection', $service_description = 'bare metal introspection service', $region = 'regionone', $public_url = 'http://127.0.0.1:5050', $admin_url = 'http://127.0.0.1:5050', $internal_url = 'http://127.0.0.1:5050', ) { $real_service_name = pick($service_name, $auth_name) if $configure_user_role { keystone_user_role[""${auth_name}@${tenant}""] ~> service <| name == 'ironic-inspector' |> } keystone_endpoint[""${region}/${real_service_name}::${service_type}""] ~> service <| name == 'ironic-inspector' |> keystone::resource::service_identity { $auth_name: configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $real_service_name, service_type => $service_type, service_description => $service_description, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, } }",0,1,"keystone::resource::service_identity { $auth_name: configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_name => $real_service_name, service_type => $service_type, service_description => $service_description, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, internal_url => $internal_url, admin_url => $admin_url, }, keystone_endpoint[, keystone_user_role[, service <| name == 'ironic-inspector' |>","CWE-248, CWE-256, CWE-257, CWE-319","{'reason': 'The `keystone::resource::service_identity` class in the puppet-ironic module is responsible for configuring the ironic-inspector service in Keystone. The `password` parameter in this class is passed to Keystone as a `keystone_user_role`. This misconfiguration could be related to CWE-257 (`Weaknesses in cryptography APIs`), which could be used to bypass authentication when authenticating in Keystone.', 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
1153,"class glance::policy( $policies = {}, $policy_path = '/etc/glance/policy.json', ) { include ::glance::deps validate_hash($policies) openstacklib::policy::base { file_path => $policy_path, require => anchor['glance::config::begin'], notify => anchor['glance::config::end'], } create_resources('openstacklib::policy::base', $policies) oslo::policy { ['glance_api_config', 'glance_registry_config']: policy_file => $policy_path } }",1,1,puppet_code_here,CVE-2022-XXXX,"{'reason': 'Reasoning for why the misconfiguration is related to the CWE', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes/No'}"
1154,"file { '/tmp/dansfile': ensure => present }-> file_line { 'dans_line': line => 'dan is awesome', path => '/tmp/dansfile', }",0,1,"file_line { 'dans_line': line => 'dan is awesome', path => '/tmp/dansfile', }",CWE-117,"{'reason': 'This misconfiguration is related to CWE-117 because it allows a string to be written to a file, which allows arbitrary text to be written to a file. CWE-117 provides the reasoning behind how arbitrary text could be written to a file. The description from CWE-117 is: \\u0022A weakness that is related to the exposure of information to an unauthorized actor.\\u0022 \\n\\n This misconfiguration allows a string to be written to a file, which allows arbitrary text to be written to a file.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
1155,"class mediawiki::apache( $docroot, ) { include ::mediawiki include ::mediawiki::multiwiki include ::apache include ::apache::mod::alias include ::apache::mod::rewrite include ::apache::mod::proxy_fcgi include ::apache::mod::headers apache::site { 'default': ensure => absent, } apache::site { $mediawiki::wiki_name: ensure => present, content => template('mediawiki/mediawiki-apache-site.erb'), require => [ class['::apache::mod::alias'], class['::apache::mod::rewrite'], class['::apache::mod::proxy_fcgi'], ], } apache::site { ""php5-${mediawiki::wiki_name}"": ensure => present, content => template('mediawiki/mediawiki-php5-site.erb'), require => [ class['::apache::mod::alias'], class['::apache::mod::rewrite'], ], } file { ""${docroot}/favicon.ico"": ensure => file, require => package['apache2'], source => 'puppet:///modules/mediawiki/favicon.ico', } file { ""${docroot}/info.php"": ensure => file, require => package['apache2'], source => 'puppet:///modules/mediawiki/info.php', } file { ""${docroot}/robots.txt"": ensure => present, source => 'puppet:///modules/mediawiki/robots.txt', replace => false, } }",1,1,"apache::site {, apache::site { $mediawiki::wiki_name: ensure => present, content => template('mediawiki/mediawiki-apache-site.erb'), require => [ class['::apache::mod::alias'], class['::apache::mod::rewrite'], class['::apache::mod::proxy_fcgi'], ], }, apache::site { 'default': ensure => absent, }",CWE-22,"{'reason': 'The absence of a site is required in the absence of a site in the site, and the absence of a site is required in the absence of a site.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1156,"notice('modular: scaleio: cinder') $scaleio = hiera('scaleio') if $scaleio['metadata']['enabled'] { $all_nodes = hiera('nodes') $nodes = filter_nodes($all_nodes, 'name', $::hostname) if empty(filter_nodes($nodes, 'role', 'cinder')) { fail(""cinder role is not found on the host ${::hostname}"") } if $scaleio['provisioning_type'] and $scaleio['provisioning_type'] != '' { $provisioning_type = $scaleio['provisioning_type'] } else { $provisioning_type = undef } $gateway_ip = $scaleio['existing_cluster'] ? { true => $scaleio['gateway_ip'], default => hiera('management_vip') } $password = $scaleio['password'] if $scaleio['existing_cluster'] { $client_password = $password } else { $client_password_str = base64('encode', pw_hash($password, 'sha-512', 'scaleio.client.access')) $client_password = inline_template('sio-<%= @client_password_str[33..40] %>-<%= @client_password_str[41..48] %>') } class {'::scaleio_openstack::cinder': ensure => present, gateway_user => $::gateway_user, gateway_password => $client_password, gateway_ip => $gateway_ip, gateway_port => $::gateway_port, protection_domains => $scaleio['protection_domain'], storage_pools => $::storage_pools, provisioning_type => $provisioning_type, } }",1,1,"client_password_str = base64('encode', pw_hash($password,'sha-512','scaleio.client.access')), password = $scaleio['password'] if $scaleio['existing_cluster']",CWE-259,"{'reason': 'Client passwords should be kept private and should never be placed in a publicly accessible repository. This could pose a security risk. CWE-259 - Weaknesses in the Cryptographic Module', 'related_cwe': 'CWE-259', 'is_misconfiguration_related': 'Yes'}"
1157,"class cdh::hadoop::mount( $mount_point = '/mnt/hdfs', $read_only = true, ) { class['cdh::hadoop'] -> class['cdh::hadoop::mount'] package { 'hadoop-hdfs-fuse': ensure => 'installed', } $device = $::cdh::hadoop::ha_enabled ? { true => ""hadoop-fuse-dfs default => ""hadoop-fuse-dfs } $options = $read_only ? { true => 'allow_other,usetrash,ro', default => 'allow_other,usetrash,rw', } exec { 'mkdir_hdfs_mount_point': command => ""/bin/mkdir -p ${mount_point}"", unless => ""/bin/ls $(/usr/bin/dirname ${mount_point}) 2> /dev/null | grep -q $(/usr/bin/basename ${mount_point})"", } mount { 'hdfs-fuse': ensure => 'mounted', device => $device, name => $mount_point, fstype => 'fuse', options => $options, dump => '0', pass => '0', remounts => false, require => [package['hadoop-hdfs-fuse'], exec['mkdir_hdfs_mount_point']], } }",1,1,"file{'/etc/crontab':, file{'/etc/gai.conf':, file{'/etc/host.conf':, file{'/etc/hosts':, file{'/etc/nsswitch.conf':, file{'/etc/ntp.conf':, file{'/etc/protocols':, file{'/etc/resolv.conf':, file{'/etc/securetty':, file{'/etc/services':",CWE-276,"{'reason': 'The issue relates to the use of a mount point that can be accessed by any user without authentication, allowing them to execute commands as root on any machine in the cluster. This is a critical issue that exposes the cluster to a range of attacks, such as injecting malicious files into the Hadoop filesystem and accessing sensitive data. The mount point should be configured to allow access only to authorized users, or removed entirely if it is not required.', 'related_cwe': 'CWE-276', 'is_misconfiguration_related': 'Yes'}"
1158,"class dirs::builds::slave { include dirs::builds case $::operatingsystem { windows: { file { ""c:/builds/moz2_slave"": ensure => directory; } } default: { include users::builder file { ""/builds/slave"" : ensure => directory, owner => ""$users::builder::username"", group => ""$users::builder::group"", mode => 0755; } } } }",0,1,"class dirs::builds::slave, file { \, file { \\, group => \, group => \\\, include dirs::builds, include users::builder, mode => 0755, owner => \$users::builder::username","CWE-274, CWE-275, CWE-278, CWE-279, CWE-280, CWE-281, CWE-282, CWE-283, CWE-284, CWE-285","{'reason': 'In the misconfiguration block, the file resource has a path of \\. As the value is the raw path value, the backslash escapes the forward slash. This leads to a raw string in the code, as backslashes are not interpreted as a path delimiter. Therefore, this resource is not a valid path for Windows systems. The backslash needs to be escaped, as well as the forward slash, to match the raw string in the resource. However, if the forward slash was escaped, the code would run on both Windows and Unix-based systems. The correct way of doing this would be to include a condition to only apply this resource on Windows machines, which would properly use the escaped backslash.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1159,"define tripleo::haproxy::endpoint ( $internal_ip, $service_port, $ip_addresses, $server_names, $member_options, $public_virtual_ip = undef, $mode = undef, $haproxy_listen_bind_param = undef, $listen_options = { 'option' => [], }, $public_ssl_port = undef, $public_certificate = undef, $internal_certificate = undef, ) { if $public_virtual_ip { if $public_certificate { $public_bind_opts = list_to_hash(suffix(any2array($public_virtual_ip), "":${public_ssl_port}""), union($haproxy_listen_bind_param, ['ssl', 'crt', $public_certificate])) } else { $public_bind_opts = list_to_hash(suffix(any2array($public_virtual_ip), "":${service_port}""), $haproxy_listen_bind_param) } } else { $public_bind_opts = {} } if $internal_certificate { $internal_bind_opts = list_to_hash(suffix(any2array($internal_ip), "":${service_port}""), union($haproxy_listen_bind_param, ['ssl', 'crt', $public_certificate])) } else { $internal_bind_opts = list_to_hash(suffix(any2array($internal_ip), "":${service_port}""), $haproxy_listen_bind_param) } $bind_opts = merge($internal_bind_opts, $public_bind_opts) haproxy::listen { ""${name}"": bind => $bind_opts, collect_exported => false, mode => $mode, options => $listen_options, } haproxy::balancermember { ""${name}"": listening_service => $name, ports => $service_port, ipaddresses => $ip_addresses, server_names => $server_names, options => $member_options, } if hiera('manage_firewall', true) { include ::tripleo::firewall $firewall_rules = { ""100 ${name}_haproxy"" => { 'dport' => $service_port, }, ""100 ${name}_haproxy_ssl"" => { 'dport' => $public_ssl_port, }, } create_resources('tripleo::firewall::rule', $firewall_rules) } }",1,1,"create_resources('tripleo::firewall::rule', $firewall_rules)\\\\n    \\\\\\, haproxy::listen {\n    \, if $internal_certificate{if $internal_certificate{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, if $internal_certificate{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    \\\\\\\\\\\\, if $internal_certificate{\\\\\\\\\\\\n    \\\\\, if $public_virtual_ip{\\\\n    \\, tripleo::firewall::rule{\\\\\\\\n    \\\\\\, tripleo::firewall::rule{\\\\n    \\, tripleo::firewall::rule{\\n    \\","CWE-502: Deserialization of Untrusted Data, CWE-732: Incorrect Permission Assignment for Critical Resource","{'reason': 'A script can be written in such a way that if a file from an untrusted source is deserialized, it could cause an issue. In this case, the untrusted data comes from the input of a firewall rule for an HAProxy instance, but it also uses data from a template. When a rule is executed, the template gets merged and it could be deserialized by an untrusted data. The firewall rule could be vulnerable to a deserialization issue if an attacker could gain access to the Puppet source code.', 'related_cwe': 'CWE-502: Deserialization of Untrusted Data, CWE-732: Incorrect Permission Assignment for Critical Resource', 'is_misconfiguration_related': 'Yes'}"
1160,"class selfserve_agent::services { include ::config include packages::mozilla::supervisor include selfserve_agent::settings include nrpe::settings file { ""${selfserve_agent::settings::root}/selfserve-agent.ini"": content => template(""selfserve_agent/selfserve-agent.ini.erb""), require => python::virtualenv[""${selfserve_agent::settings::root}""], mode => 600, owner => $::config::builder_username, group => $::config::builder_group, show_diff => false; } supervisord::supervise { ""selfserve-agent"": command => ""${selfserve_agent::settings::root}/bin/selfserve-agent --config-file ${selfserve_agent::settings::root}/selfserve-agent.ini --wait -v"", user => $::config::builder_username, require => [file[""${selfserve_agent::settings::root}/selfserve-agent.ini""], python::virtualenv[""${selfserve_agent::settings::root}""]], extra_config => template(""${module_name}/extra_config.erb""); } exec { ""restart-selfserve-agent"": command => ""/usr/bin/supervisorctl restart selfserve-agent"", refreshonly => true, subscribe => python::virtualenv[""${selfserve_agent::settings::root}""]; } nrpe::check { 'check_selfserve-agent': cfg => ""${nrpe::settings::plugins_dir}/check_procs -c 1:1 -a bin/selfserve-agent""; } }",1,1,"exec {\\\\\\\\n      \\\\\\\\\\, exec {\\n      \\\, file {\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\, file {\\\\\\\\n        \\\\, file {\\\\n       \\\\, nrpe::check {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nnrpe::check {\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n        \\\\\\\\\\\\\\\\\\\\\\\\\\\\, nrpe::check {\\n        \\, supervisord::supervise {\\n      \\, supervisord::supervise {\n      \",CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': 'The issue in the script is related to a path traversal vulnerability, CWE-22. The file resource defines a path outside of the $::config::builder_directory path, so a directory traversal attack may be able to overwrite files outside of the path in $::config::builder_directory, such as /etc/passwd. This vulnerability can lead to a complete takeover of the server if the attacker can gain access to files with root permissions, such as /etc/shadow or the sshd_config file.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1161,"class mediawiki::jobrunner( $enable, $dir, $verbose, $groups, ) { require ::mediawiki $ensure = $enable ? { false => 'stopped', default => 'running', } $restart = $enable ? { false => false, default => true, } git::clone { 'mediawiki/services/jobrunner': directory => $dir, before => service['jobrunner'], } file { '/etc/default/jobrunner': content => template('mediawiki/jobrunner.default.erb'), owner => 'root', group => 'root', mode => '0444', notify => [ service['jobrunner'], service['jobchron'], ], } file { '/etc/init/jobrunner.conf': content => template('mediawiki/jobrunner.conf.erb'), owner => 'root', group => 'root', mode => '0444', notify => service['jobrunner'], } file { '/etc/init/jobchron.conf': content => template('mediawiki/jobchron.conf.erb'), owner => 'root', group => 'root', mode => '0444', notify => service['jobchron'], } file { '/etc/jobrunner.ini': ensure => absent, } file { '/etc/jobrunner.json': content => template('mediawiki/jobrunner.json.erb'), owner => 'root', group => 'root', mode => '0444', notify => [ service['jobrunner'], service['jobchron'], ] } file { '/etc/logrotate.d/mediawiki_jobrunner': source => 'puppet:///modules/mediawiki/logrotate.d_mediawiki_jobrunner', owner => 'root', group => 'root', mode => '0444', } file { '/etc/logrotate.d/mediawiki_jobchron': source => 'puppet:///modules/mediawiki/logrotate.d_mediawiki_jobchron', owner => 'root', group => 'root', mode => '0444', } service::gitupdate { 'jobrunner': dir => $dir, restart => $restart, } service::gitupdate { 'jobchron': dir => $dir, pull => false, restart => $restart, } service { 'jobrunner': ensure => $ensure, enable => $enable, provider => 'upstart', require => mediawiki::wiki[$::mediawiki::wiki_name], } service { 'jobchron': ensure => $ensure, enable => $enable, provider => 'upstart', require => mediawiki::wiki[$::mediawiki::wiki_name], } }",1,1,"file { '/etc/jobrunner.json':, mediawiki::wiki[$::mediawiki::wiki_name],","CWE-250, CWE-269","{'reason': ""There are some issues in the script that could cause security vulnerabilities, the first one is that it's not a good practice to allow non-root users to run the puppet service, which could be used to execute commands in a non-puppet context. Another issue is that it's possible to modify the configuration file (/etc/jobrunner.json) without triggering the restart of the service (service['jobchron']). This could be done, for example, by creating a custom module that modifies the config file and does not depend on the jobchron service."", 'related_cwe': 'CWE-250, CWE-269', 'is_misconfiguration_related': 'Yes'}"
1162,"class fw { case $operatingsystem { centos, ubuntu: { } default: { fail(""'fw' is not supported on this platform"") } } include fw::pre include fw::post }",0,1,"class fw { case $operatingsystem { centos, ubuntu: { } default: { fail('\\\\, class fw {\n\tcase $operatingsystem {\n\t\tcentos, ubuntu: {\n\t\t}\n\t\ndefault: {\n\t\tfail('\, fw::post }fw::post }\\\\n}\\\\n, fw::pre include }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, fw::pre include\\n\\t}\\n\\t}\\n\\t} default: { fail('\\\\, include fw::post }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, include fw::post }\\\\\\\\n}\\\\\\\\n, include fw::pre }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n, include fw::pre }\\\\\\\\n",CWE-22,"{'reason': 'The failure action of the default case in this snippet would occur if the platform was not supported. The failure action here could easily be replaced with an informative warning message. This type of action is most commonly used in a default case to provide default actions for cases where no other explicit action exists for an error. It is important to note that this action is only used within the class declaration. Since there is no explicit action being taken by the default case, it could be concluded that the misconfiguration is not related to this vulnerability.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'No'}"
1163,"class heat::keystone::domain ( $domain_name = 'heat', $domain_admin = 'heat_admin', $domain_admin_email = 'heat_admin@localhost', $domain_password = 'changeme', $manage_domain = true, $manage_user = true, $manage_role = true, ) { include ::heat::deps include ::heat::params if $manage_domain { ensure_resource('keystone_domain', $domain_name, { 'ensure' => 'present', 'enabled' => true, }) } if $manage_user { ensure_resource('keystone_user', ""${domain_admin}::${domain_name}"", { 'ensure' => 'present', 'enabled' => true, 'email' => $domain_admin_email, 'password' => $domain_password, }) } if $manage_role { ensure_resource('keystone_user_role', ""${domain_admin}::${domain_name}@::${domain_name}"", { 'roles' => ['admin'], }) } heat_config { 'default/stack_domain_admin': value => $domain_admin; 'default/stack_domain_admin_password': value => $domain_password, secret => true; 'default/stack_user_domain_name': value => $domain_name; } }",1,1,"domain_admin: value => $domain_admin;, domain_admin_password: value => $domain_password, secret => true;, stack_domain_admin: value => $domain_admin;, stack_domain_admin_password: value => $domain_password, secret => true;, stack_user_domain_name: value => $domain_name;",CWE-522,"{'reason': 'This misconfiguration could allow someone to discover domain and its admin credentials, since they are passed through `heat_config`, which is not intended for admin passwords. The same credentials are used for admin and domain, which is confusing', 'related_cwe': 'CWE-522', 'is_misconfiguration_related': 'Yes'}"
1164,notice('modular: bigswitch compute-config') include bcf::params if $bcf::params::openstack::bcf_mode == 'p-only' { include bcf::p_only::compute } else { include bcf::p_v::compute },1,1,"bcf::p_only::compute, bcf::p_v::compute, bcf::params::openstack::bcf_mode, include bcf::p_only::compute, include bcf::p_v::compute, notice('modular: bigswitch compute-config') include bcf::params if $bcf::params::openstack::bcf_mode == 'p-only' { include bcf::p_only::compute } else { include bcf::p_v::compute }",CWE-94,"{'reason': 'CWE-94', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1165,"class nrpe::check::puppetmaster_certs { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppetmaster_certs': cfg => ""$plugins_dir/check_puppetmaster_certs""; } nrpe::plugin { 'check_puppetmaster_certs': ; } }",1,1,"include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppetmaster_certs': cfg =>, nrpe::check { 'check_puppetmaster_certs': cfg =>, nrpe::plugin { 'check_puppetmaster_certs': ; }",CWE-772,"{'reason': 'A puppetmaster is not expected to have a certificate from itself', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1166,class { '::osnailyfacter::fuel_pkgs::fuel_pkgs' :},1,1,class { '::osnailyfacter::fuel_pkgs::fuel_pkgs' :},CWE-200,"{'reason': 'The provided configuration is missing the name of the module that it depends on.\\nThe module name should be provided within the configuration.\\n\\n\\n\\n', 'related_cwe': 'CWE-200, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1167,"class lma_logging_analytics::elasticsearch ( $listen_address, $data_dir, $node_name, $instance_name, $cluster_name, $nodes = [], $logs_dir = '/var/log/elasticsearch', $minimum_master_nodes = 1, $recover_after_time = 5, $recover_after_nodes = 1, $is_master = true, $is_data = true, $heap_size = 1, $listen_port = 9200, $version = 'latest', ){ validate_bool($is_master) validate_bool($is_data) validate_integer($minimum_master_nodes) validate_integer($recover_after_time) validate_integer($recover_after_nodes) validate_integer($heap_size) validate_integer($listen_port) file { $data_dir: ensure => 'directory', } class { '::elasticsearch': version => $version, datadir => ""${data_dir}/elasticsearch_data"", init_defaults => { 'max_locked_memory' => 'unlimited', 'es_heap_size' => ""${heap_size}g"", 'log_dir' => $logs_dir, }, require => file[$data_dir], } $config = { 'threadpool.bulk.queue_size' => '1000', 'bootstrap.mlockall' => true, 'http.cors.allow-origin' => '/.*/', 'http.cors.enabled' => true, 'cluster.name' => $cluster_name, 'path.logs' => $logs_dir, 'node.name' => $node_name, 'node.master' => $is_master, 'node.data' => $is_data, 'discovery.zen.ping.multicast' => {'enabled' => false}, 'discovery.zen.ping.unicast.hosts' => $nodes, 'discovery.zen.minimum_master_nodes' => $minimum_master_nodes, 'gateway.recover_after_time' => ""${recover_after_time}m"", 'gateway.recover_after_nodes' => $recover_after_nodes, 'gateway.expected_nodes' => size($nodes), 'http.bind_host' => $listen_address, 'transport.bind_host' => $listen_address, 'transport.publish_host' => $listen_address, } ::elasticsearch::instance { $instance_name: logging_file => 'puppet:///modules/lma_logging_analytics/elasticsearch_logging.yaml', config => $config, } file { ""/etc/logrotate.d/elasticsearch-${instance_name}.conf"": ensure => present, owner => 'root', group => 'root', mode => '0644', content => template('lma_logging_analytics/elasticsearch_logrotate.conf.erb'), } }",0,1,"bootstrap.mlockall => true,, class { '::elasticsearch': version => $version,, gateway.expected_nodes => size($nodes),, gateway.recover_after_nodes => $recover_after_nodes,, gateway.recover_after_time => ${recover_after_time}m,, http.bind_host => $listen_address,, http.cors.allow-origin => '/.*/',, http.cors.enabled => true,, transport.bind_host => $listen_address,, transport.publish_host => $listen_address,","CWE-326, CWE-327","{'reason': 'Misconfiguration related to the CWE.', 'related_cwe': 'CWE-326, CWE-327', 'is_misconfiguration_related': 'Yes'}"
1168,"class designate::sink ( $package_ensure = present, $sink_package_name = $::designate::params::sink_package_name, $enabled = true, $service_ensure = 'running', $enabled_notification_handlers = undef, ) inherits designate { designate::generic_service { 'sink': enabled => $enabled, manage_service => $service_ensure, ensure_package => $package_ensure, package_name => $sink_package_name, service_name => $::designate::params::sink_service_name, } if $enabled_notification_handlers { designate_config { 'service:sink/enabled_notification_handlers': value => join($enabled_notification_handlers,',') } } else { designate_config { 'service:sink/enabled_notification_handlers': ensure => absent } } }",0,1,"designate::generic_service { \'sink\':\n\nenabled => $enabled,\n\nmanage_service => $service_ensure,\n\nensure_package => $package_ensure,\n\npackage_name => $sink_package_name,\n\nservice_name => $::designate::params::sink_service_name,\n}, designate_config { \\'service:sink/enabled_notification_handlers\\':\\n\\nvalue => join($enabled_notification_handlers,\\',\\'),\\n\\n}, designate_config { \\\\'service:sink/enabled_notification_handlers\\\\':\\\\n\\\\nensure => absent,\\\\n\\\\n}, else {, if $enabled_notification_handlers {, }",CWE-937,"{'reason': 'The provided script is used to configure the notification handlers that sink can notify. The `enabled_notification_handlers` Puppet variable determines which handlers sink can notify. If the variable is set to `undef`, sink cannot notify any handlers.', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'Yes'}"
1169,"notify {'modular: fuel-plugin-manila/populate_hiera': } $manila = hiera_hash('manila', false) $fpg_manila = hiera_hash('fuel-plugin-manila', {}) $file = '/etc/hiera/plugins/fuel-plugin-manila.yaml' $new_password = generate(""/bin/bash"", ""-c"", ""/bin/date +%s | sha256sum | base64 | head -c 32 ; echo -n"") $db_password = generate(""/bin/bash"", ""-c"", ""sleep 1; /bin/date +%s | sha256sum | base64 | head -c 32 ; echo -n"") $image_name = 'manila-service-image' $service_image = $fpg_manila['fuel-plugin-manila_image'] $img_data = { container_format => 'bare', disk_format => 'qcow2', glance_properties => '', img_name => $image_name, img_path => ""/tmp/${service_image}"", min_ram => 256, os_name => 'ubuntu', public => 'true', } if ! $manila { populate_hiera($file, 'user_password', $new_password) populate_hiera($file, 'db_password', $db_password) populate_hiera($file, 'service_vm_image', $img_data) }",1,1,generate(,CWE-798,"{'reason': 'The use of the generate() function to randomly generate passwords, and then storing it in a YAML file on the Puppet master, is related to CWE-798. Specifically, this is related to the use of default values for passwords, and the use of a random value for the password. While it is true that the passwords are randomly generated using a seed based on the date, the value is stored in plaintext in the YAML file.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1170,"class swift::proxy::cache( $memcache_servers = ['127.0.0.1:11211'] ) { include ::swift::deps if grep(any2array($memcache_servers), '^127\.0\.0\.1') { class['memcached'] -> class['swift::proxy::cache'] } concat::fragment { 'swift_cache': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/cache.conf.erb'), order => '50', } }",1,1,"class['memcached'] -> class['swift::proxy::cache'], concat::fragment {'swift_cache': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/cache.conf.erb'), order => '50', }, grep(any2array(\$memcache_servers), '^127\\.0\\.0\\.1'), if grep(any2array(\\$memcache_servers), '^127\\.0\\.0\\.1') { class['memcached'] -> class['swift::proxy::cache'] }, if grep(any2array(\\\\$memcache_servers), '^127\\\\.0\\\\.0\\\\.1') { class['memcached'] -> class['swift::proxy::cache'] }, if grep(any2array(\\\\\\\\\\\\$memcache_servers), '^127\\\\\\\\\\\\.0\\\\\\\\\\\\.0\\\\\\\\\\\\.1') { class['memcached'] -> class['swift::proxy::cache'] }, include ::swift::deps","CWE-117, CWE-20","{'reason': 'The issue is caused by the inclusion of memcache servers with a private IP address in the list of IPs provided to the swift class. This may lead to an attacker being able to intercept memcache traffic. Also, the inclusion of a private IP address is an indicator that there might be more information about the system that an attacker could use to further their attacks.', 'related_cwe': 'CWE-117, CWE-20', 'is_misconfiguration_related': 'Yes'}"
1171,class { '::osnailyfacter::fuel_pkgs::setup_repositories' :},1,0,nan,nan,"{'reason': 'The script does not utilize a security package, and does not enable it to do so.', 'related_cwe': 'CWE-19 (Authentication Bypass by System Call Vulnerability), CWE-22 (OS Command Injection)', 'is_misconfiguration_related': 'Yes'}"
1172,"class packages::pywin32 { include packages::mozilla::python27 exec { ""pywin32"": require => class['packages::mozilla::python27'], command => 'c:\mozilla-build\python27\scripts\easy_install.exe http://puppetagain.pub.build.mozilla.org/data/repos/exes/pywin32-218.win32-py2.7.exe', creates => 'c:\mozilla-build\\pyhton27\\lib\\site-packages\\pywin32-218-py2.7-win32.egg'; } }",0,1,"class['packages::mozilla::python27'], command => 'c:\\, command => 'c:\\\\mozilla-build\\\\python27\\\\scripts\\\\easy_install.exe', creates => 'c:\\\\\\\\\\\\\\\\mozilla-build\\\\\\\\\\\\\\\\\\\\\\\\python27\\\\\\\\\\\\\\\\lib\\\\\\\\\\\\\\\\site-packages\\\\\\\\\\\\\\\\pywin32-218-py2.7-win32.egg', creates => 'c:\\\\\\\\mozilla-build\\\\\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\pywin32-218-py2.7-win32.egg', exec { \, require => class['packages::mozilla::python27']",CWE-22: Improper Limitation of a Pathname to a Restricted Directory (,"{'reason': 'All the forward slashes (\\\\) are in different directories which makes it harder to guess. However, there are two problems:\\n1. If the path is a long enough that it is on two lines, then some text editors will change the \\\\ to /. Therefore, if you copy/paste the path from the editor, you could get a /. \\n2. The forward slashes have the backslash in them, which means if they are copied and pasted into a command line, the backslashes will become part of the directory path instead of being a special character, making it even easier to guess.\\n\\n', 'related_cwe': ""CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('\\\\\\\\'s in long paths and not having a / before a directory)"", 'is_misconfiguration_related': 'Yes'}"
1173,"class lma_collector::collectd::python_base { include collectd::params include lma_collector::params $modulepath = $lma_collector::params::python_module_path class { 'collectd::plugin::python': modulepaths => [$modulepath], modules => {}, } file { 'base.script': ensure => 'present', path => ""${modulepath}/collectd_base.py"", owner => 'root', group => $collectd::params::root_group, mode => '0640', source => 'puppet:///modules/lma_collector/collectd/collectd_base.py', require => class['collectd::plugin::python'], notify => service['collectd'], } }",1,1,"class { 'collectd::plugin::python':\\\\n modulepaths => [$modulepath],\\\\n modules => {},\\\\n }, file { 'base.script':\\n ensure => 'present',\\n path => \\, file { 'base.script':\n ensure => 'present',\n path => \, include collectd::params, include lma_collector::params, service['collectd']",nan,"{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1174,"class talos { include talos::settings include httpd include packages::xvfb include users::builder include dirs::builds::slave include packages::nodejs case $::operatingsystem { ubuntu: { include packages::llvm include packages::sox include packages::libxcb1 include packages::ia32libs include packages::gstreamer include tweaks::cron include tweaks::resolvconf include packages::system_git kernelmodule { ""snd_aloop"": packages => [""libasound2""]; ""v4l2loopback"": packages => [""v4l2loopback-dkms""]; } case $::hardwaremodel { ""x86_64"": { include packages::cpu-checker include packages::qemu-kvm include packages::bridge-utils } } } darwin: { case $::macosx_productversion_major { 10.7: { include packages::javadeveloper_for_os_x } 10.8, 10.10 : { include packages::javadeveloper_for_os_x include packages::xcode } } } } case $::operatingsystem { darwin, centos, ubuntu: { file { [""/builds/slave/talos-data"", $talos::settings::apachedocumentroot]: ensure => directory, owner => ""$users::builder::username"", group => ""$users::builder::group"", mode => 0755; } file { ""/builds/talos-slave"": ensure => absent, force => true; } httpd::config { ""talos.conf"": content => template(""talos/talos-httpd.conf.erb"") ; } } } }",1,1,"\, file { /builds/talos-slave: \\\\\\\\\\\\\n, file { [/builds/slave/talos-data\\\\\\\\\\\\\\n, file { \\\\\\[/builds/slave/talos-data\\\\\\\\, $talos::settings::apachedocumentroot\\\\\\\\]:\\\\\\\n, httpd::config { \\\\\\\\\\\\\, include packages::bridge-utils\\\\n, include packages::cpu-checker\\n, include packages::qemu-kvm\\\\n, include tweaks::cron\n, include tweaks::resolvconf\\n",CWE-22,"{'reason': ""CWE-22 is related to the misconfiguration because of the absence of proper user management in the code. The code includes a user named 'talos' with password 'talos' which is clearly insecure and violates the basic principle of least privilege. This is a very common mistake and it is essential to properly manage users and their privileges to ensure secure and efficient software development."", 'related_cwe': 'CWE-22, CWE-266', 'is_misconfiguration_related': 'Yes'}"
1175,notice('modular: contrail/contrail-webui') include ::contrail class { '::contrail::contrail_webui': },0,1,"class { '::contrail::contrail_webui': }, include ::contrail, include ::contrail::contrail_webui, notice('modular: contrail/contrail-webui') include ::contrail",CWE-93,"{'reason': 'The script contains a notice for ::contrail::contrail_webui, which indicates that a module of that name is included. The script also contains an include declaration for ::contrail::contrail_webui, which further indicates that the module is included. This indicates that a module is included in the script that does not require a notice to be included, making the notice superfluous. Furthermore, the inclusion of the ::contrail module also includes the ::contrail::contrail_webui module. This means that the ::contrail_webui module is included in the script twice. This is a potential cause for confusion for those who are attempting to debug an issue with the script. The inclusion of the ::contrail module is also unnecessary', 'related_cwe': 'CWE-93', 'is_misconfiguration_related': 'Yes'}"
1176,"class zaqar::db::mysql( $password, $dbname = 'zaqar', $user = 'zaqar', $host = '127.0.0.1', $charset = 'utf8', $collate = 'utf8_general_ci', $allowed_hosts = undef ) { validate_string($password) ::openstacklib::db::mysql { 'zaqar': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, } ::openstacklib::db::mysql['zaqar'] ~> exec<| title == 'zaqar-manage db_sync' |> }",1,1,"::openstacklib::db::mysql { 'zaqar': user => $user, password_hash => mysql_password($password), dbname => $dbname, host => $host, charset => $charset, collate => $collate, allowed_hosts => $allowed_hosts, }, ::openstacklib::db::mysql['zaqar'] ~> exec<| title == 'zaqar-manage db_sync' |>, exec<| title == 'zaqar-manage db_sync' |>, validate_string($password)",CWE-295,"{'reason': 'The script allows a user to specify the password hash as a string argument which is not encrypted before being stored in a puppet state. By default, puppet encrypts all sensitive data for security. In this case, however, because the user is given the option to choose to store the password hash directly, the script allows for a misconfiguration which can compromise security. This is related to CWE-295 (The script does not check that the user has given a properly encrypted password hash).', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1177,"class manila::quota ( $quota_shares = 10, $quota_snapshots = 10, $quota_gigabytes = 1000, $quota_driver = 'manila.quota.dbquotadriver', $quota_snapshot_gigabytes = 1000, $quota_share_networks = 10, $reservation_expire = 86400, $until_refresh = 0, $max_age = 0, ) { manila_config { 'default/quota_shares': value => $quota_shares; 'default/quota_snapshots': value => $quota_snapshots; 'default/quota_gigabytes': value => $quota_gigabytes; 'default/quota_driver': value => $quota_driver; 'default/quota_snapshot_gigabytes': value => $quota_snapshot_gigabytes; 'default/quota_share_networks': value => $quota_share_networks; 'default/reservation_expire': value => $reservation_expire; 'default/until_refresh': value => $until_refresh; 'default/max_age': value => $max_age; } }",0,1,"manila_config { \, max_age = 0, \, max_age = 0, \\, max_age = 0, \\\\\\, max_age = 0, \\\\\\\\\\\\\\, max_agereservation_expire = 86400, \\, reservation_expireuntil_refresh = 0, \\\, until_refresh = 0, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\","CWE-306, CWE-732","{'reason': 'CWE-732, CWE-732.2', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'No'}"
1178,"define git::install( $directory, $commit, $remote = undef, $owner = 'root', $group = 'root', $preserve_commit = true, ) { require ::git git::clone { $title: directory => $directory, owner => $owner, group => $group, remote => $remote, notify => exec[""git_install_checkout_${title}""], } exec { ""git_install_checkout_${title}"": command => ""/usr/bin/git remote update && /usr/bin/git checkout ${commit}"", cwd => $directory, user => $owner, refreshonly => true } if $preserve_commit { exec { ""git_install_reset_${title}"": command => '/usr/bin/git clean -d --force & /usr/bin/git checkout -- .', cwd => $directory, user => $owner, unless => ""/usr/bin/git diff head..${commit} --exit-code"", notify => exec[""git_install_checkout_${title}""], require => git::clone[$title], } } }",0,1,"command => \, exec { \, git::clone { $title: directory => $directory, owner => $owner, group => $group, remote => $remote, notify => exec[\, if $preserve_commit { \\, notify => exec[\\, require => git::clone[$title], \\, unless => \, unless => \\, user => $owner, \\, } \\",CWE-798,"{'reason': ""Because Git is used to download and install software, it's important that the Git server being used for downloading code is trusted and secure. If the remote repository is compromised, attackers could replace the code that is downloaded with malicious code. By using an untrusted Git repository, Puppet may end up downloading a malicious version of code, resulting in unintended consequences for the system. Additionally, if Git is used to checkout an arbitrary commit, this allows for an attacker to choose which commit is run on the system. This may not be an issue if the Git server is trusted, but if it's compromised or not under proper control, attackers could take advantage of this functionality to run a malicious version of code on the system. The security vulnerability in this case is that"", 'related_cwe': 'CWE-798, CWE-264, CWE-319', 'is_misconfiguration_related': 'Yes'}"
1179,"class cinder::scheduler ( $scheduler_driver = $::os_service_default, $package_ensure = 'present', $enabled = true, $manage_service = true ) { include ::cinder::params validate_bool($manage_service) validate_bool($enabled) cinder_config<||> ~> service['cinder-scheduler'] cinder_api_paste_ini<||> ~> service['cinder-scheduler'] exec<| title == 'cinder-manage db_sync' |> ~> service['cinder-scheduler'] cinder_config { 'default/scheduler_driver': value => $scheduler_driver; } if $::cinder::params::scheduler_package { package['cinder-scheduler'] -> service['cinder-scheduler'] package { 'cinder-scheduler': ensure => $package_ensure, name => $::cinder::params::scheduler_package, tag => ['openstack', 'cinder-package'], } } if $manage_service { if $enabled { $ensure = 'running' } else { $ensure = 'stopped' } } service { 'cinder-scheduler': ensure => $ensure, name => $::cinder::params::scheduler_service, enable => $enabled, hasstatus => true, require => package['cinder'], tag => 'cinder-service', } }",1,1,"cinder_api_paste_ini<||> ~> service['cinder-scheduler'], cinder_config<||> ~> service['cinder-scheduler'], exec<| title == 'cinder-manage db_sync' |> ~> service['cinder-scheduler'], service['cinder-scheduler'], service['cinder-scheduler']\n\n",CWE-25: Missing required field in struct definition,"{'reason': ""The relationship between the CWE and misconfiguration is based on the fact that the cinder-scheduler service is missing the following configuration values: cinder_api_paste_ini<||> ~> service['cinder-scheduler'], cinder_config<||> ~> service['cinder-scheduler'], exec<| title == 'cinder-manage db_sync' |> ~> service['cinder-scheduler'], service['cinder-scheduler'], service['cinder-scheduler']\\n\\nThe cinder-scheduler service requires these configuration values to be present for proper operation. Without them, the cinder-scheduler service will not be able to perform its tasks correctly."", 'related_cwe': 'CWE-25: Missing required field in struct definition', 'is_misconfiguration_related': 'Yes'}"
1180,"define monasca::checks::instances::memory ( $dimensions = undef, ) { $conf_dir = $::monasca::agent::conf_dir concat::fragment { ""${title}_memory_instance"": target => ""${conf_dir}/memory.yaml"", content => template('monasca/checks/memory.erb'), order => '1', } }",1,1,"$conf_dir = $::monasca::agent::conf_dir, concat::fragment { \, content =>, monasca::checks::instances::memory ( $dimensions = undef, ), order =>, target =>, }",CWE-1165,"{'reason': 'The reason', 'related_cwe': 'CWE-1165', 'is_misconfiguration_related': 'Yes'}"
1181,"class packages::pyyaml { case $::operatingsystem { centos: { package { ""pyyaml"": ensure => ""3.09-5.el6""; } } ubuntu: { package { ""python-yaml"": ensure => present; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"ensure => \\, ensure => \\\, ensure => present, fail(\, fail(\\, package { \, package { \\\\\, pyyaml","CWE-19, CWE-22","{'reason': 'CWE-19', 'related_cwe': 'CWE-19', 'is_misconfiguration_related': 'Yes'}"
1182,"class midonet::analytics::services ( $analytics_package_name = 'midonet-analytics', $tools_package_name = 'midonet-tools', ) { include midonet::repository include ::midonet_openstack::profile::midojava::midojava package { $tools_package_name: ensure => present, name => $tools_package_name, require => class['midonet_openstack::profile::midojava::midojava'], } package { $analytics_package_name: ensure => present, name => $analytics_package_name, require => class['midonet_openstack::profile::midojava::midojava'], } service { $analytics_package_name: ensure => 'running', name => $analytics_package_name, enable => true, require => package[$analytics_package_name], } }",0,1,"class midonet::analytics::services ( $analytics_package_name ='midonet-analytics', $tools_package_name ='midonet-tools', ) {, include ::midonet_openstack::profile::midojava::midojava, include midonet::repository, midonet-openstack::profile::midojava::midojava, midonet::repository, package { $analytics_package_name: ensure => present, name => $analytics_package_name, require => class['midonet_openstack::profile::midojava::midojava'], }, package { $tools_package_name: ensure => present, name => $tools_package_name, require => class['midonet_openstack::profile::midojava::midojava'], }, service { $analytics_package_name: ensure => 'running', name => $analytics_package_name, enable => true, require => package[$analytics_package_name], }","CWE-250, CWE-532","{'reason': 'A new package midonet-tools is being added to the manifest. The package is not being required in the package resource. This means that the package is not being installed on the system.', 'related_cwe': 'CWE-532', 'is_misconfiguration_related': 'Yes'}"
1183,"class packages::mercurial { case $::operatingsystem { centos: { package { ""mercurial"": ensure => ""1.4-3.el6""; } } ubuntu: { package { [""mercurial"", ""mercurial-common""]: ensure => ""2.5.4-0mozilla1""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"case $::operatingsystem, ensure => \, ensure => \\\, ensure => \\\\\\\, fail(\, on $::operatingsystem\\n\}\n\n, package { \, package { \\, package { \\\\\, package { \\\\\\\\\\\\\\\\\\","CWE-312, CWE-697","{'reason': 'This is due to the fact that the Puppet script fails to properly escape special characters in string literals, which can lead to a command injection attack.', 'related_cwe': 'CWE-312, CWE-697', 'is_misconfiguration_related': 'Yes'}"
1184,"define manila::network::neutron_single_network ( $neutron_net_id, $neutron_subnet_id, ) { $neutron_single_plugin_name = 'manila.network.neutron.neutron_network_plugin.neutronsinglenetworkplugin' manila_config { ""${name}/network_api_class"": value => $neutron_single_plugin_name; ""${name}/neutron_net_id"": value => $neutron_net_id; ""${name}/neutron_subnet_id"": value => $neutron_subnet_id; } }",0,1,"\, define manila::network::neutron_single_network (\$,, define manila::network::neutron_single_network (\\$,, define manila::network::neutron_single_network (\\\\$,, define manila::network::neutron_single_network (\\\\\\\\\\\\$,, define manila::network::neutron_single_network (\\\\\\\\\\\\\\\\\\\\\\\\\\$,, define manila::network::neutron_single_networkmanila_config { \, manila_config { \\",CWE-295,"{'reason': 'The misconfiguration may lead to unintended use of the NEUTRON_NETWORK_PLUGIN_NAME variable and possible code injection attacks. It can also be related to missing the $neutron_net_id and $neutron_subnet_id.', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1185,"define l23network::l2::bridge ( $ensure = 'present', $use_ovs = $::l23network::use_ovs, $mtu = undef, $stp = undef, $bpdu_forward = true, $external_ids = { 'bridge-id' => $name }, $delay_while_up = undef, $vendor_specific = {}, $provider = undef, ) { include ::l23network::params if ! defined (l2_bridge[$name]) { if $provider { $config_provider = ""${provider}_${::l23_os}"" } else { $config_provider = undef } if $delay_while_up and ! is_numeric($delay_while_up) { fail(""delay for waiting after up bridge ${name} should be numeric, not an '${delay_while_up}'."") } if ! defined (l23_stored_config[$name]) { l23_stored_config { $name: } } l23_stored_config <| title == $name |> { ensure => $ensure, if_type => 'bridge', bridge_stp => $stp, bridge_ports => ['none'], vendor_specific => $vendor_specific, delay_while_up => $delay_while_up, datapath_type => $vendor_specific['datapath_type'], provider => $config_provider } l2_bridge {$name: ensure => $ensure, use_ovs => $use_ovs, external_ids => $external_ids, stp => $stp, vendor_specific => $vendor_specific, provider => $provider } anchor['l23network::init'] -> l23_stored_config[$name] -> l2_bridge[$name] } anchor['l23network::init'] -> k_mod<||> -> l2_bridge<||> if $::l23_os =~ /(?i:redhat|centos|oraclelinux)/ { if $delay_while_up { file {""${::l23network::params::interfaces_dir}/interface-up-script-${name}"": ensure => 'present', owner => 'root', mode => '0755', content => template('l23network/centos_post_up.erb'), } -> l23_stored_config <| title == $name |> } else { file {""${::l23network::params::interfaces_dir}/interface-up-script-${name}"": ensure => 'absent', } -> l23_stored_config <| title == $name |> } } }",0,1,"l23_stored_config <| title == $name |> { ensure => $ensure, if_type => 'bridge', bridge_stp => $stp, bridge_ports => ['none'], vendor_specific => $vendor_specific, delay_while_up => $delay_while_up, datapath_type => $vendor_specific['datapath_type'], provider => $config_provider }, l23_stored_config { $name: }, l2_bridge {$name: ensure => $ensure, use_ovs => $use_ovs, external_ids => $external_ids, stp => $stp, vendor_specific => $vendor_specific, provider => $provider }",CWE-248,"{'reason': ""The 'l23_stored_config' type ensures the desired state of the configuration of the L2 bridge (whether it's present or absent). It does not define or change the configuration in any way. The L2 bridge configuration is defined and changed by the 'l2_bridge' type. The misconfiguration is not related to CWE-248, which indicates the incorrect assignment of a pointer reference. The pointer reference is not assigned to the L2 bridge configuration defined in the 'l2_bridge' type. Therefore, this issue is not related to CWE-248."", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1186,"class toplevel::slave::releng inherits toplevel::slave { include dirs::builds::slave include buildslave include instance_metadata include clean::appstate include packages::mozilla::tooltool include packages::wget include packages::mozilla::py27_mercurial if ($::operatingsystem == windows) { include tweaks::disablejit include tweaks::memory_paging include tweaks::nouac include tweaks::ntfs_options include tweaks::process_priority include tweaks::pwrshell_options include tweaks::server_initialize include tweaks::shutdown_tracker include tweaks::windows_network_opt_netsh include tweaks::windows_network_opt_registry include packages::binscope include packages::nsis3_0b1 include packages::psutil include packages::pywin32 include packages::mapi_headers include fw::windows_exceptions include fw::windows_settings include hardware::ec2_config } case $::kernel { 'linux': { users::builder::extra_authorized_key { 'aws-ssh-key': ; } } } if ($::config::enable_mig_agent) { case $::operatingsystem { 'centos', 'redhat', 'ubuntu', 'darwin': { include mig::agent::checkin } } } }",1,1,"include packages::pywin32, include tweaks::disablejit, include tweaks::memory_paging, include tweaks::nouac, include tweaks::process_priority, include tweaks::pwrshell_options, include tweaks::server_initialize, include tweaks::shutdown_tracker, include tweaks::windows_network_opt_netsh, include tweaks::windows_network_opt_registry","CWE-119, CWE-22, CWE-829","{'reason': 'CWE-119: [https://cwe.mitre.org/data/definitions/119.html] - Improper Restriction of Usage of External Entity in a Middleware (CWE-118) - The vulnerability could be caused by the improper restrictions of the usage of external entities, which may lead to improper usage and execution of arbitrary code, or may allow remote attackers to inject arbitrary entities into the server. \\n\\nCWE-119: [https://cwe.mitre.org/data/definitions/119.html] - Improper Restriction of Operation within Authority Domain (CWE-118) - The vulnerability could be caused by improper restrictions of the operation within the authority domain, which may allow remote attackers to execute malicious code or modify sensitive data', 'related_cwe': 'CWE-119, CWE-829', 'is_misconfiguration_related': 'Yes'}"
1187,"class contrail::controller::aggregate { if $contrail::global_dpdk_enabled { $nova_hash = hiera_hash('nova', {}) $keystone_tenant = pick($nova_hash['tenant'], 'services') $keystone_user = pick($nova_hash['user'], 'nova') $service_endpoint = hiera('service_endpoint') $region = hiera('region', 'regionone') exec { provider => 'shell', path => '/sbin:/usr/sbin:/bin:/usr/bin', tries => 10, try_sleep => 2, environment => [ ""os_tenant_name=${keystone_tenant}"", ""os_username=${keystone_user}"", ""os_password=${nova_hash['user_password']}"", ""os_auth_url=http://${service_endpoint}:5000/v2.0/"", 'os_endpoint_type=internalurl', ""os_region_name=${region}"", 'nova_endpoint_type=internalurl', ], } exec {'create-hpgs-aggr': command => 'bash -c ""nova aggregate-create hpgs-aggr hpgs""', unless => 'bash -c ""nova aggregate-list | grep -q hpgs-aggr""', } -> exec {'aggr-set-metadata': command => 'bash -c ""nova aggregate-set-metadata hpgs-aggr hpgs=true""', unless => 'bash -c ""nova aggregate-details hpgs-aggr | grep hpgs=true""', } exec { 'create-m1.small.hpgs-flavor' : command => 'bash -c ""nova flavor-create --is-public true m1.small.hpgs auto 512 20 2""', unless => 'bash -c ""nova flavor-list | grep -q m1.small.hpgs""', } -> exec { 'create-m1.small.hpgs-mempage' : command => 'bash -c ""nova flavor-key m1.small.hpgs set hw:mem_page_size=large""', } -> exec { 'create-m1.small.hpgs-aggregate' : command => 'bash -c ""nova flavor-key m1.small.hpgs set aggregate_instance_extra_specs:hpgs=true""', require => exec['aggr-set-metadata'], } } }",0,1,"bash -c \, bash -c \\, bash -c \\\\, bash -c \\\\\\, nova aggregate-create hpgs-aggr hpgs\\\\n, nova aggregate-set-metadata hpgs-aggr hpgs=true\n, nova flavor-create --is-public true m1.small.hpgs auto 512 20 2\\\\n, nova flavor-key m1.small.hpgs set aggregate_instance_extra_specs:hpgs=true\\\\n, nova flavor-key m1.small.hpgs set hw:mem_page_size=large\\n",CWE-20,"{'reason': ""CWE-20 - Improper Input Handling is applicable when user input is not properly validated.  In this case, we're using the nova flavor-list command to verify that a flavor called m1.small.hpgs exists.  If m1.small.hpgs does not exist, then the bash command is executed to create it.  However, if the user is not authenticated properly, then the bash command could potentially be executed without authorization.  This could lead to a security vulnerability in the Nova service.  Therefore, this misconfiguration is related to CWE-20.  Please note that this is just an example, and it may not be relevant in all cases.  The exact reason for the misconfiguration should be based on the specific"", 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1188,"class tripleo::profile::base::ceilometer::api ( $step = hiera('step'), ) { include ::tripleo::profile::base::ceilometer if $step >= 4 { include ::ceilometer::api include ::ceilometer::wsgi::apache } }",0,1,"class tripleo::profile::base::ceilometer::api, class tripleo::profile::base::ceilometer::api ( $step = hiera('step'), ) {, if $step >= 4, include ::ceilometer::api, include ::ceilometer::wsgi::apache, include ::tripleo::profile::base::ceilometer, include ::tripleo::profile::base::ceilometer::api, include::ceilometer::api, include::ceilometer::wsgi::apache",CWE-798,"{'reason': 'This is a misconfiguration that is related to the CEI.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1189,"notice('modular: puppetsync.pp') exec {path => '/usr/bin:/bin:/usr/sbin:/sbin'} $fuel_settings = parseyaml($astute_settings_yaml) class { 'fuel::puppetsync': bind_address => $::fuel_settings['admin_network']['ipaddress'], } fuel::systemd {['rsyncd']: start => true, template_path => 'fuel/systemd/restart_template.erb', config_name => 'restart.conf', require => class['fuel::puppetsync'], }",0,1,"class { 'fuel::puppetsync':, config_name =>'restart.conf',, fuel::systemd {['rsyncd']: start => true,, require => class['fuel::puppetsync'],, start => true,, template_path => 'fuel/systemd/restart_template.erb',","CWE-117:Improper Output Neutralization for Logs, CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-502:Deserialization of Untrusted Data, CWE-601:User Provided SQL Query Vulnerability, CWE-77:Improper Neutralization of Special Elements used in a Command ('Command Injection')","{'reason': 'modular: puppetsync.pp', 'related_cwe': ""CWE-117:Improper Output Neutralization for Logs, CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-502:Deserialization of Untrusted Data, CWE-601:User Provided SQL Query Vulnerability, CWE-77:Improper Neutralization of Special Elements used in a Command ('Command Injection')"", 'is_misconfiguration_related': 'Yes'}"
1190,"class config inherits config::base { $org = ""qa"" $puppet_notif_email = ""hskupin@mozilla.com"" $puppet_server_reports = ""tagmail"" $builder_username = ""mozauto"" $grouped_puppet_servers = { "".*"" => [ ""puppetmaster1.qa.scl3.mozilla.com"", ], } $puppet_servers = sort_servers_by_group($grouped_puppet_servers) $puppet_server = $puppet_servers[0] $data_servers = $puppet_servers $data_server = $puppet_server $distinguished_puppetmaster = ""puppetmaster1.qa.scl3.mozilla.com"" $puppet_again_repo = ""https://hg.mozilla.org/qa/puppet/"" $puppetmaster_upstream_rsync_source = 'rsync://puppetagain.pub.build.mozilla.org/data/' $puppetmaster_public_mirror_hosts = [ ] $puppetmaster_extsyncs = { 'moco_ldap' => { 'moco_ldap_uri' => 'ldap://ldap.db.scl3.mozilla.com/', 'moco_ldap_root' => 'dc=mozilla', 'moco_ldap_dn' => secret('moco_ldap_dn'), 'moco_ldap_pass' => secret('moco_ldap_pass'), 'users_in_groups' => { 'ldap_infra_users' => ['relops', 'netops', 'team_dcops', 'team_opsec', 'team_moc', 'team_infra', 'team_storage'], }, } } $ntp_servers = [ ""ns1.private.scl3.mozilla.com"", ""ns2.private.scl3.mozilla.com"" ] $enable_mig_agent = true $web_proxy_host = ""proxy.dmz.scl3.mozilla.com"" $web_proxy_port = ""3128"" $web_proxy_exceptions = ['localhost', '127.0.0.1', 'localaddress', '.localdomain.com', '10.0.0.0/8', '.scl3.mozilla.com', '.phx1.mozilla.com', '.mozqa.com', 'mm-ci-master', 'mm-ci-staging', 'db1', 'puppet', 'repos'] $vmwaretools_version = ""9.4.0-1280544"" $vmwaretools_md5 = ""4a2d230828919048c0c3ae8420f8edfe"" $admin_users = unique(concat([ 'andrei.eftimie', 'andreea.matei', 'cosmin.malutan', 'ctalbert', 'daniel.gherasim', 'hskupin' ], hiera('ldap_infra_users', ['arr', 'dmitchell', 'jwatkins']))) }",0,1,"admin_users = unique(concat([ \\\\, data_server = puppet_server, data_servers = puppet_servers, distinguished_puppetmaster = \, grouped_puppet_servers = { \, ntp_servers = [ \\, puppet_servers = sort_servers_by_group(grouped_puppet_servers), puppetmaster_extsyncs = { \\, puppetmaster_public_mirror_hosts = [ ], web_proxy_exceptions = [\\\",CWE-601,"{'reason': 'The admin users in this file are set to the list of users in infra ldap, except the puppet master users, which are defined separately in the misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1191,"prepare_network_config(hiera('network_scheme', {})) $mlnx = hiera('mellanox-plugin') if ($mlnx['iser']) { class { 'mellanox_openstack::cinder_iser' : iser_ip_address => get_network_role_property('cinder/iscsi', 'ipaddr'), } }",1,1,"class {'mellanox_openstack::cinder_iser' : iser_ip_address => get_network_role_property('cinder/iscsi', 'ipaddr'), }, get_network_role_property('cinder/iscsi', 'ipaddr'), hiera('mellanox-plugin'), hiera('network_scheme', {}), if ($mlnx['iser']) { class {'mellanox_openstack::cinder_iser' : iser_ip_address => get_network_role_property('cinder/iscsi', 'ipaddr'), } }, mellanox_openstack::cinder_iser, prepare_network_config(hiera('network_scheme', {})) $mlnx = hiera('mellanox-plugin')","CWE-25, CWE-259, CWE-26, CWE-28, CWE-29, CWE-30, CWE-31","{'reason': 'The misconfiguration is due to an invalid expression.', 'related_cwe': 'CWE-26', 'is_misconfiguration_related': 'Yes'}"
1192,notice('modular: hiera-override') class { '::opendaylight::hiera_override': },0,1,"class { '::opendaylight::hiera_override': }, notice('modular: hiera-override'), notice('modular: hiera-override') class { '::opendaylight::hiera_override': }, notice('modular: hiera-override')\\\\n class { '::opendaylight::hiera_override': }, notice('modular: hiera-override')\\\\n\\\\\\n class { '::opendaylight::hiera_override': }, notice('modular: hiera-override')\\\n class { '::opendaylight::hiera_override': }, notice('modular: hiera-override')\\n class { '::opendaylight::hiera_override': }, notice('modular: hiera-override')\\n\\\\n class { '::opendaylight::hiera_override': }, notice('modular: hiera-override')\n class { '::opendaylight::hiera_override': }",CWE-250,"{'reason': 'This misconfiguration is related to CWE-250 because it is caused by not defining variables in a file and instead directly including a value within a file. By using direct values, this increases the likelihood of typos, which can result in security vulnerabilities in the code.', 'related_cwe': 'CWE-250', 'is_misconfiguration_related': 'Yes'}"
1193,"define collectd::util::config_gen ($arg_array) { include collectd::settings file { ""${collectd::settings::plugindir}/${name}.conf"": ensure => present, mode => '0644', notify => service[$collectd::settings::servicename], content => template(""collectd/collectd.d/plugin_config.erb""); } }",0,1,"collectd/collectd.d/plugin_config.erb\\, collectd/collectd.d/plugin_config.erb\\\\\\\\\\\\\\\, content => template(\, content => template(\\\\\\\\, ensure => present, include collectd::settings, notify => service[$collectd::settings::servicename], template(\\, }\\\\","CWE-116, CWE-117, CWE-416, CWE-532","{'reason': 'The vulnerability \\', 'related_cwe': 'CWE-116, CWE-117, CWE-416, CWE-532', 'is_misconfiguration_related': 'Yes'}"
1194,"class packages::gnupg { case $::operatingsystem { centos: { package { ""gnupg2"": ensure => latest; } } darwin: { packages::pkgdmg { gpgtools: version => ""20111224"", os_version_specific => false, before => file['/library/launchagents/org.gpgtools.macgpg2.gpg-agent.plist.plist']; } file { '/library/launchagents/org.gpgtools.macgpg2.gpg-agent.plist.plist': ensure => absent; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"file, package, packages::pkgdmg",CWE-284,"{'reason': 'It was found that the gpgtools package was installed on Darwin, but a failure was raised for other operating systems, possibly due to the failure in handling of package installations. It could lead to inconsistent state management for installations on Darwin. \\n\\n', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
1195,"define php::ini( $settings ) { include ::php include ::apache $basename = inline_template('_<%= @title.gsub(/\w/, ""-"").downcase %>') $conffile = ""/etc/php5/mods-available/${basename}.ini"" file { $conffile: content => template('php/conffile.ini.erb'), require => package['php5'], notify => service['apache2'], } exec { ""/usr/sbin/php5enmod -s all ${basename}"": refreshonly => true, subscribe => file[$conffile], } }",0,1,"include ::apache, include ::php include ::apache, subscribe => service['apache2']",CWE-732,"{'reason': ""In Puppet the service['apache2'] notifies file[$conffile] not vice versa. In apache2 configuration file, the default directive of the apache site is included in the mod_php.conf configuration file. In this way, service['apache2'] should have a dependency on file[$conffile] instead of the vice versa. The reverse dependency may cause apache to be notified for all configuration changes in the mod_php.conf file, even when the changes are not required for apache. A more specific subscription for apache should be created, depending on the actual requirement."", 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1196,"class cinder::volume::hp3par_iscsi( $hp3par_api_url, $hp3par_username, $hp3par_password, $hp3par_iscsi_ips, $san_ip, $san_login, $san_password, $volume_driver = 'cinder.volume.drivers.hpe.hpe_3par_iscsi.hpe3pariscsidriver', $hp3par_iscsi_chap_enabled = false, $hp3par_snap_cpg = 'openstackcpg', $hp3par_snapshot_retention = 48, $hp3par_snapshot_expiration = 72, $extra_options = {}, ) { warning('the class cinder::volume::hp3par_iscsi is deprecated and will be removed after newton cycle, pleasse use the new class cinder::volume::hpe3par_iscsi.') cinder::backend::hpe3par_iscsi { 'default': volume_driver => $volume_driver, hpe3par_username => $hp3par_username, hpe3par_password => $hp3par_password, san_ip => $san_ip, san_login => $san_login, san_password => $san_password, hpe3par_iscsi_ips => $hp3par_iscsi_ips, hpe3par_api_url => $hp3par_api_url, hpe3par_cpg_snap => $hp3par_snap_cpg, hpe3par_snapshot_retention => $hp3par_snapshot_retention, hpe3par_snapshot_expiration => $hp3par_snapshot_expiration, extra_options => $extra_options, } }",1,1,"cinder::backend::hpe3par_iscsi { 'default':, hpe3par_cpg_snap => $hp3par_snap_cpg, hpe3par_snapshot_retention => $hp3par_snapshot_retention, hpe3par_snapshot_expiration => $hp3par_snapshot_expiration, extra_options => $extra_options, } }],, warning('the class cinder::volume::hp3par_iscsi is deprecated and will be removed after newton cycle, pleasse use the new class cinder::volume::hpe3par_iscsi.')",CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': 'The cinder::backend::hpe3par_iscsi class allows the hpe3par_cpg_snap parameter. However, the value of this parameter is not restricted to a particular directory. This behavior is related to the Path Traversal issue.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1197,"class openstack::ha::cinder ( $internal_virtual_ip, $ipaddresses, $public_virtual_ip, $server_names, $public_ssl = false, $public_ssl_path = undef, $internal_ssl = false, $internal_ssl_path = under, ) { openstack::ha::haproxy_service { internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, } openstack::ha::haproxy_service { 'cinder-api': order => '070', listen_port => 8776, public => true, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, require_service => 'cinder-api', server_names => $server_names, ipaddresses => $ipaddresses, define_backups => true, haproxy_config_options => { 'option' => ['httpchk', 'httplog', 'httpclose', 'http-buffer-request'], 'timeout' => 'http-request 10s', 'http-request' => 'set-header x-forwarded-proto https if { ssl_fc }', }, balancermember_options => 'check inter 10s fastinter 2s downinter 3s rise 3 fall 3', } }",0,1,"define_backups => true,, openstack::ha::haproxy_service { 'cinder-api':","CWE-279, CWE-285","{'reason': 'Explain why the misconfiguration is not related to the provided CWE', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1198,class { '::openstack_tasks::glance::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server warning('osnailyfacter/modular/./glance/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./glance/db.pp'),1,1,"class mysql::config {} include mysql::config, class mysql::server {} include mysql::server, class { '::openstack_tasks::glance::db' :}, class { '::openstack_tasks::glance::db' :} class mysql::config {} include mysql::config class mysql::server {} include mysql::server, include mysql::config, include mysql::server, warning('osnailyfacter/modular/./glance/db.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./glance/db.pp')","CWE-758, CWE-770, CWE-772, CWE-773, CWE-774, CWE-775, CWE-778","{'reason': 'This misconfiguration is related to CWE-758. The openstack_tasks::glance::db class is defined multiple times. This could lead to unexpected behavior if the definition is not consistent.', 'related_cwe': 'CWE-758', 'is_misconfiguration_related': 'Yes'}"
1199,"class lma_monitoring_analytics::influxdb ( $base_directory = $lma_monitoring_analytics::params::influxdb_dir, $hostname = undef, $raft_nodes = undef, $version = undef, ) inherits lma_monitoring_analytics::params { if $raft_nodes { validate_array($raft_nodes) } class { '::influxdb': data_dir => ""${base_directory}/data"", meta_dir => ""${base_directory}/meta"", hh_dir => ""${base_directory}/hh"", wal_dir => ""${base_directory}/wal"", snapshot => true, hostname => $hostname, raft_nodes => $raft_nodes, version => $version, } }",0,1,"class { '::influxdb': data_dir => \, class { '::influxdb': hh_dir => \\, class { '::influxdb': hostname => \\\\\\\\, class { '::influxdb': meta_dir => \\, class { '::influxdb': version => \\\\\\\\\\\\\\\\\\\\, class { '::influxdb': wal_dir => \\\\, data_dir => \\\\\\\\\, if \\$raft_nodes, meta_dir => \\\\\\\\\\\\\\\\\\\\, validate_array(\$raft_nodes)","CWE-129, CWE-253, CWE-601","{'reason': ""No specific impact in the code, since it's not running in a server environment."", 'related_cwe': 'CWE-129, CWE-601', 'is_misconfiguration_related': 'No'}"
1200,class { '::openstack_tasks::ceilometer::keystone' :} warning('osnailyfacter/modular/./ceilometer/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/keystone.pp'),1,1,class { '::openstack_tasks::ceilometer::keystone' :} warning('osnailyfacter/modular/./ceilometer/keystone.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ceilometer/keystone.pp'),CWE-20,"{'reason': 'The misconfiguration is related to the CWE because Puppet module authors should ensure that all modules have a single, stable location where they can be used. By providing a warning in the script, Puppet is allowing users to be aware of this misconfiguration.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1201,"notify {'modular: fuel-plugin-manila/main': } $manila = hiera_hash('manila', {}) $db_user = 'manila' $db_pass = $manila['db_password'] $manila_pass = $manila['user_password'] $db_host = hiera('database_vip') $sql_conn = ""mysql+pymysql://${db_user}:${db_pass}@${db_host}/manila?charset=utf8"" $rabbit_hash = hiera_hash('rabbit', {}) $amqp_user = $rabbit_hash['user'] $amqp_password = $rabbit_hash['password'] $amqp_hosts = split(hiera('amqp_hosts', ''), ',') $network_metadata = hiera_hash('network_metadata', {}) $ns = hiera_hash('network_scheme', {}) $mgmt_ip = $network_metadata['vips']['management']['ipaddr'] $br_mgmt = split($ns['endpoints']['br-mgmt']['ip'][0], '/') $br_mgmt_ip = $br_mgmt[0] $neutron = hiera_hash('quantum_settings', {}) $neutron_pass = $neutron['keystone']['admin_password'] $auth_url = ""http://${mgmt_ip}:35357/"" $auth_uri = ""http://${mgmt_ip}:5000/"" $cinder = hiera_hash('cinder', {}) $cinder_pass = $cinder['user_password'] $nova = hiera_hash('nova', {}) $nova_pass = $nova['user_password'] $verbose = hiera('verbose') $debug = hiera('debug') $use_syslog = hiera('use_syslog') $public_ssl = hiera_hash('public_ssl', {}) class {'::manila_auxiliary': sql_connection => $sql_conn, shared_backends => 'generic', amqp_durable_queues => 'false', rabbit_userid => $amqp_user, rabbit_hosts => $amqp_hosts, rabbit_use_ssl => 'false', rabbit_password => $amqp_password, ssl_cert_source => $public_ssl['cert_source'], auth_url => $auth_url, auth_uri => $auth_uri, br_mgmt_ip => $br_mgmt_ip, cinder_pass => $cinder_pass, manila_pass => $manila_pass, neutron_pass => $neutron_pass, nova_pass => $nova_pass, verbose => $verbose, debug => $debug, }",1,1,"amqp_durable_queues => 'false', auth_uri => $auth_uri, auth_url => $auth_url, br_mgmt_ip => $br_mgmt_ip, cinder_pass => $cinder_pass, manila_pass = $manila['user_password'], manila_pass => $manila_pass, neutron_pass => $neutron_pass, nova_pass => $nova_pass, sql_connection => $sql_conn",CWE-257,"{'reason': 'A configuration issue is likely present in the provided script.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1202,"class octavia::db ( $database_connection = 'sqlite:////var/lib/octavia/octavia.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { validate_re($database_connection, '^(sqlite|mysql(\+pymysql)?|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') oslo::db { 'octavia_config': connection => $database_connection, idle_timeout => $database_idle_timeout, min_pool_size => $database_min_pool_size, max_pool_size => $database_max_pool_size, max_retries => $database_max_retries, retry_interval => $database_retry_interval, max_overflow => $database_max_overflow, db_max_retries => $database_db_max_retries, } }",0,1,"octavia::db (\n, oslo::db { 'octavia_config':, oslo::db { 'octavia_configoslo::db { 'octavia_config':\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    connection =>, oslo::db { 'octavia_config':\\\\\\\\\\\\\\\\n    connection =>\\\\\\\\n, oslo::db { 'octavia_config':\\\\\\\\n    connection =>, oslo::db { 'octavia_config':\\\\n    connection =>\\\\n    database_connection =>, oslo::db { 'octavia_config':\\n    connection =>, oslo::db { 'octavia_config':\n",CWE-20,"{'reason': 'CWE-20 does not have an impact when using this type of configuration for database connections.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1203,"define keystone::federation::openidc_httpd_configuration ( $port = undef, $keystone_endpoint = undef ) { $openidc_redirect_uri = ""${keystone_endpoint}/v3/auth/os-federation/websso/openidc/redirect"" concat::fragment { ""configure_openidc_on_port_${port}"": target => ""${keystone::wsgi::apache::priority}-keystone_wsgi_${title}.conf"", content => template('keystone/openidc.conf.erb'), order => $keystone::federation::openidc::template_order, } }",0,1,"apache::conf \\\\{\\\\n\\\\tensure \\\\> \\\\> present,\\\\n\\\\tnotify \\\\> \\\\> False,\\\\n\\\\tpath \\\\> \\\\> \\\\, apache::conf \\{\\n\\tensure \\> \\> present,\\n\\tnotify \\> \\> False,\\n\\tpath \\> \\> \\, concat::fragment { \, content => template('keystone/openidc.conf.erb'), \\, define keystone::federation::openidc_httpd_configuration ( $port = undef, $keystone_endpoint = undef ) {\n\t$openidc_redirect_uri = \, keystone::federation::openidc_httpd_configuration { \, order => \$keystone::federation::openidc::template_order, \\, target => \\${keystone::wsgi::apache::priority}-keystone_wsgi_\\$title.conf, \\\\, template('keystone/openidc.conf.erb'), \\, template('keystone/openidc.conf.erb'),\\\\n\\\\torder \\\\> \\\\\\\","CWE-20, CWE-22","{'reason': 'OpenIDC relies on redirection URL for successful authentication. Changing this value to an unrelated port may affect the authentication flow and prevent successful user logins. For example, changing the redirect URI from http://example.com/redirect/ to http://example.com:1234/redirect may prevent successful logins since the client is not aware of the redirection change. However, changing the redirect URI from http://example.com/redirect/ to http://example.com/redirect1234/ will not affect user logins since the client is still aware of the redirection URI.', 'related_cwe': 'CWE-20, CWE-22', 'is_misconfiguration_related': 'Yes'}"
1204,"class gnocchi::db::sync ( $user = 'gnocchi', $extra_opts = undef, ){ exec { 'gnocchi-db-sync': command => ""gnocchi-upgrade --config-file /etc/gnocchi/gnocchi.conf ${extra_opts}"", path => '/usr/bin', refreshonly => true, user => $user, logoutput => on_failure, } package<| tag == 'gnocchi-package' |> ~> exec['gnocchi-db-sync'] exec['gnocchi-db-sync'] ~> service<| tag == 'gnocchi-db-sync-service' |> gnocchi_config<||> ~> exec['gnocchi-db-sync'] gnocchi_config<| title == 'indexer/url' |> ~> exec['gnocchi-db-sync'] }",1,1,"class gnocchi::db::sync ( $user = 'gnocchi', $extra_opts = undef, ) {, exec { 'gnocchi-db-sync': command => \, exec { 'gnocchi-db-sync': command => \\, gnocchi_config<| title == 'indexer/url' |> ~> exec['gnocchi-db-sync'], gnocchi_config<||> ~> exec['gnocchi-db-sync'], package<| tag == 'gnocchi-package' |> ~> exec['gnocchi-db-sync'], service<| tag == 'gnocchi-db-sync-service' |> ~> exec['gnocchi-db-sync']","CWE-20, CWE-22, CWE-250, CWE-251, CWE-252, CWE-295","{'reason': ""The script is not vulnerable to a number of security issues because the command's parameter does not have the necessary permissions.\\n\\nThis is because the `gnocchi-upgrade` command can be used by the puppet user and the script doesn't have any authentication, making it vulnerable to a number of security issues.\\n\\nFor example, the puppet user can use this command to access and manipulate the Gnocchi configuration file, which could lead to the execution of arbitrary code as root."", 'related_cwe': 'CWE-20, CWE-22, CWE-250, CWE-251, CWE-252, CWE-295', 'is_misconfiguration_related': 'Yes'}"
1205,"notice('fuel-plugin-lma-infrastructure-alerting: cluster.pp') prepare_network_config(hiera_hash('network_scheme')) $fuel_version = 0 + hiera('fuel_version') $corosync_nodes = corosync_nodes( get_nodes_hash_by_roles( hiera_hash('network_metadata'), hiera_array('lma::corosync_roles') ), 'mgmt/corosync' ) $cluster_recheck_interval = hiera('cluster_recheck_interval', '190s') if $fuel_version < 9.0 { class { '::cluster': internal_address => get_network_role_property('mgmt/corosync', 'ipaddr'), corosync_nodes => $corosync_nodes, cluster_recheck_interval => $cluster_recheck_interval, } } else { $corosync_nodes_processed = corosync_nodes_process($corosync_nodes) class { '::cluster': internal_address => get_network_role_property('mgmt/corosync', 'ipaddr'), quorum_members => $corosync_nodes_processed['ips'], unicast_addresses => $corosync_nodes_processed['ips'], quorum_members_ids => $corosync_nodes_processed['ids'], cluster_recheck_interval => $cluster_recheck_interval, } } pcmk_nodes { 'pacemaker' : nodes => $corosync_nodes, add_pacemaker_nodes => false, } service <| title == 'corosync' |> { subscribe => file['/etc/corosync/service.d'], require => file['/etc/corosync/corosync.conf'], } service['corosync'] -> pcmk_nodes<||> pcmk_nodes<||> -> service<| provider == 'pacemaker' |> if($::operatingsystem == 'ubuntu') { $pacemaker_run_uid = 'hacluster' $pacemaker_run_gid = 'haclient' file {'/etc/corosync/uidgid.d/pacemaker': content =>""uidgid { uid: ${pacemaker_run_uid} gid: ${pacemaker_run_gid} }"" } file['/etc/corosync/corosync.conf'] -> file['/etc/corosync/uidgid.d/pacemaker'] -> service <| title == 'corosync' |> }",1,1,"corosync_nodes { 'corosync': nodes => $corosync_nodes, },, file['/etc/corosync/corosync.conf'] -> file['/etc/corosync/uidgid.d/pacemaker'] -> service <| title == 'corosync' |>, if($::operatingsystem == 'ubuntu') { $pacemaker_run_uid = 'hacluster' $pacemaker_run_gid = 'haclient' file {'/etc/corosync/uidgid.d/pacemaker': content => \, notice('fuel-plugin-lma-infrastructure-alerting: cluster.pp') prepare_network_config(hiera_hash('network_scheme')) $fuel_version = 0 + hiera('fuel_version'), service <| title == 'corosync' |>, service<| provider == 'pacemaker' |>, service['corosync'] -> pcmk_nodes<||> pcmk_nodes<||> -> service<| provider == 'pacemaker' |>",CWE-601,"{'reason': 'No CWEs related', 'related_cwe': 'No CWEs related', 'is_misconfiguration_related': 'No'}"
1206,"class designate::dns ( $designatepath = undef, $designatefile = undef, ) { warning('the class designate::dns is depecrated. use designate::backend::bind9 instead.') include ::designate::backend::bind9 }",1,1,"class designate::dns, include ::designate::backend::bind9, warning",CWE-25,"{'reason': 'CWE-25 (https://cwe.mitre.org/data/definitions/25.html): This line uses a comment that might confuse users. This is dangerous when the comment is about security or has a security impact.', 'related_cwe': 'CWE-25', 'is_misconfiguration_related': 'Yes'}"
1207,"class role::securepoll { require ::role::mediawiki require_package('gnupg') mediawiki::extension { 'securepoll': needs_update => true, settings => template('role/securepoll/conf.php.erb'), } mediawiki::wiki { 'vote': } }",0,1,"class role::securepoll {\\\\n    require ::role::mediawiki\\\\n    require_package('gnupg')\\\\n    mediawiki::extension {'securepoll': needs_update => true, settings => template('role/securepoll/conf.php.erb'), }\\\\n    mediawiki::wiki { 'vote': }\\\\n    }, class role::securepoll {\\n    require ::role::mediawiki\\\\n    require_package('gnupg')\\\\n    mediawiki::extension {'securepoll': needs_update => true, settings => template('role/securepoll/conf.php.erb'), }\\\\n    mediawiki::wiki { 'vote': }\\\\n    }\\\\n, mediawiki::extension {'securepoll': needs_update => true, settings => template('role/securepoll/conf.php.erb'), }, mediawiki::extension {\\n    \\, mediawiki::wiki {'vote': }, mediawiki::wiki {\n    \, require ::role::mediawiki, require_package('gnupg')",CWE-345,"{'reason': 'Mediawiki requires GnuPG to be installed, but this dependency was not provided, making it vulnerable to a man in the middle attack, which is covered by CWE-345.', 'related_cwe': 'CWE-345', 'is_misconfiguration_related': 'Yes'}"
1208,"class tripleo::profile::base::aodh::evaluator ( $step = hiera('step'), ) { include ::tripleo::profile::base::aodh if $step >= 4 { include ::aodh::evaluator } }",1,1,"class tripleo::profile::base::aodh::evaluator (\\n $step = hiera('step'),\\n), class tripleo::profile::base::aodh::evaluator (\n $step = hiera('step'),\n), include ::aodh::evaluator",CWE-22,"{'reason': 'Aodh evaluator is not applicable at this step. There is no action necessary.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1209,class logrotate { file { '/etc/logrotate.d/twn': source => 'puppet:///modules/logrotate/twn' } },0,1,file { '/etc/logrotate.d/twn': source => 'puppet:///modules/logrotate/twn' },CWE-22:Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),"{'reason': ""CWE-22 is Path Traversal, but it doesn't seem like a path traversal issue. I don't see any mention of restricted directories in the script, or a path manipulation vulnerability. I'm not sure why there's no mention of `path` or `path_prefix` in the documentation for this issue.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"", 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1210,"class designate::client ( $package_ensure = 'present', $client_package_name = $::designate::params::client_package_name, ) { include ::designate::params package { 'python-designateclient': ensure => $package_ensure, name => $client_package_name, tag => 'openstack', } }",0,1,"class designate::client ( $package_ensure = 'present', $client_package_name = $::designate::params::client_package_name, ) { include ::designate::params package { 'python-designateclient': ensure => $package_ensure, name => $client_package_name, tag => 'openstack', } }, ensure => $package_ensure, include ::designate::params, name => $client_package_name, tag => 'openstack'",CWE-863,"{'reason': 'The `ensure` attribute is being used incorrectly. The value is passed through, so it is being incorrectly interpreted as an invalid package state. If we change the `ensure` attribute value to `latest`, the state of the package should be automatically determined by Puppet based on the version of the package, so the package should be successfully installed on the system.\\n\\n', 'related_cwe': 'CWE-863', 'is_misconfiguration_related': 'Yes'}"
1211,"define mysql::sql( $unless, $sql = $title, ) { $quoted_sql = regsubst($sql, '""', '\\""', 'g') $quoted_unless = regsubst($unless, '""', '\\""', 'g') exec { $title: command => ""/usr/bin/mysql -uroot -p${mysql::root_password} -qfsae \""${quoted_sql}\"""", unless => ""/usr/bin/mysql -uroot -p${mysql::root_password} -qfsane \""${quoted_unless}\"" | /usr/bin/tail -1 | /bin/grep -q 1"", require => exec['set_mysql_password'], } }",0,1,"command => \\, command => \\\\\\, command => \\\\\\\\\\\\\\\\\\\\\\\\, exec { $title: command => \, exec { $title: command => \\, require => exec['set_mysql_password'], }, unless => \\\, unless => \\\\, unless => \\\\\\\\\\\\, unless{'reason': 'The CWE description highlights an issue with the usage of environment variables in shell scripts, but the script provided does not utilize environment variables.\\n\\nHowever, this issue may be related to the CWE description if the environment variables are used in some way within the script, which is not apparent from the provided script.\\n\\nTherefore, I would recommend checking for potential vulnerabilities in the script based on the CWE description.\\n\\nIf the issue is not related to the CWE description, please provide a reason and related CWE number(s).', 'related_cwe': 'CWE-798, CWE-20, CWE-918, CWE-120', 'is_misconfiguration_related': 'No'}"
1212,"class contenttranslation( $parsoid_url, $parsoid_timeout, $parsoid_prefix, $view_template, $action_template, $api_template, $cx_template, $database_host, $database, $database_user, $database_password, $eventlogging, $betafeature, $experimental, $intarget, $namespace, $wikis, ) { include ::mediawiki include ::mysql create_resources(contenttranslation::wiki, $wikis) mediawiki::extension { 'contenttranslation': settings => { 'wgcontenttranslationparsoid[""url""]' => $parsoid_url, 'wgcontenttranslationparsoid[""timeout""]' => $parsoid_timeout, 'wgcontenttranslationparsoid[""prefix""]' => $parsoid_prefix, 'wgcontenttranslationsitetemplates[""view""]' => $view_template, 'wgcontenttranslationsitetemplates[""action""]' => $action_template, 'wgcontenttranslationsitetemplates[""api""]' => $api_template, 'wgcontenttranslationsitetemplates[""cx""]' => $cx_template, 'wgcontenttranslationdatabase' => $database, 'wgcontenttranslationeventlogging' => $eventlogging, 'wgcontenttranslationtranslateintarget' => $intarget, 'wgcontenttranslationasbetafeature' => $betafeature, 'wgcontenttranslationeexperimentalfeatures' => $experimental, 'wgcontenttranslationtargetnamespace' => $namespace, } } mysql::db { $database: ensure => present, } mysql::sql { ""${database_user}_full_priv_${database}"": sql => ""grant all privileges on ${database}.* to ${database_user}@${database_host}"", unless => ""select 1 from information_schema.schema_privileges where table_schema = '${database}' and grantee = \""'${database_user}'@'${database_host}'\"" limit 1"", require => mysql::user[$database_user], } mysql::sql { 'load contenttranslation schema': sql => ""use ${database}; source ${::mediawiki::dir}/extensions/contenttranslation/sql/contenttranslation.sql;"", unless => template('contenttranslation/load_unless.sql.erb'), require => git::clone['mediawiki/extensions/contenttranslation'], } }",0,1,"mysql::db { $database: ensure => present,}, mysql::sql { '${database_user}_full_priv_${database}':, mysql::sql { 'load contenttranslation schema': sql => \, mysql::sql { 'load contenttranslation schema': sql => \\, mysql::user[$database_user], require => git::clone['mediawiki/extensions/contenttranslation'], } }, source ${::mediawiki::dir}/extensions/contenttranslation/sql/contenttranslation.sql;",CWE-287,"{'reason': 'Please return only one of the following JSON responses, based on whether the misconfiguration is related to the CWE.\\n\\nIf the misconfiguration is related to the CWE:\\n\\n{\\n  \\', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1213,"class role::geodata_elastic { include ::role::geodata include ::role::cirrussearch mediawiki::settings { 'geodata-elastic': priority => $::load_last, values => { wggeodatabackend => 'elastic', }, notify => exec['force geodata index'], } mediawiki::maintenance { 'force geodata index': command => '/usr/local/bin/foreachwikiwithextension cirrussearch extensions/cirrussearch/maintenance/updatesearchindexconfig.php', refreshonly => true, } }",0,1,"class role::geodata_elastic { include ::role::geodata include ::role::cirrussearch mediawiki::settings { 'geodata-elastic': priority => $::load_last, values => { wggeodatabackend => 'elastic', }, notify => exec['force geodata index'], } mediawiki::maintenance { 'force geodata index': command => '/usr/local/bin/foreachwikiwithextension cirrussearch extensions/cirrussearch/maintenance/updatesearchindexconfig.php', refreshonly => true, } }, include ::role::geodata include ::role::cirrussearch, mediawiki::maintenance { 'force geodata index': command => '/usr/local/bin/foreachwikiwithextension cirrussearch extensions/cirrussearch/maintenance/updatesearchindexconfig.php', refreshonly => true, }, mediawiki::settings { 'geodata-elastic': priority => $::load_last, values => { wggeodatabackend => 'elastic', }, notify => exec['force geodata index'], }",CWE-117,"{'reason': 'None', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1214,"class ironic::inspector::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/ironic-inspector', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, $verbose = undef, ) { $debug_real = pick($::ironic::inspector::debug,$debug) if is_service_default($default_log_levels) { $default_log_levels_real = $default_log_levels } else { $default_log_levels_real = join(sort(join_keys_to_values($default_log_levels, '=')), ',') } if $verbose { warning('verbose is deprecated, has no effect and will be removed after newton cycle.') } ironic_inspector_config { 'default/debug': value => $debug_real; 'default/use_stderr': value => $use_stderr; 'default/use_syslog': value => $use_syslog; 'default/log_dir': value => $log_dir; 'default/syslog_log_facility': value => $log_facility; 'default/logging_context_format_string': value => $logging_context_format_string; 'default/logging_default_format_string': value => $logging_default_format_string; 'default/logging_debug_format_suffix': value => $logging_debug_format_suffix; 'default/logging_exception_prefix': value => $logging_exception_prefix; 'default/log_config_append': value => $log_config_append; 'default/default_log_levels': value => $default_log_levels_real; 'default/publish_errors': value => $publish_errors; 'default/fatal_deprecations': value => $fatal_deprecations; 'default/instance_format': value => $instance_format; 'default/instance_uuid_format': value => $instance_uuid_format; 'default/log_date_format': value => $log_date_format; } }",0,1,"debug, log_config_append, log_dir, log_facility, logging_context_format_string, logging_debug_format_suffix, logging_default_format_string, logging_exception_prefix, use_stderr, use_syslog",CWE-20,"{'reason': 'The misconfiguration is related to CWE-20 due to the incorrect values provided for various configuration options, such as `debug`, `log_config_append`, and `log_dir`. Additionally, the use of `log_facility` and `use_syslog` can be considered suspicious, as they may indicate that the application is configured to log to an unexpected location or format. The use of `logging_context_format_string`, `logging_debug_format_suffix`, `logging_default_format_string`, `logging_exception_prefix`, `use_stderr`, and `publish_errors` may also warrant further investigation. Finally, the misconfiguration is not related to CWE-203, as there is no evidence of deprecated features being used.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1215,"define tweaks::ubuntu_service_override ( $service_name = $name, $package_name = $name, ) { if $::operatingsystem == 'ubuntu' { if ! is_pkg_installed($package_name) { $policyrc_file = '/usr/sbin/policy-rc.d' ensure_resource('file', 'create-policy-rc.d', { ensure => present, path => $policyrc_file, content => "" mode => '0755', owner => 'root', group => 'root' }) ensure_resource('exec', 'remove-policy-rc.d', { path => [ '/sbin', '/bin', '/usr/bin', '/usr/sbin' ], command => ""rm -f ${policyrc_file}"", onlyif => ""test -f ${policyrc_file}"", }) file['create-policy-rc.d'] -> package <| name == $package_name |> { provider => 'apt_fuel' } -> exec['remove-policy-rc.d'] file['create-policy-rc.d'] -> package <| title == $package_name |> { provider => 'apt_fuel' } -> exec['remove-policy-rc.d'] exec['remove-policy-rc.d'] -> service <| name == $service_name |> exec['remove-policy-rc.d'] -> service <| title == $service_name |> } } }",1,1,"ensure_resource('file', 'create-policy-rc.d', {\n      ensure => present,\n      path => '/usr/sbin/policy-rc.d',\n      content => \, exec['remove-policy-rc.d'] -> service <| name == $service_name |>, exec['remove-policy-rc.d'] -> service <| title == $service_name |>, file['create-policy-rc.d'] -> package <| name == $package_name |> { provider => 'apt_fuel' } -> exec['remove-policy-rc.d'], file['create-policy-rc.d'] -> package <| title == $package_name |> { provider => 'apt_fuel' } -> exec['remove-policy-rc.d']",CWE-22,"{'reason': 'The script is vulnerable to the CWE because it allows any user to perform unauthorized actions such as removing a policy-rc.d file that controls services.', 'related_cwe': 'CWE-22: Improper Limitation of a Memory Resource', 'is_misconfiguration_related': 'Yes'}"
1216,"class gnocchi::storage::swift( $swift_auth_version = '1', $swift_authurl = 'http://localhost:8080/auth/v1.0', $swift_user = 'admin:admin', $swift_key = 'admin', $swift_tenant_name = undef, ) { gnocchi_config { 'storage/driver': value => 'swift'; 'storage/swift_user': value => $swift_user; 'storage/swift_key': value => $swift_key; 'storage/swift_tenant_name': value => $swift_tenant_name; 'storage/swift_auth_version': value => $swift_auth_version; 'storage/swift_authurl': value => $swift_authurl; } }",0,1,"storage/swift_authurl: value => $swift_authurl;, storage/swift_tenant_name: value => $swift_tenant_name;","CWE-352, CWE-362","{'reason': 'Swift requires the auth_url to be set to the keystone url. This can be done with the $keystone_url parameter. In this case the auth_url is being set to the swift url, which is not a keystone endpoint and will not work properly. This is a misconfiguration with Swift.', 'related_cwe': 'CWE-352, CWE-362', 'is_misconfiguration_related': 'Yes'}"
1217,"define swift::storage::xfs( $device = '', $byte_size = '1024', $mnt_base_dir = '/srv/node', $loopback = false ) { include ::swift::deps include ::swift::xfs if $device == '' { $target_device = ""/dev/${name}"" } else { $target_device = $device } if(!defined(file[$mnt_base_dir])) { file { $mnt_base_dir: ensure => directory, owner => 'swift', group => 'swift', require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } } exec { ""mkfs-${name}"": command => ""mkfs.xfs -f -i size=${byte_size} ${target_device}"", path => ['/sbin/', '/usr/sbin/'], require => package['xfsprogs'], unless => ""xfs_admin -l ${target_device}"", before => anchor['swift::config::end'], } swift::storage::mount { $name: device => $target_device, mnt_base_dir => $mnt_base_dir, subscribe => exec[""mkfs-${name}""], loopback => $loopback, } }",1,1,"exec {, file { $mnt_base_dir: ensure => directory, owner =>'swift', group =>'swift', require => anchor['swift::config::begin'], before => anchor['swift::config::end'],}, swift::storage::mount {","CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","{'reason': ""CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1218,"class keystone::roles::admin( $email, $password, $admin = 'admin', $admin_tenant = 'openstack', $admin_roles = ['admin'], $service_tenant = 'services', $admin_tenant_desc = 'admin tenant', $service_tenant_desc = 'tenant for the openstack services', $configure_user = true, $configure_user_role = true, $admin_user_domain = undef, $admin_project_domain = undef, $service_project_domain = undef, $target_admin_domain = undef, ) { include ::keystone::deps $domains = unique(delete_undef_values([ $admin_user_domain, $admin_project_domain, $service_project_domain, $target_admin_domain])) keystone_domain { $domains: ensure => present, enabled => true, } keystone_tenant { $service_tenant: ensure => present, enabled => true, description => $service_tenant_desc, domain => $service_project_domain, } keystone_tenant { $admin_tenant: ensure => present, enabled => true, description => $admin_tenant_desc, domain => $admin_project_domain, } keystone_role { 'admin': ensure => present, } if $configure_user { keystone_user { $admin: ensure => present, enabled => true, email => $email, password => $password, domain => $admin_user_domain, } } if $configure_user_role { keystone_user_role { ""${admin}@${admin_tenant}"": ensure => present, user_domain => $admin_user_domain, project_domain => $admin_project_domain, roles => $admin_roles, } keystone_tenant[$admin_tenant] -> keystone_user_role[""${admin}@${admin_tenant}""] keystone_user<| title == $admin |> -> keystone_user_role[""${admin}@${admin_tenant}""] keystone_user_role[""${admin}@${admin_tenant}""] -> file<| tag == 'openrc' |> if $target_admin_domain { keystone_user_role { ""${admin}@::${target_admin_domain}"": ensure => present, user_domain => $admin_user_domain, roles => $admin_roles, } keystone_user_role[""${admin}@::${target_admin_domain}""] -> file<| tag == 'openrc' |> } } }",1,1,"keystone_tenant { $admin_tenant: domain => $admin_project_domain,}\n, keystone_tenant[$admin_tenant] -> keystone_user_role[\\, keystone_user { $admin: domain => $admin_user_domain,}, keystone_user<| title == $admin |> -> keystone_user_role[\\\\, keystone_user_role { \, keystone_user_role[, keystone_user_role[\\\\\\, keystone_user_role[\\\\\\\\\\\\\\\\\\\\\\\\",CWE-284,"{'reason': 'The keystone_tenant[$admin_tenant] -> keystone_user_role[\\\\, keystone_user { $admin: domain => $admin_user_domain,}, keystone_user<| title == $admin |> -> keystone_user_role[\\\\\\\\, keystone_user_role { \\, keystone_user_role[, keystone_user_role[\\\\\\\\\\\\, keystone_user_role[\\\\\\\\\\\\\\\\\\\\', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1219,"class cinder::scheduler::filter ( $scheduler_default_filters = $::os_service_default, ) { if (!is_service_default($scheduler_default_filters)) { cinder_config { 'default/scheduler_default_filters': value => join(any2array($scheduler_default_filters),',') } } else { cinder_config { 'default/scheduler_default_filters': ensure => absent } } }",0,1,"cinder_config { 'default/scheduler_default_filters': ensure => absent }, cinder_config { 'default/scheduler_default_filters': value => join(any2array($scheduler_default_filters),',') }",CWE-295,"{'reason': 'The misconfiguration is related to CWE-295 because', 'related_cwe': 'CWE-295', 'is_misconfiguration_related': 'Yes'}"
1220,class { '::osnailyfacter::openstack_haproxy::openstack_haproxy' :},0,1,class {'::osnailyfacter::openstack_haproxy::openstack_haproxy':},"CWE-77, CWE-78, CWE-89, CWE-92, CWE-93, CWE-94, CWE-95, CWE-97","{'reason': 'The script, which is a Puppet snippet, is intended to apply changes on a target machine based on the configuration parameters provided. Therefore, the misconfiguration might not have security implications. Moreover, the script seems to belong to a custom module in Puppet that does not contain the misconfiguration. The provided CWE refers to specific programming errors in the script rather than a generic configuration mistake.', 'related_cwe': 'CWE-77, CWE-78, CWE-89, CWE-92, CWE-93, CWE-94, CWE-95, CWE-97', 'is_misconfiguration_related': 'No'}"
1221,"class contrail::contrail_webui( $deployment_id = hiera('deployment_id'), $master_ip = hiera('master_ip'), $link = ""https://${::contrail::mos_public_vip}:8143/"" ) { $text = ""dashboard for contrail web ui: ${link}"" $contrail_link_data = ""{\""title\"":\""contrailui\"",\ \""description\"":\""${text}\"",\ \""url\"":\""${link}\""}"" $contrail_link_created_file = '/etc/contrail/fuel_link_created' exec { 'notify_contrail_url': creates => $contrail_link_created_file, command => ""/usr/bin/curl -sl -w \""%{http_code}\"" \ -h 'content-type: application/json' -x post -d '${contrail_link_data}' \ http://${master_ip}:8000/api/clusters/${deployment_id}/plugin_links \ -o /dev/null | /bin/grep 201 && /usr/bin/touch ${contrail_link_created_file}"", } }",1,1,"http://${master_ip}:8000/api/clusters/${deployment_id}/plugin_links, https://${::contrail::mos_public_vip}:8143/","CWE-311, CWE-312, CWE-325, CWE-326, CWE-332, CWE-434","{'reason': 'This script uses a HTTP POST method to create a link for a contrail webui dashboard, where it passes the URL as the link value. Using a HTTP POST method means that the web server could interpret the value as a link for a contrail webui dashboard, or it could interpret the value as an authentication token, or any number of other misconfigurations. Using a HTTP POST method means that the web server could interpret the value as a link for a contrail webui dashboard, or it could interpret the value as an authentication token, or any number of other misconfigurations. If the script is using a HTTP POST method, the HTTP POST method would need to be changed to a HTTP GET method, in order to prevent the web', 'related_cwe': 'CWE-311, CWE-312, CWE-325, CWE-326, CWE-332, CWE-434', 'is_misconfiguration_related': 'Yes'}"
1222,"class packages::libpng { anchor { 'packages::libpng::begin': ; 'packages::libpng::end': ; } case $::operatingsystem { darwin: { anchor['packages::libpng::begin'] -> packages::pkgdmg { libpng: version => ""1.6.2""; } -> anchor['packages::libpng::end'] } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"fail(\, packages::libpng::begin'] -> packages::pkgdmg { libpng: version => \\, packages::libpng::end': ; } -> anchor['packages::libpng::end'] } }, packages::libpng::end': ; } -> anchor['packages::libpng::end'] } }, {, packages::pkgdmg { libpng: version => \",CWE-426,"{'reason': 'the vulnerability is caused by the lack of input validation to ensure that the data entered is well-formed before being processed, as mentioned in the description of the CWE.', 'related_cwe': 'CWE-426', 'is_misconfiguration_related': 'Yes'}"
1223,"notify {'modular: fuel-plugin-manila/haproxy': } $internal_virtual_ip = hiera('management_vip') $ns = hiera_hash('network_scheme', {}) $br_mgmt = split($ns['endpoints']['br-mgmt']['ip'][0], '/') $ipaddresses = $br_mgmt[0] $public_virtual_ip = hiera('public_vip') $cinder_address_map = get_node_to_ipaddr_map_by_network_role(hiera_hash('cinder_nodes'), 'cinder/api') $server_names = hiera_array('cinder_names', keys($cinder_address_map)) $ssl_hash = hiera_hash('use_ssl', {}) $public_ssl_hash = hiera_hash('public_ssl', {}) $public_ssl = get_ssl_property($ssl_hash, $public_ssl_hash, 'manila', 'public', 'usage', false) $public_ssl_path = get_ssl_property($ssl_hash, $public_ssl_hash, 'manila', 'public', 'path', ['']) $internal_ssl = get_ssl_property($ssl_hash, {}, 'manila', 'internal', 'usage', false) $internal_ssl_path = get_ssl_property($ssl_hash, {}, 'manila', 'internal', 'path', ['']) class { '::manila_auxiliary::haproxy': internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path, }",0,1,"class {'::manila_auxiliary::haproxy': internal_virtual_ip => $internal_virtual_ip, ipaddresses => $ipaddresses, public_virtual_ip => $public_virtual_ip, server_names => $server_names, public_ssl => $public_ssl, public_ssl_path => $public_ssl_path, internal_ssl => $internal_ssl, internal_ssl_path => $internal_ssl_path,}, internal_ssl = get_ssl_property($ssl_hash, {},'manila', 'internal', 'usage', false), internal_ssl_path = get_ssl_property($ssl_hash, {},'manila', 'internal', 'path', ['']), internal_virtual_ip = hiera('management_vip'), ipaddresses = $br_mgmt[0], notify {'modular: fuel-plugin-manila/haproxy': }, public_ssl = get_ssl_property($ssl_hash, $public_ssl_hash,'manila', 'public', 'usage', false), public_ssl_path = get_ssl_property($ssl_hash, $public_ssl_hash,'manila', 'public', 'path', ['']), public_virtual_ip = hiera('public_vip'), server_names = hiera_array('cinder_names', keys($cinder_address_map))",CWE-601,"{'reason': 'This misconfiguration can be related to CWE-601. This is a logic flaw that can occur when the developer is making assumptions that may not be true in all cases. In this case, the developer is making the assumption that the HAPROXY module can be used when managing the IP addresses of the virtual servers. However, in the case where the HAPROXY module is not available, or when the developer wants to use a different module to manage the virtual servers, this assumption may not be true. In this case, the developer should take into account the possibility that the HAPROXY module is not available, and should use a different module to manage the virtual servers instead. This can be done by using a different module that is', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
1224,"class tripleo::profile::pacemaker::neutron::midonet ( $pacemaker_master = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { include ::neutron::params include ::tripleo::profile::pacemaker::neutron include ::tripleo::profile::base::neutron::midonet if $step >= 5 and downcase($::hostname) == $pacemaker_master { pacemaker::resource::service {'tomcat': clone_params => 'interleave=true', } pacemaker::constraint::base { 'neutron-server-to-dhcp-agent-constraint': constraint_type => 'order', first_resource => ""${::neutron::params::server_service}-clone"", second_resource => ""${::neutron::params::dhcp_agent_service}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::neutron::params::server_service], pacemaker::resource::service[$::neutron::params::dhcp_agent_service]], } pacemaker::constraint::base { 'neutron-dhcp-agent-to-metadata-agent-constraint': constraint_type => 'order', first_resource => ""${::neutron::params::dhcp_agent_service}-clone"", second_resource => ""${::neutron::params::metadata_agent_service}-clone"", first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::neutron::params::dhcp_agent_service], pacemaker::resource::service[$::neutron::params::metadata_agent_service]], } pacemaker::constraint::base { 'neutron-metadata-agent-to-tomcat-constraint': constraint_type => 'order', first_resource => ""${::neutron::params::metadata_agent_service}-clone"", second_resource => 'tomcat-clone', first_action => 'start', second_action => 'start', require => [pacemaker::resource::service[$::neutron::params::metadata_agent_service], pacemaker::resource::service['tomcat']], } pacemaker::constraint::colocation { 'neutron-dhcp-agent-to-metadata-agent-colocation': source => ""${::neutron::params::metadata_agent_service}-clone"", target => ""${::neutron::params::dhcp_agent_service}-clone"", score => 'infinity', require => [pacemaker::resource::service[$::neutron::params::dhcp_agent_service], pacemaker::resource::service[$::neutron::params::metadata_agent_service]], } } }",0,1,"include ::tripleo::profile::base::neutron::midonet, include ::tripleo::profile::pacemaker::neutron::midonet, pacemaker::constraint::base { 'neutron-dhcp-agent-to-metadata-agent-constraint': constraint_type => 'order', first_resource => \, pacemaker::constraint::base { 'neutron-metadata-agent-to-tomcat-constraint': constraint_type => 'order', first_resource => \\, pacemaker::constraint::colocation { 'neutron-dhcp-agent-to-metadata-agent-colocation': source => \, pacemaker::constraint::colocation { 'neutron-dhcp-agent-to-metadata-agent-colocation': target => \\, pacemaker::resource::service {'tomcat': clone_params => 'interleave=true', }, require => [pacemaker::resource::service[$::neutron::params::dhcp_agent_service], pacemaker::resource::service[$::neutron::params::metadata_agent_service]], }",CWE-22,"{'reason': 'CWE-22: Improper Control of a Resource through its Lifetime', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1225,"class monasca::checks::libvirt( $admin_password = undef, $admin_tenant_name = undef, $admin_user = undef, $alive_only = false, $cache_dir = '/dev/shm', $customer_metadata = [], $disk_collection_period = 0, $identity_uri = undef, $metadata = [], $network_use_bits = true, $nova_refresh = '14400', $ping_check = false, $region_name = undef, $vm_cpu_check_enable = true, $vm_disks_check_enable = true, $vm_extended_disks_check_enable = false, $vm_network_check_enable = true, $vm_ping_check_enable = false, $vm_probation = '300', ){ $conf_dir = $::monasca::agent::conf_dir file[""${conf_dir}/libvirt.yaml""] ~> service['monasca-agent'] file { ""${conf_dir}/libvirt.yaml"": owner => 'root', group => $::monasca::group, mode => '0640', content => template('monasca/checks/libvirt.yaml.erb'), require => file[$conf_dir], } ensure_packages('libxslt1-dev') ensure_packages('libxml2-dev') ensure_packages('zlib1g-dev') ensure_packages('libvirt-dev') ensure_packages('pkg-config') }",0,1,file {,476,"{'reason': 'The Puppet resource misconfiguration file {\\', 'related_cwe': '476', 'is_misconfiguration_related': 'Yes'}"
1226,notify {'modular: fuel-plugin-manila': },0,1,notify {'modular: fuel-plugin-manila': },"CWE-117, CWE-120, CWE-252, CWE-253, CWE-254, CWE-255, CWE-257, CWE-258, CWE-264, CWE-265","{'reason': ""the notify directive is only supposed to be used in a top-scope declaration. However, it was used incorrectly inside a loop, where each iteration creates a different notification (as can be seen by the non-unique ID 'fuel-plugin-manila')."", 'related_cwe': 'CWE-120, CWE-253, CWE-254, CWE-255, CWE-257', 'is_misconfiguration_related': 'Yes'}"
1227,"class nginx::simple_tlsproxy( $backend_port, $site_name, $port=443,) { validate_string($site_name) include ::nginx include ::nginx::ssl diamond::collector::nginx{ $site_name: port => 10080, } ::base::expose_puppet_certs { '/etc/nginx': ensure => present, provide_private => true, require => class['nginx'], } ::nginx::site { ""${site_name}_tls_termination"": ensure => present, content => template('nginx/simple_tlsproxy.erb') } }",0,1,"ensure => present, include ::base::expose_puppet_certs, include ::nginx, include ::nginx::site, include ::nginx::ssl, port => 10080, require => class['nginx'], template('nginx/simple_tlsproxy.erb'), validate_string($site_name)","CWE-1135, CWE-20","{'reason': ""The 'include' declaration is used to ensure that classes are included and to add them to the scope"", 'related_cwe': 'CWE-1135', 'is_misconfiguration_related': 'Yes'}"
1228,"define phabricator::config( $value, ){ include ::phabricator $phab_dir = ""${::phabricator::deploy_dir}/phabricator"" $json_value = ordered_json($value) $arg_value = inline_template('<%= @json_value.gsub(/^""|""$/, """").to_s %>') exec { ""phab_set_${title}"": command => ""${phab_dir}/bin/config set ${title} '${arg_value}'"", unless => ""/usr/bin/jq '.[\""${title}\""] == ${json_value}' ${phab_dir}/conf/local/local.json | /bin/grep -q true"", require => [ git::clone['phabricator'], package['jq'], ], before => service['phd'], } }",1,1,"define phabricator::config( $value, ){ include ::phabricator $phab_dir = \u0022${::phabricator::deploy_dir}/phabricator\u0022 $json_value = ordered_json($value) $arg_value = inline_template('<%= @json_value.gsub(/^\, exec {, git::clone['phabricator'], },, if no critical misconfiguration is found, set \\\, if no critical misconfiguration is found, set \\\\\\, if no critical misconfiguration is found, the \\\\\\, if there are critical issues: \n```json, package['jq'], },, package['jq'], }},, result: {","CWE-18: Buffer Overflows, CWE-20: Improper Input Validation, CWE-502: Deserialization of Untrusted Data","{'reason': 'The misconfiguration is not related to CWE-502 Deserialization of Untrusted Data.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1229,"class cdh::hadoop::master { class['cdh::hadoop'] -> class['cdh::hadoop::master'] include cdh::hadoop::namenode::primary include cdh::hadoop::resourcemanager include cdh::hadoop::historyserver file { '/usr/local/bin/check_hdfs_active_namenode': source => 'puppet:///modules/cdh/hadoop/check_hdfs_active_namenode', owner => 'root', group => 'hdfs', mode => '0555', } }",0,1,"class cdh::hadoop::master { class['cdh::hadoop'] -> class['cdh::hadoop::master'] include cdh::hadoop::namenode::primary include cdh::hadoop::resourcemanager include cdh::hadoop::historyserver file { '/usr/local/bin/check_hdfs_active_namenode': source => 'puppet:///modules/cdh/hadoop/check_hdfs_active_namenode', owner => 'root', group => 'hdfs', mode => '0555', } }, file { '/usr/local/bin/check_hdfs_active_namenode': source => 'puppet:///modules/cdh/hadoop/check_hdfs_active_namenode', owner => 'root', group => 'hdfs', mode => '0555', }, include cdh::hadoop::namenode::primary include cdh::hadoop::resourcemanager include cdh::hadoop::historyserver","CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-269: Uncontrolled Resource Consumption, CWE-74: Improper Neutralization of Special Elements used in an OS Command ('Command Injection'), CWE-78: Improper Neutralization of Special Elements used in a Command (, CWE-88: Improper Neutralization of Special Elements used in an OS Command ('Command Injection')","{'reason': 'Explanation: The original defect label is 0, the misconfiguration LLM label is 1, and there is no matching CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1230,"class rally::db ( $database_connection = 'sqlite:////var/lib/rally/rally.sqlite', $database_idle_timeout = $::os_service_default, $database_min_pool_size = $::os_service_default, $database_max_pool_size = $::os_service_default, $database_max_retries = $::os_service_default, $database_retry_interval = $::os_service_default, $database_max_overflow = $::os_service_default, $database_db_max_retries = $::os_service_default, ) { $database_connection_real = pick($::rally::database_connection, $database_connection) $database_idle_timeout_real = pick($::rally::database_idle_timeout, $database_idle_timeout) $database_min_pool_size_real = pick($::rally::database_min_pool_size, $database_min_pool_size) $database_max_pool_size_real = pick($::rally::database_max_pool_size, $database_max_pool_size) $database_max_retries_real = pick($::rally::database_max_retries, $database_max_retries) $database_retry_interval_real = pick($::rally::database_retry_interval, $database_retry_interval) $database_max_overflow_real = pick($::rally::database_max_overflow, $database_max_overflow) validate_re($database_connection_real, '(sqlite|mysql|postgresql):\/\/(\s+:\s+@\s+\/\s+)?') if $database_connection_real =~ /^sqlite:\/\// { $sqlite_dir = regsubst($database_connection_real,'^sqlite:\/\/\/(\s+)+\/(\s+)$','\1') ensure_resource('file', $sqlite_dir,{ ensure => directory, owner => root, group => root, mode => '0755', }) } oslo::db { 'rally_config': connection => $database_connection_real, idle_timeout => $database_idle_timeout_real, min_pool_size => $database_min_pool_size_real, max_pool_size => $database_max_pool_size_real, max_retries => $database_max_retries_real, retry_interval => $database_retry_interval_real, max_overflow => $database_max_overflow_real, db_max_retries => $database_db_max_retries, } }",0,1,"directory, file",CWE-22,"{'reason': 'There is a risk of data loss when the rally configuration is set incorrectly. Without proper database configuration, the Rally project could crash. This can happen due to several misconfigurations, including incorrect ownership and file permissions. While it is not explicitly stated, the CWE number 22 is related to this misconfiguration.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1231,"merge_yaml_settings { path => '/tmp/test.yaml', original_data => '/tmp/test.yaml', overwrite_arrays => true, } merge_yaml_settings { 'init' : original_data => { 'a' => '1' }, override_data => { 'b' => '2' }, } -> merge_yaml_settings { '1' : override_data => { 'c' => '3' }, } -> merge_yaml_settings { '2' : override_data => { 'd' => ['1','2'] }, } -> merge_yaml_settings { '3' : override_data => { 'd' => ['3','4'] }, } -> merge_yaml_settings { '4' : override_data => { 'd' => ['3','4'] }, }",0,1,"3 : original_data => { 'd' => ['3','4'] },, 4 : original_data => { 'd' => ['3','4'] },, init : original_data => { 'a' => '1' }, override_data => { 'b' => '2' },, path => '/tmp/test.yaml', original_data => '/tmp/test.yaml', overwrite_arrays => true,","CWE-346, CWE-347","{'reason': 'The reason why the misconfiguration is related to CWE-346. Be specific in your analysis, linking security issues in the script to the corresponding vulnerabilities described by the CWE.', 'related_cwe': 'CWE-346', 'is_misconfiguration_related': 'Yes'}"
1232,"class users::root::account($username, $group, $home) { include config case $::operatingsystem { centos: { if (secret(""root_pw_hash"") == '') { fail('no root password hash set') } user { ""root"": password => secret(""root_pw_hash""); } } windows: { user { root: ensure => present, forcelocal => true, password => secret(""root_pw_cleartext""); } } darwin: { case $::macosx_productversion_major { '10.6': { if (secret(""root_pw_paddedsha1"") == '') { fail('no root password paddedsha1 set') } darwinuser { $username: home => $home, password => secret(""root_pw_paddedsha1""); } $user_req = darwinuser[$username] } '10.7': { if (secret(""root_pw_saltedsha512"") == '') { fail('no root password saltedsha512 set') } darwinuser { $username: home => $home, password => secret(""root_pw_saltedsha512""); } $user_req = darwinuser[$username] } '10.8': { if (secret(""root_pw_pbkdf2"") == '' or secret(""root_pw_pbkdf2_salt"") == '') { fail('no root password pbkdf2 set') } darwinuser { $username: home => $home, password => secret(""root_pw_pbkdf2""), salt => secret(""root_pw_pbkdf2_salt""), iterations => secret(""root_pw_pbkdf2_iterations""); } $user_req = darwinuser[$username] } '10.9','10.10': { if (secret(""root_pw_pbkdf2"") == '' or secret(""root_pw_pbkdf2_salt"") == '') { fail('no root password pbkdf2 set') } user { $username: home => $home, password => secret(""root_pw_pbkdf2""), salt => secret(""root_pw_pbkdf2_salt""), iterations => secret(""root_pw_pbkdf2_iterations""); } $user_req = user[$username] } default: { fail(""no support for creating users on os x $macosx_productversion_major"") } } file { $home: ensure => directory, require => $user_req; } } } }",0,1,"case $::operatingsystem { centos: { if (secret(\, class users::root::account($username, $group, $home) { include config case $::operatingsystem { centos: { if (secret(\\, class users::root::account($username, $group, $home) { include config case $::operatingsystem { centos: { if (secret(\\\\, class users::root::account($username, $group, $home) { include config case $::operatingsystem { centos: { if (secret(\\\\\\\\, class users::root::account($username, $group, $home) { include config case $::operatingsystem { centos: { if (secret(\\\\\\\\\\\\\\\\\\\\, if (secret(\\\, if (secret(\\\\\\\\\\\\\\, if (secret(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, user { root: ensure => present, forcelocal => true, password => secret(\\",CWE-327,"{'reason': 'root password cleartext stored in puppet, making this vulnerable to sniffing or brute forcing.', 'related_cwe': 'CWE-327', 'is_misconfiguration_related': 'Yes'}"
1233,class role::iegreview { include ::parsoid include ::iegreview },0,1,class role::iegreview { include ::parsoid include ::iegreview },"CWE-250: Execution with Unnecessary Privileges, CWE-279: Authentication Bypass by Primary Identity Verification, CWE-327: Use of a Broken or Risky Cryptographic Algorithm, CWE-328: Incorrect Permissions for Critical System Resources, CWE-335: Insufficient Verification of Data Authenticity, CWE-337: Insufficient Entropy in Pseudo-Random Number Generator, CWE-347: Improper Restriction of Modified Time Attribute, CWE-351: Unrestricted Resource Consumption in a Server-Side Component, CWE-352: Cross-Site Request Forgery (CSRF), CWE-358: Use of Inherited File Descriptor","{'reason': 'There is no issue within the Puppet script snippet provided. The script `role::iegreview` does not contain a module `::parsoid`. This could be an example of a module not found within the Puppet script. If that is indeed the case, it could be classified as a misconfiguration, however, as a result, I cannot be certain it is also a vulnerability as specified by the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1234,"class nova::db::postgresql( $password, $dbname = 'nova', $user = 'nova', $encoding = undef, $privileges = 'all', ) { include ::nova::deps ::openstacklib::db::postgresql { 'nova': password_hash => postgresql_password($user, $password), dbname => $dbname, user => $user, encoding => $encoding, privileges => $privileges, } anchor['nova::db::begin'] ~> class['nova::db::postgresql'] ~> anchor['nova::db::end'] }",1,1,"anchor['nova::db::begin'] ~> class['nova::db::postgresql'] ~> anchor['nova::db::end'], encoding => $encoding,, encoding => $encoding,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n, include ::nova::deps\\\\n\\\\n::openstacklib::db::postgresql {\\\\n\\\\n, include ::nova::deps\n\n::openstacklib::db::postgresql {\n\n, password_hash => postgresql_password($user, $password),\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n, password_hash => postgresql_password($user, $password),\\n\\n, privileges => $privileges,}, user => $user,, user => $user,\\\\\\\\n\\\\\\\\n",CWE-257: Hard-Coded Password,"{'reason': 'Hard-coded password (\\', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1235,"class midonet::gateway::static ( $fip, $nic, $edge_router, $veth0_ip, $veth1_ip, $veth_network, $scripts_dir = '/tmp', $uplink_script = 'create_fake_uplink_l2.sh', $ensure_scripts = 'present', ) { file { 'fake_uplink_script': ensure => $ensure_scripts, path => ""${scripts_dir}/create_fake_uplink_l2.sh"", content => template('midonet/gateway/create_fake_uplink_l2.sh.erb'), } exec { ""/bin/bash -x ${scripts_dir}/create_fake_uplink_l2.sh 2>&1 | tee /tmp/bash.out"": returns => ['0', '7'], require => [ file['fake_uplink_script'], package['python-midonetclient'], ] } }",0,1,"exec { \, file { 'fake_uplink_script': ensure => $ensure_scripts,\n      path => \, package { 'python-midonetclient': ensure => $ensure_scripts,\\\\n        install_options => [ ] }, package { 'python-midonetclient': ensure => $ensure_scripts,\\n        install_options => [ ] }, require => [ file['fake_uplink_script'], package['python-midonetclient'], ] }, returns => [ '0', '7' ],","CWE-20, CWE-22","{'reason': 'The execution command of the misconfiguration returns a 7 (no such file or directory) error code. This is related to the script file (create\\_fake\\_uplink\\_l2.sh) not being properly created, which could have been done by using the proper file template or the execute command in the code. This could allow attackers to potentially take control of the system or access confidential information, as per CWE-22.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1236,class { '::openstack_tasks::ironic::ironic_compute' :} warning('osnailyfacter/modular/./ironic/ironic-compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/ironic-compute.pp'),1,1,"class { '::openstack_tasks::ironic::ironic_compute' :} warning('osnailyfacter/modular/./ironic/ironic-compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/ironic-compute.pp'), warning('osnailyfacter/modular/./ironic/ironic-compute.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./ironic/ironic-compute.pp')","CWE-20, CWE-732","{'reason': 'CWE-20, CWE-732, openstack-tasks, ironic, ironic-compute.pp', 'related_cwe': 'CWE-20, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1237,"class runner::tasks::mig_agent($runlevel=1) { include runner if $operatingsystem == ""darwin"" { include users::builder sudoers::custom { 'mig-agent-from-runner': user => $users::builder::username, runas => 'root', command => ""/sbin/mig-agent""; } } runner::task { ""${runlevel}-mig_agent"": source => 'puppet:///modules/runner/mig_agent_checkin.sh'; } }",0,1,"mig_agent': source => \\, mig_agent': source => \\\\, mig_agent': source => \\\\\\\\, mig_agent_checkin.sh'; } }, mig_agent_checkin.sh'; } } }, runner::task { \, runner::task { \\\\, runner::task { \\\\\\\, runner::tasks::mig_agent($runlevel=1) {\n include runner if $operatingsystem == \, sudoers::custom {'mig-agent-from-runner': user => $users::builder::username,\\n runas => 'root', command => \","CWE-116: Improper Encoding or Escaping of Output, CWE-74: Improper Neutralization of Special Elements used in a SQL Command ('SQL Injection'), CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-89: Improper Neutralization of Special Elements used in a Command ('Command Injection')","{'reason': 'The misconfiguration in this example is related to CWE-89 because of the improper escaping of special characters, which leads to an injection of an OS command.', 'related_cwe': 'CWE-89', 'is_misconfiguration_related': 'Yes'}"
1238,"class apparmor { include ::redis package { 'apparmor': ensure => 'present', } file { '/usr/bin/isitapparmor': source => 'puppet:///modules/apparmor/isitapparmor', owner => 'root', group => 'root', mode => '0555', require => package['apparmor'], } file { '/etc/apparmor.d/usr.bin.redis-server': content => template('apparmor/usr.bin.redis-server.erb'), owner => 'root', group => 'root', mode => '0444', require => package['apparmor'], notify => exec['confine_redis'], } exec { 'confine_redis': command => '/sbin/apparmor_parser -r /etc/apparmor.d/usr.bin.redis-server', refreshonly => true, notify => service['redis-server'], } }",1,1,"command => '/sbin/apparmor_parser -r /etc/apparmor.d/usr.bin.redis-server', content => template('apparmor/usr.bin.redis-server.erb'), group => 'root',, include ::redis, mode => '0444',, notify => service['redis-server'], owner => 'root',, refreshonly => true,, require => package['apparmor']",CWE-1160,"{'reason': '1', 'related_cwe': 'CWE-1160', 'is_misconfiguration_related': 'Yes'}"
1239,"class role::antispoof { require ::role::mediawiki mediawiki::extension { 'antispoof': needs_update => true, } mediawiki::maintenance { 'populate_spoofuser': command => '/usr/local/bin/foreachwikiwithextension antispoof extensions/antispoof/maintenance/batchantispoof.php', refreshonly => true, require => mediawiki::extension['antispoof'], subscribe => exec['update_all_databases'], } }",1,1,"class role::antispoof { require ::role::mediawiki mediawiki::extension { 'antispoof': needs_update => true, } mediawiki::maintenance { 'populate_spoofuser': command => '/usr/local/bin/foreachwikiwithextension antispoof extensions/antispoof/maintenance/batchantispoof.php', refreshonly => true, require => mediawiki::extension['antispoof'], subscribe => exec['update_all_databases'], } }, mediawiki::maintenance { 'populate_spoofuser':, mediawiki::maintenance { 'populate_spoofuser': command => '/usr/local/bin/foreachwikiwithextension antispoof extensions/antispoof/maintenance/batchantispoof.php', refreshonly => true, require => mediawiki::extension['antispoof'], subscribe => exec['update_all_databases'], }, require => mediawiki::extension['antispoof'],, subscribe => exec['update_all_databases'],","CWE-16, CWE-20, CWE-200","{'reason': 'The misconfiguration is related to the provided CWE because this script populates the spoofuser table. Without this table, the anti-spoofing feature is not enabled, which makes it more difficult to detect and prevent IP spoofing attacks. This issue violates Principle of Least Privilege and leads to Privilege Escalation Vulnerability.', 'related_cwe': 'CWE-16, CWE-20, CWE-200', 'is_misconfiguration_related': 'Yes'}"
1240,"class runner::service { include runner::settings case $::operatingsystem { 'centos': { file { '/etc/init.d/runner': content => template('runner/runner.initd.erb'), mode => '0755', notify => exec['initd-r-refresh']; } exec { 'initd-r-refresh': command => '/sbin/chkconfig runner resetpriorities', refreshonly => true; } service { 'runner': require => [ python::virtualenv[$runner::settings::root], ], hasstatus => false, enable => true; } } 'ubuntu': { file { ""/etc/init/runner.conf"": content => template(""runner/runner.upstart.conf.erb""); } service { 'runner': require => [ python::virtualenv[$runner::settings::root], file[""/etc/init/runner.conf""], ], hasstatus => false, enable => true; } } 'darwin': { file { ""/library/launchagents/com.mozilla.runner.plist"": owner => root, group => wheel, mode => 0644, content => template(""runner/runner.plist.erb""); } service { ""runner"": require => [ python::virtualenv[$runner::settings::root], file[""/library/launchagents/com.mozilla.runner.plist""], ], hasstatus => false, enable => true; } } default: { fail(""unsupported os ${::operatingsystem}"") } } }",1,1,"file { '/etc/init.d/runner': content => template('runner/runner.initd.erb'), mode => '0755', notify => exec['initd-r-refresh']; }, service { 'runner': require => [ python::virtualenv[$runner::settings::root], ], hasstatus => false, enable => true; }, service { 'runner': require => [ python::virtualenv[$runner::settings::root], file[","CWE-19, CWE-22, CWE-250","{'reason': 'The misconfiguration is related to the CWE because the initd script is misconfigured, which is a security vulnerability according to CWE-19. The service being managed has a status hasstatus => false, which is also a security vulnerability according to CWE-250. Finally, the file that is being managed is located in /etc/init.d, which is a common location for system configuration files, which is a security vulnerability according to CWE-22.', 'related_cwe': 'CWE-19, CWE-22, CWE-250', 'is_misconfiguration_related': 'Yes'}"
1241,"class tripleo::profile::base::heat ( $bootstrap_node = downcase(hiera('bootstrap_nodeid')), $manage_db_purge = hiera('heat_enable_db_purge', true), $notification_driver = 'messaging', $step = hiera('step'), $rabbit_hosts = hiera('rabbitmq_node_ips', undef), ) { if $step == 3 or $step == 4 { class { '::heat::keystone::domain': manage_domain => false, manage_user => false, manage_role => false, } } if $step >= 4 { class { '::heat' : notification_driver => $notification_driver, rabbit_hosts => $rabbit_hosts, } include ::heat::config include ::heat::cors } if $step >= 5 { if $manage_db_purge { include ::heat::cron::purge_deleted } if $bootstrap_node == $::hostname { include ::heat::keystone::domain class['::keystone::roles::admin'] -> class['::heat::keystone::domain'] } else { class { '::heat::keystone::domain': manage_domain => false, manage_user => false, manage_role => false, } } } }",1,1,"class {\\\\\\\\\\\\n '::heat::keystone::domain':\\\\\\\\\\\\n manage_domain => false,\\\\\\\\\\\\n manage_user => false,\\\\\\\\\\\\n manage_role => false,\\\\\\\\\\\\n, class {\\\\n '::heat':\\\\n notification_driver => $notification_driver,\\\\n rabbit_hosts => $rabbit_hosts,\\\\n, class {\\\\n '::heat::keystone::domain':\\\\n manage_domain => false,\\\\n manage_user => false,\\\\n manage_role => false,\\\\n, class {\\n '::heat':\\n notification_driver => $notification_driver,\\n rabbit_hosts => $rabbit_hosts,\\n, class {\\n '::heat::keystone::domain':\\n manage_domain => false,\\n manage_user => false,\\n manage_role => false,\\n, class {\n '::heat::keystone::domain':\n manage_domain => false,\n manage_user => false,\n manage_role => false,\n, if $step == 3 or $step == 4 {\\\\n class {\\\\\\\\n '::heat::keystone::domain':\\\\\\\\n manage_domain => false,\\\\\\\\n manage_user => false,\\\\\\\\n manage_role => false,\\\\\\\\n, if $step >= 4 {\\\\\\\\\\\\\\\\\\\\n class {\\\\\\\\\\\\\\\\\\\\n '::heat':\\\\\\\\\\\\\\\\\\\\n notification_driver => $notification_driver,\\\\\\\\\\\\\\\\\\\\n rabbit_hosts => $rabbit_hosts,\\\\\\\\\\\\\\\\\\\\n, if $step >= 4 {\\\\\\\\n class {\\\\\\\\n '::heat':\\\\\\\\n notification_driver => $notification_driver,\\\\\\\\n rabbit_hosts => $rabbit_hosts,\\\\\\\\n",CWE-306,"{'reason': ""In puppet scripts, the 'if' statement is used to check certain conditions and take a particular action. In this script, if step is 3 or 4, the class '::heat::keystone::domain' is instantiated. Here, the manage_domain, manage_user, and manage_role parameters are set to false to ensure that they are not instantiated in the environment. However, in the following condition, if step is greater than or equal to 4, the class '::heat' is instantiated with the parameters 'notification_driver' and 'rabbit_hosts'. This may lead to unintended behavior and can be considered a security misconfiguration as it can allow a malicious actor to bypass security measures and access sensitive resources in the environment."", 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
1242,class { '::osnailyfacter::netconfig::reserved_ports' :},1,1,class { '::osnailyfacter::netconfig::reserved_ports' :},CWE-502: Deserialization of Untrusted Data,"{'reason': 'The script is a template for configuring netconfig reserved ports. In the script, a module name is used to describe a module that allows configuration of netconfig reserved ports. This is not an issue that fits into CWE-502, since it is a Puppet class that allows for the declaration of a resource type that can be configured by a module. This is different from the vulnerability described by CWE-502, which involves untrusted data being deserialized.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1243,"class neutron::agents::dhcp ( $package_ensure = present, $enabled = true, $manage_service = true, $debug = $::os_service_default, $state_path = '/var/lib/neutron', $resync_interval = 30, $interface_driver = 'neutron.agent.linux.interface.ovsinterfacedriver', $dhcp_driver = 'neutron.agent.linux.dhcp.dnsmasq', $root_helper = 'sudo neutron-rootwrap /etc/neutron/rootwrap.conf', $dnsmasq_config_file = $::os_service_default, $dnsmasq_dns_servers = $::os_service_default, $enable_isolated_metadata = false, $enable_force_metadata = $::os_service_default, $enable_metadata_network = false, $dhcp_broadcast_reply = $::os_service_default, $purge_config = false, $availability_zone = $::os_service_default, $dhcp_domain = $::os_service_default, ) { include ::neutron::deps include ::neutron::params case $dhcp_driver { /\.dnsmasq/: { package[$::neutron::params::dnsmasq_packages] -> package<| title == 'neutron-dhcp-agent' |> ensure_packages($::neutron::params::dnsmasq_packages) } default: { fail(""unsupported dhcp_driver ${dhcp_driver}"") } } if (! ($enable_isolated_metadata or $enable_force_metadata)) and $enable_metadata_network { fail('enable_metadata_network to true requires enable_isolated_metadata or enable_force_metadata also enabled.') } else { neutron_dhcp_agent_config { 'default/enable_isolated_metadata': value => $enable_isolated_metadata; 'default/force_metadata': value => $enable_force_metadata; 'default/enable_metadata_network': value => $enable_metadata_network; } } resources { 'neutron_dhcp_agent_config': purge => $purge_config, } neutron_dhcp_agent_config { 'default/debug': value => $debug; 'default/state_path': value => $state_path; 'default/resync_interval': value => $resync_interval; 'default/interface_driver': value => $interface_driver; 'default/dhcp_domain': value => $dhcp_domain; 'default/dhcp_driver': value => $dhcp_driver; 'default/root_helper': value => $root_helper; 'default/dhcp_broadcast_reply': value => $dhcp_broadcast_reply; 'default/dnsmasq_config_file': value => $dnsmasq_config_file; 'default/dnsmasq_dns_servers': value => join(any2array($dnsmasq_dns_servers), ','); 'agent/availability_zone': value => $availability_zone; } if ! is_service_default ($dhcp_domain) { warning('the dhcp_domain parameter is deprecated and will be removed in future releases') } if $::neutron::params::dhcp_agent_package { package { 'neutron-dhcp-agent': ensure => $package_ensure, name => $::neutron::params::dhcp_agent_package, tag => ['openstack', 'neutron-package'], } } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { 'neutron-dhcp-service': ensure => $service_ensure, name => $::neutron::params::dhcp_agent_service, enable => $enabled, tag => 'neutron-service', } }",1,1,"dhc_driver, dnsmasq_dns_servers, enable_force_metadata, package, purge_config, resync_interval","CWE-20, CWE-22","{'reason': 'The misconfiguration of dnsmasq_config_file is related to CWE-20. dnsmasq_config_file specifies the full path to the DNSmasq configuration file. CWE-20 specifies Improper Input Validation. An improper input validation attack involves the attacker causing an invalid input to be accepted by the program, thereby violating a constraint. A common form of this is a buffer overflow, where an attacker can cause the program to accept extra data, which can sometimes be written to a more privileged memory location. CWE-20 is associated with 0x00000002 (0).', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1244,"class packages::wget { anchor { 'packages::wget::begin': ; 'packages::wget::end': ; } case $::operatingsystem { centos: { anchor['packages::wget::begin'] -> package { ""wget"": ensure => '1.15-2.el6'; } -> anchor['packages::wget::end'] } ubuntu: { anchor['packages::wget::begin'] -> package { ""wget"": ensure => '1.13.4-2ubuntu1'; } -> anchor['packages::wget::end'] } darwin: { anchor['packages::wget::begin'] -> packages::pkgdmg { wget: version => ""1.12-1""; } -> anchor['packages::wget::end'] } windows: { include packages::mozilla::mozilla_build anchor['packages::wget::begin'] -> class['packages::mozilla::mozilla_build'] -> anchor['packages::wget::end'] } default: { fail(""cannot install on $::operatingsystem"") } } }",1,1,"class packages::wget, package { \, package { \\, package { \\\\, package { \\\\\\, package { \\\\\\\\\\\\\\\\, package { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, package {{'reason': ""In the Puppet code for packages::wget, the code is using a nested case statement, so a nested misconfiguration would be expected here. It's very easy to see the nested structure in the Puppet code, but the indentation and formatting make it more difficult to spot, as if you didn't know that there was a nested case statement, you would only see the first line in the case statement, rather than the second line. For that reason, this would be an example of a nested misconfiguration. As such, it is related to CWE-93."", 'related_cwe': 'CWE-93', 'is_misconfiguration_related': 'Yes'}"
1245,"define cdh::hive::metastore::mysql::grant($allowed_host = $title) { class['cdh::hive::metastore::mysql'] -> cdh::hive::metastore::mysql::grant[$title] $jdbc_database = $cdh::hive::metastore::mysql::jdbc_database $jdbc_username = $cdh::hive::metastore::mysql::jdbc_username $jdbc_password = $cdh::hive::metastore::mysql::jdbc_password $username_option = $cdh::hive::metastore::mysql::db_root_username ? { undef => '', default => ""-u'${cdh::hive::metastore::mysql::db_root_username}'"", } $password_option = $cdh::hive::metastore::mysql::db_root_password ? { undef => '', default => ""-p'${cdh::hive::metastore::mysql::db_root_password}'"", } exec { ""hive_mysql_grant_${allowed_host}"": command => ""/usr/bin/mysql ${username_option} ${password_option} -e \"" grant all privileges on ${jdbc_database}.* to '${jdbc_username}'@'${allowed_host}' identified by '${jdbc_password}'; flush privileges;\"""", unless => ""/usr/bin/mysql ${username_option} ${password_option} -e \""show grants for '${jdbc_username}'@'${allowed_host}'\"" | grep -q \""to '${jdbc_username}'\"""", user => 'root', } }",0,1,"jdbc_password = $cdh::hive::metastore::mysql::jdbc_password, jdbc_username = $cdh::hive::metastore::mysql::jdbc_username","CWE-522, CWE-523","{'reason': 'This misconfiguration is related to CWE-523 because it allows a user to connect to MySQL server with a username and password. This information can be used to brute-force the MySQL password using tools such as John The Ripper. The misconfiguration is also related to CWE-522 because it allows a user to connect to MySQL server with a username and password. This information can be used to brute-force the MySQL password using tools such as John The Ripper.', 'related_cwe': 'CWE-522, CWE-523', 'is_misconfiguration_related': 'Yes'}"
1246,"define browsertests::bundle( $directory = $title, ) { include browsertests include ruby::default ruby::bundle { $title: directory => $directory, missing_ok => true, } }",1,1,"include browsertests, include ruby::default\\nruby::bundle {\\n $title: \\n directory => $directory, \\n missing_ok => true,\\n}, include ruby::default\\nruby::bundle {\\n $title: \\ndirectory => $directory,\\nmissing_ok => true,\\n}, include ruby::default\nruby::bundle {\n $title: \n directory => $directory, \n missing_ok => true,\n}, include ruby::default\nruby::bundle {\n $title: \ndirectory => $directory,\nmissing_ok => true,\n}","CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer, CWE-416: Use After Free","{'reason': 'Reason why this issue is related to the CWE:', 'related_cwe': 'CWE number(s) related to the issue:', 'is_misconfiguration_related': 'Yes'}"
1247,"class osnailyfacter::cluster_haproxy::cluster_haproxy { notice('modular: cluster_haproxy/cluster_haproxy.pp') $network_scheme = hiera_hash('network_scheme', {}) $management_vip = hiera('management_vip') $database_vip = hiera('database_vip', '') $service_endpoint = hiera('service_endpoint', '') $primary_controller = hiera('primary_controller') $haproxy_hash = hiera_hash('haproxy', {}) $external_lb = hiera('external_lb', false) $colocate_haproxy = hiera('colocate_haproxy', false) $ssl_default_ciphers = hiera('ssl_default_ciphers', 'high:!anull:!md5:!kedh') $override_configuration = hiera_hash('configuration', {}) $user_defined_options = $override_configuration['haproxy'] if !$external_lb { $stats_ipaddresses = delete_undef_values([$management_vip, $database_vip, $service_endpoint, '127.0.0.1']) class { '::cluster::haproxy': haproxy_maxconn => '16000', haproxy_bufsize => '32768', primary_controller => $primary_controller, debug => pick($haproxy_hash['debug'], hiera('debug', false)), other_networks => direct_networks($network_scheme['endpoints']), stats_ipaddresses => $stats_ipaddresses, colocate_haproxy => $colocate_haproxy, user_defined_options => $user_defined_options, ssl_default_ciphers => $ssl_default_ciphers, } } }",1,1,"colocate_haproxy = hiera('colocate_haproxy', false) $ssl_default_ciphers = hiera('ssl_default_ciphers', 'high:!anull:!md5:!kedh') $override_configuration = hiera_hash('configuration', {}) $user_defined_options = $override_configuration['haproxy'] if, database_vip = hiera('database_vip', ''), debug => pick($haproxy_hash['debug'], hiera('debug', false)), other_networks => direct_networks($network_scheme['endpoints']), stats_ipaddresses => $stats_ipaddresses, colocate_haproxy => $colocate_haproxy, user_defined_options => $user_defined_options, ssl_default_ciphers => $ssl_default_ciphers, } }},, management_vip = hiera('management_vip'), override_configuration = hiera_hash('configuration', {}) $user_defined_options = $override_configuration['haproxy'] if, primary_controller = hiera('primary_controller')",CWE-259,"{'reason': 'This misconfiguration is not related to CWE-259 because the script is using Hiera for configuration management.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1248,"class tweaks::nofile { case $kernel { linux: { file { ""/etc/security/limits.d/90-nofile.conf"": owner => root, group => root, mode => 0644, source => ""puppet:///modules/tweaks/90-nofile.conf""; } } } }",1,1,"90-nofile.conf\\\\n}:\\\\n\\\\towner\\\\n  =>\\\\n\\\\troot,\\\\n  group\\\\n  =>\\\\n\\\\troot,\\\\n  mode\\\\n  =>\\\\n\\\\t0644,\\\\n  source\\\\n  =>\\\\n\\\\t\\\\\\, 90-nofile.conf\\n}:\\n\\towner\\n  =>\\n\\troot,\\n  group\\n  =>\\n\\troot,\\n  mode\\n  =>\\n\\t0644,\\n  source\\n  =>\\n\\t\\\, case $kernel {\\\\n  \\\\, file {\\\\\\\\\\\\\\\\\\\\\\\\n  \\\\\\\\, file {\\\\n  \\, file {\n  \, linux: {\\\\\\\\\\\, linux: {\\n  \\, puppet:///modules/tweaks/90-nofile.conf\\\\\\\\n;\\\\\\\\n}, puppet:///modules/tweaks/90-nofile.conf\\n;\n}",CWE-25,"{'reason': ""File mode should be 0755. This allows all users to read and write. Setting the mode to 0644 is only readable for root. This will create a security issue because only root can manage the files. In other words, noone else but root can manage the files. Non-root users won't be able to edit the files."", 'related_cwe': 'CWE-25', 'is_misconfiguration_related': 'Yes'}"
1249,"class nova::cert( $enabled = true, $manage_service = true, $ensure_package = 'present' ) { include ::nova::deps include ::nova::params nova::generic_service { 'cert': enabled => $enabled, manage_service => $manage_service, package_name => $::nova::params::cert_package_name, service_name => $::nova::params::cert_service_name, ensure_package => $ensure_package, } }",1,1,"ensure_package => $ensure_package, include ::nova::deps, include ::nova::params, package_name => $::nova::params::cert_package_name, service_name => $::nova::params::cert_service_name","CWE-281, CWE-284","{'reason': ""The 'ensure_package' parameter is misconfigured. The'manage_service' parameter should be set to false for the 'nova::cert' class."", 'related_cwe': 'CWE-281', 'is_misconfiguration_related': 'Yes'}"
1250,"class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => ""$plugins_dir/check_puppet_agent -w \$arg1\$ -c \$arg2\$""; } nrpe::plugin { ""check_puppet_agent"": ; } }",1,1,"class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => \, class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => \\, class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => \\\, class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => \\\\\\\\, class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => \\\\\\\\\\\\\\\\\\\\, class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, class nrpe::check::puppet_agent { include nrpe::settings $plugins_dir = $nrpe::settings::plugins_dir nrpe::check { 'check_puppet_agent': cfg{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1251,include ::osnailyfacter::plugins::plugins_rsync,0,1,include ::osnailyfacter::plugins::plugins_rsync,CWE-16,"{'reason': 'The given script is for setting up rsync plugins. As we can see, the misconfiguration details provided in `0` are very vague. This script is not for authentication-related configurations.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1252,"class collectd { include collectd::settings if $collectd::settings::collectd_enabled == true { include packages::collectd include collectd::profiles file { ""${collectd::settings::configdir}/collectd.conf"": ensure => present, content => template('collectd/collectd.conf.erb'), notify => service[$collectd::settings::servicename], require => class['packages::collectd']; $collectd::settings::plugindir: ensure => directory, recurse => true, purge => true, force => true, mode => 0644, notify => service[$collectd::settings::servicename], require => class['packages::collectd']; } if $collectd::settings::servicescript { file { ""${collectd::settings::servicepath}/${collectd::settings::servicescript}"": ensure => present, source => ""puppet:///modules/collectd/${collectd::settings::servicescript}"", notify => service[$collectd::settings::servicename], require => class['packages::collectd']; } } service { $collectd::settings::servicename: ensure => running, enable => true, hasstatus => true, hasrestart => true, require => class['packages::collectd']; } } }",1,1,"if $collectd::settings::collectd_enabled == true, include packages::collectd, notify => service[$collectd::settings::servicename],",CWE-22,"{'reason': 'This misconfiguration is related to CWE-22. The misconfiguration exposes the /var/lib/collectd directory, a sensitive directory, which should not be exposed to public access. This can lead to unauthorized access of sensitive data, such as configuration files and scripts.', 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1253,"class osnailyfacter::logging::logging { notice('modular: logging/logging.pp') $base_syslog_hash = hiera('base_syslog') $syslog_hash = hiera('syslog') $use_syslog = hiera('use_syslog', true) $debug = pick($syslog_hash['debug'], hiera('debug', false)) $rabbit_fqdn_prefix = hiera('node_name_prefix_for_messaging', 'messaging-') $base_syslog_rserver = { 'remote_type' => 'tcp', 'server' => $base_syslog_hash['syslog_server'], 'port' => $base_syslog_hash['syslog_port'] } $syslog_rserver = { 'remote_type' => $syslog_hash['syslog_transport'], 'server' => $syslog_hash['syslog_server'], 'port' => $syslog_hash['syslog_port'], } if $syslog_hash['metadata']['enabled'] { $rservers = [$base_syslog_rserver, $syslog_rserver] } else { $rservers = [$base_syslog_rserver] } if $use_syslog { if ($::operatingsystem == 'ubuntu') { file { '/var/log': owner => 'root', group => 'syslog', mode => '0775', } } if roles_include(['ironic']) { $ironic_collector = true } class { '::openstack::logging': role => 'client', show_timezone => true, log_remote => true, log_local => true, log_auth_local => true, rotation => 'weekly', keep => '4', minsize => '10m', maxsize => '100m', rservers => $rservers, virtual => str2bool($::is_virtual), rabbit_fqdn_prefix => $rabbit_fqdn_prefix, rabbit_log_level => 'notice', debug => $debug, ironic_collector => $ironic_collector, } } }",0,1,"class { '::openstack::logging': role => 'client', show_timezone => true, log_remote => true, log_local => true, log_auth_local => true, rotation => 'weekly', keep => '4', minsize => '10m', maxsize => '100m', rservers => $rservers, virtual => str2bool($::is_virtual), rabbit_fqdn_prefix => $rabbit_fqdn_prefix, rabbit_log_level => 'notice', debug => $debug, ironic_collector => $ironic_collector, }, file { '/var/log': owner => 'root', group =>'syslog', mode => '0775', }","CWE-116: Improper Restriction of Operations within the Bounds of a Memory Buffer, CWE-20: Improper Input Validation","{'reason': 'Please provide the reasoning as well as CWE numbers.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1254,"class magnum::logging( $use_syslog = $::os_service_default, $use_stderr = $::os_service_default, $log_facility = $::os_service_default, $log_dir = '/var/log/magnum', $debug = $::os_service_default, $logging_context_format_string = $::os_service_default, $logging_default_format_string = $::os_service_default, $logging_debug_format_suffix = $::os_service_default, $logging_exception_prefix = $::os_service_default, $log_config_append = $::os_service_default, $default_log_levels = $::os_service_default, $publish_errors = $::os_service_default, $fatal_deprecations = $::os_service_default, $instance_format = $::os_service_default, $instance_uuid_format = $::os_service_default, $log_date_format = $::os_service_default, ) { oslo::log { 'magnum_config': debug => $debug, use_syslog => $use_syslog, use_stderr => $use_stderr, log_dir => $log_dir, syslog_log_facility => $log_facility, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format, } }",1,1,"debug => $debug, use_syslog => $use_syslog, use_stderr => $use_stderr, log_dir => $log_dir, syslog_log_facility => $log_facility, logging_context_format_string => $logging_context_format_string, logging_default_format_string => $logging_default_format_string, logging_debug_format_suffix => $logging_debug_format_suffix, logging_exception_prefix => $logging_exception_prefix, log_config_append => $log_config_append, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format,, default_log_levels => $default_log_levels, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format,, fatal_deprecations => $fatal_deprecations,, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format,, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format,, instance_uuid_format => $instance_uuid_format,, log_date_format => $log_date_format,, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format,, publish_errors => $publish_errors,, publish_errors => $publish_errors, fatal_deprecations => $fatal_deprecations, log_date_format => $log_date_format, instance_format => $instance_format, instance_uuid_format => $instance_uuid_format,","CWE-119, CWE-754","{'reason': 'The log configuration details are not related to the vulnerabilities described by the CWE.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1255,"class puppet::settings { include ::config $conf = $::operatingsystem ? { windows => 'c:/programdata/puppetlabs/puppet/etc/puppet.conf', default => ""/etc/puppet/puppet.conf"", } if ($pin_puppet_server != '') { $puppet_server = $pin_puppet_server $puppet_servers = [ $pin_puppet_server ] } else { $puppet_server = $::config::puppet_server $puppet_servers = $::config::puppet_servers } }",0,1,"class puppet::settings { include ::config $conf = $::operatingsystem? { windows => 'c:/programdata/puppetlabs/puppet/etc/puppet.conf', default =>, else {\\\\\\\\\\\\\\\\\\n $puppet_server = $::config::puppet_server\\\\\\\\\\\\\\\\\\n $puppet_servers = $::config::puppet_servers\\\\\\\\\\\\\\\\\\n}, else {\\\\n $puppet_server = $::config::puppet_server\\\\n $puppet_servers = $::config::puppet_servers\\\\n}, else {\\n $puppet_server = $::config::puppet_server\\n $puppet_servers = $::config::puppet_servers\\n}, if ($pin_puppet_server!= '') {\\\\\\\\n $puppet_server = $pin_puppet_server\\\\\\\\n $puppet_servers = [ $pin_puppet_server ]\\\\\\\\n} else {\\\\\\\\n $puppet_server = $::config::puppet_server\\\\\\\\n $puppet_servers = $::config::puppet_servers\\\\\\\\n}, if ($pin_puppet_server!= '') {\\n $puppet_server = $pin_puppet_server\\n $puppet_servers = [ $pin_puppet_server ]\\n} else {\\n $puppet_server = $::config::puppet_server\\n $puppet_servers = $::config::puppet_servers\\n}, if ($pin_puppet_server!= '') {\n $puppet_server = $pin_puppet_server\n $puppet_servers = [ $pin_puppet_server ]\n} else {\n $puppet_server = $::config::puppet_server\n $puppet_servers = $::config::puppet_servers\n}",CWE-798,"{'reason': 'This misconfiguration is related to CWE-798 because the original source code contains a hardcoded string for the file path in Windows environments.', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1256,"class tweaks::pwrshell_options { shared::execonce { ""pwrshellopt"": command => '""c:\windows\system32\windowspowershell\v1.0\powershell.exe"" -noprofile set-executionpolicy unrestricted', } }",0,1,"shared::execonce { \, shared::execonce { \\, shared::execonce { \\\\, shared::execonce { \\\\\\, shared::execonce { \\\\\\\\\\\\\\\\, shared::execonce { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, shared::execonce {{'reason': 'The shared::execonce { \\, shared::execonce { \\\\, shared::execonce { \\\\\\\\, shared::execonce { \\\\\\\\\\\\, shared::execonce { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, shared::execonce { \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, shared::execonce {related_cwe': 'CWE-120', 'is_misconfiguration_related': 'Yes'}"
1257,"define tripleo::pacemaker::haproxy_with_vip($vip_name, $ip_address, $ensure = true) { if($ensure) { if is_ipv6_address($ip_address) { $netmask = '64' } else { $netmask = '32' } pacemaker::resource::ip { ""${vip_name}_vip"": ip_address => $ip_address, cidr_netmask => $netmask, } pacemaker::constraint::base { ""${vip_name}_vip-then-haproxy"": constraint_type => 'order', first_resource => ""ip-${ip_address}"", second_resource => 'haproxy-clone', first_action => 'start', second_action => 'start', constraint_params => 'kind=optional', require => [pacemaker::resource::service['haproxy'], pacemaker::resource::ip[""${vip_name}_vip""]], } pacemaker::constraint::colocation { ""${vip_name}_vip-with-haproxy"": source => ""ip-${ip_address}"", target => 'haproxy-clone', score => 'infinity', require => [pacemaker::resource::service['haproxy'], pacemaker::resource::ip[""${vip_name}_vip""]], } } }",0,1,"if is_ipv6_address($ip_address), pacemaker::constraint::base {, pacemaker::constraint::colocation {, pacemaker::resource::ip {","CWE-119, CWE-200, CWE-295","{'reason': 'Since the script is comparing the type of an IP address to determine whether or not to set a netmask, we can conclude that this script is vulnerable to CWE-295. In order to avoid the vulnerability, the script must be updated so that the netmask is explicitly set to 64 for IPv6 addresses and 32 for IPv4 addresses, rather than implicitly depending on the result of an if statement. This is important because if the address type is incorrect, the netmask may not be set properly and the system may become vulnerable.', 'related_cwe': 'CWE-119, CWE-295', 'is_misconfiguration_related': 'Yes'}"
1258,"define ceph::rgw::apache ( $admin_email = 'root@localhost', $docroot = '/var/www', $fcgi_file = '/var/www/s3gw.fcgi', $rgw_dns_name = $::fqdn, $rgw_port = 80, $rgw_socket_path = $::ceph::params::rgw_socket_path, $syslog = true, $ceph_apache_repo = true, ) { warning ('class rgw::apache is deprecated in favor of rgw::apache_fastcgi') ceph::rgw::apache_fastcgi { $name: admin_email => $admin_email, docroot => $docroot, fcgi_file => $fcgi_file, rgw_dns_name => $rgw_dns_name, rgw_port => $rgw_port, rgw_socket_path => $rgw_socket_path, syslog => $syslog, ceph_apache_repo => $ceph_apache_repo, } }",1,1,"admin_email => $admin_email,, ceph::rgw::apache_fastcgi { $name: admin_email => $admin_email,, ceph_apache_repo => $ceph_apache_repo,, docroot => $docroot,, fcgi_file => $fcgi_file,, rgw_dns_name => $rgw_dns_name,, rgw_port => $rgw_port,, rgw_socket_path => $rgw_socket_path,, syslog => $syslog,, warning (\'class rgw::apache is deprecated in favor of rgw::apache_fastcgi\'\n","CWE-22, CWE-416","{'reason': 'CWE-416', 'related_cwe': 'CWE-416', 'is_misconfiguration_related': 'No'}"
1259,"class tripleo::vip_hosts ( $hosts_spec ) { create_resources('host', $hosts_spec) }",0,1,"class tripleo::vip_hosts ( $hosts_spec ) { create_resources('host', $hosts_spec) }",CWE-22,"{'reason': ""The misconfiguration is related to CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'). The hosts_spec parameter contains a list of hosts, and it's a common misconfiguration to include an empty string in the list, which can allow attackers to change the hostname."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1260,"define shared::execonce( $command, $cwd=undef, $environment=undef, $group=undef, $logoutput=undef, $onlyif=undef, $path=undef, $provider=undef, $refresh=undef, $refreshonly=undef, $returns=undef, $timeout=undef, $tries=undef, $try_sleep=undef, $umask=undef, $unless=undef, $user=undef, ) { include shared::execonce::base $semaphore = ""${shared::execonce::base::semaphore_dir}/${title}.semaphore"" exec { $title: command => $command, cwd => $cwd, environment => $environment, group => $group, logoutput => $logoutput, onlyif => $onlyif, path => $path, provider => $provider, refresh => $refresh, refreshonly => $refreshonly, returns => $returns, timeout => $timeout, tries => $tries, try_sleep => $try__sleep, umask => $umask, unless => $unless, user => $user, creates => $semaphore; } file { $semaphore: ensure => present, require => exec[$title]; } }",1,1,"define shared::execonce( $command, $cwd=undef, $environment=undef, $group=undef, $logoutput=undef, $onlyif=undef, $path=undef, $provider=undef, $refresh=undef, $refreshonly=undef, $returns=undef, $timeout=undef, $tries=undef, $try_sleep=undef, $umask=undef, $unless=undef, $user=undef, ) { include shared::execonce::base $semaphore = \, exec { $title: command => $command, cwd => $cwd, environment => $environment, group => $group, logoutput => $logoutput, onlyif => $onlyif, path => $path, provider => $provider, refresh => $refresh, refreshonly => $refreshonly, returns => $returns, timeout => $timeout, tries => $tries, try_sleep => $try_sleep, umask => $umask, unless => $unless, user => $user, creates => $semaphore; }, exec { \\, exec { \\\\n\t\t\tcommand => $command, \\, file { $semaphore: \\, file { $semaphore: ensure => present, require => exec[$title]; }, shared::execonce { \, shared::execonce { \\, shared::execonce { \\\\, shared::execonce { \\\\\\\\}",CWE-77,"{'reason': 'CWE-77 describes the problem of missing input validation for data manipulation, which occurs when the data is not validated correctly by the program.', 'related_cwe': 'CWE-77', 'is_misconfiguration_related': 'Yes'}"
1261,"node /designate/ { include '::apt' include '::rabbitmq' include '::mysql::server' $rabbit_host = '127.0.0.1' $rabbit_userid = 'guest' $rabbit_password = 'guest' $auth_strategy = 'noauth' $backend_driver = 'bind9' $designate_db_password = 'admin' $db_host = '127.0.0.1' include '::designate::dns' include '::designate::backend::bind9' class {'::designate::db::mysql': password => $designate_db_password, } class {'::designate': rabbit_host => $rabbit_host, rabbit_userid => $rabbit_userid, rabbit_password => $rabbit_password, } class {'::designate::db': database_connection => ""mysql://designate:${designate_db_password}@${db_host}/designate"" } class {'::designate::api': auth_strategy => $auth_strategy, } class {'::designate::central': backend_driver => $backend_driver, } }",0,1,"auth_strategy => \\\\\\\\$auth_strategy,, backend_driver => \\\\\\\\\\\\\\\\\\$backend_driver,, class \\\'::designate::db::mysql':, database_connection => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, include '::designate::api', include '::designate::central', include '::designate::dns', rabbit_host => \$rabbit_host,, rabbit_password => \\\\$rabbit_password,, rabbit_userid => \\$rabbit_userid,","CWE-264, CWE-312, CWE-352, CWE-73, CWE-74","{'reason': ""The issue of `auth_strategy` is related to CWE-73 since the value can be provided by the end-user. Although it's not always required in a secure system to require authentication, it's important to consider whether it should be required. In this example, there is no authentication required by default, and the system is using RabbitMQ for interprocess communication. By default, RabbitMQ allows unauthenticated connections, and this issue makes it more difficult to audit the use of RabbitMQ in the system. In order to make sure that only authorized users are allowed to connect to RabbitMQ, authentication should be required and users should be required to authenticate. Without authentication, it's possible for anyone to connect to the RabbitMQ system, which makes it harder"", 'related_cwe': 'CWE-73', 'is_misconfiguration_related': 'Yes'}"
1262,"class fuel::nailgun::client ( $server_address = $::fuel::params::nailgun_host, $server_port = $::fuel::params::nailgun_port, $keystone_port = $::fuel::params::keystone_port, $keystone_user = $::fuel::params::keystone_admin_user, $keystone_password = $::fuel::params::keystone_admin_password, $keystone_tenant = $::fuel::params::keystone_admin_tenant, $auth_url = ""http://$server_address:$server_port/keystone/v2.0"", ) inherits fuel::params { ensure_packages([""python-fuelclient""]) file {['/root/.config', '/root/.config/fuel']: ensure => directory } file { ""/root/.config/fuel/fuel_client.yaml"": owner => 'root', group => 'root', mode => '0600', content => template(""fuel/nailgun/client.yaml.erb""), require => file['/root/.config/fuel'], } }",0,1,"auth_url = \, ensure => directory} file {\\\\\, ensure_packages([\, keystone_password = \\, keystone_port = \\\\\\, keystone_tenant = \\\\, keystone_user = \\, mode => '0600',} file {\\\\\\\\\\\\\\\\\\\\\\\\\\, server_address = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, server_port = \\\\\\\\\\\\\\\\",nan,"{'reason': 'The reason for the misconfiguration being related to CWE-319 is...', 'related_cwe': 'CWE-319', 'is_misconfiguration_related': 'Yes'}"
1263,"class nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $default_availability_zone_real = pick( $::nova::compute::default_availability_zone, $default_availability_zone) $default_schedule_zone_real = pick( $::nova::compute::default_schedule_zone, $default_schedule_zone) $internal_service_availability_zone_real = pick( $::nova::compute::internal_service_availability_zone, $internal_service_availability_zone) nova_config { 'default/default_availability_zone': value => $default_availability_zone_real; 'default/default_schedule_zone': value => $default_schedule_zone_real; 'default/internal_service_availability_zone': value => $internal_service_availability_zone_real; } }",0,1,"nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $default_availability_zone_real = pick( $::nova::compute::default_availability_zone, $default_availability_zone), nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $default_availability_zone_real = pick( $::nova::compute::default_availability_zone, $default_availability_zone);, nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $default_schedule_zone_real = pick( $::nova::compute::default_schedule_zone, $default_schedule_zone), nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $default_schedule_zone_real = pick( $::nova::compute::default_schedule_zone, $default_schedule_zone);, nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $internal_service_availability_zone_real = pick( $::nova::compute::internal_service_availability_zone, $internal_service_availability_zone), nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { $internal_service_availability_zone_real = pick( $::nova::compute::internal_service_availability_zone, $internal_service_availability_zone);, nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { nova_config { 'default/default_availability_zone': value => $default_availability_zone_real; }, nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { nova_config { 'default/default_schedule_zone': value => $default_schedule_zone_real; }, nova::availability_zone ( $default_availability_zone = $::os_service_default, $default_schedule_zone = $::os_service_default, $internal_service_availability_zone = $::os_service_default, ) { nova_config { 'default/internal_service_availability_zone': value => $internal_service_availability_zone_real; }",CWE-20,"{'reason': ""In this code snippet, the default_availability_zone variable is used to define a new variable called default_availability_zone_real. This new variable is then used to set the value of the nova_config resource 'default/default_availability_zone'. Similarly, the default_schedule_zone and internal_service_availability_zone variables are also used to set the values of two other nova_config resources."", 'related_cwe': 'CWE-20: Uncontrolled Resource Consumption', 'is_misconfiguration_related': 'Yes'}"
1264,"define nagios::host ( $path = $nagios::params::config_dir, $prefix = '', $onefile = true, $properties = {}, $defaults = {}, $ensure = present, $custom_vars = {}, ){ validate_hash($properties, $defaults) $opts = {} if is_array($properties['contact_groups']){ $opts['contact_groups'] = join(sort($properties['contact_groups']), ',') }else{ $opts['contact_groups'] = $properties['contact_groups'] } if $onefile { $target = ""${path}/${prefix}hosts.cfg"" }else{ $target = ""${path}/${prefix}host_${name}.cfg"" } $opts['target'] = $target $opts['ensure'] = $ensure $opts['notify'] = class['nagios::server_service'] if $properties['host_name'] == undef { $opts['host_name'] = $name $host_name = $name }else{ $host_name = $properties['host_name'] } if $properties['display_name'] == undef { $opts['display_name'] = $name } $final_params = merge($properties, $opts) if ! empty($custom_vars){ $new_use = ""custom-vars-${host_name}"" if $final_params['use']{ $original_use = $final_params['use'] }elsif $defaults['use']{ $original_use = $defaults['use'] }else{ $original_use = undef } $final_params['use'] = $new_use nagios::object_custom_vars{ $host_name: object_name => 'host', variables => $custom_vars, use => $original_use, prefix => $prefix, } } $params = { ""${host_name}"" => $final_params, } create_resources(nagios_host, $params, $defaults) if ! defined(file[$target]){ file { $target: ensure => $properties['ensure'], mode => '0644', require => nagios_host[$host_name], notify => class['nagios::server_service'], } } }",0,1,"create_resources(nagios_host, $params, $defaults), file { $target: ensure => $properties['ensure'], mode => '0644', require => nagios_host[$host_name], notify => class['nagios::server_service'], }, if $onefile { $target =, if $properties['display_name'] == undef { $opts['display_name'] = $name }, if $properties['host_name'] == undef { $opts['host_name'] = $name $host_name = $name }else{ $host_name = $properties['host_name'] }, nagios::object_custom_vars{ $host_name: object_name => 'host', variables => $custom_vars, use => $original_use, prefix => $prefix, }, nagios_host[$host_name], validate_hash($properties, $defaults)","CWE-1033, CWE-1047","{'reason': 'This misconfiguration is related to the CWE because a bad actor could use the misconfiguration to change the host_name property, which would cause the host to report inaccurate information to the Nagios monitoring software. By changing the host_name property, a bad actor could trick Nagios into thinking a legitimate host is reporting inaccurate information, which could cause a system outage or disruption in services. Additionally, this vulnerability could also be exploited to insert false information into the system, causing users to believe they are getting accurate reports when in fact they are not.', 'related_cwe': 'CWE-1033, CWE-1047', 'is_misconfiguration_related': 'Yes'}"
1265,"class osnailyfacter::tools::tools { notice('modular: tools/tools.pp') $atop_hash = hiera('atop', {}) $atop_enabled = pick($atop_hash['service_enabled'], true) $atop_interval = pick($atop_hash['interval'], 20) $atop_rotate = pick($atop_hash['rotate'], 7) $custom_acct_file = hiera('custom_accounting_file', undef) $puppet = hiera('puppet') $deployment_mode = hiera('deployment_mode') class { '::osnailyfacter::atop': service_enabled => $atop_enabled, interval => $atop_interval, rotate => $atop_rotate, custom_acct_file => $custom_acct_file, } class { '::osnailyfacter::ssh': } unless (versioncmp($::operatingsystemmajrelease, '16') >= 0) { ensure_packages(['postfix']) service { 'postfix': ensure => running, enable => true, require => package['postfix'], } augeas { 'configure postfix': context => '/files/etc/postfix/main.cf', changes => [ ""set /files/etc/postfix/main.cf/mydestination ${::fqdn},localhost"", ""set /files/etc/postfix/main.cf/myhostname ${::fqdn}"", 'set /files/etc/postfix/main.cf/inet_interfaces loopback-only', 'set /files/etc/postfix/main.cf/default_transport error', 'set /files/etc/postfix/main.cf/relay_transport error', ], notify => service['postfix'], require => package['postfix'], } } if $::virtual != 'physical' { class { '::osnailyfacter::acpid': } } $tools = [ 'screen', 'tmux', 'htop', 'tcpdump', 'strace', 'fuel-misc', 'man-db', ] $cloud_init_services = [ 'cloud-config', 'cloud-final', 'cloud-init', 'cloud-init-container', 'cloud-init-local', 'cloud-init-nonet', 'cloud-log-shutdown', ] if ($::operatingsystem == 'ubuntu') { service { $cloud_init_services: enable => false, } } package { $tools : ensure => 'present', } package { 'cloud-init': ensure => 'absent', } if $::osfamily == 'debian' { apt::conf { 'notranslations': ensure => 'present', content => 'acquire::languages ""none"";', notify_update => false, } } class { '::osnailyfacter::puppet_pull': modules_source => $puppet['modules'], manifests_source => $puppet['manifests'], } }",1,0,"auegeas {'configure postfix': context => '/files/etc/postfix/main.cf', changes => [ \, augeas {'configure postfix': context => '/files/etc/postfix/main.cf', changes => [ \\, augeas {'configure postfix': context => '/files/etc/postfix/main.cf', changes => [ \\\\, augeas {'configure postfix': context => '/files/etc/postfix/main.cf', changes => [ \\\\\\\\\\\, augeas {'configure postfix': context => '/files/etc/postfix/main.cf', changes => [ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, ensure_packages(['postfix'])",CWE-248,"{'reason': 'Not a vulnerability because there is a patch available for all supported distributions.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1266,"class eventlogging { require ::service $path = ""${::service::root_dir}/eventlogging"" git::clone { 'eventlogging': directory => $path, } service::gitupdate { 'eventlogging': type => 'python', update => true, require => git::clone['eventlogging'], } require_package('libmysqlclient-dev') require_package('librdkafka-dev') exec { 'eventlogging_virtualenv_pip_install': command => ""${path}/virtualenv/bin/pip install -e ."", cwd => $path, creates => ""${path}/virtualenv/local/lib/python2.7/site-packages/eventlogging.egg-link"", require => [ service::gitupdate['eventlogging'], package['libmysqlclient-dev'], package['librdkafka-dev'] ], } }",0,1,"class eventlogging { require ::service, exec { 'eventlogging_virtualenv_pip_install':, service::gitupdate { 'eventlogging':",CWE-93: Improper Control of Privileges for Captive/Inmate Data,"{'reason': 'Please justify your answer.', 'related_cwe': 'CWE number(s) related to the issue', 'is_misconfiguration_related': 'Yes'}"
1267,class { '::openstack_tasks::keystone::openrc_delete' :} warning('osnailyfacter/modular/./keystone/openrc_delete.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/openrc_delete.pp'),1,1,class { '::openstack_tasks::keystone::openrc_delete' :} warning('osnailyfacter/modular/./keystone/openrc_delete.pp is deprecated in mitaka and will be removed in newton. please use openstack_tasks/examples/./keystone/openrc_delete.pp'),CWE-20,"{'reason': 'This is a good example for CWE-20. It is common for Puppet module development teams to release a warning message when they identify that an older version is about to be removed or depreciated. This message helps puppet users be aware of the change, and provides a suggestion to improve the user experience.', 'related_cwe': 'CWE-20', 'is_misconfiguration_related': 'Yes'}"
1268,"class openstack::galera::client ( $custom_setup_class = 'galera', ) { if $custom_setup_class == 'percona' { $use_percona = true $use_percona_packages = false } elsif ($custom_setup_class == 'percona_packages') { $use_percona = true $use_percona_packages = true } else { $use_percona = false $use_percona_packages = false } if ($use_percona) { case $::osfamily { 'redhat': { if ($use_percona_packages) { $mysql_client_name = 'percona-xtradb-cluster-client-56' } else { fail(""unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only supports debian when not using the percona packages"") } } 'debian': { if ($use_percona_packages) { $mysql_client_name = 'percona-xtradb-cluster-client-5.6' } else { $mysql_client_name = 'percona-xtradb-cluster-client-5.5' } } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only support osfamily redhat and debian"") } } } else { case $::osfamily { 'redhat': { $mysql_client_name = 'mysql-client-wsrep' } 'debian': { if $::operatingsystemrelease =~ /^14/ { $mysql_client_name = 'mysql-client-5.6' } else { $mysql_client_name = 'mysql-wsrep-client-5.6' } } default: { fail(""unsupported osfamily: ${::osfamily} operatingsystem: ${::operatingsystem}, module ${module_name} only support osfamily redhat and debian"") } } } class { 'mysql::client': package_name => $mysql_client_name, } }",1,1,"class {'mysql::client': package_name => $mysql_client_name, }","CWE-117, CWE-119, CWE-120, CWE-129, CWE-352, CWE-732","{'reason': 'This is a misconfiguration because', 'related_cwe': 'CWE-117, CWE-119, CWE-120, CWE-129, CWE-352, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1269,"class fuel::auxiliaryrepos( $fuel_version, $repo_root = $::fuel::params::repo_root, $priority = '15', ) inherits fuel::params { $centos_dir = ""${repo_root}/centos/auxiliary/"" $ubuntu_dir = ""${repo_root}/ubuntu/auxiliary/"" file { $centos_dir: ensure => directory, owner => 'root', group => 'root', mode => '0755', } exec['create_centos_repo_dirs'] -> file[$centos_dir] -> package['createrepo'] -> exec[""createrepo ${centos_dir}""] -> yumrepo[""${fuel_version}_auxiliary""] yumrepo { ""${fuel_version}_auxiliary"": name => ""${fuel_version}_auxiliary"", descr => ""${fuel_version}_auxiliary"", baseurl => ""file://${centos_dir}"", gpgcheck => '0', priority => $priority, } ensure_packages(['createrepo']) exec { 'create_centos_repo_dirs': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => ""mkdir -p ${centos_dir}"", unless => ""test -d ${centos_dir}"", } exec { ""createrepo ${centos_dir}"": path => '/bin:/sbin:/usr/bin:/usr/sbin', cwd => $centos_dir, creates => ""${centos_dir}/repodata/repomd.xml"", } $release_files = [ ""${ubuntu_dir}/dists/auxiliary/release"", ""${ubuntu_dir}/dists/auxiliary/main/binary-amd64/release"", ""${ubuntu_dir}/dists/auxiliary/restricted/binary-amd64/release""] exec['create_ubuntu_repo_dirs'] -> exec['create_ubuntu_repo_packages'] -> file[$release_files] exec { 'create_ubuntu_repo_dirs': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => ""bash -c \""mkdir -p ${ubuntu_dir}/pool/{main,restricted} ${ubuntu_dir}/dists/auxiliary/{main,restricted}/binary-amd64/\"""", unless => ""test -d ${ubuntu_dir}/pool && \ test -d ${ubuntu_dir}/dists/auxiliary/main/binary-amd64 && \ test -d ${ubuntu_dir}/dists/auxiliary/restricted/binary-amd64"", } exec { 'create_ubuntu_repo_packages': path => '/bin:/sbin:/usr/bin:/usr/sbin', command => ""bash -c \""touch ${ubuntu_dir}/dists/auxiliary/{main,restricted}/binary-amd64/packages\"""", unless => ""test -f ${ubuntu_dir}/dists/auxiliary/main/binary-amd64/packages && \ test -f ${ubuntu_dir}/dists/auxiliary/restricted/binary-amd64/packages"", } file { $release_files: ensure => file, replace => false, source => 'puppet:///modules/fuel/release-auxiliary', mode => '0644', owner => 'root', group => 'root', } }",1,1,"ensure_packages(['createrepo']), exec { 'create_centos_repo_dirs':, exec { 'create_ubuntu_repo_dirs':, exec { 'create_ubuntu_repo_packages':, exec { 'createrepo',, file { $release_files:, file[$release_files]:, package['createrepo'], yumrepo { \, yumrepo[",CWE-284,"{'reason': 'The script checks if the repo directories are not present using the file resource type, but then uses the exec resource type to recreate the directories. This is not secure. The directories are recreated using the bash command which is not hardened and can be modified at runtime. It is possible that the directories could be removed before the script executes again and then recreated. This creates an opportunity for someone to gain elevated privileges.', 'related_cwe': 'CWE-284', 'is_misconfiguration_related': 'Yes'}"
1270,"class mwv ( $files_dir, $etc_dir, $services_dir, $vendor_dir, $enable_cachefilesd, $tld, ) { include ::apt include ::env include ::git file { $etc_dir: ensure => directory, owner => 'root', group => 'root', mode => '0755', } file { $vendor_dir: ensure => directory, owner => 'root', group => 'root', mode => '0755', } if $::share_group =~ /^\d+$/ { group { 'vagrant_share': ensure => 'present', gid => $::share_group, allowdupe => true, } -> file <| |> } if $::share_owner =~ /^\d+$/ { user { 'vagrant_share': ensure => 'present', uid => $::share_owner, gid => $::share_group, allowdupe => true, } -> file <| |> } package { 'python-pip': } -> package <| provider == pip |> package { [ 'build-essential', 'python-dev', 'ruby-dev' ]: } package { [ 'chef', 'chef-zero' ]: ensure => absent, } if $enable_cachefilesd { package { 'cachefilesd': ensure => present, } file { '/etc/default/cachefilesd': content => ""run=yes\nstarttime=5\n"", require => package['cachefilesd'], } service { 'cachefilesd': ensure => running, require => package['cachefilesd'], subscribe => file['/etc/default/cachefilesd'], } } else { package { 'cachefilesd': ensure => absent, } } }",1,1,"file { '/etc/default/cachefilesd': content =>, package { 'cachefilesd': ensure => absent, }, package { 'cachefilesd': ensure => present, } -> package <| provider == pip |>, package { 'python-pip': } -> package <| provider == pip |>, package { [ 'chef', 'chef-zero' ]: ensure => absent, }, service { 'cachefilesd': ensure => running, require => package['cachefilesd'], subscribe => file['/etc/default/cachefilesd'], }",CWE-22,"{'reason': ""The misconfiguration is related to CWE-22 because the Puppet file module is used to create a user with UID 0. The 'allowdupe' attribute is also set to 'true'. These two misconfigurations cause the puppet code to be vulnerable to privilege escalation attacks."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1271,"class glance::keystone::auth( $password, $email = 'glance@localhost', $auth_name = 'glance', $configure_endpoint = true, $configure_user = true, $configure_user_role = true, $service_name = 'glance', $service_type = 'image', $region = 'regionone', $tenant = 'services', $service_description = 'openstack image service', $public_url = 'http://127.0.0.1:9292', $admin_url = 'http://127.0.0.1:9292', $internal_url = 'http://127.0.0.1:9292', ) { include ::glance::deps if $configure_endpoint { keystone_endpoint[""${region}/${service_name}::${service_type}""] ~> anchor['glance::service::begin'] } keystone::resource::service_identity { 'glance': configure_user => $configure_user, configure_user_role => $configure_user_role, configure_endpoint => $configure_endpoint, service_type => $service_type, service_description => $service_description, service_name => $service_name, auth_name => $auth_name, region => $region, password => $password, email => $email, tenant => $tenant, public_url => $public_url, admin_url => $admin_url, internal_url => $internal_url, } if $configure_user_role { keystone_user_role[""${auth_name}@${tenant}""] ~> anchor['glance::service::begin'] } }",1,1,"include ::glance::deps, keystone::resource::service_identity, keystone_user_role","CWE-120, CWE-20, CWE-22, CWE-269, CWE-276, CWE-312, CWE-320, CWE-321, CWE-322, CWE-732","{'reason': 'User provided credentials. There is a possibility that they may be exposed to other services that may not be required to view them. However, a larger issue exists in that if the admin console has access to a glance server, it can see all images and user credentials. User credentials are used to access images on the server.', 'related_cwe': 'CWE-120, CWE-20, CWE-22, CWE-269, CWE-276, CWE-312, CWE-320, CWE-321, CWE-322, CWE-732', 'is_misconfiguration_related': 'Yes'}"
1272,class { '::osnailyfacter::openstack_haproxy::openstack_haproxy_cinder' :},1,1,class { '::osnailyfacter::openstack_haproxy::openstack_haproxy_cinder' :},CWE-312,"{'reason': 'The module is used to define parameters and defaults to be passed to HAProxy, it contains a single class definition that is responsible for populating the haproxy config, which is then fed to the haproxy service.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
1273,"class osnailyfacter::astute::purge_service_entries { notice('modular: astute/purge_service_entries.pp') $deleted_hosts = hiera('deleted_nodes',[]) unless empty($deleted_hosts) { ensure_resource('nova_service', $deleted_hosts, {'ensure' => 'absent'}) } }",1,1,"class osnailyfacter::astute::purge_service_entries {, ensure_resource('nova_service', $deleted_hosts, {'ensure' => 'absent'})",CWE-732,"{'reason': ""This is a Puppet custom resource.  When called, it will use the deleted_nodes variable (which should be populated by an external service) to query and delete the specified nova_service entries.  This resource is related to the 'Improper Control of a Resource Through its life cycle' CWE (732) because if the deleted_hosts variable is not populated (or contains erroneous data), the resource will be used to delete service entries that do not exist, resulting in an incorrect deletion of data.  The resource is also related to the 'Incorrect Usage of Resource Parameters' CWE (732) because of improper use of a resource ensure parameter.  Ensuring a resource absent, and then immediately ensuring the resource present, is likely to result in an inconsistent state"", 'related_cwe': '732', 'is_misconfiguration_related': 'Yes'}"
1274,"class osnailyfacter::netconfig::hiera_default_route { notice('modular: netconfig/hiera_default_route.pp') $loaded_network_scheme = hiera_hash('network_scheme', {}) $management_vrouter_vip = hiera('management_vrouter_vip') $management_role = 'mgmt/vip' $admin_role = 'admin/pxe' prepare_network_config($loaded_network_scheme) $public_br = get_network_role_property('public/vip', 'interface') $admin_br = get_network_role_property($admin_role, 'interface') $mgmt_br = get_network_role_property($management_role, 'interface') if (has_key($loaded_network_scheme['endpoints'], $public_br) or !is_ip_address($management_vrouter_vip)) { $network_scheme = $loaded_network_scheme } else { $new_network_scheme = configure_default_route($loaded_network_scheme, $management_vrouter_vip, $admin_role, $management_role) $network_scheme = empty($new_network_scheme) ? { default => $loaded_network_scheme, false => $new_network_scheme } } if $loaded_network_scheme != $network_scheme { file {'/etc/hiera/override/configuration/default_route.yaml': ensure => file, mode => '0640', content => inline_template(' network_scheme: endpoints: <%= @admin_br %>: gateway: """" <%= @mgmt_br %>: gateway: ""<%= @management_vrouter_vip %>"" '), } } else { file {'/etc/hiera/override/configuration/default_route.yaml': ensure => absent, } } }",0,1,"content => inline_template(' network_scheme: endpoints: <%= @admin_br %>: gateway:, file {'/etc/hiera/override/configuration/default_route.yaml':, notice('modular: netconfig/hiera_default_route.pp')",CWE-345,"{'reason': 'CWE-345 is a generic term describing CWEs that have to do with unintended file system access (e.g. reading or modifying data). However, in this case, the issue is caused by the user modifying the content field of a Puppet file resource. As such, the related CWE is not related to the issue in this case.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1275,"class cinder::params { include ::openstacklib::defaults if $::osfamily == 'debian' { $package_name = 'cinder-common' $client_package = 'python-cinderclient' $api_package = 'cinder-api' $api_service = 'cinder-api' $backup_package = 'cinder-backup' $backup_service = 'cinder-backup' $scheduler_package = 'cinder-scheduler' $scheduler_service = 'cinder-scheduler' $volume_package = 'cinder-volume' $volume_service = 'cinder-volume' $db_sync_command = 'cinder-manage db sync' $tgt_package_name = 'tgt' $tgt_service_name = 'tgt' $ceph_init_override = '/etc/init/cinder-volume.override' $iscsi_helper = 'tgtadm' $lio_package_name = 'targetcli' $lock_path = '/var/lock/cinder' $cinder_wsgi_script_path = '/usr/lib/cgi-bin/cinder' $cinder_wsgi_script_source = '/usr/bin/cinder-wsgi' } elsif($::osfamily == 'redhat') { $package_name = 'openstack-cinder' $client_package = 'python-cinderclient' $api_package = false $api_service = 'openstack-cinder-api' $backup_package = false $backup_service = 'openstack-cinder-backup' $scheduler_package = false $scheduler_service = 'openstack-cinder-scheduler' $volume_package = false $volume_service = 'openstack-cinder-volume' $db_sync_command = 'cinder-manage db sync' $tgt_package_name = 'scsi-target-utils' $tgt_service_name = 'tgtd' $ceph_init_override = '/etc/sysconfig/openstack-cinder-volume' $lio_package_name = 'targetcli' $lock_path = '/var/lib/cinder/tmp' $cinder_wsgi_script_path = '/var/www/cgi-bin/cinder' $cinder_wsgi_script_source = '/usr/bin/cinder-wsgi' case $::operatingsystem { 'redhat', 'centos', 'scientific', 'oraclelinux': { if (versioncmp($::operatingsystemmajrelease, '7') >= 0) { $iscsi_helper = 'lioadm' } else { $iscsi_helper = 'tgtadm' } } default: { $iscsi_helper = 'lioadm' } } } else { fail(""unsupported osfamily ${::osfamily}, currently debian and redhat are the only supported platforms"") } }",1,1,"if (versioncmp($::operatingsystemmajrelease, '7') >= 0), include ::openstacklib::defaults",CWE-22,"{'reason': ""Cinder is supported by the platform, so the OSfamily should be set accordingly, otherwise the package will not be installed, including the necessary dependencies. If the OSfamily isn't redhat or debian, there's no point in trying to install the Cinder dependencies, as they are exclusive to Redhat and Debian. By omitting this check, we risk a failed deployment and misconfiguration of the dependencies on the operating system."", 'related_cwe': 'CWE-22', 'is_misconfiguration_related': 'Yes'}"
1276,"define heka::input::logstreamer( $config_dir, $decoder, $splitter = undef, $log_directory = '/var/log', $file_match = undef, $differentiator = undef, $priority = undef, $ensure = present, ) { include heka::params if $differentiator and ('/' in $differentiator) { fail('differentiator contains a slash character') } file { ""${config_dir}/logstreamer-${title}.toml"": ensure => $ensure, content => template('heka/input/logstreamer.toml.erb'), mode => '0600', owner => $heka::params::user, group => $heka::params::user, } }",1,1,"content => template('heka/input/logstreamer.toml.erb'),, file {, group => $heka::params::user,, mode => '0600',, owner => $heka::params::user,","CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-798: Use of Potentially Dangerous Function","{'reason': ""The puppet module defines a function called 'file', which takes in a configuration directory path, decoder, splitter, log directory, file match, differentiator, and priority. The file function is used to create a configuration file with the specified settings. The file function is then executed, causing a potential security issue. CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') and CWE-798: Use of Potentially Dangerous Function are related to this issue because they relate to the injection of command or data into the execution of the file function, potentially resulting in the execution of arbitrary code on the system. The failure to correctly handle the injection could result in the execution of an arbitrary command on the system, potentially"", 'related_cwe': ""CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-798: Use of Potentially Dangerous Function"", 'is_misconfiguration_related': 'Yes'}"
1277,"class osnailyfacter::cgroups::cgroups { notice('modular: cgroups/cgroups.pp') $cgroups_config = hiera('cgroups', {}) $cgroups_set = prepare_cgroups_hash($cgroups_config) unless empty($cgroups_set) { class { '::cgroups': cgroups_set => $cgroups_set, } } }",0,1,"class { '::cgroups': cgroups_set => $cgroups_set, }","CWE-20, CWE-22, CWE-26, CWE-327, CWE-377, CWE-381, CWE-399","{'reason': 'CWE-377 and CWE-381 are not related to this misconfiguration because they only describe data leaks, and not misconfigurations.', 'related_cwe': 'CWE-20, CWE-22, CWE-26, and CWE-327', 'is_misconfiguration_related': 'No'}"
1278,"class one::fake { file { ""/tmp/subclass_name_duplication1"": ensure => present } } class two::fake { file { ""/tmp/subclass_name_duplication2"": ensure => present } } include one::fake, two::fake",1,1,"file {\\\\n\\\\t\\\\t\\\\t\\\\t, file {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t, file {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t, file {\\n\\t\\t\\t\\t\\, file {\\n\\t\\t\\t\\t\\t\\, file {\n\t\t\t\t\, include one::fake, two::fake",CWE-502,"{'reason': 'The original defect label and misconfiguration label are both 1. The LLM matches to the CWE label.', 'related_cwe': 'CWE-502', 'is_misconfiguration_related': 'Yes'}"
1279,"class users::signer::setup($home, $username, $group) { anchor { 'users::signer::setup::begin': ; 'users::signer::setup::end': ; } anchor['users::signer::setup::begin'] -> python::user_pip_conf { $username: homedir => $home, group => $group; } -> anchor['users::signer::setup::end'] anchor['users::signer::setup::begin'] -> ssh::userconfig { $username: home => $home, group => $group, authorized_keys => [], authorized_keys_allows_extras => false; } -> anchor['users::signer::setup::end'] }",0,1,"anchor['users::signer::setup::begin'] -> ssh::userconfig { $username: home => $home, group => $group, authorized_keys => [], authorized_keys_allows_extras => false; } -> anchor['users::signer::setup::end'], python::user_pip_conf { $username: homedir => $home, group => $group; } -> anchor['users::signer::setup::end'], ssh::userconfig { $username: home => $home, group => $group, authorized_keys => [], authorized_keys_allows_extras => false; } -> anchor['users::signer::setup::end']","CWE-306 - Missing Authentication for Critical Function, CWE-601 - User Interface Missing Universal Unique Identifier (UUID)","{'reason': 'The misconfiguration is related to the CWE.', 'related_cwe': 'CWE-306 - Missing Authentication for Critical Function', 'is_misconfiguration_related': 'Yes'}"
1280,notice('modular: bigswitch restart-cluster-services') include bcf::params if $bcf::params::openstack::bcf_mode == 'p-only' { include bcf::p_only::restart_cluster_services } else { include bcf::p_v::restart_cluster_services },0,1,"else, else { include bcf::p_v::restart_cluster_services }, if, if $bcf::params::openstack::bcf_mode == 'p-only', include, include bcf::p_only::restart_cluster_services, include bcf::p_v::restart_cluster_services, include bcf::params, include bcf::params if",CWE-732,"{'reason': 'This misconfiguration is related to CWE 732 since the misconfiguration would allow a misconfigured puppet server to have different configurations and cause the entire service to fail to run, which is an example of CWE 732', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1281,"class role::score { include ::role::multimedia require_package('lilypond', 'timidity', 'freepats') mediawiki::extension { 'score': needs_update => true, require => [ package['lilypond'], package['timidity'], package['freepats'], ], } }",1,1,"mediawiki::extension {'score': needs_update => true, require => [ package['lilypond'], package['timidity'], package['freepats'], ], }, require_package('lilypond', 'timidity', 'freepats')",CWE-732,"{'reason': 'This misconfiguration is related to the provided CWE because [explain how]. CWE-732. This issue is related to the misconfiguration.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1282,"class fuel::mcollective( $mco_host = $::fuel::params::mco_host, $mco_port = $::fuel::params::mco_port, $mco_pskey = $::fuel::params::mco_pskey, $mco_vhost = $::fuel::params::mco_vhost, $mco_user = $::fuel::params::mco_user, $mco_password = $::fuel::params::mco_password, $mco_connector = $::fuel::params::mco_connector, $mco_packages_extra = $::fuel::params::mco_packages_extra, ) inherits fuel::params { include stdlib $mco_settings = { 'identity' => { value => 'master' }, 'ttl' => { value => '4294957' }, 'direct_addressing' => { value => '1' }, 'plugin.rabbitmq.vhost' => { value => $mco_vhost }, 'plugin.rabbitmq.pool.1.host' => { value => $mco_host }, 'plugin.rabbitmq.pool.1.port' => { value => $mco_port }, 'plugin.rabbitmq.pool.1.user' => { value => $mco_user }, 'plugin.rabbitmq.pool.1.password' => { value => $mco_password }, 'plugin.rabbitmq.heartbeat_interval' => { value => '30' } } if $::osfamily == 'redhat' { case $operatingsystemmajrelease { '6': { $mco_packages = ['ruby21-rubygem-mcollective-client', 'ruby21-nailgun-mcagents'] } '7': { $mco_packages = ['mcollective-client', 'rubygem-mcollective-client', 'nailgun-mcagents'] } default: { fail(""unsupported ${::osfamily} release: ${::operatingsystemmajrelease}"") } } } ensure_packages($mco_packages) ensure_packages($mco_packages_extra) class { '::mcollective': connector => $mco_connector, middleware_hosts => [$mco_host], server_loglevel => 'debug', psk => $mco_pskey, manage_packages => false, server => true, client => true, require => package[$mco_packages], } create_resources(mcollective::server::setting, $mco_settings, { 'order' => 90 }) create_resources(mcollective::client::setting, $mco_settings, { 'order' => 90 }) }",0,1,"class { ':mcollective':, create_resources(mcollective::client::setting,, create_resources(mcollective::server::setting,, manage_packages => false,, middleware_hosts => [$mco_host],, psk => $mco_pskey,","CWE-250, CWE-287","{'reason': ""This misconfiguration is related to the provided CWE because the provided CWE states that hardcoding of security-related secrets and credentials into the code is considered poor security practice. However, in the provided script, the MCollective plugin's credentials (such as user, password, host, and port) are hard-coded within the code, which could potentially expose the service to brute-force attacks and unauthorized access. This constitutes a violation of CWE-250, which is the CWE that describes this misconfiguration."", 'related_cwe': 'CWE-250, CWE-287', 'is_misconfiguration_related': 'Yes'}"
1283,"class proxxy::settings { $cache_dir = ""/var/cache/proxxy"" $nginx_conf = ""/etc/nginx/nginx.conf"" $nginx_vhosts_conf = ""/etc/nginx/sites-enabled/proxxy"" $syslog_server = ""unix:/dev/log"" $backends = { 'ftp.mozilla.org' => { path => 'https://ftp.mozilla.org/', size => '16g', ttl => '1d', }, 's3' => { path => 'https://s3.amazonaws.com/', size => '16g', ttl => '1d', }, 'pypi.pub.build.mozilla.org' => { path => 'http://pypi.pub.build.mozilla.org/', size => '16g', ttl => '1d', }, 'pypi.pvt.build.mozilla.org' => { path => 'http://pypi.pvt.build.mozilla.org/', size => '16g', ttl => '1d', }, 'runtime-binaries.pvt.build.mozilla.org' => { path => 'http://runtime-binaries.pvt.build.mozilla.org/', size => '16g', ttl => '1d', }, 'tooltool.pvt.build.mozilla.org' => { path => 'http://tooltool.pvt.build.mozilla.org/', size => '16g', ttl => '1d', }, 'pvtbuilds.mozilla.org' => { path => 'https://pvtbuilds.mozilla.org/', size => '16g', ttl => '1d', username => 'proxy_reader', password => secret('proxxy_pvtbuilds_password'), }, 's3-us-west-2.amazonaws.com' => { path => 'https://s3-us-west-2.amazonaws.com/', size => '16g', ttl => '1d', }, 's3-us-west-1.amazonaws.com' => { path => 'https://s3-us-west-1.amazonaws.com/', size => '16g', ttl => '1d', }, 'queue.taskcluster.net' => { path => 'https://queue.taskcluster.net/', size => '16g', ttl => '1d', proxy_redirect => [ 'https://s3-us-west-2.amazonaws.com/ http://s3-us-west-2.amazonaws.com.$host/', ], }, } }",1,1,secret('proxxy_pvtbuilds_password'),CWE-312,"{'reason': 'If an attacker can access the username and password used for the proxxy proxy reader, they could use the credentials to make unauthorized requests to pvtbuilds.mozilla.org.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
1284,class role::inputbox { mediawiki::extension { 'inputbox': } },1,1,"inputbox': {\\n, auto_enable => false,\\\\\\\\\\\\n, class_path => 'extensions\\inputbox\\InputBox.php',\\\\\n, enable_by_default => true,\\\\\\\\\\\\\\\\\\\\\\\\n, enable_in_api => true,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, enable_in_rest_api => true,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, ensure => present,\\\n, mediaWikiVersion => \\\\\\\\n, mediawiki::extension {\n, version => \\\\n","CWE-22, CWE-25, CWE-77, CWE-78","{'reason': '[Provide the detailed reasoning explaining why the misconfiguration is related to the CWE]', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1285,"class neutron::plugins::ml2::opendaylight ( $package_ensure = 'present', $odl_username = $::os_service_default, $odl_password = $::os_service_default, $odl_url = $::os_service_default, ) { include ::neutron::deps require ::neutron::plugins::ml2 ensure_resource('package', 'python-networking-odl', { ensure => $package_ensure, tag => 'openstack', } ) neutron_plugin_ml2 { 'ml2_odl/username': value => $odl_username; 'ml2_odl/password': value => $odl_password; 'ml2_odl/url': value => $odl_url; } }",0,1,"odl_password = $::os_service_default,, odl_url = $::os_service_default, odl_username = $::os_service_default,",CWE-601,"{'reason': 'Both $odl_username and $odl_password are defined by the puppet class by default as $::os_service_default. Because $odl_username and $odl_password are not required, if no value is given, they will inherit the default value. This is consistent with CWE-601 - Weak Static Credentials.', 'related_cwe': 'CWE-601', 'is_misconfiguration_related': 'Yes'}"
1286,"notice('fuel-plugin-external-zabbix: configure_apt.pp') $str = 'apt::install-suggests ""0""; apt::install-recommends ""0""; ' case $::osfamily { 'debian': { file { '/etc/apt/apt.conf.d/99norecommends': ensure => file, content => $str, } } default: { } } $fuel_version = 0 + hiera('fuel_version') if $fuel_version < 8.0 { $cur_node_roles = node_roles(hiera_array('nodes'), hiera('uid')) $is_controller = member($cur_node_roles, 'controller') or member($cur_node_roles, 'primary-controller') } else { $is_controller = roles_include(['controller', 'primary-controller']) } if $is_controller { file { 'zabbix-server-ocf' : ensure => present, path => '/usr/lib/ocf/resource.d/fuel/zabbix-server', mode => '0755', owner => 'root', group => 'root', source => 'puppet:///modules/plugin_zabbix/zabbix-server.ocf', } }",0,1,"file { '/etc/apt/apt.conf.d/99norecommends': ensure => file, content => $str, }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, file { '/etc/apt/apt.conf.d/99norecommends': ensure => file, content => $str, }\\\\\\\\\\\\\\\\\\\\\\\\n, file { '/etc/apt/apt.conf.d/99norecommends': ensure => file, content => $str, }\\\\n, file { '/etc/apt/apt.conf.d/99norecommends': ensure => file, content => $str, }\n, file { 'zabbix-server-ocf' : ensure => present, path => '/usr/lib/ocf/resource.d/fuel/zabbix-server', mode => '0755', owner => 'root', group => 'root', source => 'puppet:///modules/plugin_zabbix/zabbix-server.ocf', }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, file { 'zabbix-server-ocf' : ensure => present, path => '/usr/lib/ocf/resource.d/fuel/zabbix-server', mode => '0755', owner => 'root', group => 'root', source => 'puppet:///modules/plugin_zabbix/zabbix-server.ocf', }\\\\\\\\\\\\n, file { 'zabbix-server-ocf' : ensure => present, path => '/usr/lib/ocf/resource.d/fuel/zabbix-server', mode => '0755', owner => 'root', group => 'root', source => 'puppet:///modules/plugin_zabbix/zabbix-server.ocf', }\\\\\\\\n, file { 'zabbix-server-ocf' : ensure => present, path => '/usr/lib/ocf/resource.d/fuel/zabbix-server', mode => '0755', owner => 'root', group => 'root', source => 'puppet:///modules/plugin_zabbix/zabbix-server.ocf', }\\\\n, file { 'zabbix-server-ocf' : ensure => present, path => '/usr/lib/ocf/resource.d/fuel/zabbix-server', mode => '0755', owner => 'root', group => 'root', source => 'puppet:///modules/plugin_zabbix/zabbix-server.ocf', }\\n",CWE-200,"{'reason': 'The script is vulnerable to the CWE-200 because...', 'related_cwe': 'CWE-200', 'is_misconfiguration_related': 'Yes'}"
1287,"define trove::generic_service( $package_name, $service_name, $enabled = false, $manage_service = true, $ensure_package = 'present' ) { include ::trove::deps include ::trove::params $trove_title = ""trove-${name}"" if ($package_name) { if !defined(package[$package_name]) { package { $trove_title: ensure => $ensure_package, name => $package_name, tag => ['openstack', 'trove-package'], } } } if $service_name { if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } service { $trove_title: ensure => $service_ensure, name => $service_name, enable => $enabled, hasstatus => true, tag => 'trove-service', } } }",1,1,"define trove::generic_service( $package_name, $service_name, $enabled = false, $manage_service = true, $ensure_package = 'present' ) { include ::trove::deps include ::trove::params $trove_title = \, define trove::generic_service( $package_name, $service_name, $enabled = false, $manage_service = true, $ensure_package = 'present' ) {\\\\n include ::trove::deps\\\\n include ::trove::params\\\\n $trove_title = \, service {\n trove::generic_service::trove::database: name => '/usr/sbin/mysqld'\n enable => false\n hasstatus => true\n ensure => running\n, trove::generic_service {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n 'trove-service':\\\\\\\\\\\\\\\\\\\\\\\\n service_name => 'trove-service'\\\\\\\\\\\\\\\\\\\\n, trove::generic_service {\\\\\\\\\\\\\\\\\\\\n 'trove-database':\\\\\\\\\\\\\\\\n service_name => 'trove-database'\\\\\\\\\\\\\\\\n, trove::generic_service {\\\\\\\\\\\\n '/etc/init/mongodb.conf':\\\\\\\\n service_name => '/etc/init/mongodb.conf'\\\\\\\\n, trove::generic_service {\\\\\\\\n 'trove-service':\\\\\\\\n service_name => 'trove-service'\\\\\\\\n, trove::generic_service {\\\\n 'trove-database':\\\\n service_name => 'trove-database'\\\\n, trove::generic_service {\\\\n 'trove-service':\\\\n service_name => 'trove-service'\\\\n, trove::generic_service {\\n '/etc/init/redis.conf':\\n service_name => '/etc/init/redis.conf'\\n",CWE-252,"{'reason': 'The misconfiguration is related to the CWE because the service name does not have a proper format. If the service name is not properly defined, the service cannot be successfully launched.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
1288,"define monasca::kafka::topics ( $partitions = 2, $kafka_zookeeper_connections = $monasca::kafka::config::kafka_zookeeper_connections, $kafka_replication_factor = $monasca::kafka::config::kafka_replication_factor, $install_dir = '/opt/kafka', ) { exec { ""ensure ${name} is created"": command =>""kafka-topics.sh --create --zookeeper ${kafka_zookeeper_connections} --replication-factor ${kafka_replication_factor} --partitions ${partitions} --topic ${name}"", path => ""/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${install_dir}/bin"", cwd => $install_dir, user => 'root', group => 'root', onlyif => ""kafka-topics.sh --topic ${name} --list --zookeeper ${kafka_zookeeper_connections} | grep -q ${name}; test $? -ne 0"" } -> exec { ""ensure ${name} is has ${partitions} partitions"": command =>""kafka-topics.sh --alter --zookeeper ${kafka_zookeeper_connections} --partitions ${partitions} --topic ${name}"", path => ""/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${install_dir}/bin"", cwd => $install_dir, user => 'root', group => 'root', onlyif => ""kafka-topics.sh --describe --zookeeper ${kafka_zookeeper_connections} --topic ${name} | grep 'partitioncount:${partitions}'; test $? -ne 0"" } }",0,1,kafka-topics.sh,"CWE-252: Insecure Encryption Role, CWE-259: Use of Hard-coded Password, CWE-269: Improper Privilege Management, CWE-285: Improper Access Control, CWE-320: Improper Restriction of Operations within the Bounds of a Memory Buffer, CWE-326: Incorrect Permission Assignment for Critical Resource, CWE-345: Insufficient Communication Protection, CWE-362: Broken or Risky Cryptographic Design, CWE-399: Unrestricted Externally Accessible Interface, CWE-522: Insufficiently Protected Credentials","{'reason': 'kafka-topics.sh is a tool in Apache Kafka that allows administrators to list, create, and delete topics from the Apache Kafka cluster. In this scenario, the exec resource ensures that the topic, which has the name ${name}, is created, and its partitions are set to ${partitions}. Since the user executing this command is set to root, the partitions could potentially be altered without the required permissions. This could result in an unauthorized change to the system, which may be exploited to gain full control over it.', 'related_cwe': 'CWE-285, CWE-269, CWE-345, CWE-362, CWE-326', 'is_misconfiguration_related': 'Yes'}"
1289,"define oslo::messaging::default( $rpc_response_timeout = $::os_service_default, $transport_url = $::os_service_default, $control_exchange = $::os_service_default, ) { $default_options = { 'default/rpc_response_timeout' => { value => $rpc_response_timeout }, 'default/transport_url' => { value => $transport_url }, 'default/control_exchange' => { value => $control_exchange }, } create_resources($name, $default_options) }",0,1,"create_resources($name, $default_options)\\n}, default_options = {\\n        'default/rpc_response_timeout' => { value => $rpc_response_timeout },\\n        'default/transport_url' => { value => $transport_url },\\n        'default/control_exchange' => { value => $control_exchange },\\n    }, default_options = {}\\\\n, define oslo::messaging::default(\n        $rpc_response_timeout = $::os_service_default,\n        $transport_url = $::os_service_default,\n        $control_exchange = $::os_service_default,\n    ) {, if $control_exchange!= $::os_service_default {\\\\\\\\\\\\\\\\n  $default_options = merge($default_options, {\\\\\\\\\\\\\\\\n    'default/control_exchange' => { value => $control_exchange },\\\\\\\\\\\\\\\\n  })\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, if $control_exchange!= $::os_service_default {\\\\n  $default_options = merge($default_options, {\\\\n    'default/control_exchange' => { value => $control_exchange },\\\\n  })\\\\n}\\\\\\\\n, if $rpc_response_timeout!= $::os_service_default {\\\\n  $default_options = merge($default_options, {\\\\n    'default/rpc_response_timeout' => { value => $rpc_response_timeout },\\\\n  })\\\\n}\\\\\\\\n, if $rpc_response_timeout!= $::os_service_default {\\n  $default_options = merge($default_options, {\\n    'default/rpc_response_timeout' => { value => $rpc_response_timeout },\\n  })\\n}\\\\n, if $transport_url!= $::os_service_default {\\\\\\\\n  $default_options = merge($default_options, {\\\\\\\\n    'default/transport_url' => { value => $transport_url },\\\\\\\\n  })\\\\\\\\n}\\\\\\\\\\\\\\\\n, if $transport_url!= $::os_service_default {\\\\n  $default_options = merge($default_options, {\\\\n    'default/transport_url' => { value => $transport_url },\\\\n  })\\\\n}\\\\\\\\n",CWE-252: Incomplete Key Derivation,"{'reason': 'The script has an issue related to incomplete key derivation. This is a risk because weak hashes could be created, which is not a secure practice.', 'related_cwe': 'CWE-252', 'is_misconfiguration_related': 'Yes'}"
1290,"class openstack_tasks::murano::cfapi { notice('modular: murano/cfapi.pp') prepare_network_config(hiera_hash('network_scheme', {})) $access_hash = hiera_hash('access', {}) $murano_cfapi_hash = hiera_hash('murano-cfapi', {}) $public_ip = hiera('public_vip') $management_ip = hiera('management_vip') $public_ssl_hash = hiera_hash('public_ssl', {}) $ssl_hash = hiera_hash('use_ssl', {}) $public_auth_protocol = get_ssl_property($ssl_hash, $public_ssl_hash, 'keystone', 'public', 'protocol', 'http') $public_auth_address = get_ssl_property($ssl_hash, $public_ssl_hash, 'keystone', 'public', 'hostname', [$public_ip]) $internal_api_protocol = 'http' $cfapi_bind_host = get_network_role_property('murano/cfapi', 'ipaddr') $service_endpoint = hiera('service_endpoint') if $murano_cfapi_hash['enabled'] { $firewall_rule = '203 murano-cfapi' $cfapi_bind_port = '8083' firewall { $firewall_rule : dport => $cfapi_bind_port, proto => 'tcp', action => 'accept', } tweaks::ubuntu_service_override { ['murano-cfapi']: package_name => 'murano-cfapi', } class { '::murano::cfapi' : tenant => $access_hash['tenant'], bind_host => $cfapi_bind_host, bind_port => $cfapi_bind_port, auth_url => ""${public_auth_protocol}://${public_auth_address}:5000/v3"", } firewall[$firewall_rule] -> class['::murano::cfapi'] } }",0,1,"auth_url => \, auth_url => \\, auth_url => \\\\\\, auth_url => \\\\\\\\\\\\\\\\\\\\, bind_host => $cfapi_bind_host, \n, bind_port => $cfapi_bind_port, \\\\\\\\n, bind_port => $cfapi_bind_port, \\n, tenant => $access_hash['tenant'], \\\\\\\\\\\\\\\\\\n, tenant => $access_hash['tenant'], \\\\n",CWE-257,"{'reason': 'The issue here is that the user can define both public and internal keystone protocols. A malicious user could set the public and internal keystone protocols to be the same in order to cause a Denial of Service (DoS) attack. This misconfiguration could be mitigated by ensuring that the internal keystone protocol is HTTP, which would cause all users to use the public keystone protocol. However, this would not prevent a malicious user from choosing a public keystone protocol to be the same as the internal keystone protocol. Therefore, it is recommended to disallow the user from setting the internal keystone protocol and only allow them to set the public keystone protocol.', 'related_cwe': 'CWE-257, CWE-287', 'is_misconfiguration_related': 'Yes'}"
1291,"class swift::proxy::authtoken( $delay_auth_decision = 1, $signing_dir = '/var/cache/swift', $cache = 'swift.cache', $auth_uri = 'http://127.0.0.1:5000', $auth_url = 'http://127.0.0.1:35357', $auth_plugin = 'password', $project_domain_id = 'default', $user_domain_id = 'default', $project_name = 'services', $username = 'swift', $password = 'password', $include_service_catalog = false, $admin_user = undef, $admin_tenant_name = undef, $admin_password = undef, $identity_uri = undef, $admin_token = undef, ) { include ::swift::deps if $admin_token { warning('admin_token is deprecated, has no usage and will be removed in the o release') } if $identity_uri { warning('identity_uri is deprecated and will be removed, please use auth_url instead') } if $admin_user { warning('admin_user is deprecated and will be removed, please use username instead') } if $admin_tenant_name { warning('admin_tenant_name is deprecated and will be removed, please use project_name instead') } if $admin_password { warning('admin_password is deprecated and will be removed, please use password isntead') } $auth_url_real = pick($identity_uri, $auth_url) $username_real = pick($admin_user, $username) $project_name_real = pick($admin_tenant_name, $project_name) $password_real = pick($admin_password, $password) file { $signing_dir: ensure => directory, mode => '0700', owner => 'swift', group => 'swift', selinux_ignore_defaults => true, require => anchor['swift::config::begin'], before => anchor['swift::config::end'], } concat::fragment { 'swift_authtoken': target => '/etc/swift/proxy-server.conf', content => template('swift/proxy/authtoken.conf.erb'), order => '170', } }",1,1,"admin_password = undef, admin_tenant_name = undef, admin_user = undef, auth_url = 'http://127.0.0.1:35357', delay_auth_decision = 1, include_service_catalog = false, password = 'password', project_domain_id = 'default', signing_dir = '/var/cache/swift', user_domain_id = 'default'","CWE-257, CWE-258","{'reason': 'CWE-257', 'related_cwe': 'CWE-257', 'is_misconfiguration_related': 'Yes'}"
1292,"class virtual_accelerator::service inherits virtual_accelerator { $nova_conf_file = ""/etc/nova/nova.conf"" $enable_host_cpu = $virtual_accelerator::enable_host_cpu if $enable_host_cpu == true { exec { 'cpu_host': command => ""crudini --set ${nova_conf_file} libvirt cpu_mode host-passthrough"", notify => exec['vcpu_pin'], } } exec { 'vcpu_pin': command => ""crudini --set ${nova_conf_file} default vcpu_pin_set $(python /usr/local/bin/get_vcpu_pin_set.py)"", notify => service['virtual-accelerator'], } service { 'virtual-accelerator': ensure => 'running', notify => service['openvswitch-switch'], } service { 'openvswitch-switch': ensure => 'running', notify => service['neutron-openvswitch-agent'], } service { 'neutron-openvswitch-agent': ensure => 'running', } exec { 'disable_custom_hugepages_dir_qemu': command => ""sed -i 's~^hugetlbfs_mount =~ notify => service['libvirt-bin'], } service { 'libvirt-bin': ensure => 'stopped', notify => service['libvirtd'], } service { 'libvirtd': ensure => 'running', notify => service['nova-compute'], } service { 'nova-compute': ensure => 'running', } }",0,1,"service { 'libvirt-bin': ensure =>'stopped',, service { 'libvirtd': ensure =>'running',, service { 'neutron-openvswitch-agent': ensure =>'running',, service { 'nova-compute': ensure =>'running',, service { 'openvswitch-switch': ensure =>'running',, service { 'virtual-accelerator': ensure =>'running',",CWE-732: Incorrect Permission Assignment for Critical Resource,"{'reason': 'The misconfiguration is related to CWE-732 Incorrect Permission Assignment for Critical Resource.', 'related_cwe': 'CWE-732', 'is_misconfiguration_related': 'Yes'}"
1293,"class packages::mozilla::python27 { anchor { 'packages::mozilla::python27::begin': ; 'packages::mozilla::python27::end': ; } case $::operatingsystem { windows: { include packages::mozilla::mozilla_build anchor['packages::mozilla::python27::begin'] -> class['packages::mozilla::mozilla_build'] -> anchor['packages::mozilla::python27::end'] $python = 'c:\mozilla-build\python27\python2.7.exe' } default: { $python = '/tools/python27/bin/python2.7' anchor['packages::mozilla::python27::begin'] -> file { ""/tools/python"": ensure => link, target => ""/tools/python27""; ""/tools/python2"": ensure => link, target => ""/tools/python27""; } -> anchor['packages::mozilla::python27::end'] case $::operatingsystem { centos: { anchor['packages::mozilla::python27::begin'] -> package { ""mozilla-python27"": ensure => '2.7.3-1.el6'; } -> anchor['packages::mozilla::python27::end'] } ubuntu: { anchor['packages::mozilla::python27::begin'] -> package { ""python2.7"": ensure => '2.7.3-0ubuntu3'; } -> anchor['packages::mozilla::python27::end'] anchor['packages::mozilla::python27::begin'] -> package { ""python2.7-dev"": ensure => '2.7.3-0ubuntu3'; } -> anchor['packages::mozilla::python27::end'] file { [""/tools/python27"", ""/tools/python27/bin""]: ensure => directory; [$python, ""/usr/local/bin/python2.7""]: ensure => link, target => ""/usr/bin/python""; } } darwin: { anchor['packages::mozilla::python27::begin'] -> packages::pkgdmg { python27: version => ""2.7.3-1""; } -> anchor['packages::mozilla::python27::end'] } default: { fail(""cannot install on $::operatingsystem"") } } } } if (!$python) { fail(""\$python must be defined in this manifest file"") } }",1,1,"anchor { 'packages::mozilla::python27::begin': ; 'packages::mozilla::python27::end': ; }, anchor['packages::mozilla::python27::begin'] -> file {, anchor['packages::mozilla::python27::end'] -> class['packages::mozilla::mozilla_build'] -> anchor['packages::mozilla::python27::end'], ensure => directory; [$python, \, file { [\, if (!\\$, package { \, packages::mozilla::python27::end'], python2.7.dev': ensure => '2.7.3-0ubuntu3'; } -> anchor['packages::mozilla::python27::end'], }, $python = \",CWE-937,"{'reason': 'The python interpreter used for mozilla development is hard-coded in the manifest, and does not appear to be configurable. This creates a strong reliance on that interpreter, and would make it difficult to migrate to a newer version of python, or change the version of python that is used. The use of the python interpreter for the mozilla build step is not a security vulnerability, but does present a usability issue. \\n', 'related_cwe': 'CWE-937', 'is_misconfiguration_related': 'No'}"
1294,"notice('murano plugin: murano_dashboard.pp') $murano_hash = hiera_hash('murano_plugin', {}) $murano_plugins = $murano_hash['plugins'] $app_catalog_ui = hiera('app_catalog_ui', false) $repository_url = has_key($murano_hash, 'murano_repo_url') ? { true => $murano_hash['murano_repo_url'], default => 'http://storage.apps.openstack.org', } if has_key($murano_plugins, 'glance_artifacts_plugin') and $murano_plugins['glance_artifacts_plugin']['enabled'] { $use_glare = true package {'murano-glance-artifacts-plugin': ensure => 'latest', } } else { $use_glare = false } if $app_catalog_ui { package {'python-app-catalog-ui': ensure => 'latest', } } include ::murano::params include ::murano::client include ::horizon::params ensure_resource('service', 'httpd', { 'ensure' => 'running', 'enable' => true, 'restart' => true, 'name' => $::horizon::params::http_service, }) class { '::murano::dashboard': enable_glare => $use_glare, repo_url => $repository_url, sync_db => false, package_ensure => 'latest' } concat<||> ~> service['httpd']",0,1,"class { '::murano::dashboard':\n enable_glare => $use_glare,\n repo_url => $repository_url,\n sync_db => false,\n package_ensure => 'latest'\n}\n, ensure_resource('service', 'httpd', { 'ensure' => 'running', 'enable' => true,'restart' => true, 'name' => $::horizon::params::http_service, }), notice('murano plugin: murano_dashboard.pp'), package {'murano-glance-artifacts-plugin':\\n ensure => 'latest',\\n}, package {'python-app-catalog-ui': ensure => 'latest',}, service['httpd']\\n}","CWE-16, CWE-20","{'reason': 'The misconfiguration is related to the provided CWE because', 'related_cwe': 'CWE-16, CWE-20', 'is_misconfiguration_related': 'Yes'}"
1295,"class apache::mod::wsgi { package { 'libapache2-mod-wsgi': } apache::mod_conf { 'wsgi': require => package['libapache2-mod-wsgi'], } }",0,1,"apache::mod_conf {\\\\\\\\\\\\n  'wsgi':\\\\\\\\n    require => package['libapache2-mod-wsgi'],\\\\\\\\\\\\n}\\\\\\\\n, apache::mod_conf {\\\\n  'wsgi':\\\\n    require => package['libapache2-mod-wsgi'],\\\\n}\\\\n, apache::mod_conf {\\\\n  'wsgi':\\\\n}\\\\n, apache::mod_conf {\\n  'wsgi':\\n    require => package['libapache2-mod-wsgi'],\\n}\\n, package {\\\\\\\\\\\\\\\\\\\\\\\\n  'libapache2-mod-wsgi':\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n, package {\\\\\\\\n  'libapache2-mod-wsgi':\\\\\\\\n}\\\\\\\\n, package {\\\\n  'libapache2-mod-wsgi':\\\\n}\\napache::mod_conf {\\n  'wsgi':\\n}\\n, package {\\n  'libapache2-mod-wsgi':\\n}\\napache::mod_conf {\\n  'wsgi':\\n}\\n, package {\n  'libapache2-mod-wsgi':\n}\napache::mod_conf {\n  'wsgi':\n    require => package['libapache2-mod-wsgi'],\n}\n",CWE-248 - Resource Management Errors,"{'reason': 'The lack of enforcement that the libapache2-mod-wsgi package has been installed before adding the apache2-mod-wsgi module config block increases the attack surface of the server and poses an unnecessary risk to the server', 'related_cwe': 'CWE-248 - Resource Management Errors', 'is_misconfiguration_related': 'Yes'}"
1296,"class packages::bridge-utils { case $::operatingsystem { ubuntu: { package { ""bridge-utils"": ensure => ""1.5-2ubuntu6""; } } default: { fail(""cannot install on $::operatingsystem"") } } }",0,1,"ensure => \, ensure => \\, ensure => \\\\, ensure => \\\\\\\\, ensure => \\\\\\\\\\\\\\\\\\\, ensure => \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\, ensurepackage { \",CWE-306,"{'reason': 'The provided misconfiguration is not a regular expression but a double backslash in a single backslash, which can break a file path or string. This can result in a missing file, which is related to CWE-306: Missing File or Directory Access Control.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
1297,"class swift::objectexpirer( $manage_service = true, $enabled = true, $package_ensure = 'present', $pipeline = ['catch_errors', 'cache', 'proxy-server'], $auto_create_account_prefix = '.', $concurrency = 1, $expiring_objects_account_name = 'expiring_objects', $interval = 300, $process = 0, $processes = 0, $reclaim_age = 604800, $recon_cache_path = '/var/cache/swift', $report_interval = 300, $service_provider = $::swift::params::service_provider ) inherits ::swift::params { include ::swift::deps swift_config<| |> ~> service['swift-object-expirer'] swift_object_expirer_config<||> ~> service['swift-object-expirer'] if $::swift::params::object_expirer_package_name != $::swift::params::proxy_package_name { package { 'swift-object-expirer': ensure => $package_ensure, name => $::swift::params::object_expirer_package_name, tag => ['openstack', 'swift-package'], } } swift_object_expirer_config { 'pipeline:main/pipeline': value => join($pipeline, ' '); 'object-expirer/auto_create_account_prefix': value => $auto_create_account_prefix; 'object-expirer/concurrency': value => $concurrency; 'object-expirer/expiring_objects_account_name': value => $expiring_objects_account_name; 'object-expirer/interval': value => $interval; 'object-expirer/process': value => $process; 'object-expirer/processes': value => $processes; 'object-expirer/reclaim_age': value => $reclaim_age; 'object-expirer/recon_cache_path': value => $recon_cache_path; 'object-expirer/report_interval': value => $report_interval; } if $manage_service { if $enabled { $service_ensure = 'running' } else { $service_ensure = 'stopped' } } swift::service { 'swift-object-expirer': os_family_service_name => $::swift::params::object_expirer_service_name, service_ensure => $service_ensure, enabled => $enabled, config_file_name => 'object-expirer.conf', service_provider => $service_provider, } }",0,1,"swift_object_expirer_config { 'object-expirer/auto_create_account_prefix': value => $auto_create_account_prefix;, swift_object_expirer_config { 'object-expirer/concurrency': value => $concurrency;, swift_object_expirer_config { 'object-expirer/expiring_objects_account_name': value => $expiring_objects_account_name;, swift_object_expirer_config { 'object-expirer/interval': value => $interval;, swift_object_expirer_config { 'object-expirer/process': value => $process;, swift_object_expirer_config { 'object-expirer/processes': value => $processes;, swift_object_expirer_config { 'object-expirer/reclaim_age': value => $reclaim_age;, swift_object_expirer_config { 'object-expirer/recon_cache_path': value => $recon_cache_path;, swift_object_expirer_config { 'object-expirer/report_interval': value => $report_interval;, swift_object_expirer_config { 'pipeline:main/pipeline': value => join($pipeline,'');","CWE-18, CWE-19","{'reason': ""the misconfiguration is related to the CWE, the CWE-18 is caused by the 'auto_create_account_prefix' configuration variable and the CWE-19 is caused by the'reclaim_age' configuration variable"", 'related_cwe': 'CWE-18, CWE-19', 'is_misconfiguration_related': 'Yes'}"
1298,"class tripleo::profile::base::cinder::api ( $bootstrap_node = hiera('bootstrap_nodeid', undef), $step = hiera('step'), ) { if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false } include ::tripleo::profile::base::cinder if $step >= 3 and $sync_db { include ::cinder::db::mysql } if $step >= 4 or ($step >= 3 and $sync_db) { include ::cinder::api include ::cinder::ceilometer include ::cinder::glance } }",1,1,"if $::hostname == downcase($bootstrap_node) { $sync_db = true } else { $sync_db = false }, include ::cinder::api, include ::cinder::ceilometer, include ::cinder::db::mysql, include ::cinder::glance, include ::tripleo::profile::base::cinder, include ::tripleo::profile::base::cinder if $step >= 3 and $sync_db {\n include ::cinder::db::mysql\n}, include ::tripleo::profile::base::cinder if $step >= 4 or ($step >= 3 and $sync_db) {\\\\n include ::cinder::api\\\\n include ::cinder::ceilometer\\\\n include ::cinder::glance\\\\n}, include ::tripleo::profile::base::cinder if $step >= 4 or ($step >= 3 and $sync_db) {\\n include ::cinder::api\\n include ::cinder::ceilometer\\n include ::cinder::glance\\n}",CWE-284: Improper Access Control,"{'reason': ""In the script, an incorrect condition is created for the 'if' statement to evaluate, where the hostname value in the given hiera does not match the hostname value in the host file. Therefore, this script is vulnerable to a potential misconfiguration if this error is not caught before the script is run. However, this issue is not CWE-284, since the vulnerability is a result of the 'if' condition being evaluated incorrectly, rather than improper access control."", 'related_cwe': 'CWE-125: Out-of-Bounds Read', 'is_misconfiguration_related': 'No'}"
1299,"define mediawiki::extension( $ensure = present, $wiki = undef, $extension = undef, $entrypoint = undef, $priority = 10, $needs_update = false, $branch = undef, $settings = {}, $browser_tests = false, $composer = false, $remote = undef, ) { include ::mediawiki $mwbranch = $branch ? { undef => $::mediawiki::branch, default => $branch, } if $title =~ /^(\w+):(.+)$/ { $parts = split($title, ':') $ext_wiki = $wiki ? { undef => $parts[0], default => $wiki, } $ext_name = $extension ? { undef => $parts[1], default => $extension, } } else { $ext_name = $extension ? { undef => $title, default => $extension, } $ext_wiki = $wiki } $ext_entrypoint = $entrypoint ? { undef => ""${ext_name}.php"", default => $entrypoint, } $ext_dir = ""${mediawiki::dir}/extensions/${ext_name}"" $ext_repo = ""mediawiki/extensions/${ext_name}"" git::clone { $ext_repo: directory => $ext_dir, branch => $mwbranch, remote => $remote, require => git::clone['mediawiki/core'], } mediawiki::settings { $title: ensure => $ensure, wiki => $ext_wiki, header => template('mediawiki/extension.php.erb'), footer => '}', values => $settings, priority => $priority, require => git::clone[$ext_repo], } if $composer { php::composer::install{ $ext_dir: prefer => 'source', require => git::clone[$ext_repo], } php::composer::install[$ext_dir] ~> mediawiki::settings[$title] } if $needs_update { mediawiki::settings[$title] ~> exec['update_all_databases'] } if $browser_tests { mediawiki::extension::browsertests { $ext_name: path => $browser_tests, } } }",1,1,"git::clone { $ext_repo: directory => $ext_dir, branch => $mwbranch, remote => $remote, require => git::clone['mediawiki/core'], }, if $composer { php::composer::install{ $ext_dir: prefer =>'source', require => git::clone[$ext_repo], }, if $needs_update { mediawiki::settings[$title] ~> exec['update_all_databases'] }, if $title =~ /^(\w+):(.+)$/ { $parts = split($title, ':') $ext_wiki = $wiki? { undef => $parts[0], default => $wiki, } $ext_name = $extension? { undef => $parts[1], default => $extension, } } else { $ext_name = $extension? { undef => $title, default => $extension, } $ext_wiki = $wiki } $ext_entrypoint = $entrypoint? { undef =>, include ::mediawiki, mediawiki::extension( $ensure = present, $wiki = undef, $extension = undef, $entrypoint = undef, $priority = 10, $needs_update = false, $branch = undef, $settings = {}, $browser_tests = false, $composer = false, $remote = undef, ) {, mediawiki::extension::browsertests { $ext_name: path => $browser_tests, }, mediawiki::settings { $title: ensure => $ensure, wiki => $ext_wiki, header => template('mediawiki/extension.php.erb'), footer => '}', values => $settings, priority => $priority, require => git::clone[$ext_repo], }, mediawiki::settings[$title] ~> exec['update_all_databases'], php::composer::install[$ext_dir] ~> mediawiki::settings[$title]",CWE-306,"{'reason': 'The misconfiguration is related to CWE-306 because the script does not require a proper configuration. The $title value is not properly validated before it is assigned to the settings value, which can allow a malicious user to inject malicious code into the system. CWE-306 provides a description of the issue in the script, which can lead to an insecure system.', 'related_cwe': 'CWE-306', 'is_misconfiguration_related': 'Yes'}"
1300,class sudo { },0,1,class sudo {,CWE-306,"{'reason': 'The provided CWE was not related to the misconfiguration.', 'related_cwe': 'None', 'is_misconfiguration_related': 'No'}"
1301,"class nxlog::conf { include packages::nxlog include ::config include nxlog::settings case $::operatingsystem { windows: { file { ""${nxlog::settings::root_dir}/conf/nxlog.conf"": require => class [ 'packages::nxlog' ], content => template('nxlog/nxlog.conf.erb') } } default: { fail('cannot configure nxlog on this platform') } } }",0,1,"case $::operatingsystem { windows: { file { ${nxlog::settings::root_dir}/conf/nxlog.conf, class nxlog::conf { include packages::nxlog include ::config include nxlog::settings case $::operatingsystem { windows: { file {, content => template('nxlog/nxlog.conf.erb') } } } default: { fail('cannot configure nxlog on this platform') } } } } }, fail('cannot configure nxlog on this platform'), include ::config, include packages::nxlog","CWE-119, CWE-120, CWE-122","{'reason': ""The misconfiguration label, `LLM1`, is used in the wrong context. It is only used in the `fail('cannot configure nxlog on this platform')` statement. However, it is also used in the `file {... }` and `class nxlog::conf {... }` statements. As such, the misconfiguration LLM is used incorrectly in these statements, causing the `nxlog` directory not to be created on the specified file path."", 'related_cwe': 'CWE-119, CWE-120, CWE-122', 'is_misconfiguration_related': 'Yes'}"
1302,class pacemaker( $hacluster_pwd = $pacemaker::params::hacluster_pwd ) inherits ::pacemaker::params { include ::pacemaker::params include ::pacemaker::install include ::pacemaker::service },0,1,class pacemaker( $hacluster_pwd = $pacemaker::params::hacluster_pwd ),CWE-312,"{'reason': 'Explanation', 'related_cwe': 'CWE number', 'is_misconfiguration_related': 'Yes/No'}"
1303,class nsxt::params { $hiera_key = 'nsx-t' $plugin_package = 'python-vmware-nsx' $core_plugin = 'vmware_nsx.plugin.nsxv3plugin' $nsx_plugin_dir = '/etc/neutron/plugins/vmware' $nsx_plugin_config = '/etc/neutron/plugins/vmware/nsx.ini' },0,1,class nsxt::params { $hiera_key = 'nsx-t' $plugin_package = 'python-vmware-nsx' $core_plugin = 'vmware_nsx.plugin.nsxv3plugin' $nsx_plugin_dir = '/etc/neutron/plugins/vmware' $nsx_plugin_config = '/etc/neutron/plugins/vmware/nsx.ini' },"CWE-114, CWE-115, CWE-117, CWE-119, CWE-252, CWE-257, CWE-259, CWE-306, CWE-327, CWE-89","{'reason': 'The misconfiguration involves the NSX plugin, which is used for NSX-v management. This is similar to the NSX-v plugins vulnerability identified by CWE-117.', 'related_cwe': 'CWE-117', 'is_misconfiguration_related': 'Yes'}"
1304,"class packages::metcollect { include metcollect::settings case $::operatingsystem { windows: { $exe_path = $metcollect::settings::exe_path file { $exe_path: ensure => directory; ""${exe_path}\\metcollect.exe"": ensure => present, source => ""puppet:///repos/exes/metcollect.exe""; }~> exec { enabled_diskperf: command => 'diskperf -y', path => ""c:\\windows\\system32"", refreshonly => true, }~> exec { install_servcie: command => 'metcollect.exe --startup auto install', path => $exe_path, refreshonly => true, } } default: { fail(""metcollect cannot be installed on $::operatingsystem"") } } }",0,1,"fail(\, include metcollect::settings, path => \, path => \\, path => \\\\, path => \\\\\\\\\, refreshonly => true,","CWE-502, CWE-601, CWE-603, CWE-703","{'reason': 'CWE-703', 'related_cwe': 'CWE-703', 'is_misconfiguration_related': 'Yes'}"
1305,"class pacemaker::params { $hacluster_pwd = 'changeme' case $::osfamily { 'redhat': { $pcs_bin = '/sbin/pcs' if $::operatingsystemrelease =~ /^6\..*$/ { $package_list = ['pacemaker','pcs','fence-agents','cman'] $pcsd_mode = false $services_manager = 'lsb' } else { $package_list = ['pacemaker','pcs','fence-agents-all','pacemaker-libs'] $pcsd_mode = true $services_manager = 'systemd' } $service_name = 'pacemaker' } default: { case $::operatingsystem { default: { fail(""unsupported platform: ${::osfamily}/${::operatingsystem}"") } } } } }",0,1,"$package_list = ['pacemaker','pcs','fence-agents','cman']\\n, case $::operatingsystem {'default': { fail('unsupported platform: ${::osfamily}/${::operatingsystem}')\\\\n, case $::osfamily {'redhat': { $pcs_bin = '/sbin/pcs'\\n, class pacemaker::params { $hacluster_pwd = 'changeme'\n, if $::operatingsystemrelease =~ /^6\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n, if $::operatingsystemrelease =~ /^6\\\\\\\\\\\\\\\\n, if $::operatingsystemrelease =~ /^6\\\\\\\\n, if $::operatingsystemrelease =~ /^6\\\\n, package {['pacemaker','pcs','fence-agents-all','pacemaker-libs']:\\n, service {['pacemaker']:\\\\n","CWE-312: Cleartext Storage of Sensitive Information, CWE-320: Improper Purging: Resource Release Not Within Loop, CWE-330: Use of Insufficiently Random Values","{'reason': 'This misconfiguration is related to CWE-312 as the variable $hacluster_pwd contains the password to the cluster and should be encrypted.', 'related_cwe': 'CWE-312', 'is_misconfiguration_related': 'Yes'}"
1306,"class mellanox_openstack::configure_qos ( $mlnx_sriov, $roles ){ if 'compute' in $roles { sriov_nic_agent_config { 'agent/extensions': value => 'qos'; } sriov_nic_agent_config <||> ~> service['neutron-plugin-sriov-agent'] } if 'controller' in $roles or 'primary-controller' in $roles { neutron_plugin_ml2 { 'ml2/extension_drivers': value => 'qos'; } neutron_config { 'default/service_plugins': value => join(['neutron.services.l3_router.l3_router_plugin.l3routerplugin',',','neutron.services.qos.qos_plugin.qosplugin',]), } unless $mlnx_sriov { include neutron::params include mellanox_openstack::params $server_service = $neutron::params::server_service $package = $::mellanox_openstack::params::neutron_mlnx_packages_controller package { $package : ensure => installed, } service { $server_service : ensure => running } package[$package] -> neutron_plugin_ml2 <||> ~> service[$server_service] } } }",1,1,"if 'compute' in $roles { sriov_nic_agent_config { \\'agent/extensions\\': value => \\'qos\\'; } sriov_nic_agent_config <||> ~> service['neutron-plugin-sriov-agent'] }, if 'controller' in $roles or 'primary-controller' in $roles { neutron_plugin_ml2 { \\\\'ml2/extension_drivers\\\\': value => \\\\'qos\\\\'; }, if 'controller' in $roles or 'primary-controller' in $roles { neutron_plugin_ml2 { \\\\\\\\'ml2/extension_drivers\\\\\\\\': value => \\\\\\\\'qos\\\\\\\\'; }, neutron_config { \\\\'default/service_plugins\\\\': value => join([\\\\'neutron.services.l3_router.l3_router_plugin.l3routerplugin\\\\',\\\\',\\\\'neutron.services.qos.qos_plugin.qosplugin\\\\',]), }, neutron_plugin_ml2 { \\'ml2/extension_drivers\\': value => \\'qos\\'; }, neutron_plugin_ml2 { \\\\'ml2/extension_drivers\\\\': value => \\\\'qos\\\\'; }, sriov_nic_agent_config { \'agent/extensions\': value => \'qos\'; }, sriov_nic_agent_config { \\'agent/extensions\\': value => \\'qos\\'; }, unless $mlnx_sriov { include neutron::params include mellanox_openstack::params $server_service = $neutron::params::server_service $package = $::mellanox_openstack::params::neutron_mlnx_packages_controller package { $package : ensure => installed, } service { $server_service : ensure => running } package[$package] -> neutron_plugin_ml2 <||> ~> service[$server_service] }",CWE-798,"{'reason': 'The Puppet code is misconfigured because it incorrectly configures the QOS extension, which provides users with the ability to set Quality of Service parameters for a QOS policy. This can lead to the users setting unwanted configurations that can enable the users to carry out QOS attacks, causing network denial of service (DoS).', 'related_cwe': 'CWE-798', 'is_misconfiguration_related': 'Yes'}"
1307,class { '::openstack_tasks::swift::keystone' :},1,1,"class { '::openstack_tasks::swift::keystone' :}, include keystone::auth::admin, include keystone::auth::public, include keystone::db, include keystone::db::postgresql, include keystone::keystone::auth::admin, include keystone::keystone::auth::public, include keystone::keystone::user::admin, include keystone::keystone::user::default",CWE-352,"{'reason': 'CWE-352: Uncontrolled Resource Consumption, the `openstack_tasks::swift::keystone` class declares an uncontrolled resource consumption problem, when used with the `include keystone::auth::admin`, `include keystone::auth::public`, `include keystone::db`, `include keystone::db::postgresql`, `include keystone::keystone::auth::admin`, `include keystone::keystone::auth::public`, `include keystone::keystone::user::admin`, `include keystone::keystone::user::default` parameters without any control parameters.', 'related_cwe': 'CWE-352', 'is_misconfiguration_related': 'Yes'}"
1308,class deploystudio { include deploystudio::files },0,1,"class deploystudio, include deploystudio, include deploystudio::files",CWE-93,"{'reason': 'The misconfiguration is related to the original defect, due to the way that the original defect, class deploystudio, and class deploystudio::files are used. By including class deploystudio, deploystudio::files, deploystudio is invoked, causing the include to be evaluated. This is the same pattern that exists with classes and defined classes. The same pattern can occur with all classes, not just classes defined by Puppet.  For more information, see https://puppet.com/docs/puppet/5.5/lang_class.html#include.   There are other examples of CWE-93 in this misconfiguration as well. The first include, include deploystudio, has an undefined value in its function', 'related_cwe': 'CWE-93', 'is_misconfiguration_related': 'Yes'}"
1309,"define supervisord::supervise($command, $user, $autostart=true, $autorestart=true, $environment=[], $extra_config='') { include supervisord::base file { ""/etc/supervisord.d/$name"": content => template(""supervisord/snippet.erb""), notify => service[""supervisord""]; } }",0,1,"autorestart = true, autostart = true, command = '\\\\\\\, content => template(, environment = [], extra_config = '\\\\, file { \, include supervisord::base, notify => service[\\, user = '\\\\\\\\\\\\\\\\\\",CWE-22: Inappropriate Implementation,"{'reason': 'Please explain why the misconfiguration is related to the provided CWE.', 'related_cwe': 'Please provide all related CWE numbers related to the issue.', 'is_misconfiguration_related': 'Please state whether the misconfiguration is related to the CWE or not.'}"
1310,"class rsyslog { include packages::rsyslog case $::operatingsystem { centos,ubuntu: { service { ""rsyslog"": require => class[""packages::rsyslog""], ensure => running, enable => true; } file { ""/etc/rsyslog.conf"": ensure => present, source => ""puppet:///modules/rsyslog/rsyslog.conf"", notify => service[""rsyslog""]; ""/etc/rsyslog.d/"": ensure => directory, notify => service[""rsyslog""], recurse => true, purge => true, force => true; } } default: { fail(""cannot install on $::operatingsystem"") } } case $::operatingsystem { centos,ubuntu: { rsyslog::config { 'default-local-logging': contents => template(""${module_name}/rsyslog-${::operatingsystem}.conf.erb""); } } default: { } } }",0,1,"file { \, r, template(${module_name}/rsyslog-${::operatingsystem}.conf.erb",CWE-1322,"{'reason': 'The provided misconfiguration may lead to the issue in the CWE. The misconfiguration relates to the vulnerability of CWE-1322. In the provided script, the Puppet language allows users to specify a source attribute to use to ensure the presence of the required file. However, this attribute does not have a proper validation mechanism. Hence, the template that is specified as the source attribute might be different from the expected one, which could be a security threat. This could result in an attacker gaining access to sensitive information stored in the file and exploiting it for malicious purposes. In this case, the attacker could obtain unauthorized access to the server by manipulating the file. The rsyslog module in Puppet is responsible for ensuring the correct configuration of the rsyslog daemon', 'related_cwe': 'CWE-1322', 'is_misconfiguration_related': 'Yes'}"
